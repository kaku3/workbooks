.taskList {
  position: sticky;
  left: 0;
  top: 0;
  background: white;
  border-right: 2px solid #e0e0e0;
  z-index: 4;
  display: flex;
  flex-direction: column;
  min-width: var(--gantt-list-width);
  width: var(--gantt-list-width);
  box-shadow: 2px 0 4px rgba(0, 0, 0, 0.05);
  height: fit-content;
}

.taskHeader {
  height: var(--gantt-header-height);
  position: sticky;
  top: 0;
  background: #f5f5f5;
  border-bottom: 1px solid #e0e0e0;
  z-index: 3;
  display: flex;
  align-items: center;
}

.headerCell {
  padding: .1rem .25rem;
  font-size: .75rem;
  font-weight: bold;
  border-right: 1px solid #e0e0e0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  background: #f5f5f5;
  height: fit-content;
  display: flex;
  align-items: center;
}

.headerCell:first-child {
  padding: 0;
  width: 8px!important;
}

.taskRows {
  display: flex;
  flex-direction: column;
  min-height: min-content;
}

.taskRows::-webkit-scrollbar {
  display: none;
}

.taskRow {
  display: flex;
  border-bottom: 1px solid #e0e0e0;
  height: var(--gantt-row-height);
  background: white;
  contain: strict;
  position: relative;
}

.taskRow[data-dragging="top"]::before,
.taskRow[data-dragging="bottom"]::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  height: 6px;
  background: linear-gradient(90deg, #60a5fa 0%, #3b82f6 100%);
  pointer-events: none;
  z-index: 2;
  transform-origin: center;
  box-shadow: 
    0 0 10px rgba(59, 130, 246, 0.6),
    0 0 20px rgba(59, 130, 246, 0.3);
  animation: borderPulse 0.8s ease-in-out infinite;
}

.taskRow[data-dragging="top"]::before {
  top: -3px;
  transform: translateY(-50%);
}

.taskRow[data-dragging="bottom"]::after {
  bottom: -3px;
  transform: translateY(50%);
}

@keyframes borderPulse {
  0% {
    transform: scaleX(0.97);
    opacity: 0.8;
  }
  50% {
    transform: scaleX(1);
    opacity: 1;
  }
  100% {
    transform: scaleX(0.97);
    opacity: 0.8;
  }
}

.taskRow:hover {
  background-color: #f8f8f8;
}

.cell {
  padding: .1rem .25rem;
  font-size: .8rem;
  border-right: 1px solid #e0e0e0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  height: 100%;
  display: flex;
  align-items: center;
}
.cell:has(.editingCell) {
  padding: 0!important;
}

.handleCell {
  justify-content: center;
  padding: 0!important;
}

.handleCell > div {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.editableCell {
  cursor: text;
  padding: 0!important;
  border-radius: 2px;
  position: relative;
  min-height: 1.5rem;
  width: 100%;
}

.editableCell:hover {
  background-color: #f8f9fa;
}

.editingCell {
  position: absolute;
  left: 0!important;
  top: 0!important;
  bottom: 0!important;
  right: 0!important;
  background: white;
  z-index: 100;
  padding: 0!important;
  display: flex;
  align-items: center;
}
.editingCell * {
  padding: 0!important;
  top: 0!important;
  left: 1px!important;
  right: 1px!important;
  bottom: 0!important;
  width: calc(100% - 2px)!important;
}

.editingCell :global(input) {
  width: 100%;
  height: 100%;
  border: none;
  outline: none;
  font-size: 0.8rem;
  padding: 0;
  border-radius: 0;
  background: transparent;
}

.titleCell {
  flex: 1 1 384px;
  font-size: .7rem;
  align-items: center;
  padding: 2px 4px;
}

.titleContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  width: 100%;
  gap: 4px;
  min-width: 0;
}

.tagList {
  display: flex;
  gap: 2px;
  flex-shrink: 0;
}

.titleContainer > span {
  overflow: hidden;
  text-overflow: ellipsis;
  flex-shrink: 1;
  flex-grow: 1;
  min-width: 0;
}

.tag {
  font-size: 0.6rem;
  padding: 0px 4px;
  border-radius: 4px;
  color: white;
  white-space: nowrap;
}

.assigneeCell {
  padding-top: .5rem;
}

.assigneeCell > div > div > span {
  padding: 0;
  font-size: .6rem;
  line-height: 1.2;
}

.estimateCell {
  font-size: .7rem;
  text-align: right;
}
.progressCell {
  font-size: .7rem;
  text-align: right;
  position: relative;
}

.progressCell.overdue {
  background-color: #ffe4e6;
}

.progressCell::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  background-color: #e0f2ff;
  z-index: 0;
  transition: width 0.2s ease;
  width: var(--progress-width, 0%);
}

.progressCell > * {
  position: relative;
  z-index: 1;
}

.statusCell select{
  padding: 0;
}
