/* REACTOR専用スタイル */

/* UI パネルのスタイル調整 */
#training-container .ui-panel {
    margin-bottom: 15px;
    padding: 10px;
    text-align: center;
}

#training-container .ui-panel .time-display,
#training-container .ui-panel .score-display {
    display: inline-block;
    margin: 0 20px;
    font-size: 1.2em;
    font-weight: bold;
    color: #00ff00;
    text-shadow: 1px 1px 0px #003300;
}

/* キーボードエフェクトの強化 */
#training-container #game-keyboard-container {
    filter: drop-shadow(0 0 20px rgba(0, 255, 0, 0.3));
    /* キーボードサイズを1.5倍に拡大し、中央に配置 */
    transform: scale(2) translate(-25%, -25%);
    transform-origin: center center;
    margin: 40px auto;
}

/* REACTORのキーアニメーション */
#training-container .reactor-key-glow {
    animation: reactor-glow 0.8s infinite alternate;
}

@keyframes reactor-glow {
    0% { 
        filter: brightness(1) drop-shadow(0 0 5px #00ff00);
    }
    100% { 
        filter: brightness(1.5) drop-shadow(0 0 15px #00ff00) drop-shadow(0 0 25px #00ff00);
    }
}

/* 正解時のエフェクト */
#training-container .reactor-correct-effect {
    animation: reactor-correct 0.3s ease-out;
}

@keyframes reactor-correct {
    0% { 
        filter: brightness(1);
    }
    50% { 
        filter: brightness(2) drop-shadow(0 0 20px #00ff00) drop-shadow(0 0 30px #00ff00);
    }
    100% { 
        filter: brightness(1);
    }
}

/* エラー時のエフェクト */
#training-container .reactor-error-effect {
    animation: reactor-error 0.4s ease-out;
}

@keyframes reactor-error {
    0% { filter: brightness(1); }
    25% { filter: brightness(2) hue-rotate(0deg) drop-shadow(0 0 15px #ff0000); }
    50% { filter: brightness(1.5) hue-rotate(180deg) drop-shadow(0 0 10px #ff0000); }
    75% { filter: brightness(2) hue-rotate(0deg) drop-shadow(0 0 15px #ff0000); }
    100% { filter: brightness(1); }
}

/* 背景エフェクト */
#training-container {
    background: 
        radial-gradient(circle at 20% 80%, rgba(0, 255, 0, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(0, 255, 0, 0.1) 0%, transparent 50%),
        linear-gradient(45deg, #000000 0%, #001100 100%);
    animation: reactor-bg-pulse 4s infinite;
}

@keyframes reactor-bg-pulse {
    0%, 100% { 
        background: 
            radial-gradient(circle at 20% 80%, rgba(0, 255, 0, 0.1) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(0, 255, 0, 0.1) 0%, transparent 50%),
            linear-gradient(45deg, #000000 0%, #001100 100%);
    }
    50% { 
        background: 
            radial-gradient(circle at 20% 80%, rgba(0, 255, 0, 0.15) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(0, 255, 0, 0.15) 0%, transparent 50%),
            linear-gradient(45deg, #000000 0%, #002200 100%);
    }
}

/* タイトル画面のREACTOR特有エフェクト */
#training-container #title-screen .game-title {
    position: relative;
}

#training-container #title-screen .game-title::before {
    content: '';
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
    background: linear-gradient(45deg, transparent, rgba(0, 255, 0, 0.1), transparent);
    animation: title-scan 3s linear infinite;
    z-index: -1;
}

@keyframes title-scan {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

/* スコア表示の特殊エフェクト */
#training-container .score-display #current-score {
    transition: all 0.2s ease;
}

#training-container .score-display.score-up #current-score {
    animation: score-popup 0.3s ease-out;
}

@keyframes score-popup {
    0% { transform: scale(1); }
    50% { 
        transform: scale(1.3);
        color: #ffff00;
        text-shadow: 
            1px 1px 0px #888800,
            0 0 10px #ffff00;
    }
    100% { transform: scale(1); }
}

/* タイム減少時のエフェクト */
#training-container .time-display.time-penalty {
    animation: time-shake 0.5s ease-out;
}

@keyframes time-shake {
    0%, 100% { transform: translateX(0); }
    10% { transform: translateX(-5px); }
    20% { transform: translateX(5px); }
    30% { transform: translateX(-5px); }
    40% { transform: translateX(5px); }
    50% { transform: translateX(-3px); }
    60% { transform: translateX(3px); }
    70% { transform: translateX(-2px); }
    80% { transform: translateX(2px); }
    90% { transform: translateX(-1px); }
}
