const ARTICLES = [
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:159\">こんにちは。新卒の方々が新人研修から戻ってきて部署に配属される時期かと思いますがいかがお過ごしでしょうか？</p>\n<p data-sourcepos=\"5:1-6:30\">後輩はできましたか？<br>\nうまくやれてますか？</p>\n<p data-sourcepos=\"8:1-9:141\">コーチングやアンガーマネジメントなどのハウツー・マニュアル本などを読み漁っていますでしょうか？<br>\n読んだ時はなるほどと思うものの右から左にすり抜けて何も実践できていないなどありますでしょうか？</p>\n<p data-sourcepos=\"11:1-11:162\">あるいは、そもそも自分のことで手一杯だし、育ててもどうせ転職してしまうだろうからと放置していますでしょうか？</p>\n<p data-sourcepos=\"13:1-13:265\">タイパ重視の自己責任世代（？）的には手っ取り早くうまくやれる方法がほしいのかなと思うのですが、<strong>人間</strong>というものを理解がメンタリングには必要では？という切り口で考察をしてみます。</p>\n<h2 data-sourcepos=\"15:1-15:54\">\n<span id=\"人間自分と相手を理解する必要性\" class=\"fragment\"></span><a href=\"#%E4%BA%BA%E9%96%93%E8%87%AA%E5%88%86%E3%81%A8%E7%9B%B8%E6%89%8B%E3%82%92%E7%90%86%E8%A7%A3%E3%81%99%E3%82%8B%E5%BF%85%E8%A6%81%E6%80%A7\"><i class=\"fa fa-link\"></i></a>人間（自分と相手）を理解する必要性</h2>\n<p data-sourcepos=\"17:1-17:129\"><a href=\"https://www.amazon.co.jp/dp/4344433122\" rel=\"nofollow noopener\" target=\"_blank\">スピリチュアルズ「わたし」の謎</a>という本を最近読んでいます。</p>\n<p data-sourcepos=\"19:1-19:381\">ものすごくたくさん『人間』というものについて『そうなんだすげーな』って思うようなことが書かれていて、『人間』と相対した時にどのように振る舞うべきか、自分がどのような性質を持っていてどのような思考をするのかを客観的に見る機会になっていてよいと感じています。</p>\n<p data-sourcepos=\"21:1-21:195\">ただ、400ページ超の分厚い本な上に、明日役に立つことが書いてあるわけでもないのでなかなか読み進められていないことも白状しておきます。</p>\n<p data-sourcepos=\"23:1-23:297\">何らかのバグで障害が発生した時に、闇雲にコードを直してもバグが直らないのと同様に、人間に対して何らかの指示や指導がうまく通らなかった時に、闇雲に指示の方法を変えてもカイゼンするのは難しいと思います。</p>\n<p data-sourcepos=\"25:1-25:255\">更に難しいことに、相手がコンピュータであれば、書いたコードの受け止め方は同じですが、相手が人間であれば書いたドキュメントや話したことばの受け止め方が一人ひとり異なります。</p>\n<p data-sourcepos=\"27:1-27:85\"><strong>『自分の普通や当然と、相手の普通や当然が異なります。』</strong></p>\n<p data-sourcepos=\"29:1-29:310\">人は一人ひとり違うので、マニュアル本にある「作者の観測範囲において多くのケースに適用可能な汎用的なこと」では、<strong>あなたの目の前の相手</strong>に対してどのように立ち振舞うべきかに <strong>対処できないのが普通</strong> かと思います。</p>\n<p data-sourcepos=\"31:1-31:324\">そうして考えていくと、指示した通りの結果や、指導した通りの学習成果を相手に出してもらいたいのであれば、 <strong>『自分と相手および関係性などを理解した上で、何をどう伝えるのかを考える』</strong> ことが必要になってくるように思えます。</p>\n<h2 data-sourcepos=\"33:1-33:42\">\n<span id=\"共感力とメンタライジング力\" class=\"fragment\"></span><a href=\"#%E5%85%B1%E6%84%9F%E5%8A%9B%E3%81%A8%E3%83%A1%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%A4%E3%82%B8%E3%83%B3%E3%82%B0%E5%8A%9B\"><i class=\"fa fa-link\"></i></a>共感力とメンタライジング力</h2>\n<p data-sourcepos=\"35:1-35:126\">自分や相手を理解するための必要な要素に、共感力やメンタライジング力があると思います。</p>\n<p data-sourcepos=\"37:1-37:321\">痛いと思っている人がいたら、自分も痛いと感じる能力が共感力、痛いと思っているらしい人がいて「状況から推察するにタンスのカドに小指をぶつけて痛いらしい。それは痛いよね。」と理解する能力がメンタライジング力だそうです。</p>\n<p data-sourcepos=\"39:1-40:156\">この共感力とメンタライジング力の高低で人の傾向が分類できるそうです。<br>\n人は一人ひとり違いますが、傾向を把握することは人と相対する時の作戦を絞れるので大きく役に立つと思います。</p>\n<p data-sourcepos=\"42:1-42:162\"><a href=\"https://camo.qiitausercontent.com/3c3397e214876f240b05531ee1c075716a1f0582/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f30336536303065342d306430342d383133352d386263612d6638666638346562653564612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F03e600e4-0d04-8135-8bca-f8ff84ebe5da.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ded47f95cf7aa80db75c467a5e12e68b\" alt=\"共感力とメンタライジング力.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/03e600e4-0d04-8135-8bca-f8ff84ebe5da.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F03e600e4-0d04-8135-8bca-f8ff84ebe5da.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=3785957a47a1378f88c62961f3be8fd8 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"44:1-44:105\">(出典 : <a href=\"https://www.amazon.co.jp/dp/4344433122\" rel=\"nofollow noopener\" target=\"_blank\">スピリチュアルズ「わたし」の謎</a> より)</p>\n<p data-sourcepos=\"46:1-46:48\">この図には大分衝撃を受けました。</p>\n<p data-sourcepos=\"48:1-48:311\">共感力・メンタライジング力とも高い「コミュ力が高い人」がお金を稼げそうですが、実際にはそうではなくて、<strong>リーダーに向いていてお金を稼げる人は、メンタライジング力は高いが共感力が低い「サイコな人」</strong> だそうです。</p>\n<p data-sourcepos=\"50:1-50:360\">タンスのカドに小指をぶつけたあなたを見て「うわ大丈夫？痛そう～」と心配してくれるコミュ力が高い人はリーダーには向いていなくて、「そりゃ痛いだろうけど、わたしにできることは特に何もないな」と塩対応するサイコな人がリーダーに向いているようです。</p>\n<p data-sourcepos=\"52:1-52:372\">指示を出す「わたし」がどのタイプで、指示を受ける「相手」がどのタイプかを観察や会話によって把握すると、なぜ指示が <strong>『思った通り』</strong> 伝わらないのか、どのように伝えれば <strong>『思った通り』</strong> 伝わるのかをざっくり推察することができるようになるかもしれません。</p>\n<p data-sourcepos=\"54:1-54:315\">※こちらは書籍を読んでの「わたし」の解釈が含まれてしまっていますので、興味のある方や詳しく知りたい方はぜひ書籍の方を読んでみてください。他にもアメリカの大統領選挙での人々の操作など様々なトピックが載っています。</p>\n<h2 data-sourcepos=\"56:1-56:66\">\n<span id=\"共感力やメンタライジング力は鍛えられるの\" class=\"fragment\"></span><a href=\"#%E5%85%B1%E6%84%9F%E5%8A%9B%E3%82%84%E3%83%A1%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%A4%E3%82%B8%E3%83%B3%E3%82%B0%E5%8A%9B%E3%81%AF%E9%8D%9B%E3%81%88%E3%82%89%E3%82%8C%E3%82%8B%E3%81%AE\"><i class=\"fa fa-link\"></i></a>共感力やメンタライジング力は鍛えられるの？</h2>\n<p data-sourcepos=\"58:1-59:213\">共感力、メンタライジング力とも遺伝によるところが大きいようですが、鍛えることはできるそうです。<br>\nただ、カイゼンには莫大な時間がかかったりするので、自分や相手の性質を理解して何をどう鍛えるとよいのかを話し合えたりするとよさそうに思えました。</p>\n<p data-sourcepos=\"61:1-61:28\">(Claude3 による鍛え方)</p>\n<blockquote data-sourcepos=\"62:1-70:153\">\n<p data-sourcepos=\"62:3-62:30\">共感力を高める方法:</p>\n<ul data-sourcepos=\"63:3-66:1\">\n<li data-sourcepos=\"63:3-63:156\">アクティブリスニングの練習: 相手の話を集中して聴き、言葉だけでなく感情や非言語的な表現にも注意を払う。</li>\n<li data-sourcepos=\"64:3-64:153\">文学や芸術作品への接触: 小説を読んだり映画を鑑賞したりして、多様な人物の内面世界や感情体験に触れる。</li>\n<li data-sourcepos=\"65:3-66:1\">ボランティア活動への参加: 異なる背景を持つ人々と交流し、直接的な経験を通じて他者理解を深める。</li>\n</ul>\n<p data-sourcepos=\"67:3-67:48\">メンタライジング力を高める方法:</p>\n<ul data-sourcepos=\"68:3-70:153\">\n<li data-sourcepos=\"68:3-68:150\">視点取得の練習: 日常的な出来事や人々の行動について、意識的に他者の立場に立って考える習慣をつける。</li>\n<li data-sourcepos=\"69:3-69:150\">感情日記をつける: 自分や周囲の人の感情や思考を観察し、記録することで、心の状態への気づきを高める。</li>\n<li data-sourcepos=\"70:3-70:153\">ロールプレイングの実践: 様々な役割や立場を演じることで、異なる視点や思考パターンを体験的に理解する。</li>\n</ul>\n</blockquote>\n<h2 data-sourcepos=\"72:1-72:12\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n<p data-sourcepos=\"74:1-75:234\">メンターである自分にとって一番分かりやすい説明が、メンティーである相手にとって一番分かりやすい説明である可能性はものすごく低いと考えます。<br>\n自分にとって最適な説明で理解ができるのであれば、自分と同等のスキルや知識を持っている可能性が高く、そもそもメンタリングされる必要がないと考えられるからです。</p>\n<p data-sourcepos=\"77:1-77:396\">「自分が理解すること」と、「相手に説明すること」では全く別のスキルが必要で、相手に説明するスキルは <strong>『相手に説明する』</strong> ことでしか身につきませんし、抽象的なスキルとして保持しておいて、相手に合わせて細かくチューニングして具体化して使うような類のスキルかと思います。</p>\n<p data-sourcepos=\"79:1-79:213\">ここで、共感力やメンタライジング力がほどよいバランスであることは「相手が理解できる説明」ができるようになるための一要素なのかもなと感じました。</p>\n<p data-sourcepos=\"81:1-81:162\">…と、色々難しく書いてきましたが、ひとことでまとめると <strong>「相手と協力してうまくやる」</strong> のが大事だと思います。</p>\n<p data-sourcepos=\"83:1-83:317\">長期的に見れば、お互いに協調行動を取ることで全体<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup>としては一番良い結果が得られるのを漠然とみんな理解しているけれども、教えない<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup>、転職する、といった行動を取ってしまうのは囚人のジレンマのようだなぁと思いました。</p>\n<p data-sourcepos=\"85:1-85:126\">メンター、メンティーに限らず、メンバーやお客様とも協力してうまくやれるといいですね。</p>\n<h2 data-sourcepos=\"87:1-87:12\">\n<span id=\"おまけ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91\"><i class=\"fa fa-link\"></i></a>おまけ</h2>\n<ul data-sourcepos=\"89:1-94:0\">\n<li data-sourcepos=\"89:1-91:0\">\n<p data-sourcepos=\"89:3-90:92\"><a href=\"https://kaku3.github.io/workbooks/Qiita/\" rel=\"nofollow noopener\" target=\"_blank\">kaku3 - Qiita記事一覧</a><br>\nポエム多め。PM、メンター、未経験エンジニアや新卒向け記事など。</p>\n</li>\n<li data-sourcepos=\"92:1-94:0\">\n<p data-sourcepos=\"92:3-93:136\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a><br>\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで無料公開してます(不定期更新)。</p>\n</li>\n</ul>\n<p data-sourcepos=\"95:1-95:30\">よろしければどうぞ。</p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"97:7-97:150\">やんちゃな人がいるかもしれない状況では求人の単価を上げられないので給与も上がらないかもしれない。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"98:7-98:126\">予算や工数やスケジュールの関係で教育ができないということはママあるかもしれない。 <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\nこんにちは。新卒の方々が新人研修から戻ってきて部署に配属される時期かと思いますがいかがお過ごしでしょうか？\n\n後輩はできましたか？\nうまくやれてますか？\n\nコーチングやアンガーマネジメントなどのハウツー・マニュアル本などを読み漁っていますでしょうか？\n読んだ時はなるほどと思うものの右から左にすり抜けて何も実践できていないなどありますでしょうか？\n\nあるいは、そもそも自分のことで手一杯だし、育ててもどうせ転職してしまうだろうからと放置していますでしょうか？\n\nタイパ重視の自己責任世代（？）的には手っ取り早くうまくやれる方法がほしいのかなと思うのですが、**人間**というものを理解がメンタリングには必要では？という切り口で考察をしてみます。\n\n## 人間（自分と相手）を理解する必要性\n\n[スピリチュアルズ「わたし」の謎](https://www.amazon.co.jp/dp/4344433122)という本を最近読んでいます。\n\nものすごくたくさん『人間』というものについて『そうなんだすげーな』って思うようなことが書かれていて、『人間』と相対した時にどのように振る舞うべきか、自分がどのような性質を持っていてどのような思考をするのかを客観的に見る機会になっていてよいと感じています。\n\nただ、400ページ超の分厚い本な上に、明日役に立つことが書いてあるわけでもないのでなかなか読み進められていないことも白状しておきます。\n\n何らかのバグで障害が発生した時に、闇雲にコードを直してもバグが直らないのと同様に、人間に対して何らかの指示や指導がうまく通らなかった時に、闇雲に指示の方法を変えてもカイゼンするのは難しいと思います。\n\n更に難しいことに、相手がコンピュータであれば、書いたコードの受け止め方は同じですが、相手が人間であれば書いたドキュメントや話したことばの受け止め方が一人ひとり異なります。\n\n**『自分の普通や当然と、相手の普通や当然が異なります。』**\n\n人は一人ひとり違うので、マニュアル本にある「作者の観測範囲において多くのケースに適用可能な汎用的なこと」では、**あなたの目の前の相手**に対してどのように立ち振舞うべきかに **対処できないのが普通** かと思います。\n\nそうして考えていくと、指示した通りの結果や、指導した通りの学習成果を相手に出してもらいたいのであれば、 **『自分と相手および関係性などを理解した上で、何をどう伝えるのかを考える』** ことが必要になってくるように思えます。\n\n## 共感力とメンタライジング力\n\n自分や相手を理解するための必要な要素に、共感力やメンタライジング力があると思います。\n\n痛いと思っている人がいたら、自分も痛いと感じる能力が共感力、痛いと思っているらしい人がいて「状況から推察するにタンスのカドに小指をぶつけて痛いらしい。それは痛いよね。」と理解する能力がメンタライジング力だそうです。\n\nこの共感力とメンタライジング力の高低で人の傾向が分類できるそうです。\n人は一人ひとり違いますが、傾向を把握することは人と相対する時の作戦を絞れるので大きく役に立つと思います。\n\n![共感力とメンタライジング力.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/03e600e4-0d04-8135-8bca-f8ff84ebe5da.png)\n\n(出典 : [スピリチュアルズ「わたし」の謎](https://www.amazon.co.jp/dp/4344433122) より)\n\nこの図には大分衝撃を受けました。\n\n共感力・メンタライジング力とも高い「コミュ力が高い人」がお金を稼げそうですが、実際にはそうではなくて、**リーダーに向いていてお金を稼げる人は、メンタライジング力は高いが共感力が低い「サイコな人」** だそうです。\n\nタンスのカドに小指をぶつけたあなたを見て「うわ大丈夫？痛そう～」と心配してくれるコミュ力が高い人はリーダーには向いていなくて、「そりゃ痛いだろうけど、わたしにできることは特に何もないな」と塩対応するサイコな人がリーダーに向いているようです。\n\n指示を出す「わたし」がどのタイプで、指示を受ける「相手」がどのタイプかを観察や会話によって把握すると、なぜ指示が **『思った通り』** 伝わらないのか、どのように伝えれば **『思った通り』** 伝わるのかをざっくり推察することができるようになるかもしれません。\n\n※こちらは書籍を読んでの「わたし」の解釈が含まれてしまっていますので、興味のある方や詳しく知りたい方はぜひ書籍の方を読んでみてください。他にもアメリカの大統領選挙での人々の操作など様々なトピックが載っています。\n\n## 共感力やメンタライジング力は鍛えられるの？\n\n共感力、メンタライジング力とも遺伝によるところが大きいようですが、鍛えることはできるそうです。\nただ、カイゼンには莫大な時間がかかったりするので、自分や相手の性質を理解して何をどう鍛えるとよいのかを話し合えたりするとよさそうに思えました。\n\n(Claude3 による鍛え方)\n> 共感力を高める方法:\n> - アクティブリスニングの練習: 相手の話を集中して聴き、言葉だけでなく感情や非言語的な表現にも注意を払う。\n> - 文学や芸術作品への接触: 小説を読んだり映画を鑑賞したりして、多様な人物の内面世界や感情体験に触れる。\n> - ボランティア活動への参加: 異なる背景を持つ人々と交流し、直接的な経験を通じて他者理解を深める。\n>\n> メンタライジング力を高める方法:\n> - 視点取得の練習: 日常的な出来事や人々の行動について、意識的に他者の立場に立って考える習慣をつける。\n> - 感情日記をつける: 自分や周囲の人の感情や思考を観察し、記録することで、心の状態への気づきを高める。\n> - ロールプレイングの実践: 様々な役割や立場を演じることで、異なる視点や思考パターンを体験的に理解する。\n\n## まとめ\n\nメンターである自分にとって一番分かりやすい説明が、メンティーである相手にとって一番分かりやすい説明である可能性はものすごく低いと考えます。\n自分にとって最適な説明で理解ができるのであれば、自分と同等のスキルや知識を持っている可能性が高く、そもそもメンタリングされる必要がないと考えられるからです。\n\n「自分が理解すること」と、「相手に説明すること」では全く別のスキルが必要で、相手に説明するスキルは **『相手に説明する』** ことでしか身につきませんし、抽象的なスキルとして保持しておいて、相手に合わせて細かくチューニングして具体化して使うような類のスキルかと思います。\n\nここで、共感力やメンタライジング力がほどよいバランスであることは「相手が理解できる説明」ができるようになるための一要素なのかもなと感じました。\n\n…と、色々難しく書いてきましたが、ひとことでまとめると **「相手と協力してうまくやる」** のが大事だと思います。\n\n長期的に見れば、お互いに協調行動を取ることで全体[^1]としては一番良い結果が得られるのを漠然とみんな理解しているけれども、教えない[^2]、転職する、といった行動を取ってしまうのは囚人のジレンマのようだなぁと思いました。\n\nメンター、メンティーに限らず、メンバーやお客様とも協力してうまくやれるといいですね。\n\n## おまけ\n\n- [kaku3 - Qiita記事一覧](https://kaku3.github.io/workbooks/Qiita/)\nポエム多め。PM、メンター、未経験エンジニアや新卒向け記事など。\n\n- [エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで無料公開してます(不定期更新)。\n\nよろしければどうぞ。\n\n[^1]: やんちゃな人がいるかもしれない状況では求人の単価を上げられないので給与も上がらないかもしれない。\n[^2]: 予算や工数やスケジュールの関係で教育ができないということはママあるかもしれない。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2024-07-13T18:13:17+09:00",
    "group": null,
    "id": "656e8a144c98e7209ad9",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "教育",
        "versions": []
      },
      {
        "name": "メンター",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      }
    ],
    "title": "よきメンターになろう : 共感力とメンタライジング力",
    "updated_at": "2024-07-13T18:13:17+09:00",
    "url": "https://qiita.com/kaku3/items/656e8a144c98e7209ad9",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 24,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:275\">Qiitaに記事を投稿する時に、せっかくなので（？）以前に書いた記事も読んでもらえたらいいなと過去記事の中でもオススメっぽいもののリンクをつけていたのですが、「長い」とコメントを頂きまして。</p>\n<p data-sourcepos=\"5:1-5:234\">どうせなら、ただオススメ記事リンクを作るのではなくて、検索やいいね順表示なんかも対応してついでにソース公開したらいいのではと思い、そんなサイトを作りました。</p>\n<ul data-sourcepos=\"7:1-9:0\">\n<li data-sourcepos=\"7:1-7:81\">サイトは<a href=\"https://kaku3.github.io/workbooks/Qiita/\" rel=\"nofollow noopener\" target=\"_blank\">こちら(GitHub Pages)</a>\n</li>\n<li data-sourcepos=\"8:1-9:0\">ソースは<a href=\"https://github.com/kaku3/workbooks/tree/main/09_Qiita%E8%A8%98%E4%BA%8B%E7%B0%A1%E6%98%93%E4%B8%80%E8%A6%A7/10_src\" rel=\"nofollow noopener\" target=\"_blank\">こちら(GitHub)</a>\n</li>\n</ul>\n<p data-sourcepos=\"10:1-10:253\">QiitaのAPIを用いてデータを取得して、簡単な html + js + css で表示しているだけですので、データの差し替えを行えば、汎用の投稿記事のインデックスとしてもご利用いただけると思います。</p>\n<ul data-sourcepos=\"12:1-14:0\">\n<li data-sourcepos=\"12:1-14:0\">図：そんなサイト<br>\n<a href=\"https://camo.qiitausercontent.com/475b95cdaac46a01c5bb1b7d4a3cf0bd733c5396/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f32363261383263622d633261322d643936312d333232372d6637636633656636306163382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F262a82cb-c2a2-d961-3227-f7cf3ef60ac8.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=3608c0d96442ce27ded2447324350a80\" alt=\"投稿記事インデックス.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/262a82cb-c2a2-d961-3227-f7cf3ef60ac8.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F262a82cb-c2a2-d961-3227-f7cf3ef60ac8.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=616c6d640d07887f6cecde644d13085f 1x\" loading=\"lazy\"></a>\n</li>\n</ul>\n<p data-sourcepos=\"15:1-15:155\">本稿では、Qiita投稿記事のインデックスサイトを制作するにあたって検討したことなどを書いておこうと思います。</p>\n<h2 data-sourcepos=\"17:1-17:27\">\n<span id=\"課題長いおまけ\" class=\"fragment\"></span><a href=\"#%E8%AA%B2%E9%A1%8C%E9%95%B7%E3%81%84%E3%81%8A%E3%81%BE%E3%81%91\"><i class=\"fa fa-link\"></i></a>課題：長いおまけ</h2>\n<p data-sourcepos=\"19:1-20:51\">コメントを頂いたのは、以下の「おまけ」となります。<br>\n確かに長いのでなんとかしたいです。</p>\n<ul data-sourcepos=\"22:1-24:0\">\n<li data-sourcepos=\"22:1-24:0\">図：長いおまけ<br>\n<a href=\"https://camo.qiitausercontent.com/1ed8320ab56a0e3f7f4c2b98e89beb52b8d518fa/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63336161306135342d343264622d666238612d313535322d6334663062636463333066372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc3aa0a54-42db-fb8a-1552-c4f0bcdc30f7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=044aa96d33da27ee9223afb25c84134f\" alt=\"長いおまけ.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c3aa0a54-42db-fb8a-1552-c4f0bcdc30f7.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc3aa0a54-42db-fb8a-1552-c4f0bcdc30f7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=a576a87b8ffa9c65af83abba5e932bb3 1x\" loading=\"lazy\"></a>\n</li>\n</ul>\n<h2 data-sourcepos=\"25:1-25:15\">\n<span id=\"要件定義\" class=\"fragment\"></span><a href=\"#%E8%A6%81%E4%BB%B6%E5%AE%9A%E7%BE%A9\"><i class=\"fa fa-link\"></i></a>要件定義</h2>\n<p data-sourcepos=\"27:1-27:87\">さっくりとサイトを作るので、以下の通り要件を定義しました。</p>\n<ul data-sourcepos=\"29:1-43:0\">\n<li data-sourcepos=\"29:1-32:0\">\n<p data-sourcepos=\"29:3-31:78\">メンテナンス性が高いこと<br>\n今後記事追加を行った時のメンテナンス作業が大変であると更新されなくなります。<br>\nメンテナンス作業は簡単であることが望ましいでしょう。</p>\n</li>\n<li data-sourcepos=\"33:1-36:0\">\n<p data-sourcepos=\"33:3-35:108\">Qiita 側の負荷を上げないこと<br>\nAPI を用いてユーザーに対する記事一覧を取得できます。<br>\nただ、そのAPIの呼び出し回数が多くなりすぎないようにした方がいいでしょう。</p>\n</li>\n<li data-sourcepos=\"37:1-39:0\">\n<p data-sourcepos=\"37:3-38:108\">費用が発生しないこと<br>\n営利目的ではないので、収入がなくても運用を継続できることが望ましいです。</p>\n</li>\n<li data-sourcepos=\"40:1-43:0\">\n<p data-sourcepos=\"40:3-42:105\">最小のページ遷移であること<br>\nリンクによるページ遷移毎にユーザーの離脱が懸念されます。<br>\n最小のページ遷移でなるべく多くの記事の一覧を見られるようにしたいです。</p>\n</li>\n</ul>\n<h2 data-sourcepos=\"44:1-44:30\">\n<span id=\"設計検討全体構成\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E8%A8%88%E6%A4%9C%E8%A8%8E%E5%85%A8%E4%BD%93%E6%A7%8B%E6%88%90\"><i class=\"fa fa-link\"></i></a>設計検討：全体構成</h2>\n<p data-sourcepos=\"46:1-47:144\">そんなに頻繁に更新する必要もないので、Qiita API で自分の記事一覧を取得して、json を保存する方針としてみました。<br>\n取得した json を読み込んで、検索やリスト表示をできる簡単な html を作成するのがよいかなと考えました。</p>\n<p data-sourcepos=\"49:1-49:45\">以下に構成図を載せておきます。</p>\n<ul data-sourcepos=\"51:1-57:0\">\n<li data-sourcepos=\"51:1-57:0\">\n<p data-sourcepos=\"51:3-52:129\">図：構成図<br>\n<a href=\"https://camo.qiitausercontent.com/24328e5193996b55c9862212eb0bc403d34fa9d6/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64666565363838392d376263312d326636632d343736352d6239343632363135353633622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdfee6889-7bc1-2f6c-4765-b9462615563b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=8bf5e74aaa3be96d993cf285689e2a4a\" alt=\"設計.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/dfee6889-7bc1-2f6c-4765-b9462615563b.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdfee6889-7bc1-2f6c-4765-b9462615563b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ef05d21ca160a55e53f1f1ac47e92d99 1x\" loading=\"lazy\"></a></p>\n<ul data-sourcepos=\"54:5-57:0\">\n<li data-sourcepos=\"54:5-54:132\">素の html ファイルでは json をそのまま読み込めないので、js ファイルとして保存としています</li>\n<li data-sourcepos=\"55:5-55:100\">取得には nodejs + axios を利用しましたが、好みの言語でよいと思います</li>\n<li data-sourcepos=\"56:5-57:0\">GPT先生に要件をざっくり伝えると大体作ってくれると思います</li>\n</ul>\n</li>\n</ul>\n<h2 data-sourcepos=\"58:1-58:24\">\n<span id=\"設計検討タグ\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E8%A8%88%E6%A4%9C%E8%A8%8E%E3%82%BF%E3%82%B0\"><i class=\"fa fa-link\"></i></a>設計検討：タグ</h2>\n<p data-sourcepos=\"60:1-61:273\">記事の検索用にキーワード検索も作成しますが、わたしの記事について能動的にキーワード検索を行うユーザーがいるとは考えにくいです。<br>\nそれよりは、何らかのキーワードを入力することなく、画面上に何か気になるキーワードが配置されていて、それをクリックすることで『何らかの記事一覧が表示される仕組み』があるとよさそうです。</p>\n<h3 data-sourcepos=\"63:1-63:31\">\n<span id=\"1-タグをベタで表示\" class=\"fragment\"></span><a href=\"#1-%E3%82%BF%E3%82%B0%E3%82%92%E3%83%99%E3%82%BF%E3%81%A7%E8%A1%A8%E7%A4%BA\"><i class=\"fa fa-link\"></i></a>1. タグをベタで表示</h3>\n<p data-sourcepos=\"65:1-66:220\">Qiitaの記事には最大5つまでのタグをつけられるので、そのタグを表示する事を考えます。<br>\nタグの横にその記事がついているタグの件数も表示してあげたら大分親切でしょう、という仮定で試作をすることにしましたが、<strong>仮説はまったく的外れでした。</strong></p>\n<p data-sourcepos=\"68:1-68:222\">試作したデータを確認すると、<strong>100種類を超えるタグがついているが、そのほとんどのタグが 1記事でしか利用されていない</strong>というカオスな状況になっていました。</p>\n<ul data-sourcepos=\"70:1-72:0\">\n<li data-sourcepos=\"70:1-72:0\">図：ほとんど一度しか使われていないタグ<br>\n<a href=\"https://camo.qiitausercontent.com/c14e1bd574e85bcc4caf7753df51d25e1ee7f53d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36386363393939362d643264332d343331322d396131622d3736386636653837666165662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F68cc9996-d2d3-4312-9a1b-768f6e87faef.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=a6eb0f22d8a60df04e06f06d5d843930\" alt=\"タグ一覧.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/68cc9996-d2d3-4312-9a1b-768f6e87faef.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F68cc9996-d2d3-4312-9a1b-768f6e87faef.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=872dd1b3c99227491aad689b1006b31f 1x\" loading=\"lazy\"></a>\n</li>\n</ul>\n<p data-sourcepos=\"73:1-73:369\">このタグを辞書順でソートして表示して『お好きなものをクリックしてください』と言ってもなかなかクリックしてもらえないでしょうし、クリックしてくれたとしても、１件しか結果が出てこないのはユーザー体験としては微妙で、クリックしてもらえなくなりそうです。</p>\n<h3 data-sourcepos=\"75:1-75:31\">\n<span id=\"2-タグをグループ化\" class=\"fragment\"></span><a href=\"#2-%E3%82%BF%E3%82%B0%E3%82%92%E3%82%B0%E3%83%AB%E3%83%BC%E3%83%97%E5%8C%96\"><i class=\"fa fa-link\"></i></a>2. タグをグループ化</h3>\n<p data-sourcepos=\"77:1-77:156\">ということで、タグをある程度意味のあるグループでグループ化することにします。（上図の色のついた帯の単位）</p>\n<p data-sourcepos=\"79:1-80:240\">このグループ化ですが <strong>GPT4o に、『いい感じにグループ化して』</strong> とお願いしてさっくりグループを作ってもらいました。（特に難しいプロンプトは指定していないです。）<br>\n若干微妙なところもあったので手で修正しましたが、大体はいい感じでした。こういうところこそ人間が考えるべきと思っていたのですが、そうでもないのだなあと思いました。</p>\n<h3 data-sourcepos=\"82:1-82:36\">\n<span id=\"3-アコーディオンui化\" class=\"fragment\"></span><a href=\"#3-%E3%82%A2%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%82%AA%E3%83%B3ui%E5%8C%96\"><i class=\"fa fa-link\"></i></a>3. アコーディオンUI化？</h3>\n<p data-sourcepos=\"84:1-85:218\">100種類を超えるタグを縦に並べると1画面に収まりません。<br>\nアコーディオンUIにすれば収まりもよくなりますが、タググループをクリックしてわざわざ中身を見てもらえるかというとそんなこともないような気がしました。</p>\n<h3 data-sourcepos=\"87:1-87:43\">\n<span id=\"4-タググループの一覧を表示\" class=\"fragment\"></span><a href=\"#4-%E3%82%BF%E3%82%B0%E3%82%B0%E3%83%AB%E3%83%BC%E3%83%97%E3%81%AE%E4%B8%80%E8%A6%A7%E3%82%92%E8%A1%A8%E7%A4%BA\"><i class=\"fa fa-link\"></i></a>4. タググループの一覧を表示</h3>\n<p data-sourcepos=\"89:1-89:159\">であれば、左メニューとは別にページの上部にタググループ一覧を表示する欄を設けるのがよいのではと考えました。</p>\n<p data-sourcepos=\"91:1-91:140\"><a href=\"https://camo.qiitausercontent.com/60577c2bd1d94dda8958b6b80bf36354f9c03006/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36383034326333392d346332642d393531662d653431332d6338376330656562633961332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F68042c39-4c2d-951f-e413-c87c0eebc9a3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2aecaac3f5e7d0c9326d60b47fa7362c\" alt=\"タググループ一覧.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/68042c39-4c2d-951f-e413-c87c0eebc9a3.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F68042c39-4c2d-951f-e413-c87c0eebc9a3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=18530574f3b51fba2f3ee118906ae094 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"93:1-93:314\">タググループに件数をつけたい気持ちにもなりましたが、ユーザー的には「興味のあるトピックをクリックする」のであって、「10件記事のあるトピックをクリックするのではない」という整理にして件数をつけるのは見送りました。</p>\n<p data-sourcepos=\"95:1-95:116\"><strong>『思いついたものをすべて実装しない』</strong> ことも個人開発では大事かなと思います。</p>\n<h2 data-sourcepos=\"97:1-97:69\">\n<span id=\"設計検討おすすめ記事いいね順ストック順\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E8%A8%88%E6%A4%9C%E8%A8%8E%E3%81%8A%E3%81%99%E3%81%99%E3%82%81%E8%A8%98%E4%BA%8B%E3%81%84%E3%81%84%E3%81%AD%E9%A0%86%E3%82%B9%E3%83%88%E3%83%83%E3%82%AF%E9%A0%86\"><i class=\"fa fa-link\"></i></a>設計検討：おすすめ記事・いいね順・ストック順</h2>\n<p data-sourcepos=\"99:1-100:118\">このサイトを作る元々の目的は「おまけ記事リンク」の表示なので、この記事リストがファーストビューに入ることが優先順位としては高いです。ひょっとしたら検索ボックスやタググループよりも上に表示された方がよいのではということも検討しましたが、更新頻度も高いわけではないので現在の配置順序としました。<br>\n2回以上訪問される方が、すぐに新しい情報にアクセスできたらいいなという整理です。</p>\n<p data-sourcepos=\"102:1-103:165\">そして、ここは仮説の域を出ませんが、いいね数やストック数の多い記事程読みたくなる可能性が高いと思われたのでそれらの値も表示するようにしてみました。であれば、いいね数やストック数のランキングも近くに配置した方がよいという考えで、タブUIで配置してみました。<br>\nランキングは、Top20も見ると飽きるかなというところで、ページャーなども設けず、Top20が表示されるだけのUIとしました。</p>\n<p data-sourcepos=\"105:1-105:134\"><a href=\"https://camo.qiitausercontent.com/ce98ceb161d8a9be37632e08585fd4b750e52d7c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f35646432663637662d646437342d386339322d343434362d6335616163633934326163662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F5dd2f67f-dd74-8c92-4446-c5aacc942acf.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=8e492ce3c09c4c1d94fa8fd64273f336\" alt=\"おすすめ記事.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/5dd2f67f-dd74-8c92-4446-c5aacc942acf.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F5dd2f67f-dd74-8c92-4446-c5aacc942acf.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=11b8301860bee4fd7a589983666da9c3 1x\" loading=\"lazy\"></a></p>\n<h2 data-sourcepos=\"107:1-107:26\">\n<span id=\"設計検討タブui\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E8%A8%88%E6%A4%9C%E8%A8%8E%E3%82%BF%E3%83%96ui\"><i class=\"fa fa-link\"></i></a>設計検討：タブUI</h2>\n<p data-sourcepos=\"109:1-109:218\">『全体的にデザインには凝らない』というコンセプトで作っていますが、ここだけ「あまり見かけないUI」にして気を引けないか試してみることにしてみました。</p>\n<p data-sourcepos=\"111:1-111:40\"><strong>クリックしてほしいので。</strong></p>\n<p data-sourcepos=\"113:1-113:124\"><a href=\"https://camo.qiitausercontent.com/c3d88a8b7a82f518a6e9fb4a6d782678a879e845/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38353035613735352d666130642d376666652d323635382d3366343233643937613366362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8505a755-fa0d-7ffe-2658-3f423d97a3f6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=92f2a4ba404af1f8977c62093df0f46b\" alt=\"タブUI.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8505a755-fa0d-7ffe-2658-3f423d97a3f6.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8505a755-fa0d-7ffe-2658-3f423d97a3f6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=87eabe3688c4922fc04699a488ddf33d 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"115:1-116:106\">地味にタブの重ね合わせをしました。<br>\ncss だけで簡単にできるかな？とGPT先生に聞いたらサクッと教えてくれました。</p>\n<h2 data-sourcepos=\"118:1-118:12\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n<p data-sourcepos=\"120:1-122:225\">今回のUI設計では、<strong>100種類を超える多種多様なタグを並べてもクリックされないのでは？</strong> という仮説を立てました。<br>\nこういう仮説自体は今のところAIは立ててくれない気がしています。<br>\nただ、「タグをまとめたら便利になるハズなのでまとめて」と問いかければ、複雑なプロンプトなどを書かなくても、かなりいい感じの回答をくれる実感もあります。</p>\n<p data-sourcepos=\"124:1-124:219\">そうしてみると、人間としては、仮説を立てたり、やりたいことを明確にしていくなど能動的に動くことの重要度が上がっていくのかもなとぼんやり思いました。</p>\n<h2 data-sourcepos=\"126:1-126:12\">\n<span id=\"おまけ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91\"><i class=\"fa fa-link\"></i></a>おまけ</h2>\n<ul data-sourcepos=\"128:1-132:0\">\n<li data-sourcepos=\"128:1-129:92\">\n<a href=\"https://kaku3.github.io/workbooks/Qiita/\" rel=\"nofollow noopener\" target=\"_blank\">kaku3 - Qiita記事一覧</a><br>\nポエム多め。PM、メンター、未経験エンジニアや新卒向け記事など。</li>\n<li data-sourcepos=\"130:1-132:0\">\n<a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a><br>\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。</li>\n</ul>\n<p data-sourcepos=\"133:1-133:30\">よろしければどうぞ。</p>\n",
    "body": "## はじめに\n\nQiitaに記事を投稿する時に、せっかくなので（？）以前に書いた記事も読んでもらえたらいいなと過去記事の中でもオススメっぽいもののリンクをつけていたのですが、「長い」とコメントを頂きまして。\n\nどうせなら、ただオススメ記事リンクを作るのではなくて、検索やいいね順表示なんかも対応してついでにソース公開したらいいのではと思い、そんなサイトを作りました。\n\n- サイトは[こちら(GitHub Pages)](https://kaku3.github.io/workbooks/Qiita/)\n- ソースは[こちら(GitHub)](https://github.com/kaku3/workbooks/tree/main/09_Qiita%E8%A8%98%E4%BA%8B%E7%B0%A1%E6%98%93%E4%B8%80%E8%A6%A7/10_src)\n\nQiitaのAPIを用いてデータを取得して、簡単な html + js + css で表示しているだけですので、データの差し替えを行えば、汎用の投稿記事のインデックスとしてもご利用いただけると思います。\n\n- 図：そんなサイト\n![投稿記事インデックス.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/262a82cb-c2a2-d961-3227-f7cf3ef60ac8.png)\n\n本稿では、Qiita投稿記事のインデックスサイトを制作するにあたって検討したことなどを書いておこうと思います。\n\n## 課題：長いおまけ\n\nコメントを頂いたのは、以下の「おまけ」となります。\n確かに長いのでなんとかしたいです。\n\n- 図：長いおまけ\n![長いおまけ.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c3aa0a54-42db-fb8a-1552-c4f0bcdc30f7.png)\n\n## 要件定義\n\nさっくりとサイトを作るので、以下の通り要件を定義しました。\n\n- メンテナンス性が高いこと\n今後記事追加を行った時のメンテナンス作業が大変であると更新されなくなります。\nメンテナンス作業は簡単であることが望ましいでしょう。\n\n- Qiita 側の負荷を上げないこと\nAPI を用いてユーザーに対する記事一覧を取得できます。\nただ、そのAPIの呼び出し回数が多くなりすぎないようにした方がいいでしょう。\n\n- 費用が発生しないこと\n営利目的ではないので、収入がなくても運用を継続できることが望ましいです。\n\n- 最小のページ遷移であること\nリンクによるページ遷移毎にユーザーの離脱が懸念されます。\n最小のページ遷移でなるべく多くの記事の一覧を見られるようにしたいです。\n\n## 設計検討：全体構成\n\nそんなに頻繁に更新する必要もないので、Qiita API で自分の記事一覧を取得して、json を保存する方針としてみました。\n取得した json を読み込んで、検索やリスト表示をできる簡単な html を作成するのがよいかなと考えました。\n\n以下に構成図を載せておきます。\n\n- 図：構成図\n![設計.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/dfee6889-7bc1-2f6c-4765-b9462615563b.png)\n\n    - 素の html ファイルでは json をそのまま読み込めないので、js ファイルとして保存としています\n    - 取得には nodejs + axios を利用しましたが、好みの言語でよいと思います\n    - GPT先生に要件をざっくり伝えると大体作ってくれると思います\n\n## 設計検討：タグ\n\n記事の検索用にキーワード検索も作成しますが、わたしの記事について能動的にキーワード検索を行うユーザーがいるとは考えにくいです。\nそれよりは、何らかのキーワードを入力することなく、画面上に何か気になるキーワードが配置されていて、それをクリックすることで『何らかの記事一覧が表示される仕組み』があるとよさそうです。\n\n### 1. タグをベタで表示\n\nQiitaの記事には最大5つまでのタグをつけられるので、そのタグを表示する事を考えます。\nタグの横にその記事がついているタグの件数も表示してあげたら大分親切でしょう、という仮定で試作をすることにしましたが、**仮説はまったく的外れでした。**\n\n試作したデータを確認すると、**100種類を超えるタグがついているが、そのほとんどのタグが 1記事でしか利用されていない**というカオスな状況になっていました。\n\n- 図：ほとんど一度しか使われていないタグ\n![タグ一覧.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/68cc9996-d2d3-4312-9a1b-768f6e87faef.png)\n\nこのタグを辞書順でソートして表示して『お好きなものをクリックしてください』と言ってもなかなかクリックしてもらえないでしょうし、クリックしてくれたとしても、１件しか結果が出てこないのはユーザー体験としては微妙で、クリックしてもらえなくなりそうです。\n\n### 2. タグをグループ化\n\nということで、タグをある程度意味のあるグループでグループ化することにします。（上図の色のついた帯の単位）\n\nこのグループ化ですが **GPT4o に、『いい感じにグループ化して』** とお願いしてさっくりグループを作ってもらいました。（特に難しいプロンプトは指定していないです。）\n若干微妙なところもあったので手で修正しましたが、大体はいい感じでした。こういうところこそ人間が考えるべきと思っていたのですが、そうでもないのだなあと思いました。\n\n### 3. アコーディオンUI化？\n\n100種類を超えるタグを縦に並べると1画面に収まりません。\nアコーディオンUIにすれば収まりもよくなりますが、タググループをクリックしてわざわざ中身を見てもらえるかというとそんなこともないような気がしました。\n\n### 4. タググループの一覧を表示\n\nであれば、左メニューとは別にページの上部にタググループ一覧を表示する欄を設けるのがよいのではと考えました。\n\n![タググループ一覧.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/68042c39-4c2d-951f-e413-c87c0eebc9a3.png)\n\nタググループに件数をつけたい気持ちにもなりましたが、ユーザー的には「興味のあるトピックをクリックする」のであって、「10件記事のあるトピックをクリックするのではない」という整理にして件数をつけるのは見送りました。\n\n**『思いついたものをすべて実装しない』** ことも個人開発では大事かなと思います。\n\n## 設計検討：おすすめ記事・いいね順・ストック順\n\nこのサイトを作る元々の目的は「おまけ記事リンク」の表示なので、この記事リストがファーストビューに入ることが優先順位としては高いです。ひょっとしたら検索ボックスやタググループよりも上に表示された方がよいのではということも検討しましたが、更新頻度も高いわけではないので現在の配置順序としました。\n2回以上訪問される方が、すぐに新しい情報にアクセスできたらいいなという整理です。\n\nそして、ここは仮説の域を出ませんが、いいね数やストック数の多い記事程読みたくなる可能性が高いと思われたのでそれらの値も表示するようにしてみました。であれば、いいね数やストック数のランキングも近くに配置した方がよいという考えで、タブUIで配置してみました。\nランキングは、Top20も見ると飽きるかなというところで、ページャーなども設けず、Top20が表示されるだけのUIとしました。\n\n![おすすめ記事.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/5dd2f67f-dd74-8c92-4446-c5aacc942acf.png)\n\n## 設計検討：タブUI\n\n『全体的にデザインには凝らない』というコンセプトで作っていますが、ここだけ「あまり見かけないUI」にして気を引けないか試してみることにしてみました。\n\n**クリックしてほしいので。**\n\n![タブUI.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8505a755-fa0d-7ffe-2658-3f423d97a3f6.png)\n\n地味にタブの重ね合わせをしました。\ncss だけで簡単にできるかな？とGPT先生に聞いたらサクッと教えてくれました。\n\n## まとめ\n\n今回のUI設計では、**100種類を超える多種多様なタグを並べてもクリックされないのでは？** という仮説を立てました。\nこういう仮説自体は今のところAIは立ててくれない気がしています。\nただ、「タグをまとめたら便利になるハズなのでまとめて」と問いかければ、複雑なプロンプトなどを書かなくても、かなりいい感じの回答をくれる実感もあります。\n\nそうしてみると、人間としては、仮説を立てたり、やりたいことを明確にしていくなど能動的に動くことの重要度が上がっていくのかもなとぼんやり思いました。\n\n## おまけ\n\n- [kaku3 - Qiita記事一覧](https://kaku3.github.io/workbooks/Qiita/)\nポエム多め。PM、メンター、未経験エンジニアや新卒向け記事など。\n- [エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\n\nよろしければどうぞ。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2024-06-10T01:18:37+09:00",
    "group": null,
    "id": "f83558da152495b2ae91",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 2,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "設計",
        "versions": []
      },
      {
        "name": "AI",
        "versions": []
      },
      {
        "name": "個人開発",
        "versions": []
      }
    ],
    "title": "Qiita投稿記事のインデックスサイトをつくってみた",
    "updated_at": "2024-06-10T01:18:37+09:00",
    "url": "https://qiita.com/kaku3/items/f83558da152495b2ae91",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1082,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:174\">AIを活用していますか？<br>\nちょっと分からないことや欲しいプログラムがある時に適当に聞くと嫌な顔ひとつせずに気前よく回答してくれて便利ですよね？</p>\n<p data-sourcepos=\"6:1-6:366\">それまでは、忙しそうなパイセンの顔色を伺って、話しかけても大丈夫そうなタイミングを見計らって、あらかじめ要点をまとめておいた質問を持っていって、緊張しながら質問してよく分からなくても一旦引き下がって調べて…なんてことをしていなかったでしょうか？</p>\n<p data-sourcepos=\"8:1-8:189\">もうそんな生活には戻りたくないし戻れないとは思うのですが、ここに重大な罠がありませんか…？ということを考えてみたいと思います。</p>\n<h2 data-sourcepos=\"10:1-10:47\">\n<span id=\"it業界で言うところの仕事って\" class=\"fragment\"></span><a href=\"#it%E6%A5%AD%E7%95%8C%E3%81%A7%E8%A8%80%E3%81%86%E3%81%A8%E3%81%93%E3%82%8D%E3%81%AE%E4%BB%95%E4%BA%8B%E3%81%A3%E3%81%A6\"><i class=\"fa fa-link\"></i></a>IT業界で言うところの仕事って？</h2>\n<p data-sourcepos=\"12:1-12:167\">IT業界では、発注者よりなんらかの依頼を受けて、その依頼通りのモノを成果物として期日通りに納品することが仕事です。</p>\n<p data-sourcepos=\"14:1-15:192\">依頼通りのモノを作る過程として、要件定義、外部設計、開発、試験等の工程が存在し、そのどこかの工程の担当者の一人として、前工程での成果物を元に成果物を作成し後工程に流していく <strong>バケツリレー</strong> をみんなで行っているかと思います。<br>\nアジャイルの場合はバケツの運び方が変わりますが、誰かからの何らかの依頼をバケツに詰めてぐるぐる回して誰かに渡していると思います。</p>\n<p data-sourcepos=\"17:1-17:185\">いずれにしても、<strong>前工程の人が『思った通り』の物を成果物として作成して期日通りに納品</strong> することを仕事として考察していきます。</p>\n<h2 data-sourcepos=\"19:1-19:36\">\n<span id=\"成果物が曖昧なんだが\" class=\"fragment\"></span><a href=\"#%E6%88%90%E6%9E%9C%E7%89%A9%E3%81%8C%E6%9B%96%E6%98%A7%E3%81%AA%E3%82%93%E3%81%A0%E3%81%8C\"><i class=\"fa fa-link\"></i></a>成果物が曖昧なんだが…</h2>\n<p data-sourcepos=\"21:1-21:135\">発注側の担当者が要件定義書に「タイヤが２つついた乗り物」が欲しいとだけ書いてきたとします。</p>\n<p data-sourcepos=\"23:1-23:324\">この文章からは、欲しい乗り物が自転車なのかセグウェイなのかは読み取れないですし、自転車にしても電動なのか、かっこいいロードバイクなのかなどは書いた本人の頭の中にしか答えはなさそうなので<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup>AIに聞いても分からなそうです。</p>\n<p data-sourcepos=\"25:1-26:66\">さて。<br>\nこれを、どのように確認したらよいでしょうか？</p>\n<p data-sourcepos=\"28:1-28:252\">ここで、高確率でかっこいいロードバイクな自転車な気がするからと確認せずにロードバイクを作ったら、実は欲しいのはセグウェイでした、という場合には大事故となってしまいます。</p>\n<h2 data-sourcepos=\"30:1-30:60\">\n<span id=\"どうやったら確認ができるようになるの\" class=\"fragment\"></span><a href=\"#%E3%81%A9%E3%81%86%E3%82%84%E3%81%A3%E3%81%9F%E3%82%89%E7%A2%BA%E8%AA%8D%E3%81%8C%E3%81%A7%E3%81%8D%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%AE\"><i class=\"fa fa-link\"></i></a>どうやったら確認ができるようになるの？</h2>\n<p data-sourcepos=\"32:1-33:75\">「要件　確認方法」などでググるでしょうか？<br>\nあるいは、ハウツー本を求めて本屋に走るでしょうか？</p>\n<p data-sourcepos=\"35:1-36:222\">この課題は発注側と受注側の「コミュニケーション」の課題に分類されると思います。<br>\n「コミュニケーション」の課題は、何をどう感じるかが人によって異なることもあり、こうした方がよいというベストプラクティスはあっても正解はない課題です。</p>\n<p data-sourcepos=\"38:1-38:297\">ですので、Web検索をしたり、本を読んだりしてセオリーを学ぶことは重要ですが、考え方が十分に馴染んでいて息を吐くように質疑応答ができるようになっていないと実践は難しいというのは想像に難しくないですよね。</p>\n<p data-sourcepos=\"40:1-40:15\">そうです。</p>\n<p data-sourcepos=\"42:1-42:208\"><strong>「コミュニケーション」の問題は、多くの人と様々なケースで細かく何度も実践して経験値を得ることで少しずつレベルを上げていくしかないのです。</strong></p>\n<p data-sourcepos=\"44:1-44:300\">そう考えると、冒頭の、忙しそうなパイセンと怯えながら質問する後輩は、ストレスのあるやりとりを「経験値が入るタスク」と捉えていれば、仕事上で大変価値のあるスキルの経験値を入手できていたことが分かります。</p>\n<ul data-sourcepos=\"46:1-58:0\">\n<li data-sourcepos=\"46:1-52:0\">\n<p data-sourcepos=\"46:3-46:29\">忙しそうなパイセン</p>\n<ul data-sourcepos=\"47:5-52:0\">\n<li data-sourcepos=\"47:5-49:37\">説明が通じた？\n<ul data-sourcepos=\"48:9-49:37\">\n<li data-sourcepos=\"48:9-48:37\">なぜ通じなかった？</li>\n<li data-sourcepos=\"49:9-49:37\">どうすれば通じる？</li>\n</ul>\n</li>\n<li data-sourcepos=\"50:5-50:27\">質問に答えたか</li>\n<li data-sourcepos=\"51:5-52:0\">etc…</li>\n</ul>\n</li>\n<li data-sourcepos=\"53:1-58:0\">\n<p data-sourcepos=\"53:3-53:35\">怯えながら質問する後輩</p>\n<ul data-sourcepos=\"54:5-58:0\">\n<li data-sourcepos=\"54:5-54:42\">話しかけるタイミングは？</li>\n<li data-sourcepos=\"55:5-55:33\">質問内容の過不足？</li>\n<li data-sourcepos=\"56:5-56:12\">メモ</li>\n<li data-sourcepos=\"57:5-58:0\">etc…</li>\n</ul>\n</li>\n</ul>\n<p data-sourcepos=\"59:1-60:281\">ここでパイセン側が感じるストレスは発注者が感じるであろうストレスを疑似体験できるという貴重な機会であるとも考えられます。<br>\n相手のことを想像できるようになれば、質問票を100件まとめて送られても答えられないから、優先度の高い10件に絞って質問しよう、といったホスピタリティに満ちた判断もできるようになるかもしれません。</p>\n<p data-sourcepos=\"62:1-62:180\">AIは、このストレスフルだけれども<strong>仕事上重要なスキルの経験値を入手できる機会を奪っている</strong>とも言えるのではないでしょうか？</p>\n<h2 data-sourcepos=\"64:1-64:12\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n<p data-sourcepos=\"66:1-66:346\">案件の予算や期間が厳しくなってきていますが、作業者が細かい作業はAIと壁打ちをしながら進めてもらえれば、さほど指示者の工数をかけることなく期間内に結果を出せていると感じるので、目先のアウトプットを出すためにはAIが必須とは感じています。</p>\n<p data-sourcepos=\"68:1-68:185\">ただ、結果として、PMや窓口不足問題といった大きな問題に拍車をかけるような流れになっていないかという可能性を考察してみました。</p>\n<p data-sourcepos=\"70:1-70:212\">今現在PMをやっている人が仕事をしながら自然に習得していたスキルが、なんらかの代替手段を用意しないと習得できなくなっていることが懸念されました。</p>\n<p data-sourcepos=\"72:1-73:87\">未来のAIが進化して、人と人のやり取りの部分もフォローしてくれるとしたら、どのような世界になるのでしょうか。<br>\n映画『マトリックス』のような世界になっていくのでしょうか。</p>\n<p data-sourcepos=\"75:1-75:225\">個人的には、今しばらくは <strong>『プロジェクトにおいてモノを作るために必要なコミュニケーション力』</strong> がますます重要視されていくのではないかと思ってはいます。</p>\n<p data-sourcepos=\"77:1-77:45\">みんなで仲良く頑張りましょう。</p>\n<h2 data-sourcepos=\"79:1-79:78\">\n<span id=\"おまけ０仕事のコミュ力が上がるかもしれない書籍\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%90%E4%BB%95%E4%BA%8B%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%A5%E5%8A%9B%E3%81%8C%E4%B8%8A%E3%81%8C%E3%82%8B%E3%81%8B%E3%82%82%E3%81%97%E3%82%8C%E3%81%AA%E3%81%84%E6%9B%B8%E7%B1%8D\"><i class=\"fa fa-link\"></i></a>おまけ０（仕事のコミュ力が上がるかもしれない書籍）</h2>\n<ul data-sourcepos=\"81:1-86:0\">\n<li data-sourcepos=\"81:1-82:0\">\n<p data-sourcepos=\"81:3-81:98\"><a href=\"https://www.amazon.co.jp/dp/4087213129\" rel=\"nofollow noopener\" target=\"_blank\">なぜ働いていると本が読めなくなるのか</a></p>\n</li>\n<li data-sourcepos=\"83:1-84:0\">\n<p data-sourcepos=\"83:3-83:140\"><a href=\"https://www.amazon.co.jp/dp/4798159832\" rel=\"nofollow noopener\" target=\"_blank\">ホスピタリティを育てる物語 「感動の接客」ができるようになる14の力</a></p>\n</li>\n<li data-sourcepos=\"85:1-86:0\">\n<p data-sourcepos=\"85:3-85:128\"><a href=\"https://www.amazon.co.jp/dp/4569845991\" rel=\"nofollow noopener\" target=\"_blank\">「具体⇄抽象」トレーニング 思考力が飛躍的にアップする29問</a></p>\n</li>\n</ul>\n<h2 data-sourcepos=\"87:1-87:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"89:1-89:50\"><iframe id=\"qiita-embed-content__95a6bb67f51597004a0005eb1c360a75\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__95a6bb67f51597004a0005eb1c360a75\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"91:1-91:50\"><iframe id=\"qiita-embed-content__4692c3e4593d4e1c24e84c83a0c57fa4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__4692c3e4593d4e1c24e84c83a0c57fa4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"93:1-93:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"95:1-95:50\"><iframe id=\"qiita-embed-content__b619986cea4344f7bdc515fa6a429be3\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b619986cea4344f7bdc515fa6a429be3\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"97:1-97:50\"><iframe id=\"qiita-embed-content__b207c1c4152524a5970176cf73e825e4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b207c1c4152524a5970176cf73e825e4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"99:1-99:50\"><iframe id=\"qiita-embed-content__67695ba0cd92a809b06182e02405f883\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__67695ba0cd92a809b06182e02405f883\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"101:1-101:50\"><iframe id=\"qiita-embed-content__b5a342af6ae0163978d6e93c2fff8016\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b5a342af6ae0163978d6e93c2fff8016\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"103:1-103:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"105:1-105:50\"><iframe id=\"qiita-embed-content__b07bdbcfa04abf7cdca054c3ccdfb58b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b07bdbcfa04abf7cdca054c3ccdfb58b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"107:1-107:50\"><iframe id=\"qiita-embed-content__93d9eb74da0e596abfc63fe932a7c027\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__93d9eb74da0e596abfc63fe932a7c027\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"109:1-109:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"111:1-111:50\"><iframe id=\"qiita-embed-content__031da57b18fe0cbe86230219afdceb66\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__031da57b18fe0cbe86230219afdceb66\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"113:1-113:50\"><iframe id=\"qiita-embed-content__0f7abae22d7046c7dbae57fa149271f2\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__0f7abae22d7046c7dbae57fa149271f2\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"115:1-115:50\"><iframe id=\"qiita-embed-content__363dcb66d299a458605ad37a81e4c233\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__363dcb66d299a458605ad37a81e4c233\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"117:1-117:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"119:1-119:50\"><iframe id=\"qiita-embed-content__d9d298b3bb4451d1b459d5b47a4b4f32\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__d9d298b3bb4451d1b459d5b47a4b4f32\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"121:1-121:50\"><iframe id=\"qiita-embed-content__e4f515e5f1040424550c8828753199c0\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e4f515e5f1040424550c8828753199c0\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"123:1-123:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"125:1-126:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"128:1-128:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"131:7-131:135\">要求仕様書からそのまま転記していた場合、要求仕様書を書いた人ではないと分からないです。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\nAIを活用していますか？\nちょっと分からないことや欲しいプログラムがある時に適当に聞くと嫌な顔ひとつせずに気前よく回答してくれて便利ですよね？\n\nそれまでは、忙しそうなパイセンの顔色を伺って、話しかけても大丈夫そうなタイミングを見計らって、あらかじめ要点をまとめておいた質問を持っていって、緊張しながら質問してよく分からなくても一旦引き下がって調べて…なんてことをしていなかったでしょうか？\n\nもうそんな生活には戻りたくないし戻れないとは思うのですが、ここに重大な罠がありませんか…？ということを考えてみたいと思います。\n\n## IT業界で言うところの仕事って？\n\nIT業界では、発注者よりなんらかの依頼を受けて、その依頼通りのモノを成果物として期日通りに納品することが仕事です。\n\n依頼通りのモノを作る過程として、要件定義、外部設計、開発、試験等の工程が存在し、そのどこかの工程の担当者の一人として、前工程での成果物を元に成果物を作成し後工程に流していく **バケツリレー** をみんなで行っているかと思います。\nアジャイルの場合はバケツの運び方が変わりますが、誰かからの何らかの依頼をバケツに詰めてぐるぐる回して誰かに渡していると思います。\n\nいずれにしても、**前工程の人が『思った通り』の物を成果物として作成して期日通りに納品** することを仕事として考察していきます。\n\n## 成果物が曖昧なんだが…\n\n発注側の担当者が要件定義書に「タイヤが２つついた乗り物」が欲しいとだけ書いてきたとします。\n\nこの文章からは、欲しい乗り物が自転車なのかセグウェイなのかは読み取れないですし、自転車にしても電動なのか、かっこいいロードバイクなのかなどは書いた本人の頭の中にしか答えはなさそうなので[^1]AIに聞いても分からなそうです。\n\nさて。\nこれを、どのように確認したらよいでしょうか？\n\nここで、高確率でかっこいいロードバイクな自転車な気がするからと確認せずにロードバイクを作ったら、実は欲しいのはセグウェイでした、という場合には大事故となってしまいます。\n\n## どうやったら確認ができるようになるの？\n\n「要件　確認方法」などでググるでしょうか？\nあるいは、ハウツー本を求めて本屋に走るでしょうか？\n\nこの課題は発注側と受注側の「コミュニケーション」の課題に分類されると思います。\n「コミュニケーション」の課題は、何をどう感じるかが人によって異なることもあり、こうした方がよいというベストプラクティスはあっても正解はない課題です。\n\nですので、Web検索をしたり、本を読んだりしてセオリーを学ぶことは重要ですが、考え方が十分に馴染んでいて息を吐くように質疑応答ができるようになっていないと実践は難しいというのは想像に難しくないですよね。\n\nそうです。\n\n**「コミュニケーション」の問題は、多くの人と様々なケースで細かく何度も実践して経験値を得ることで少しずつレベルを上げていくしかないのです。**\n\nそう考えると、冒頭の、忙しそうなパイセンと怯えながら質問する後輩は、ストレスのあるやりとりを「経験値が入るタスク」と捉えていれば、仕事上で大変価値のあるスキルの経験値を入手できていたことが分かります。\n\n- 忙しそうなパイセン\n    - 説明が通じた？\n        - なぜ通じなかった？\n        - どうすれば通じる？\n    - 質問に答えたか\n    - etc…\n\n- 怯えながら質問する後輩\n    - 話しかけるタイミングは？\n    - 質問内容の過不足？\n    - メモ\n    - etc…\n\nここでパイセン側が感じるストレスは発注者が感じるであろうストレスを疑似体験できるという貴重な機会であるとも考えられます。\n相手のことを想像できるようになれば、質問票を100件まとめて送られても答えられないから、優先度の高い10件に絞って質問しよう、といったホスピタリティに満ちた判断もできるようになるかもしれません。\n\nAIは、このストレスフルだけれども**仕事上重要なスキルの経験値を入手できる機会を奪っている**とも言えるのではないでしょうか？\n\n## まとめ\n\n案件の予算や期間が厳しくなってきていますが、作業者が細かい作業はAIと壁打ちをしながら進めてもらえれば、さほど指示者の工数をかけることなく期間内に結果を出せていると感じるので、目先のアウトプットを出すためにはAIが必須とは感じています。\n\nただ、結果として、PMや窓口不足問題といった大きな問題に拍車をかけるような流れになっていないかという可能性を考察してみました。\n\n今現在PMをやっている人が仕事をしながら自然に習得していたスキルが、なんらかの代替手段を用意しないと習得できなくなっていることが懸念されました。\n\n未来のAIが進化して、人と人のやり取りの部分もフォローしてくれるとしたら、どのような世界になるのでしょうか。\n映画『マトリックス』のような世界になっていくのでしょうか。\n\n個人的には、今しばらくは **『プロジェクトにおいてモノを作るために必要なコミュニケーション力』** がますます重要視されていくのではないかと思ってはいます。\n\nみんなで仲良く頑張りましょう。\n\n## おまけ０（仕事のコミュ力が上がるかもしれない書籍）\n\n- [なぜ働いていると本が読めなくなるのか](https://www.amazon.co.jp/dp/4087213129)\n\n- [ホスピタリティを育てる物語 「感動の接客」ができるようになる14の力](https://www.amazon.co.jp/dp/4798159832)\n\n- [「具体⇄抽象」トレーニング 思考力が飛躍的にアップする29問](https://www.amazon.co.jp/dp/4569845991)\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n\n[^1]: 要求仕様書からそのまま転記していた場合、要求仕様書を書いた人ではないと分からないです。\n",
    "coediting": false,
    "comments_count": 4,
    "created_at": "2024-05-18T14:38:33+09:00",
    "group": null,
    "id": "37a43cfa143361f50315",
    "likes_count": 98,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 90,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "教育",
        "versions": []
      },
      {
        "name": "AI",
        "versions": []
      },
      {
        "name": "pm",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      }
    ],
    "title": "AIは仕事ではなく仕事力を奪う？",
    "updated_at": "2024-05-19T05:38:40+09:00",
    "url": "https://qiita.com/kaku3/items/37a43cfa143361f50315",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 107642,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:94\">新社会人の皆さん、パイセンな皆さんこんにちは。<br>\n早いもので4月も終わろうとしていますがいかがおすごしでしょうか？</p>\n<p data-sourcepos=\"6:1-6:105\">プログラミング研修などされているかと思いますが捗っていますでしょうか？</p>\n<p data-sourcepos=\"8:1-8:238\">余裕っす、全く分からない、とりあえずコピペで乗り切ったなどいろいろあるかと思いますが、GWを前に学習方法の最適化をAIさんと共にゆるっと考えてみようかとおもいます。</p>\n<h2 data-sourcepos=\"10:1-10:65\">\n<span id=\"自分の状況を-claude-さんと分析して最適化する\" class=\"fragment\"></span><a href=\"#%E8%87%AA%E5%88%86%E3%81%AE%E7%8A%B6%E6%B3%81%E3%82%92-claude-%E3%81%95%E3%82%93%E3%81%A8%E5%88%86%E6%9E%90%E3%81%97%E3%81%A6%E6%9C%80%E9%81%A9%E5%8C%96%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>自分の状況を Claude さんと分析して最適化する</h2>\n<p data-sourcepos=\"12:1-12:171\">最適化の第一歩は自分の状況分析です。正しく自分の状況を把握することで今すべき最適な学習方法を考えることができます。</p>\n<p data-sourcepos=\"14:1-14:325\">客観的に自分を見るというのはものすごく難しいことですが、<a href=\"https://chat.openai.com/\" rel=\"nofollow noopener\" target=\"_blank\">ChatGPT</a> より賢いと噂のAIである <a href=\"https://claude.ai/\" rel=\"nofollow noopener\" target=\"_blank\">Calude</a>さんとコンサル業界で大人気（？）の <strong>「なぜなぜ分析」</strong> をおこなうことで分析、最適化できそうです。</p>\n<p data-sourcepos=\"16:1-16:230\">怖い上司とやるとメンタルをやられてしまうリスクがあると評判の「なぜなぜ分析」ですが、いつもフラットに接してくれるAIさんとやるのであれば気楽にできそうです。</p>\n<p data-sourcepos=\"18:1-18:126\">自分の悩みやうまくいかないことを気軽に聞いてみて、最適な取り組みを考えてみましょう。</p>\n<h2 data-sourcepos=\"20:1-20:82\">\n<span id=\"例xで流れてくる広告に釣られてit業界にきたxくんの場合\" class=\"fragment\"></span><a href=\"#%E4%BE%8Bx%E3%81%A7%E6%B5%81%E3%82%8C%E3%81%A6%E3%81%8F%E3%82%8B%E5%BA%83%E5%91%8A%E3%81%AB%E9%87%A3%E3%82%89%E3%82%8C%E3%81%A6it%E6%A5%AD%E7%95%8C%E3%81%AB%E3%81%8D%E3%81%9Fx%E3%81%8F%E3%82%93%E3%81%AE%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>例）Xで流れてくる広告に釣られてIT業界にきたXくんの場合</h2>\n<p data-sourcepos=\"22:1-22:105\">X： <strong>プログラミングを習得するのに向いてる人と向いてない人はいますか？</strong></p>\n<p data-sourcepos=\"24:1-24:15\">(引用)Claude:</p>\n<blockquote data-sourcepos=\"25:1-48:356\">\n<p data-sourcepos=\"25:3-25:284\">はい、プログラミングを習得するのに向いている人と向いていない人がいると言えます。しかし、これは生まれ持った資質によるものだけではなく、性格や考え方、学習スタイルなども大きく関係してきます。</p>\n<p data-sourcepos=\"27:3-27:50\">【プログラミングに向いている人】</p>\n<ul data-sourcepos=\"29:3-35:2\">\n<li data-sourcepos=\"29:3-29:31\">論理的思考力がある</li>\n<li data-sourcepos=\"30:3-30:43\">細かい作業を行う根気がある</li>\n<li data-sourcepos=\"31:3-31:40\">問題解決力と創造力がある</li>\n<li data-sourcepos=\"32:3-32:40\">新しいことを学ぶのが好き</li>\n<li data-sourcepos=\"33:3-33:31\">取り組む姿勢が真剣</li>\n<li data-sourcepos=\"34:3-35:2\">失敗を恐れずにチャレンジできる</li>\n</ul>\n<p data-sourcepos=\"36:3-36:167\">このような資質や性格の人は、プログラミングの概念を理解しやすく、コードを書く作業にも向いている傾向にあります。</p>\n<p data-sourcepos=\"38:3-38:53\">【プログラミングに向いていない人】</p>\n<ul data-sourcepos=\"40:3-45:2\">\n<li data-sourcepos=\"40:3-40:40\">論理的思考が得意ではない</li>\n<li data-sourcepos=\"41:3-41:28\">細かい作業が苦手</li>\n<li data-sourcepos=\"42:3-42:25\">考え方が硬直的</li>\n<li data-sourcepos=\"43:3-43:31\">すぐに飽きてしまう</li>\n<li data-sourcepos=\"44:3-45:2\">間違えることを非常に恐れる</li>\n</ul>\n<p data-sourcepos=\"46:3-46:224\">このような傾向の人は、プログラミングの学習が難しくなる可能性が高くなります。しかし、性格だけでなく、学習方法や環境次第でカバーできる部分もあります。</p>\n<p data-sourcepos=\"48:3-48:356\">つまり、プログラミングに向いているかどうかは完全に決まっているわけではありません。興味と熱意、適切な学習方法さえあれば、誰もがプログラミングを身につけられる可能性はあります。自分に合ったスタイルを見つけ、コツコツと続けることが大切です。</p>\n</blockquote>\n<p data-sourcepos=\"50:1-50:330\">なんとなく明確に向き不向きがあると言われてる気もするけど、 <strong>興味と熱意があってコツコツ続けられれば</strong> いいのか・・・でもなぁ、高い給料をくれて未経験者を歓迎してくれるというから就職しただけで興味も熱意もないんだよなぁ・・・</p>\n<p data-sourcepos=\"52:1-52:55\">X: <strong>興味と熱意がないと難しいですか？</strong></p>\n<p data-sourcepos=\"54:1-54:15\">(引用)Claude:</p>\n<blockquote data-sourcepos=\"55:1-75:383\">\n<p data-sourcepos=\"55:3-55:113\">はい、興味と熱意がないとプログラミングを習得するのは非常に難しくなります。</p>\n<p data-sourcepos=\"57:3-57:311\">プログラミングは抽象的な概念を理解し、論理的に考え、細かいミスに気をつける必要があるため、相当の集中力と忍耐力が求められます。興味と熱意がないと、そうした持続的な努力を継続することが困難になってしまいます。</p>\n<p data-sourcepos=\"59:3-59:66\">具体的には以下のような問題が起こりがちです:</p>\n<ul data-sourcepos=\"61:3-66:2\">\n<li data-sourcepos=\"61:3-61:64\">モチベーションが続かず、あきらめてしまう</li>\n<li data-sourcepos=\"62:3-62:59\">つまずいたときに簡単にくじけてしまう</li>\n<li data-sourcepos=\"63:3-63:43\">理解が浅く、本質が掴めない</li>\n<li data-sourcepos=\"64:3-64:55\">練習問題や実践に熱心に取り組めない</li>\n<li data-sourcepos=\"65:3-66:2\">新しい知識の吸収が困難になる</li>\n</ul>\n<p data-sourcepos=\"67:3-67:84\">一方、興味と熱意があれば、次のようなメリットがあります:</p>\n<ul data-sourcepos=\"69:3-74:2\">\n<li data-sourcepos=\"69:3-69:64\">困難に遭遇してもそれを乗り越えようとする</li>\n<li data-sourcepos=\"70:3-70:40\">自発的に学習を継続できる</li>\n<li data-sourcepos=\"71:3-71:70\">質問をし、調べ物をして、積極的に学ぼうとする</li>\n<li data-sourcepos=\"72:3-72:70\">成果を出すことにより、さらに意欲が湧いてくる</li>\n<li data-sourcepos=\"73:3-74:2\">楽しみながら学習できるので、ストレスが少ない</li>\n</ul>\n<p data-sourcepos=\"75:3-75:383\">プログラミングは決して簡単なスキルではありませんが、強い興味と熱意があれば、着実に上達することが可能です。逆に、無理してやる気のない状態で取り組むと、ますます苦手意識が高まってしまうリスクがあります。まずは興味を持つきっかけを見つけることが大切でしょう。</p>\n</blockquote>\n<p data-sourcepos=\"77:1-77:93\">…これをパイセンに淡々と言われたら立ち直れなかった気がするな。</p>\n<p data-sourcepos=\"79:1-81:143\">『興味を持つきっかけなんかないから聞いてみよう』…といった感じで押し問答を続けていけば、自分に最適な学習方法を見つけられると思います。<br>\n大事なのは、 <strong>『自分で納得して継続できる学習方法』</strong> が見つかるまで問いを繰り返すことかと思います。<br>\nAIの時間は人間の時間と異なり無限です。どんな質問をしても嫌な顔ひとつせずに無限に答えてくれます。</p>\n<p data-sourcepos=\"83:1-84:173\">また、AI全般に言えることですが、ポジティブな正論で堂々巡りになることがあります。<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup><br>\nその場合は、Claude との会話から出てきたキーワードを利用するなどして視点を変えた質問をしていくといいかもしれません。<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup></p>\n<p data-sourcepos=\"86:1-86:4\">例)</p>\n<ul data-sourcepos=\"88:1-96:0\">\n<li data-sourcepos=\"88:1-88:71\">プログラミングの抽象的な概念を理解する方法は？</li>\n<li data-sourcepos=\"89:1-89:80\">理解が浅く、本質が掴めない時はどうしたらいいですか？</li>\n<li data-sourcepos=\"90:1-90:50\">論理的思考力なにそれおいしいの？</li>\n<li data-sourcepos=\"91:1-91:53\">ゲーム的な学習アプリはありますか？</li>\n<li data-sourcepos=\"92:1-92:155\">興味も熱意もありませんが、今すぐにプログラムが書けるようになりたいです。手っ取り早い方法はないですか？</li>\n<li data-sourcepos=\"93:1-93:98\">とりあえずの基礎だけ身につけるにはどのくらい時間がかかりますか？</li>\n<li data-sourcepos=\"94:1-94:89\">３ヶ月やっても全く覚えられなかったら諦めた方がいいですか？</li>\n<li data-sourcepos=\"95:1-96:0\">プログラミングを覚えるのに必要な時間を確保できるとしたら、もっとお金が稼げる職業につくための勉強に使う方がいいですか？</li>\n</ul>\n<h2 data-sourcepos=\"97:1-97:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"99:1-100:122\">AIと自分にあった学習方法考えていくという記事でした。<br>\nAIに質問をするためにも、自分を正しく分析して問を立てていく力は必要かもしれません。</p>\n<p data-sourcepos=\"102:1-102:279\">以前は会社の人に相談する前には自問自答するかXなどにポストしてボコされるしかなかったのですが、親身ではないけれどもフラットに相談に乗ってくれるAIと相談できるという便利な世の中になりました。</p>\n<p data-sourcepos=\"104:1-104:219\">これは、他人の手を借りずに <strong>カイゼンできる</strong> 機会が増えたとも言えますし、他人の手を借りずに <strong>カイゼンしなければならない</strong> 機会が増えたとも言えます。</p>\n<p data-sourcepos=\"106:1-106:488\">最終的には、<strong>プログラミングは自分自身の手元に残るスキル</strong> なので自分自身で身につけていくしかない代わりに、キャリアを形成していく上で <strong>自分自身の財産</strong> として利用できるものかと思います。ただし、技術の進歩も激しいため、『一度身につけたら一生使えるもの』ではなく『コツコツ学習を続ける必要があるもの』ということにも留意が必要です。</p>\n<p data-sourcepos=\"108:1-108:138\">自分自身のキャリアを形成する上でどのように役に立つかなども考えてみるとよいかもしれませんね。</p>\n<h2 data-sourcepos=\"110:1-110:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"112:1-112:50\"><iframe id=\"qiita-embed-content__22dbcae4cdfb8e7d8539febf8516f2ec\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__22dbcae4cdfb8e7d8539febf8516f2ec\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"114:1-114:50\"><iframe id=\"qiita-embed-content__aca3601c5deca7c05ce90a270828998c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__aca3601c5deca7c05ce90a270828998c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"116:1-116:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"118:1-118:50\"><iframe id=\"qiita-embed-content__d00e570681ab4a146d36001541c70fd9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__d00e570681ab4a146d36001541c70fd9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"120:1-120:50\"><iframe id=\"qiita-embed-content__ba4a48cf53ef4eba38e1bccfaa62705c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ba4a48cf53ef4eba38e1bccfaa62705c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"122:1-122:50\"><iframe id=\"qiita-embed-content__72ed6e27fd2d028ca19b42522ae9fb5f\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__72ed6e27fd2d028ca19b42522ae9fb5f\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"124:1-124:50\"><iframe id=\"qiita-embed-content__f71151f133d97d0699bf845aa1ad75f8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f71151f133d97d0699bf845aa1ad75f8\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"126:1-126:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"128:1-128:50\"><iframe id=\"qiita-embed-content__288ae847f6303a014a8e3cea3f35b57b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__288ae847f6303a014a8e3cea3f35b57b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"130:1-130:50\"><iframe id=\"qiita-embed-content__4b1f5e098c812eb86b7905afd24b8860\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__4b1f5e098c812eb86b7905afd24b8860\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"132:1-132:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"134:1-134:50\"><iframe id=\"qiita-embed-content__9acd10159a5a63c950ccc0be15cbdda2\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9acd10159a5a63c950ccc0be15cbdda2\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"136:1-136:50\"><iframe id=\"qiita-embed-content__81876157f7ac22e54b31b8282d716691\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__81876157f7ac22e54b31b8282d716691\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"138:1-138:50\"><iframe id=\"qiita-embed-content__be51ba58e48cd9d06ac464773243fa66\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__be51ba58e48cd9d06ac464773243fa66\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"140:1-140:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"142:1-142:50\"><iframe id=\"qiita-embed-content__e490699804f06145ee16d1fdb70bba48\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e490699804f06145ee16d1fdb70bba48\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"144:1-144:50\"><iframe id=\"qiita-embed-content__2d0c5523ba4b02a77bdfc4e85c8d9212\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2d0c5523ba4b02a77bdfc4e85c8d9212\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"146:1-146:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"148:1-149:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"151:1-151:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"153:7-153:76\">Claude の方が ChatGPT よりはズバっと答えてくれる印象 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"154:7-154:146\">このまま続けるとAIの文章が大半を占めてしまい記事として成立しなくなるのでこの場には載せません。 <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\n新社会人の皆さん、パイセンな皆さんこんにちは。\n早いもので4月も終わろうとしていますがいかがおすごしでしょうか？\n\nプログラミング研修などされているかと思いますが捗っていますでしょうか？\n\n余裕っす、全く分からない、とりあえずコピペで乗り切ったなどいろいろあるかと思いますが、GWを前に学習方法の最適化をAIさんと共にゆるっと考えてみようかとおもいます。\n\n## 自分の状況を Claude さんと分析して最適化する\n\n最適化の第一歩は自分の状況分析です。正しく自分の状況を把握することで今すべき最適な学習方法を考えることができます。\n\n客観的に自分を見るというのはものすごく難しいことですが、[ChatGPT](https://chat.openai.com/) より賢いと噂のAIである [Calude](https://claude.ai/)さんとコンサル業界で大人気（？）の **「なぜなぜ分析」** をおこなうことで分析、最適化できそうです。\n\n怖い上司とやるとメンタルをやられてしまうリスクがあると評判の「なぜなぜ分析」ですが、いつもフラットに接してくれるAIさんとやるのであれば気楽にできそうです。\n\n自分の悩みやうまくいかないことを気軽に聞いてみて、最適な取り組みを考えてみましょう。\n\n## 例）Xで流れてくる広告に釣られてIT業界にきたXくんの場合\n\nX： **プログラミングを習得するのに向いてる人と向いてない人はいますか？**\n\n(引用)Claude:\n> はい、プログラミングを習得するのに向いている人と向いていない人がいると言えます。しかし、これは生まれ持った資質によるものだけではなく、性格や考え方、学習スタイルなども大きく関係してきます。\n> \n> 【プログラミングに向いている人】\n> \n> - 論理的思考力がある\n> - 細かい作業を行う根気がある\n> - 問題解決力と創造力がある\n> - 新しいことを学ぶのが好き\n> - 取り組む姿勢が真剣\n> - 失敗を恐れずにチャレンジできる\n> \n> このような資質や性格の人は、プログラミングの概念を理解しやすく、コードを書く作業にも向いている傾向にあります。\n> \n> 【プログラミングに向いていない人】\n> \n> - 論理的思考が得意ではない\n> - 細かい作業が苦手\n> - 考え方が硬直的\n> - すぐに飽きてしまう\n> - 間違えることを非常に恐れる\n> \n> このような傾向の人は、プログラミングの学習が難しくなる可能性が高くなります。しかし、性格だけでなく、学習方法や環境次第でカバーできる部分もあります。\n> \n> つまり、プログラミングに向いているかどうかは完全に決まっているわけではありません。興味と熱意、適切な学習方法さえあれば、誰もがプログラミングを身につけられる可能性はあります。自分に合ったスタイルを見つけ、コツコツと続けることが大切です。\n\nなんとなく明確に向き不向きがあると言われてる気もするけど、 **興味と熱意があってコツコツ続けられれば** いいのか・・・でもなぁ、高い給料をくれて未経験者を歓迎してくれるというから就職しただけで興味も熱意もないんだよなぁ・・・\n\nX: **興味と熱意がないと難しいですか？**\n\n(引用)Claude:\n> はい、興味と熱意がないとプログラミングを習得するのは非常に難しくなります。\n> \n> プログラミングは抽象的な概念を理解し、論理的に考え、細かいミスに気をつける必要があるため、相当の集中力と忍耐力が求められます。興味と熱意がないと、そうした持続的な努力を継続することが困難になってしまいます。\n> \n> 具体的には以下のような問題が起こりがちです:\n> \n> - モチベーションが続かず、あきらめてしまう\n> - つまずいたときに簡単にくじけてしまう \n> - 理解が浅く、本質が掴めない\n> - 練習問題や実践に熱心に取り組めない\n> - 新しい知識の吸収が困難になる\n> \n> 一方、興味と熱意があれば、次のようなメリットがあります:\n> \n> - 困難に遭遇してもそれを乗り越えようとする\n> - 自発的に学習を継続できる\n> - 質問をし、調べ物をして、積極的に学ぼうとする\n> - 成果を出すことにより、さらに意欲が湧いてくる\n> - 楽しみながら学習できるので、ストレスが少ない\n> \n> プログラミングは決して簡単なスキルではありませんが、強い興味と熱意があれば、着実に上達することが可能です。逆に、無理してやる気のない状態で取り組むと、ますます苦手意識が高まってしまうリスクがあります。まずは興味を持つきっかけを見つけることが大切でしょう。\n\n…これをパイセンに淡々と言われたら立ち直れなかった気がするな。\n\n『興味を持つきっかけなんかないから聞いてみよう』…といった感じで押し問答を続けていけば、自分に最適な学習方法を見つけられると思います。\n大事なのは、 **『自分で納得して継続できる学習方法』** が見つかるまで問いを繰り返すことかと思います。\nAIの時間は人間の時間と異なり無限です。どんな質問をしても嫌な顔ひとつせずに無限に答えてくれます。\n\nまた、AI全般に言えることですが、ポジティブな正論で堂々巡りになることがあります。[^1]\nその場合は、Claude との会話から出てきたキーワードを利用するなどして視点を変えた質問をしていくといいかもしれません。[^2]\n\n例)\n\n- プログラミングの抽象的な概念を理解する方法は？\n- 理解が浅く、本質が掴めない時はどうしたらいいですか？\n- 論理的思考力なにそれおいしいの？\n- ゲーム的な学習アプリはありますか？\n- 興味も熱意もありませんが、今すぐにプログラムが書けるようになりたいです。手っ取り早い方法はないですか？\n- とりあえずの基礎だけ身につけるにはどのくらい時間がかかりますか？\n- ３ヶ月やっても全く覚えられなかったら諦めた方がいいですか？\n- プログラミングを覚えるのに必要な時間を確保できるとしたら、もっとお金が稼げる職業につくための勉強に使う方がいいですか？\n\n## おわりに\n\nAIと自分にあった学習方法考えていくという記事でした。\nAIに質問をするためにも、自分を正しく分析して問を立てていく力は必要かもしれません。\n\n以前は会社の人に相談する前には自問自答するかXなどにポストしてボコされるしかなかったのですが、親身ではないけれどもフラットに相談に乗ってくれるAIと相談できるという便利な世の中になりました。\n\nこれは、他人の手を借りずに **カイゼンできる** 機会が増えたとも言えますし、他人の手を借りずに **カイゼンしなければならない** 機会が増えたとも言えます。\n\n最終的には、**プログラミングは自分自身の手元に残るスキル** なので自分自身で身につけていくしかない代わりに、キャリアを形成していく上で **自分自身の財産** として利用できるものかと思います。ただし、技術の進歩も激しいため、『一度身につけたら一生使えるもの』ではなく『コツコツ学習を続ける必要があるもの』ということにも留意が必要です。\n\n自分自身のキャリアを形成する上でどのように役に立つかなども考えてみるとよいかもしれませんね。\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n[^1]: Claude の方が ChatGPT よりはズバっと答えてくれる印象\n[^2]: このまま続けるとAIの文章が大半を占めてしまい記事として成立しなくなるのでこの場には載せません。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2024-04-27T12:59:55+09:00",
    "group": null,
    "id": "fb158d0e68ec69ac3140",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 4,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "教育",
        "versions": []
      },
      {
        "name": "AI",
        "versions": []
      },
      {
        "name": "学習",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      }
    ],
    "title": "AIで最適化するプログラミング学習法",
    "updated_at": "2024-04-28T02:46:59+09:00",
    "url": "https://qiita.com/kaku3/items/fb158d0e68ec69ac3140",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2804,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:161\">毎週土曜日にQiitaを書けたらいいな活動をしていると、ネタがない(<del>毎週</del>)土曜日の朝は辛い気持ちになったりします。</p>\n<p data-sourcepos=\"5:1-5:249\">情報を収集しようと、ググったりX(ツイッター)を見たりYouTubeを見たりしていると情報を収集して少し賢くなった気分になるものの <strong>実際は何も残らず時間だけが溶けていたりします。</strong></p>\n<p data-sourcepos=\"7:1-7:216\">というわけで（？）、このままではいけないとチャリンコに乗って小一時間程うろついてきたところだいぶ思考を整理できたので、その話を書こうと思います。</p>\n<h2 data-sourcepos=\"9:1-9:33\">\n<span id=\"両手がふさがっている\" class=\"fragment\"></span><a href=\"#%E4%B8%A1%E6%89%8B%E3%81%8C%E3%81%B5%E3%81%95%E3%81%8C%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B\"><i class=\"fa fa-link\"></i></a>両手がふさがっている</h2>\n<p data-sourcepos=\"11:1-12:136\">これはものすごい気付きだったのですが、両手が塞がっているため <strong>スマホを触ることができない</strong> んです。<br>\n無意識で近くにあるスマホを手にとってXを開いてスクロールすることが不可能になっているのです。</p>\n<p data-sourcepos=\"14:1-14:42\">これはものすごいことですね。</p>\n<p data-sourcepos=\"16:1-16:169\">追加でランダムな情報のインプットがされることなく、<strong>現状脳内にあるものだけで思考を巡らせる時間</strong>の確保ができます。</p>\n<p data-sourcepos=\"18:1-18:141\">GPT先生によると、インプットした情報を脳に定着するためには以下のようなことが必要とされています。</p>\n<p data-sourcepos=\"20:1-20:15\"><strong>(GPT先生)</strong></p>\n<blockquote data-sourcepos=\"22:1-28:205\">\n<p data-sourcepos=\"22:3-22:257\">情報を定着させるためには、脳がさまざまなプロセスを通じて情報を処理し、長期記憶に保持する必要があります。以下に、情報を定着させるための主な脳の働きをいくつか挙げてみます。</p>\n<ol data-sourcepos=\"24:3-28:205\">\n<li data-sourcepos=\"24:3-24:238\">重要性の評価: 脳は情報を受け取る際に、その情報の重要性を評価します。情報が重要であると認識されると、脳はそれを優先的に処理し、長期記憶に保持しようとします。</li>\n<li data-sourcepos=\"25:3-25:301\">関連付け: 新しい情報を既存の知識や経験と関連付けることで、その情報がより理解しやすくなります。脳は情報を結びつけることで、それを記憶のネットワークに統合し、より長期的な記憶として保持しやすくします。</li>\n<li data-sourcepos=\"26:3-26:304\">反復: 情報を繰り返し学習することで、脳はその情報を定着させます。反復は、情報を短期記憶から長期記憶に移すのに役立ちます。学習や練習を通じて情報を反復することで、脳はそれを長期的に覚えるようになります。</li>\n<li data-sourcepos=\"27:3-27:247\">感情の関与: 情報が感情的に強く結びついている場合、脳はその情報をより強く定着させます。感情は記憶との関連性が高く、脳が情報を長期記憶に保持する際に重要な要素です。</li>\n<li data-sourcepos=\"28:3-28:205\">睡眠: 睡眠中に脳は情報を処理し、整理します。特に深い睡眠段階では、脳は情報の再活性化や整理を行い、重要な情報を長期記憶に定着させます。</li>\n</ol>\n</blockquote>\n<p data-sourcepos=\"30:1-30:147\">情報過多な現代においては、インプットを止め、評価や反復等をする時間を設けることも大事かと思います。</p>\n<h2 data-sourcepos=\"32:1-32:21\">\n<span id=\"家に着かない\" class=\"fragment\"></span><a href=\"#%E5%AE%B6%E3%81%AB%E7%9D%80%E3%81%8B%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>家に着かない</h2>\n<p data-sourcepos=\"34:1-35:205\">『これはすごい発見だ！』と思ったのですぐに記事を書きたくなりましたが、家に帰らないとパソコンがないため記事を書くことができません。<br>\nはやる気持ちを抑えてチャリンコをこぎつつ景色を楽しんだり別のことを考えたりしていると、<strong>アイデアの練度が上がっていく</strong>事に気がつきました。</p>\n<p data-sourcepos=\"37:1-37:249\">最初に思いついた時点ではテンションが高く <strong>「チャリンコのススメ」</strong> みたいなタイトルが頭をよぎっていました。その時点では最高に気持ちを伝えるタイトルだと思っていました。</p>\n<p data-sourcepos=\"39:1-39:266\">ただ、しばらく走っていると、Qiitaに <strong>このタイトルの記事を書いても誰も読まないだろう</strong> と思い始めました。よい景色はこころを穏やかにしてくれますね。冷静さを取り戻すことができました。</p>\n<p data-sourcepos=\"41:1-41:294\">ぼんやり考えながらチャリンコをこぎ続けます。机に向かって考える時と違って謎の開放感があります。シンプルに気分もよいです。そして、どうしても何かを決めなければならないというプレッシャーもありません。</p>\n<p data-sourcepos=\"43:1-44:147\">根を詰めるのも大事ですが、根を詰めないのも大事かもしれません。<br>\nすぐにアウトプットをするのも大事ですが、練度を上げてからアウトプットをするのも大事かもしれません。</p>\n<h2 data-sourcepos=\"46:1-46:39\">\n<span id=\"健康っぽいアクティビティ\" class=\"fragment\"></span><a href=\"#%E5%81%A5%E5%BA%B7%E3%81%A3%E3%81%BD%E3%81%84%E3%82%A2%E3%82%AF%E3%83%86%E3%82%A3%E3%83%93%E3%83%86%E3%82%A3\"><i class=\"fa fa-link\"></i></a>健康っぽいアクティビティ</h2>\n<p data-sourcepos=\"48:1-48:169\">座り仕事のわたし達に取って <strong>健康っぽいアクティビティの摂取</strong> はメンタルにとても良い影響を与えるように思います。<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup></p>\n<p data-sourcepos=\"50:1-50:169\">体が健康になると脳も活性化される気がします。この際アイデアが思いつくならプラシーボ効果<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup>でもなんでもよいですね。</p>\n<h2 data-sourcepos=\"52:1-52:27\">\n<span id=\"いつもと違う体験\" class=\"fragment\"></span><a href=\"#%E3%81%84%E3%81%A4%E3%82%82%E3%81%A8%E9%81%95%E3%81%86%E4%BD%93%E9%A8%93\"><i class=\"fa fa-link\"></i></a>いつもと違う体験</h2>\n<p data-sourcepos=\"54:1-54:120\">家へ帰るのに色々なルートで帰ると脳に良い影響を与える可能性があるとされています。</p>\n<p data-sourcepos=\"56:1-56:15\"><strong>(GPT先生)</strong></p>\n<blockquote data-sourcepos=\"58:1-63:257\">\n<ol data-sourcepos=\"58:3-62:1\">\n<li data-sourcepos=\"58:3-58:250\">脳の活性化: 新しいルートを選択することで、脳は新しい情報を処理し、新たな環境や景色を認識します。これにより、脳の活性化が促進され、脳の柔軟性や適応能力が向上します。</li>\n<li data-sourcepos=\"59:3-59:301\">認知刺激の増加: 新しいルートで帰ることは、通常のルートでは経験しない景色や環境に触れる機会を提供します。これにより、脳には新たな認知刺激が与えられ、視覚や空間認識、記憶などの認知機能が刺激されます。</li>\n<li data-sourcepos=\"60:3-60:283\">ストレス軽減: 毎日同じルートを通ることは、モノトニーを感じさせる可能性があります。新しいルートを選択することで、脳は新鮮な刺激を受け取り、モノトニー感やストレスを軽減する助けとなります。</li>\n<li data-sourcepos=\"61:3-62:1\">脳の健康維持: 脳を常に新しい情報や刺激で活性化させることは、認知機能の維持や向上に役立ちます。定型的な行動パターンを維持するよりも、新しいルートを探索することは脳の健康を維持する上で有益です。</li>\n</ol>\n<p data-sourcepos=\"63:3-63:257\">したがって、色々なルートで帰ることは脳にとって良い影響を与える可能性があります。新しい経験や刺激を積極的に取り入れることで、脳の活性化や認知機能の向上につながるでしょう。</p>\n</blockquote>\n<p data-sourcepos=\"65:1-65:174\">XやYouTubeとは異なる刺激を脳に与えることで脳が活性化し思考を整理する助けになるかもしれません。いえ、きっとなります。<sup><a href=\"#fn-1\" id=\"fnref-1-2\">1</a></sup></p>\n<h2 data-sourcepos=\"67:1-67:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"69:1-69:92\">AIの登場により技術界隈が目まぐるしく進化している様に感じます。</p>\n<p data-sourcepos=\"71:1-71:219\">キャッチアップしていくことも大事ですが、たまの週末にはゆっくりチャリンコをこいで景色を楽しんで色々なことに思いを巡らせてみてもよいかもしれません。</p>\n<h2 data-sourcepos=\"73:1-73:15\">\n<span id=\"おまけ０\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%90\"><i class=\"fa fa-link\"></i></a>おまけ０</h2>\n<p data-sourcepos=\"75:1-75:50\"><iframe id=\"qiita-embed-content__29a179b827abe43902b894647d6b9d69\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__29a179b827abe43902b894647d6b9d69\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F9d7283cb557e3f3e67b7\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"77:1-77:50\"><iframe id=\"qiita-embed-content__77099ce76b90593829114fd0b213afec\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__77099ce76b90593829114fd0b213afec\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff3dd9920b1dd29550ac0\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"79:1-79:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"81:1-81:50\"><iframe id=\"qiita-embed-content__a77dc13ad9740580a9fe5473fe187790\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a77dc13ad9740580a9fe5473fe187790\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"83:1-83:50\"><iframe id=\"qiita-embed-content__ab1d859607abcdd4709fab91be15f1a4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ab1d859607abcdd4709fab91be15f1a4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"85:1-85:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"87:1-87:50\"><iframe id=\"qiita-embed-content__27ca23db0ed4d00c0921af5d4c0a0549\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__27ca23db0ed4d00c0921af5d4c0a0549\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"89:1-89:50\"><iframe id=\"qiita-embed-content__75d8eac171ebff16daaa6c10cd6a707d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__75d8eac171ebff16daaa6c10cd6a707d\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"91:1-91:50\"><iframe id=\"qiita-embed-content__3affbd155bd4b0bb9d06f75bda1b38cd\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__3affbd155bd4b0bb9d06f75bda1b38cd\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"93:1-93:50\"><iframe id=\"qiita-embed-content__71a414b26396788a1a42fab432205dd3\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__71a414b26396788a1a42fab432205dd3\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"95:1-95:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"97:1-97:50\"><iframe id=\"qiita-embed-content__2e3048391024ac21af066225d0304a09\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2e3048391024ac21af066225d0304a09\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"99:1-99:50\"><iframe id=\"qiita-embed-content__6e671cb256a6d4982924405d4c5749f3\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6e671cb256a6d4982924405d4c5749f3\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"101:1-101:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"103:1-103:50\"><iframe id=\"qiita-embed-content__6ba2aa94b73f8672ac4ecb4c178031c2\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6ba2aa94b73f8672ac4ecb4c178031c2\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"105:1-105:50\"><iframe id=\"qiita-embed-content__34c131c407dd6deaa83f50d1e81485a9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__34c131c407dd6deaa83f50d1e81485a9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"107:1-107:50\"><iframe id=\"qiita-embed-content__fa2dfe3a82ae033291bb77c05abd4e17\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__fa2dfe3a82ae033291bb77c05abd4e17\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"109:1-109:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"111:1-111:50\"><iframe id=\"qiita-embed-content__86a04907f4488b91c55f9d984f1801c4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__86a04907f4488b91c55f9d984f1801c4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"113:1-113:50\"><iframe id=\"qiita-embed-content__1574fc84d53d87f2e5abe689de2e89f7\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1574fc84d53d87f2e5abe689de2e89f7\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"115:1-115:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"117:1-118:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"120:1-120:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"123:7-123:45\">効果には個人差があります。 <a href=\"#fnref-1\" class=\"\">↩</a> <a href=\"#fnref-1-2\" class=\"\">↩<sup>2</sup></a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"124:7-124:406\"><a href=\"https://ja.wikipedia.org/wiki/%E5%81%BD%E8%96%AC\" rel=\"nofollow noopener\" target=\"_blank\">[Wiki 偽薬]</a>偽薬効果（ぎやくこうか）、プラシーボ効果（placebo effect）、プラセボ効果とは、偽薬を処方しても、薬だと信じ込む事によって何らかの改善がみられることを言う（例：ただのキャンディを酔い止めと思い込ませて舐めさせると酔いがおさまる）。 <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\n毎週土曜日にQiitaを書けたらいいな活動をしていると、ネタがない(~~毎週~~)土曜日の朝は辛い気持ちになったりします。\n\n情報を収集しようと、ググったりX(ツイッター)を見たりYouTubeを見たりしていると情報を収集して少し賢くなった気分になるものの **実際は何も残らず時間だけが溶けていたりします。**\n\nというわけで（？）、このままではいけないとチャリンコに乗って小一時間程うろついてきたところだいぶ思考を整理できたので、その話を書こうと思います。\n\n## 両手がふさがっている\n\nこれはものすごい気付きだったのですが、両手が塞がっているため **スマホを触ることができない** んです。\n無意識で近くにあるスマホを手にとってXを開いてスクロールすることが不可能になっているのです。\n\nこれはものすごいことですね。\n\n追加でランダムな情報のインプットがされることなく、**現状脳内にあるものだけで思考を巡らせる時間**の確保ができます。\n\nGPT先生によると、インプットした情報を脳に定着するためには以下のようなことが必要とされています。\n\n**(GPT先生)**\n\n> 情報を定着させるためには、脳がさまざまなプロセスを通じて情報を処理し、長期記憶に保持する必要があります。以下に、情報を定着させるための主な脳の働きをいくつか挙げてみます。\n>\n> 1. 重要性の評価: 脳は情報を受け取る際に、その情報の重要性を評価します。情報が重要であると認識されると、脳はそれを優先的に処理し、長期記憶に保持しようとします。\n> 2. 関連付け: 新しい情報を既存の知識や経験と関連付けることで、その情報がより理解しやすくなります。脳は情報を結びつけることで、それを記憶のネットワークに統合し、より長期的な記憶として保持しやすくします。\n> 3. 反復: 情報を繰り返し学習することで、脳はその情報を定着させます。反復は、情報を短期記憶から長期記憶に移すのに役立ちます。学習や練習を通じて情報を反復することで、脳はそれを長期的に覚えるようになります。\n> 4. 感情の関与: 情報が感情的に強く結びついている場合、脳はその情報をより強く定着させます。感情は記憶との関連性が高く、脳が情報を長期記憶に保持する際に重要な要素です。\n> 5. 睡眠: 睡眠中に脳は情報を処理し、整理します。特に深い睡眠段階では、脳は情報の再活性化や整理を行い、重要な情報を長期記憶に定着させます。\n\n情報過多な現代においては、インプットを止め、評価や反復等をする時間を設けることも大事かと思います。\n\n## 家に着かない\n\n『これはすごい発見だ！』と思ったのですぐに記事を書きたくなりましたが、家に帰らないとパソコンがないため記事を書くことができません。\nはやる気持ちを抑えてチャリンコをこぎつつ景色を楽しんだり別のことを考えたりしていると、**アイデアの練度が上がっていく**事に気がつきました。\n\n最初に思いついた時点ではテンションが高く **「チャリンコのススメ」** みたいなタイトルが頭をよぎっていました。その時点では最高に気持ちを伝えるタイトルだと思っていました。\n\nただ、しばらく走っていると、Qiitaに **このタイトルの記事を書いても誰も読まないだろう** と思い始めました。よい景色はこころを穏やかにしてくれますね。冷静さを取り戻すことができました。\n\nぼんやり考えながらチャリンコをこぎ続けます。机に向かって考える時と違って謎の開放感があります。シンプルに気分もよいです。そして、どうしても何かを決めなければならないというプレッシャーもありません。\n\n根を詰めるのも大事ですが、根を詰めないのも大事かもしれません。\nすぐにアウトプットをするのも大事ですが、練度を上げてからアウトプットをするのも大事かもしれません。\n\n## 健康っぽいアクティビティ\n\n座り仕事のわたし達に取って **健康っぽいアクティビティの摂取** はメンタルにとても良い影響を与えるように思います。[^1]\n\n体が健康になると脳も活性化される気がします。この際アイデアが思いつくならプラシーボ効果[^2]でもなんでもよいですね。\n\n## いつもと違う体験\n\n家へ帰るのに色々なルートで帰ると脳に良い影響を与える可能性があるとされています。\n\n**(GPT先生)**\n\n> 1. 脳の活性化: 新しいルートを選択することで、脳は新しい情報を処理し、新たな環境や景色を認識します。これにより、脳の活性化が促進され、脳の柔軟性や適応能力が向上します。\n> 2. 認知刺激の増加: 新しいルートで帰ることは、通常のルートでは経験しない景色や環境に触れる機会を提供します。これにより、脳には新たな認知刺激が与えられ、視覚や空間認識、記憶などの認知機能が刺激されます。\n> 3. ストレス軽減: 毎日同じルートを通ることは、モノトニーを感じさせる可能性があります。新しいルートを選択することで、脳は新鮮な刺激を受け取り、モノトニー感やストレスを軽減する助けとなります。\n> 4. 脳の健康維持: 脳を常に新しい情報や刺激で活性化させることは、認知機能の維持や向上に役立ちます。定型的な行動パターンを維持するよりも、新しいルートを探索することは脳の健康を維持する上で有益です。\n>\n> したがって、色々なルートで帰ることは脳にとって良い影響を与える可能性があります。新しい経験や刺激を積極的に取り入れることで、脳の活性化や認知機能の向上につながるでしょう。\n\nXやYouTubeとは異なる刺激を脳に与えることで脳が活性化し思考を整理する助けになるかもしれません。いえ、きっとなります。[^1]\n\n## おわりに\n\nAIの登場により技術界隈が目まぐるしく進化している様に感じます。\n\nキャッチアップしていくことも大事ですが、たまの週末にはゆっくりチャリンコをこいで景色を楽しんで色々なことに思いを巡らせてみてもよいかもしれません。\n\n## おまけ０\n\nhttps://qiita.com/kaku3/items/9d7283cb557e3f3e67b7\n\nhttps://qiita.com/kaku3/items/f3dd9920b1dd29550ac0\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n\n[^1]: 効果には個人差があります。\n[^2]: [[Wiki 偽薬]](https://ja.wikipedia.org/wiki/%E5%81%BD%E8%96%AC)偽薬効果（ぎやくこうか）、プラシーボ効果（placebo effect）、プラセボ効果とは、偽薬を処方しても、薬だと信じ込む事によって何らかの改善がみられることを言う（例：ただのキャンディを酔い止めと思い込ませて舐めさせると酔いがおさまる）。\n\n",
    "coediting": false,
    "comments_count": 1,
    "created_at": "2024-04-20T14:24:53+09:00",
    "group": null,
    "id": "1000774f223dfc3ae383",
    "likes_count": 20,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 19,
    "tags": [
      {
        "name": "初心者",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "ネタ",
        "versions": []
      },
      {
        "name": "アイデア",
        "versions": []
      },
      {
        "name": "思考法",
        "versions": []
      }
    ],
    "title": "チャリンコ超思考整理法",
    "updated_at": "2024-04-20T16:46:20+09:00",
    "url": "https://qiita.com/kaku3/items/1000774f223dfc3ae383",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 11038,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:48\">こんなやり取りがあったとします。</p>\n<p data-sourcepos=\"5:1-8:12\">部下「右手に棒状の物を２本持ちました。その後、右手を前に出しぶよっとした茶色い物体をつまみ、しげしげと見つめました。」<br>\n上司「結論から話して？」<br>\n部下「すげー美味しかったです！」<br>\n上司「」</p>\n<p data-sourcepos=\"10:1-11:78\">若干謎な例文ですが、日常で割と発生しているやり取りかなと思います。<br>\nこれについて少し回りくどく考察してみたいと思います。</p>\n<h2 data-sourcepos=\"13:1-13:57\">\n<span id=\"すげー美味しかったですは結論\" class=\"fragment\"></span><a href=\"#%E3%81%99%E3%81%92%E3%83%BC%E7%BE%8E%E5%91%B3%E3%81%97%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%A7%E3%81%99%E3%81%AF%E7%B5%90%E8%AB%96\"><i class=\"fa fa-link\"></i></a>「すげー美味しかったです！」は結論？</h2>\n<p data-sourcepos=\"15:1-15:105\">部下としては結論を語っている様に見えますが、なんとなく釈然としません。</p>\n<p data-sourcepos=\"17:1-17:126\">とりあえず、この部下が取ろうとしているコミュニケーションの種類を考察してみましょう。</p>\n<ul data-sourcepos=\"19:1-31:0\">\n<li data-sourcepos=\"19:1-21:99\">報告・共有（重要度：★☆☆）<br>\n自分のタスクの進捗などを共有する。<br>\nこれを適切に行わないと、遅延の発覚が遅れるといったことが起きます。</li>\n<li data-sourcepos=\"22:1-24:93\">確認（重要度：★★☆）<br>\n自分のタスクについて、このまま進めてよいか分からない時に確認する。<br>\nこれを適切に行わないと、作業誤りによる手戻りの原因となります。</li>\n<li data-sourcepos=\"25:1-27:93\">質問（重要度：★★☆）<br>\n自分のタスクについて、疑問が発生した時にどのように進めていいか質問する。<br>\nこれを適切に行わないと、作業誤りによる手戻りの原因となります。</li>\n<li data-sourcepos=\"28:1-31:0\">相談（重要度：★★★）<br>\n自分のタスクについて、このまま進めても遂行できない場合に相談する。<br>\nこれを適切に行わないと、リリース日程を守れないなど調整やリカバリーが困難な状況に陥る原因となります。</li>\n</ul>\n<p data-sourcepos=\"32:1-33:285\">これらのコミュニケーションは、内容や頻度が適切ではないと <strong>「それって今必要？」</strong>、 <strong>「なんでもっと早く言わないの？」</strong> と心をえぐるリアクションが返ってくることがあったりします。<br>\nまた、 <strong>「適切さ」</strong> はプロジェクトにおいてはある程度傾向がありますが、細かくは相手によって異なるという高難易度ゲーです。プロジェクトや相手をよく見てリトライを繰り返し攻略法を見つけましょう。</p>\n<p data-sourcepos=\"35:1-36:213\">さて、「すげー美味しかったです！」は <strong>「それってあなたの感想ですよね」</strong> という気もしますが、この中だと <strong>「共有」</strong> に分類されるコミュニケーションでしょうか？<br>\n今のところ「なんだかよく分からない手順でぶよっとした茶色い物体を見つめたら、すごく美味しかった！」しか理解できていない困った状況となりました。</p>\n<h2 data-sourcepos=\"38:1-38:51\">\n<span id=\"ぶよっとした茶色い物体の正体は\" class=\"fragment\"></span><a href=\"#%E3%81%B6%E3%82%88%E3%81%A3%E3%81%A8%E3%81%97%E3%81%9F%E8%8C%B6%E8%89%B2%E3%81%84%E7%89%A9%E4%BD%93%E3%81%AE%E6%AD%A3%E4%BD%93%E3%81%AF\"><i class=\"fa fa-link\"></i></a>ぶよっとした茶色い物体の正体は？</h2>\n<p data-sourcepos=\"40:1-41:30\">上司「ところで、ぶよっとした茶色い物体って何？」<br>\n部下「唐揚げです！」</p>\n<p data-sourcepos=\"43:1-43:153\">どうやら、この部下は「唐揚げについて作業をしていて、それが美味しかった！」ことを伝えたかったようです。</p>\n<p data-sourcepos=\"45:1-45:213\">上司が「唐揚げを食べる」タスクを指示していれば、その前提は当然共有されていると思い、部下は「右手に棒状の物を～」から会話を初めていたようです。</p>\n<p data-sourcepos=\"47:1-47:264\">ところが、上司はいくつものプロジェクトを掛け持ちしており、本プロジェクトの細かいタスクを覚えておらず、なんの話をされたのかを全く理解できない状況に陥っていたしまったみたいです。</p>\n<h2 data-sourcepos=\"49:1-49:33\">\n<span id=\"ところで表現が難しい\" class=\"fragment\"></span><a href=\"#%E3%81%A8%E3%81%93%E3%82%8D%E3%81%A7%E8%A1%A8%E7%8F%BE%E3%81%8C%E9%9B%A3%E3%81%97%E3%81%84\"><i class=\"fa fa-link\"></i></a>ところで表現が難しい</h2>\n<p data-sourcepos=\"51:1-51:303\">ここまで来ると、「右手に持った棒状の物」が箸ということが推察されるかと思いますし、「箸で唐揚げをつまんで、しげしげと見つめた。」ことも推察できるかと思います。レモンをかけたかも気になるかもしれませんね。</p>\n<p data-sourcepos=\"53:1-53:294\">一方で、再現が難しい障害であれば、原文「右手に棒状の物を２本持ちました。その後、右手を前に出しぶよっとした茶色い物体をつまみ、しげしげと見つめました。」を箇条書きにした方が望ましいかもしれません。</p>\n<ol data-sourcepos=\"55:1-59:0\">\n<li data-sourcepos=\"55:1-55:39\">右手に棒状の物を２本持つ</li>\n<li data-sourcepos=\"56:1-56:24\">右手を前に出す</li>\n<li data-sourcepos=\"57:1-57:48\">ぶよっとした茶色い物体をつまむ</li>\n<li data-sourcepos=\"58:1-59:0\">しげしげと見つめる</li>\n</ol>\n<p data-sourcepos=\"60:1-60:219\">ただ、今回は「共有」したいだけですし、「箸」は日本人としては共通理解がある物体であることも考えると、元々の報告はやはり難しいと言っていいでしょう。</p>\n<h2 data-sourcepos=\"62:1-62:45\">\n<span id=\"じゃあどうすればよかったの\" class=\"fragment\"></span><a href=\"#%E3%81%98%E3%82%83%E3%81%82%E3%81%A9%E3%81%86%E3%81%99%E3%82%8C%E3%81%B0%E3%82%88%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%AE\"><i class=\"fa fa-link\"></i></a>じゃあどうすればよかったの？</h2>\n<p data-sourcepos=\"64:1-64:211\">冒頭にコミュニケーションの種類を明記して、報告の概要（サマリー）を3行程度でさっくり書くようにすると汎用性が高いと考えますがいかがでしょうか？</p>\n<p data-sourcepos=\"66:1-66:312\">「美味しい唐揚げの食べ方研究プロジェクトの進捗について共有します。箸でつまんでそのまま食べずにしげしげと見つめてから食べると美味しいということが分かりました。引き続き美味しい食べ方について調査を継続します。」</p>\n<h2 data-sourcepos=\"68:1-68:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"70:1-70:234\">「概要を書けばよいのでは」と簡単に書きましたが、概要はプロジェクトの全容のうち、自分のタスクがどのような意味を持つかを把握していないと書けなかったりします。</p>\n<p data-sourcepos=\"72:1-73:147\">訓練としては、プロジェクトを俯瞰して見たり、インプットを分解・理解・整理することを習慣づけることが考えられます。<br>\n時間はかかりますが、よりよい報告を行ったり今後キャリアを積む上での基礎としても役に立つと思います。</p>\n<h2 data-sourcepos=\"75:1-75:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"77:1-77:50\"><iframe id=\"qiita-embed-content__d438cda8ea0ab2ced3b46a2401c55406\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__d438cda8ea0ab2ced3b46a2401c55406\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"79:1-79:50\"><iframe id=\"qiita-embed-content__c75728f971693297f8a06189ac9cbf75\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c75728f971693297f8a06189ac9cbf75\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"81:1-81:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"83:1-83:50\"><iframe id=\"qiita-embed-content__302f1d8bee2f73956fb2adf206cb1d56\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__302f1d8bee2f73956fb2adf206cb1d56\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"85:1-85:50\"><iframe id=\"qiita-embed-content__ac2f72021ec3c4cc4b97e2cf01c66fe6\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ac2f72021ec3c4cc4b97e2cf01c66fe6\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"87:1-87:50\"><iframe id=\"qiita-embed-content__d6475279afd31e94653292e05d482969\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__d6475279afd31e94653292e05d482969\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"89:1-89:50\"><iframe id=\"qiita-embed-content__a0e744263c168101a419758247e2e0ce\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a0e744263c168101a419758247e2e0ce\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"91:1-91:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"93:1-93:50\"><iframe id=\"qiita-embed-content__33ade1b0aea1deb6c997a7629c989312\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__33ade1b0aea1deb6c997a7629c989312\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"95:1-95:50\"><iframe id=\"qiita-embed-content__f4e3f3665fe60fb86fb93bc20a4ce965\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f4e3f3665fe60fb86fb93bc20a4ce965\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"97:1-97:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"99:1-99:50\"><iframe id=\"qiita-embed-content__2439fe49e7343ec0c84b180ecaa93719\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2439fe49e7343ec0c84b180ecaa93719\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"101:1-101:50\"><iframe id=\"qiita-embed-content__acd30c32924496e397f49249343d0575\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__acd30c32924496e397f49249343d0575\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"103:1-103:50\"><iframe id=\"qiita-embed-content__a4f9c1effee11928976406df5d177549\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a4f9c1effee11928976406df5d177549\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"105:1-105:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"107:1-107:50\"><iframe id=\"qiita-embed-content__90ecd76cd5eca469e0e06566e99b626d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__90ecd76cd5eca469e0e06566e99b626d\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"109:1-109:50\"><iframe id=\"qiita-embed-content__008e6e4546ea02d3b07fb0516eb31165\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__008e6e4546ea02d3b07fb0516eb31165\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"111:1-111:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"113:1-114:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"116:1-116:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\nこんなやり取りがあったとします。\n\n部下「右手に棒状の物を２本持ちました。その後、右手を前に出しぶよっとした茶色い物体をつまみ、しげしげと見つめました。」\n上司「結論から話して？」\n部下「すげー美味しかったです！」\n上司「」\n\n若干謎な例文ですが、日常で割と発生しているやり取りかなと思います。\nこれについて少し回りくどく考察してみたいと思います。\n\n## 「すげー美味しかったです！」は結論？\n\n部下としては結論を語っている様に見えますが、なんとなく釈然としません。\n\nとりあえず、この部下が取ろうとしているコミュニケーションの種類を考察してみましょう。\n\n- 報告・共有（重要度：★☆☆）\n自分のタスクの進捗などを共有する。\nこれを適切に行わないと、遅延の発覚が遅れるといったことが起きます。\n- 確認（重要度：★★☆）\n自分のタスクについて、このまま進めてよいか分からない時に確認する。\nこれを適切に行わないと、作業誤りによる手戻りの原因となります。\n- 質問（重要度：★★☆）\n自分のタスクについて、疑問が発生した時にどのように進めていいか質問する。\nこれを適切に行わないと、作業誤りによる手戻りの原因となります。\n- 相談（重要度：★★★）\n自分のタスクについて、このまま進めても遂行できない場合に相談する。\nこれを適切に行わないと、リリース日程を守れないなど調整やリカバリーが困難な状況に陥る原因となります。\n\nこれらのコミュニケーションは、内容や頻度が適切ではないと **「それって今必要？」**、 **「なんでもっと早く言わないの？」** と心をえぐるリアクションが返ってくることがあったりします。\nまた、 **「適切さ」** はプロジェクトにおいてはある程度傾向がありますが、細かくは相手によって異なるという高難易度ゲーです。プロジェクトや相手をよく見てリトライを繰り返し攻略法を見つけましょう。\n\nさて、「すげー美味しかったです！」は **「それってあなたの感想ですよね」** という気もしますが、この中だと **「共有」** に分類されるコミュニケーションでしょうか？\n今のところ「なんだかよく分からない手順でぶよっとした茶色い物体を見つめたら、すごく美味しかった！」しか理解できていない困った状況となりました。\n\n## ぶよっとした茶色い物体の正体は？\n\n上司「ところで、ぶよっとした茶色い物体って何？」\n部下「唐揚げです！」\n\nどうやら、この部下は「唐揚げについて作業をしていて、それが美味しかった！」ことを伝えたかったようです。\n\n上司が「唐揚げを食べる」タスクを指示していれば、その前提は当然共有されていると思い、部下は「右手に棒状の物を～」から会話を初めていたようです。\n\nところが、上司はいくつものプロジェクトを掛け持ちしており、本プロジェクトの細かいタスクを覚えておらず、なんの話をされたのかを全く理解できない状況に陥っていたしまったみたいです。\n\n## ところで表現が難しい\n\nここまで来ると、「右手に持った棒状の物」が箸ということが推察されるかと思いますし、「箸で唐揚げをつまんで、しげしげと見つめた。」ことも推察できるかと思います。レモンをかけたかも気になるかもしれませんね。\n\n一方で、再現が難しい障害であれば、原文「右手に棒状の物を２本持ちました。その後、右手を前に出しぶよっとした茶色い物体をつまみ、しげしげと見つめました。」を箇条書きにした方が望ましいかもしれません。\n\n1. 右手に棒状の物を２本持つ\n1. 右手を前に出す\n1. ぶよっとした茶色い物体をつまむ\n1. しげしげと見つめる\n\nただ、今回は「共有」したいだけですし、「箸」は日本人としては共通理解がある物体であることも考えると、元々の報告はやはり難しいと言っていいでしょう。\n\n## じゃあどうすればよかったの？\n\n冒頭にコミュニケーションの種類を明記して、報告の概要（サマリー）を3行程度でさっくり書くようにすると汎用性が高いと考えますがいかがでしょうか？\n\n「美味しい唐揚げの食べ方研究プロジェクトの進捗について共有します。箸でつまんでそのまま食べずにしげしげと見つめてから食べると美味しいということが分かりました。引き続き美味しい食べ方について調査を継続します。」\n\n## おわりに\n\n「概要を書けばよいのでは」と簡単に書きましたが、概要はプロジェクトの全容のうち、自分のタスクがどのような意味を持つかを把握していないと書けなかったりします。\n\n訓練としては、プロジェクトを俯瞰して見たり、インプットを分解・理解・整理することを習慣づけることが考えられます。\n時間はかかりますが、よりよい報告を行ったり今後キャリアを積む上での基礎としても役に立つと思います。\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 3,
    "created_at": "2024-04-06T15:23:07+09:00",
    "group": null,
    "id": "9d7283cb557e3f3e67b7",
    "likes_count": 31,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 27,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "コミュニケーション",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      }
    ],
    "title": "結論から報告すればよいわけでもないを考察してみた",
    "updated_at": "2024-04-06T15:23:07+09:00",
    "url": "https://qiita.com/kaku3/items/9d7283cb557e3f3e67b7",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 14251,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:169\">新社会人の皆さんもそうでない皆さんもこんにちは。<br>\nこの記事を読む方々は将来に漠然とした不安を抱えている方かと思いますが、いかがでしょうか？<strong>わたしは抱えています。</strong></p>\n<p data-sourcepos=\"6:1-6:99\">このエントリーでは、そんな不安を払拭するための生存戦略を考えます。</p>\n<p data-sourcepos=\"8:1-8:264\">考察に利用するデータは政府が公開している信用できるデータを利用していますが、わたしの個人的考察については必ずしも正しいとは限りませんがそのつもりで読んでいただければと思います。</p>\n<h2 data-sourcepos=\"10:1-10:24\">\n<span id=\"まずは情報収集\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%9A%E3%81%AF%E6%83%85%E5%A0%B1%E5%8F%8E%E9%9B%86\"><i class=\"fa fa-link\"></i></a>まずは情報収集</h2>\n<p data-sourcepos=\"12:1-12:480\">戦略を考えるには現在の状況についての情報をできるだけ多く集める必要があります。情報が足りていない状況で何かを判断するのは大変危険です。例えば最近は見かけない広告で <strong>『フルリモート週３日出社副業で８０万円収入』</strong> といったものがありましたが、情報がなければ、それがどのような性質のものかを判断することもできないかと思います。</p>\n<p data-sourcepos=\"14:1-14:256\">最近ではWebでググったり、ChatGPTに質問したりしてなんらかの見解を得ることもできますが、未来予測をするためには長期的な推移のデータを眺めるのがよいのではないかなと思っています。</p>\n<p data-sourcepos=\"16:1-16:147\">今回は、わたし達が今置かれている状況を把握したいので、政府の統計データを色々見てみることにします。</p>\n<ul data-sourcepos=\"18:1-21:0\">\n<li data-sourcepos=\"18:1-18:61\"><a href=\"https://www.e-stat.go.jp/\" rel=\"nofollow noopener\" target=\"_blank\">e-Stat : 統計で見る日本</a></li>\n<li data-sourcepos=\"19:1-19:74\"><a href=\"https://www.meti.go.jp/statistics/index.html\" rel=\"nofollow noopener\" target=\"_blank\">経済産業省 : 統計</a></li>\n<li data-sourcepos=\"20:1-21:0\"><a href=\"https://www.soumu.go.jp/johotsusintokei/link/link03_03.html\" rel=\"nofollow noopener\" target=\"_blank\">総務省 : ICTの経済分析に関する調査</a></li>\n</ul>\n<p data-sourcepos=\"22:1-22:237\">自分の仮説をプレゼンする際にも、信頼できるデータ（エビデンス）が存在していると説得力が高まると思いますので情報収集をする習慣をつけるのは良いことかと思います。</p>\n<h2 data-sourcepos=\"24:1-24:24\">\n<span id=\"漠然と課題認識\" class=\"fragment\"></span><a href=\"#%E6%BC%A0%E7%84%B6%E3%81%A8%E8%AA%B2%E9%A1%8C%E8%AA%8D%E8%AD%98\"><i class=\"fa fa-link\"></i></a>漠然と課題認識</h2>\n<p data-sourcepos=\"26:1-27:126\">ヒット作を飛ばして億万長者（死語？）になりたいのか、定年まで波風立てずに植物の心のような人生を送りたいのかで、解決すべき課題は異なると思います。<br>\n今回は後者の課題解決を目指すことにして、以下のようなデータを収集しグラフ化しました。</p>\n<ul data-sourcepos=\"29:1-35:0\">\n<li data-sourcepos=\"29:1-29:454\"><a href=\"https://www.e-stat.go.jp/stat-search/files?page=1&amp;query=%E5%8A%B4%E5%83%8D%E5%8A%9B%E8%AA%BF%E6%9F%BB%20%2F%20%E5%9F%BA%E6%9C%AC%E9%9B%86%E8%A8%88%E3%80%80%E5%85%A8%E9%83%BD%E9%81%93%E5%BA%9C%E7%9C%8C%20%E9%95%B7%E6%9C%9F%E6%99%82%E7%B3%BB%E5%88%97%E3%83%87%E3%83%BC%E3%82%BF&amp;layout=dataset\" rel=\"nofollow noopener\" target=\"_blank\">e-Stat : 労働力調査 / 基本集計　全都道府県 長期時系列データ : 年齢階級（5歳階級）別労働力人口及び労働力人口比率</a></li>\n<li data-sourcepos=\"30:1-33:25\">\n<a href=\"https://www.soumu.go.jp/johotsusintokei/link/link03_03.html\" rel=\"nofollow noopener\" target=\"_blank\">総務省 : トップページ &gt; 関係情報 &gt; 調査研究報告書（毎年継続している調査） &gt; ICTの経済分析に関する調査</a>\n<ul data-sourcepos=\"31:5-33:25\">\n<li data-sourcepos=\"31:5-31:31\">1ＩＴ投資（日本）</li>\n<li data-sourcepos=\"32:5-32:31\">2ＩＴ投資（米国）</li>\n<li data-sourcepos=\"33:5-33:25\">9雇用（日本）</li>\n</ul>\n</li>\n<li data-sourcepos=\"34:1-35:0\"><a href=\"https://www.soumu.go.jp/johotsusintokei/whitepaper/ja/r04/html/nd231300.html\" rel=\"nofollow noopener\" target=\"_blank\">総務省（2022）「令和3年度　ICTの経済分析に関する調査」：図表3-1-3-1　我が国の情報化投資の推移</a></li>\n</ul>\n<p data-sourcepos=\"36:1-36:66\">作成したグラフは以下のようなものになります。</p>\n<ul data-sourcepos=\"38:1-43:0\">\n<li data-sourcepos=\"38:1-40:0\">\n<p data-sourcepos=\"38:3-39:143\">生産年齢人口の推移<br>\n<a href=\"https://camo.qiitausercontent.com/6e30377b23abc9e667412642074273ded9150228/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36313630393939652d313762382d303865632d326163382d3566363037623635623664662e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6160999e-17b8-08ec-2ac8-5f607b65b6df.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=c58e9a5809e06367b59d889c38f2a4c2\" alt=\"生産年齢人口の推移.gif\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6160999e-17b8-08ec-2ac8-5f607b65b6df.gif\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6160999e-17b8-08ec-2ac8-5f607b65b6df.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=2c771438cb27c982e9d22bee36256ad8 1x\" loading=\"lazy\"></a></p>\n</li>\n<li data-sourcepos=\"41:1-43:0\">\n<p data-sourcepos=\"41:3-42:134\">媒体別広告費<br>\n<a href=\"https://camo.qiitausercontent.com/65b76fdecf992e3cf1daf817739ffee32d8768a7/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36343130646461382d343232382d663261332d383163652d3139636436346334313232372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6410dda8-4228-f2a3-81ce-19cd64c41227.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=fc3edbbc32330ada6532c7abadff7aa5\" alt=\"媒体別広告費.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6410dda8-4228-f2a3-81ce-19cd64c41227.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6410dda8-4228-f2a3-81ce-19cd64c41227.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=18745c54ee6b84956156da2f63793ebe 1x\" loading=\"lazy\"></a></p>\n</li>\n</ul>\n<p data-sourcepos=\"44:1-45:109\">※以下のサイトに実際のグラフも置いておきました。<br>\n<a href=\"https://kaku3.github.io/workbooks/%E7%B5%B1%E8%A8%88%E3%82%B0%E3%83%A9%E3%83%95.html\" rel=\"nofollow noopener\" target=\"_blank\">統計グラフ一覧</a></p>\n<p data-sourcepos=\"47:1-48:142\">元々資料でグラフも提供されているのですが、円グラフで推移をアニメーション表示するなどすると状況がより理解できるだろうと考えて再作成しています。<br>\n<a href=\"https://www.chartjs.org/\" rel=\"nofollow noopener\" target=\"_blank\">Chart.js</a> を利用すると簡単にきれいなアニメーショングラフを作成できて便利ですね。</p>\n<p data-sourcepos=\"50:1-50:340\">媒体広告費のグラフは『インターネットつよい』という見方ではなく <strong>『実際には国内で流れていたお金がアップルやグーグルに流れた』</strong> という見方をするとかなり深刻な事態であることが読み取れますが、今回の考察には含めないことにします。<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup></p>\n<h2 data-sourcepos=\"52:1-52:21\">\n<span id=\"着眼点と仮説\" class=\"fragment\"></span><a href=\"#%E7%9D%80%E7%9C%BC%E7%82%B9%E3%81%A8%E4%BB%AE%E8%AA%AC\"><i class=\"fa fa-link\"></i></a>着眼点と仮説</h2>\n<p data-sourcepos=\"54:1-54:292\">ここから先に進む前に、一旦 <a href=\"https://kaku3.github.io/workbooks/%E7%B5%B1%E8%A8%88%E3%82%B0%E3%83%A9%E3%83%95.html\" rel=\"nofollow noopener\" target=\"_blank\">『統計グラフ一覧』</a> を見て、<strong>なんでもいいので</strong>何かを読み取ってみて <strong>『なんらかの仮説』</strong> を立ててみてください。</p>\n<p data-sourcepos=\"56:1-56:285\">この先はわたしの考察が続きますが、『他人と同じものを見て、より多くのものを読み取って、より生存率が高まるであろう判断をして行動する』ということの積み重ねが生存率を上げることになると思います。</p>\n<p data-sourcepos=\"58:1-58:162\">ひょっとしたら、わたしが野垂れているけれども、読んでいる皆さんが生存しているという未来もあるかもしれません。</p>\n<h3 data-sourcepos=\"60:1-60:28\">\n<span id=\"着眼点人口推移\" class=\"fragment\"></span><a href=\"#%E7%9D%80%E7%9C%BC%E7%82%B9%E4%BA%BA%E5%8F%A3%E6%8E%A8%E7%A7%BB\"><i class=\"fa fa-link\"></i></a>着眼点：人口推移</h3>\n<p data-sourcepos=\"62:1-62:264\">『少子高齢化社会』という単語を聞くと、子供と高齢者の問題の様に聞こえるのですが、実は会社にいる人全員が均等に年をとることで社会集団の性質が変わることがないかに着目してみました。</p>\n<h3 data-sourcepos=\"64:1-64:36\">\n<span id=\"着眼点it投資額の推移\" class=\"fragment\"></span><a href=\"#%E7%9D%80%E7%9C%BC%E7%82%B9it%E6%8A%95%E8%B3%87%E9%A1%8D%E3%81%AE%E6%8E%A8%E7%A7%BB\"><i class=\"fa fa-link\"></i></a>着眼点：IT投資額の推移</h3>\n<p data-sourcepos=\"66:1-66:137\">人月単価や昇給について何か読み取れることがないかと、IT投資額の推移と総額に着目してみました。</p>\n<h3 data-sourcepos=\"68:1-68:37\">\n<span id=\"仮説を立てるにあたって\" class=\"fragment\"></span><a href=\"#%E4%BB%AE%E8%AA%AC%E3%82%92%E7%AB%8B%E3%81%A6%E3%82%8B%E3%81%AB%E3%81%82%E3%81%9F%E3%81%A3%E3%81%A6\"><i class=\"fa fa-link\"></i></a>仮説を立てるにあたって</h3>\n<p data-sourcepos=\"70:1-70:84\">以下のようなことをぼんやり考えながらグラフを眺めました。</p>\n<ul data-sourcepos=\"72:1-77:0\">\n<li data-sourcepos=\"72:1-72:71\">なんとなく管理者不足を感じる。人口構成の問題？</li>\n<li data-sourcepos=\"73:1-73:32\">年齢相応に昇給したい</li>\n<li data-sourcepos=\"74:1-77:0\">昇給するためには人月単価の上昇が不可欠\n<ul data-sourcepos=\"75:5-77:0\">\n<li data-sourcepos=\"75:5-75:33\">上昇させる方法は？</li>\n<li data-sourcepos=\"76:5-77:0\">外貨稼げる？</li>\n</ul>\n</li>\n</ul>\n<p data-sourcepos=\"78:1-78:81\">現状の把握や未来についての仮説は立ちましたでしょうか？</p>\n<h2 data-sourcepos=\"80:1-80:78\">\n<span id=\"これから皆さんにはお金を奪い合ってもらいます\" class=\"fragment\"></span><a href=\"#%E3%81%93%E3%82%8C%E3%81%8B%E3%82%89%E7%9A%86%E3%81%95%E3%82%93%E3%81%AB%E3%81%AF%E3%81%8A%E9%87%91%E3%82%92%E5%A5%AA%E3%81%84%E5%90%88%E3%81%A3%E3%81%A6%E3%82%82%E3%82%89%E3%81%84%E3%81%BE%E3%81%99\"><i class=\"fa fa-link\"></i></a>『これから皆さんには、お金を奪い合ってもらいます』</h2>\n<p data-sourcepos=\"82:1-82:189\">突然どこかで見たようなデスゲームのようなアオリですが、人月単価を上昇させる方法について考えるとそのような考えが頭をよぎります。</p>\n<p data-sourcepos=\"84:1-84:91\">まずは、JUASの以下資料で人月単価の相場を確認しておきましょう。</p>\n<p data-sourcepos=\"86:1-86:128\"><a href=\"https://camo.qiitausercontent.com/fb2a5e1ef22c3a7e15dfaa3ce44b8e909fd82d21/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f65376535616231352d656331362d613266332d643964622d3932636433333536663539342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe7e5ab15-ec16-a2f3-d9db-92cd3356f594.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ce565539f24961309ae69544982fcf3b\" alt=\"人月単価.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e7e5ab15-ec16-a2f3-d9db-92cd3356f594.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe7e5ab15-ec16-a2f3-d9db-92cd3356f594.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=50b4ce8c780221af37b1ebbeee8a41ce 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"88:1-88:194\">(<a href=\"https://juas.or.jp/cms/media/2021/05/20_it-investment_2.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : IT価格相場運営プロジェクト 研究成果報告書 2章 FP単価の算出 3. 人件費単価の計算（1/3）</a>)</p>\n<p data-sourcepos=\"90:1-90:154\">企業規模・役割・地域によって単価が異なるようですが、<strong>66.8万円 ~ 158万円</strong> といった単価になるようでした。<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup></p>\n<p data-sourcepos=\"92:1-92:139\">さてここで、IT投資額の推移と、IT従事者の人口から、ざっくり一人当たりの人月を求めてみましょう。</p>\n<p data-sourcepos=\"94:1-95:112\">2021年時点で、ソフトウェアに対する投資は、9兆円程度、IT従事者は120万人程度でした。<br>\n単純に割り算して、なおかつ 12 で割ると一人当たりの人月単価が求まりそうです。</p>\n<p data-sourcepos=\"97:1-98:37\">9,000,000,000,000 / 1,200,000 = 7,500,000 [円]<br>\n7,500,000 / 12 = 625,000 [円/人月]</p>\n<p data-sourcepos=\"100:1-100:99\">IT予算をIT従事者の人数で均等割したところ、<strong>62万5千円</strong> となりました。</p>\n<p data-sourcepos=\"102:1-102:174\">この計算には、サーバーの維持管理等、ハードウェアの費用は含まれていません。また、営業費等の経費等も含まれていません。</p>\n<p data-sourcepos=\"104:1-104:143\">4割位を会社に持っていかれるとすると <strong>37.5万[円/月] (450万[円/年])</strong> が手元に残る計算になるでしょうか？</p>\n<p data-sourcepos=\"106:1-106:395\">2011年から2021年にかけて予算が7兆円から9兆円まで上がっているので、向こう10年で同程度の成長をするならば、10年間で 100万円程度年収が上がることは期待できますが、誰かが年収1,000万円を達成しようと思うと、他の誰かの年収を平均値より下げる必要がありそうということが推察されます。</p>\n<h2 data-sourcepos=\"108:1-108:56\">\n<span id=\"2030年に最大80万人不足するitエンジニア\" class=\"fragment\"></span><a href=\"#2030%E5%B9%B4%E3%81%AB%E6%9C%80%E5%A4%A780%E4%B8%87%E4%BA%BA%E4%B8%8D%E8%B6%B3%E3%81%99%E3%82%8Bit%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2\"><i class=\"fa fa-link\"></i></a>2030年に最大80万人不足するITエンジニア</h2>\n<p data-sourcepos=\"110:1-110:62\">一部で噂になっている <del>怪</del>文書があります。</p>\n<p data-sourcepos=\"112:1-113:115\"><a href=\"https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf\" rel=\"nofollow noopener\" target=\"_blank\">平成 30 年度我が国におけるデータ駆動型社会に係る基盤整備（IT 人材等育成支援のための調査分析事業）－ IT 人材需給に関する調査 －<br>\n調査報告書 : みずほ情報総研株式会社</a></p>\n<p data-sourcepos=\"115:1-115:128\">2021年時点で、ITエンジニアが120万人しかいないのに80万人が不足するとはものすごい数字です。</p>\n<p data-sourcepos=\"117:1-117:183\">これは、『従来型IT』から『先端IT』に業務内容が変化していくため、『先端IT』の業務を行える人が不足するという趣旨のようでした。</p>\n<p data-sourcepos=\"119:1-119:432\">シンプルに数字だけ見ると、4割相当の人員を新たに調達するのは少子高齢化社会的でなくても難しい様に感じます。今いる人間すべてが4割程度生産力を高める必要があると考えるとまぁまぁしっくりきますが、4割給料が上がるのかというとそうでもないのだろうなというのも見え隠れしていてなかなか難しい問題です。</p>\n<h2 data-sourcepos=\"121:1-121:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"123:1-123:78\">今見えている危険（？）をざっくり書き出してみました。</p>\n<p data-sourcepos=\"125:1-125:273\">そこから導き出される（？）個人的な生存戦略としては、お客様やメンバーと連携できるコミュニケーション能力を身に着けて、要件定義から実装までこなせるようになるのがよいのかなと思いました。</p>\n<p data-sourcepos=\"127:1-127:280\">『先端IT』で必要なスキルは業務時間中には学べず、独学でやれる範囲にも限りがありますが、『従来型IT』の業務に含まれることは業務時間中に会社のメンバーと共に学べる可能性が高いと考えるからです。</p>\n<p data-sourcepos=\"129:1-129:183\">漠然とした不安に対処しようとすることはとても困難です。日々情報を収集し、将来に備える努力をすることが重要かと思っています。</p>\n<h2 data-sourcepos=\"131:1-131:15\">\n<span id=\"おまけ０\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%90\"><i class=\"fa fa-link\"></i></a>おまけ０</h2>\n<p data-sourcepos=\"133:1-133:50\"><iframe id=\"qiita-embed-content__f81c8d009fac400b11eb912b688db9a9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f81c8d009fac400b11eb912b688db9a9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F37a43cfa143361f50315\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"135:1-135:50\"><iframe id=\"qiita-embed-content__578d0df9ee82ac3eabbd762eb4b4dfff\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__578d0df9ee82ac3eabbd762eb4b4dfff\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb158d0e68ec69ac3140\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"137:1-137:50\"><iframe id=\"qiita-embed-content__79c8e1f3df35421f7720ffb009d23ce1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__79c8e1f3df35421f7720ffb009d23ce1\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F1000774f223dfc3ae383\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"139:1-139:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"141:1-141:50\"><iframe id=\"qiita-embed-content__ff619a9227c2eae6bf9f95723ac1dd81\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ff619a9227c2eae6bf9f95723ac1dd81\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"143:1-143:50\"><iframe id=\"qiita-embed-content__a857a617dda93cfbb767501e2135caaa\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a857a617dda93cfbb767501e2135caaa\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"145:1-145:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"147:1-147:50\"><iframe id=\"qiita-embed-content__ee565873152af51bcfb2bfc6ec5b8981\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ee565873152af51bcfb2bfc6ec5b8981\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"149:1-149:50\"><iframe id=\"qiita-embed-content__1f151c06425813652a0b4c83b72852bd\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1f151c06425813652a0b4c83b72852bd\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"151:1-151:50\"><iframe id=\"qiita-embed-content__57310f7a68e9a62ec1b501af068d7995\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__57310f7a68e9a62ec1b501af068d7995\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"153:1-153:50\"><iframe id=\"qiita-embed-content__1ffeb4b3405aa5d06106abec30645da6\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1ffeb4b3405aa5d06106abec30645da6\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"155:1-155:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"157:1-157:50\"><iframe id=\"qiita-embed-content__704d93b6dfa2032b1fb6a3364e94c06a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__704d93b6dfa2032b1fb6a3364e94c06a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"159:1-159:50\"><iframe id=\"qiita-embed-content__551c9001b2c7ce2047bb0253ab2d6529\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__551c9001b2c7ce2047bb0253ab2d6529\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"161:1-161:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"163:1-163:50\"><iframe id=\"qiita-embed-content__9997d1c11b542b9187ed5f2e399d5706\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9997d1c11b542b9187ed5f2e399d5706\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"165:1-165:50\"><iframe id=\"qiita-embed-content__55bdc2d1aaf53dd62889a6cfbb86b4e1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__55bdc2d1aaf53dd62889a6cfbb86b4e1\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"167:1-167:50\"><iframe id=\"qiita-embed-content__f57ed55f4314b9063ea4eecc20b99039\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f57ed55f4314b9063ea4eecc20b99039\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"169:1-169:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"171:1-171:50\"><iframe id=\"qiita-embed-content__0a48ddc66d5e2393ed3f2f3b896d1c4e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__0a48ddc66d5e2393ed3f2f3b896d1c4e\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"173:1-173:50\"><iframe id=\"qiita-embed-content__9dd7184ec5e70d458d459700b967f475\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9dd7184ec5e70d458d459700b967f475\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"175:1-175:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"177:1-178:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"180:1-180:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"183:7-183:288\">せっかく集めたデータは、すべて利用したくなりがちですが、仮説に対して有効ではないデータについて書くと相手に本当に伝えたいことを伝えられなくなるので横に置いておくのがよいかなと思っています。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"185:7-185:141\">テスターや維持管理のメンバー、新人ゼロ円みたいなローカルルールは含まれていないようでした。 <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\n新社会人の皆さんもそうでない皆さんもこんにちは。\nこの記事を読む方々は将来に漠然とした不安を抱えている方かと思いますが、いかがでしょうか？**わたしは抱えています。**\n\nこのエントリーでは、そんな不安を払拭するための生存戦略を考えます。\n\n考察に利用するデータは政府が公開している信用できるデータを利用していますが、わたしの個人的考察については必ずしも正しいとは限りませんがそのつもりで読んでいただければと思います。\n\n## まずは情報収集\n\n戦略を考えるには現在の状況についての情報をできるだけ多く集める必要があります。情報が足りていない状況で何かを判断するのは大変危険です。例えば最近は見かけない広告で **『フルリモート週３日出社副業で８０万円収入』** といったものがありましたが、情報がなければ、それがどのような性質のものかを判断することもできないかと思います。\n\n最近ではWebでググったり、ChatGPTに質問したりしてなんらかの見解を得ることもできますが、未来予測をするためには長期的な推移のデータを眺めるのがよいのではないかなと思っています。\n\n今回は、わたし達が今置かれている状況を把握したいので、政府の統計データを色々見てみることにします。\n\n- [e-Stat : 統計で見る日本](https://www.e-stat.go.jp/)\n- [経済産業省 : 統計](https://www.meti.go.jp/statistics/index.html)\n- [総務省 : ICTの経済分析に関する調査](https://www.soumu.go.jp/johotsusintokei/link/link03_03.html)\n\n自分の仮説をプレゼンする際にも、信頼できるデータ（エビデンス）が存在していると説得力が高まると思いますので情報収集をする習慣をつけるのは良いことかと思います。\n\n## 漠然と課題認識\n\nヒット作を飛ばして億万長者（死語？）になりたいのか、定年まで波風立てずに植物の心のような人生を送りたいのかで、解決すべき課題は異なると思います。\n今回は後者の課題解決を目指すことにして、以下のようなデータを収集しグラフ化しました。\n\n- [e-Stat : 労働力調査 / 基本集計　全都道府県 長期時系列データ : 年齢階級（5歳階級）別労働力人口及び労働力人口比率](https://www.e-stat.go.jp/stat-search/files?page=1&query=%E5%8A%B4%E5%83%8D%E5%8A%9B%E8%AA%BF%E6%9F%BB%20%2F%20%E5%9F%BA%E6%9C%AC%E9%9B%86%E8%A8%88%E3%80%80%E5%85%A8%E9%83%BD%E9%81%93%E5%BA%9C%E7%9C%8C%20%E9%95%B7%E6%9C%9F%E6%99%82%E7%B3%BB%E5%88%97%E3%83%87%E3%83%BC%E3%82%BF&layout=dataset)\n- [総務省 : トップページ > 関係情報 > 調査研究報告書（毎年継続している調査） > ICTの経済分析に関する調査](https://www.soumu.go.jp/johotsusintokei/link/link03_03.html)\n    - 1ＩＴ投資（日本）\n    - 2ＩＴ投資（米国）\n    - 9雇用（日本）\n- [総務省（2022）「令和3年度　ICTの経済分析に関する調査」：図表3-1-3-1　我が国の情報化投資の推移](https://www.soumu.go.jp/johotsusintokei/whitepaper/ja/r04/html/nd231300.html)\n\n作成したグラフは以下のようなものになります。\n\n- 生産年齢人口の推移\n![生産年齢人口の推移.gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6160999e-17b8-08ec-2ac8-5f607b65b6df.gif)\n\n- 媒体別広告費\n![媒体別広告費.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6410dda8-4228-f2a3-81ce-19cd64c41227.png)\n\n※以下のサイトに実際のグラフも置いておきました。\n[統計グラフ一覧](https://kaku3.github.io/workbooks/%E7%B5%B1%E8%A8%88%E3%82%B0%E3%83%A9%E3%83%95.html)\n\n元々資料でグラフも提供されているのですが、円グラフで推移をアニメーション表示するなどすると状況がより理解できるだろうと考えて再作成しています。\n[Chart.js](https://www.chartjs.org/) を利用すると簡単にきれいなアニメーショングラフを作成できて便利ですね。\n\n媒体広告費のグラフは『インターネットつよい』という見方ではなく **『実際には国内で流れていたお金がアップルやグーグルに流れた』** という見方をするとかなり深刻な事態であることが読み取れますが、今回の考察には含めないことにします。[^1]\n\n## 着眼点と仮説\n\nここから先に進む前に、一旦 [『統計グラフ一覧』](https://kaku3.github.io/workbooks/%E7%B5%B1%E8%A8%88%E3%82%B0%E3%83%A9%E3%83%95.html) を見て、**なんでもいいので**何かを読み取ってみて **『なんらかの仮説』** を立ててみてください。\n\nこの先はわたしの考察が続きますが、『他人と同じものを見て、より多くのものを読み取って、より生存率が高まるであろう判断をして行動する』ということの積み重ねが生存率を上げることになると思います。\n\nひょっとしたら、わたしが野垂れているけれども、読んでいる皆さんが生存しているという未来もあるかもしれません。\n\n### 着眼点：人口推移\n\n『少子高齢化社会』という単語を聞くと、子供と高齢者の問題の様に聞こえるのですが、実は会社にいる人全員が均等に年をとることで社会集団の性質が変わることがないかに着目してみました。\n\n### 着眼点：IT投資額の推移\n\n人月単価や昇給について何か読み取れることがないかと、IT投資額の推移と総額に着目してみました。\n\n### 仮説を立てるにあたって\n\n以下のようなことをぼんやり考えながらグラフを眺めました。\n\n- なんとなく管理者不足を感じる。人口構成の問題？\n- 年齢相応に昇給したい\n- 昇給するためには人月単価の上昇が不可欠\n    - 上昇させる方法は？\n    - 外貨稼げる？\n\n現状の把握や未来についての仮説は立ちましたでしょうか？\n\n## 『これから皆さんには、お金を奪い合ってもらいます』\n\n突然どこかで見たようなデスゲームのようなアオリですが、人月単価を上昇させる方法について考えるとそのような考えが頭をよぎります。\n\nまずは、JUASの以下資料で人月単価の相場を確認しておきましょう。\n\n![人月単価.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e7e5ab15-ec16-a2f3-d9db-92cd3356f594.png)\n\n([出典 : IT価格相場運営プロジェクト 研究成果報告書 2章 FP単価の算出 3. 人件費単価の計算（1/3）](https://juas.or.jp/cms/media/2021/05/20_it-investment_2.pdf))\n\n企業規模・役割・地域によって単価が異なるようですが、**66.8万円 ~ 158万円** といった単価になるようでした。[^2]\n\nさてここで、IT投資額の推移と、IT従事者の人口から、ざっくり一人当たりの人月を求めてみましょう。\n\n2021年時点で、ソフトウェアに対する投資は、9兆円程度、IT従事者は120万人程度でした。\n単純に割り算して、なおかつ 12 で割ると一人当たりの人月単価が求まりそうです。\n\n9,000,000,000,000 / 1,200,000 = 7,500,000 [円]\n7,500,000 / 12 = 625,000 [円/人月]\n\nIT予算をIT従事者の人数で均等割したところ、**62万5千円** となりました。\n\nこの計算には、サーバーの維持管理等、ハードウェアの費用は含まれていません。また、営業費等の経費等も含まれていません。\n\n4割位を会社に持っていかれるとすると **37.5万[円/月] (450万[円/年])** が手元に残る計算になるでしょうか？\n\n2011年から2021年にかけて予算が7兆円から9兆円まで上がっているので、向こう10年で同程度の成長をするならば、10年間で 100万円程度年収が上がることは期待できますが、誰かが年収1,000万円を達成しようと思うと、他の誰かの年収を平均値より下げる必要がありそうということが推察されます。\n\n## 2030年に最大80万人不足するITエンジニア\n\n一部で噂になっている ~~怪~~文書があります。\n\n[平成 30 年度我が国におけるデータ駆動型社会に係る基盤整備（IT 人材等育成支援のための調査分析事業）－ IT 人材需給に関する調査 －\n調査報告書 : みずほ情報総研株式会社](https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf)\n\n2021年時点で、ITエンジニアが120万人しかいないのに80万人が不足するとはものすごい数字です。\n\nこれは、『従来型IT』から『先端IT』に業務内容が変化していくため、『先端IT』の業務を行える人が不足するという趣旨のようでした。\n\nシンプルに数字だけ見ると、4割相当の人員を新たに調達するのは少子高齢化社会的でなくても難しい様に感じます。今いる人間すべてが4割程度生産力を高める必要があると考えるとまぁまぁしっくりきますが、4割給料が上がるのかというとそうでもないのだろうなというのも見え隠れしていてなかなか難しい問題です。\n\n## おわりに\n\n今見えている危険（？）をざっくり書き出してみました。\n\nそこから導き出される（？）個人的な生存戦略としては、お客様やメンバーと連携できるコミュニケーション能力を身に着けて、要件定義から実装までこなせるようになるのがよいのかなと思いました。\n\n『先端IT』で必要なスキルは業務時間中には学べず、独学でやれる範囲にも限りがありますが、『従来型IT』の業務に含まれることは業務時間中に会社のメンバーと共に学べる可能性が高いと考えるからです。\n\n漠然とした不安に対処しようとすることはとても困難です。日々情報を収集し、将来に備える努力をすることが重要かと思っています。\n\n## おまけ０\n\nhttps://qiita.com/kaku3/items/37a43cfa143361f50315\n\nhttps://qiita.com/kaku3/items/fb158d0e68ec69ac3140\n\nhttps://qiita.com/kaku3/items/1000774f223dfc3ae383\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n\n[^1]: せっかく集めたデータは、すべて利用したくなりがちですが、仮説に対して有効ではないデータについて書くと相手に本当に伝えたいことを伝えられなくなるので横に置いておくのがよいかなと思っています。\n\n[^2]: テスターや維持管理のメンバー、新人ゼロ円みたいなローカルルールは含まれていないようでした。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2024-04-01T01:03:26+09:00",
    "group": null,
    "id": "f3dd9920b1dd29550ac0",
    "likes_count": 259,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 277,
    "tags": [
      {
        "name": "初心者",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      }
    ],
    "title": "エンジニア生存戦略2024",
    "updated_at": "2024-05-18T14:50:33+09:00",
    "url": "https://qiita.com/kaku3/items/f3dd9920b1dd29550ac0",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 53017,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:18\">こんにちは。</p>\n<p data-sourcepos=\"5:1-5:123\">こんな↓記事を書くぐらいコミュニケーションを最小にしたいプレイングマネージャです。</p>\n<p data-sourcepos=\"7:1-7:50\"><iframe id=\"qiita-embed-content__053ddc33eea3b2f72e13b6cb3e50586a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__053ddc33eea3b2f72e13b6cb3e50586a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2a91956cbbc489108875\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"9:1-9:222\">元々は最低限のコミュニケーションすら取れていなかった人間なのですが、どうやって取れるようになったんだろうと、ちょっと記憶を辿ってみようかと思います。</p>\n<h2 data-sourcepos=\"11:1-11:78\">\n<span id=\"聞くは一時の恥聞かぬは一生の恥とは言うものの\" class=\"fragment\"></span><a href=\"#%E8%81%9E%E3%81%8F%E3%81%AF%E4%B8%80%E6%99%82%E3%81%AE%E6%81%A5%E8%81%9E%E3%81%8B%E3%81%AC%E3%81%AF%E4%B8%80%E7%94%9F%E3%81%AE%E6%81%A5%E3%81%A8%E3%81%AF%E8%A8%80%E3%81%86%E3%82%82%E3%81%AE%E3%81%AE\"><i class=\"fa fa-link\"></i></a>『聞くは一時の恥聞かぬは一生の恥』とは言うものの…</h2>\n<p data-sourcepos=\"13:1-13:57\">なんとなく人に質問するのが苦手でした。</p>\n<p data-sourcepos=\"15:1-15:208\">ありがたいコトワザを聞いたり、啓蒙本やハウツー本を読んで質問ができるようになれば簡単ですが、人間はそんなに便利にできていないようでした。<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup></p>\n<p data-sourcepos=\"17:1-17:144\">わたしの場合は、『聞くタイミングが分からない』、『聞くのが恥ずかしい』といった課題がありました。</p>\n<p data-sourcepos=\"19:1-20:183\">『聞くタイミングが分からない』問題は、「設計者と開発者は、<strong>当然</strong>と考えるものが違う」ことに起因していたかと思います。<br>\n設計者はAのつもりで書いたけど、開発者はBのつもりで実装してしまうが、<strong>お互いに当然と考えている</strong>ため質問や確認を行いません。</p>\n<p data-sourcepos=\"22:1-23:342\">設計者は身の回りにあるソフトウェアが持っている機能は実装されると考え、開発者は一番シンプルに実装できる方法で実装をすると考えがちです。<br>\n開発者の仕事は設計通りに実装することですが、見積もりを超える実装にはできません。シンプルな実装でよいのか、追加費用が発生するが追加の実装をするのかをうまく確認する必要がありますが、どのような確認結果が返ってくるかは分かりません。</p>\n<p data-sourcepos=\"25:1-25:183\">『聞くタイミングが分からない』、『聞くのが恥ずかしい』問題を合わせて『未知や不確実性への恐怖』問題として掘り下げてみます。</p>\n<h2 data-sourcepos=\"27:1-27:48\">\n<span id=\"未知や不確実性への恐怖問題\" class=\"fragment\"></span><a href=\"#%E6%9C%AA%E7%9F%A5%E3%82%84%E4%B8%8D%E7%A2%BA%E5%AE%9F%E6%80%A7%E3%81%B8%E3%81%AE%E6%81%90%E6%80%96%E5%95%8F%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>『未知や不確実性への恐怖』問題</h2>\n<p data-sourcepos=\"29:1-29:97\">例えば、誰かに新たにバンジージャンプをやらせることを考えます。<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup></p>\n<p data-sourcepos=\"31:1-32:96\">バンジージャンプをやったら新たな体験は得られますが、怖いし、やらなくても困らないです。<br>\nこの人にバンジージャンプをやらせるにはどうしたらいいでしょうか？</p>\n<ul data-sourcepos=\"34:1-42:0\">\n<li data-sourcepos=\"34:1-38:0\">\n<p data-sourcepos=\"34:3-37:223\">バンジージャンプの素晴らしさを説く？<br>\n「素晴らしい」 &gt;&gt;&gt;&gt; 「怖い、やらなくても困らない」と思える程度に説得できれば気持ちが動くかもしれませんが、相手が未経験のコトの素晴らしさを体験する様に促す様に伝えるのはかなり難易度が高そうです。<br>\n相手に体験を促すためには「分からない人に分かる」様にプレゼンするスキルが必要だからです。<br>\n例えば、『AC6というゲームはストーリーが染みるしアセンブルが面白い』という文章は、分かる人にしか分からない、説得の役に立たない文章と言えるでしょう。<sup><a href=\"#fn-3\" id=\"fnref-3\">3</a></sup></p>\n</li>\n<li data-sourcepos=\"39:1-42:0\">\n<p data-sourcepos=\"39:3-41:198\">怖さを取り除く？<br>\n人は未知に対して恐怖を抱く様にできている、という心理学的な研究がなされているようです。<br>\n自分の経験を元に「意外と怖くなかった！」というのは、体験した結果に対する感想なので、「未知への恐怖」の説得の材料にはならなそうです。</p>\n</li>\n</ul>\n<p data-sourcepos=\"43:1-43:85\">考察を深めるために、GPT先生にも聞いてみることにします。<sup><a href=\"#fn-4\" id=\"fnref-4\">4</a></sup></p>\n<p data-sourcepos=\"45:1-45:9\">(ChatGPT)</p>\n<blockquote data-sourcepos=\"46:1-58:251\">\n<p data-sourcepos=\"46:3-46:218\">未知や不確実性に対する恐怖心を軽減するためには、以下の方法が役立つかもしれません。ただし、個人差や状況により効果が異なることに注意してください。</p>\n<ol data-sourcepos=\"48:3-57:2\">\n<li data-sourcepos=\"48:3-49:2\">\n<p data-sourcepos=\"48:6-48:290\"><strong>知識の獲得:</strong> 不確実性や未知に対する恐怖は、理解不足から生じることがあります。関連する情報や知識を獲得することで、状況を理解しやすくなり、不確実性に対する恐怖感が軽減される可能性があります。</p>\n</li>\n<li data-sourcepos=\"50:3-51:2\">\n<p data-sourcepos=\"50:6-50:278\"><strong>新しい経験の積み重ね:</strong> 新しい経験を通じて、未知や不確実性に対する抵抗力をつけることができます。新しい状況や挑戦に積極的に取り組んでみることで、徐々に恐怖感が減少するかもしれません。</p>\n</li>\n<li data-sourcepos=\"52:3-53:2\">\n<p data-sourcepos=\"52:6-52:350\"><strong>マインドフルネスやリラクゼーション技法の実践:</strong> マインドフルネスや深呼吸、瞑想などのリラクゼーション技法を実践することで、不安や恐怖感を軽減させることができます。これらの技法は心を落ち着かせ、冷静に物事を受け入れるのに役立ちます。</p>\n</li>\n<li data-sourcepos=\"54:3-55:2\">\n<p data-sourcepos=\"54:6-54:329\"><strong>自己認識と向き合い方の見直し:</strong> 自分の価値観や信念を再評価し、未知に対する恐怖がどのようにして生まれるかを理解することが重要です。自分と向き合い、ポジティブな自己評価を促進することで、恐怖感を和らげることができます。</p>\n</li>\n<li data-sourcepos=\"56:3-57:2\">\n<p data-sourcepos=\"56:6-56:239\"><strong>専門家の協力:</strong> 必要であれば、心理療法やカウンセリングを受けることが有益です。専門家との対話を通じて、不安や恐怖に対処するスキルを向上させることができます。</p>\n</li>\n</ol>\n<p data-sourcepos=\"58:3-58:251\">これらの方法は一般的なアプローチですが、具体的な状況や個人の状態によっては、効果が異なる可能性があります。個々のケースに合わせて適切な対処法を見つけることが大切です。</p>\n</blockquote>\n<p data-sourcepos=\"60:1-61:215\">専門家はお金がかかりそうなので <code>5.</code> は除外しましょう。<br>\n<code>3.</code> や <code>4.</code> は自己解決の手段で他者の説得には使えないので除外となりますが、自分の課題を解決する時には役に立ちそうなので覚えておくことにしましょう。</p>\n<p data-sourcepos=\"63:1-63:162\">残るは、<code>1.</code>と<code>2.</code>ですが、<code>1.</code> は素晴らしさを語る路線、<code>2.</code> はとりあえずやってしまえ路線といったところでしょうか。</p>\n<h2 data-sourcepos=\"65:1-65:24\">\n<span id=\"やらないと困る\" class=\"fragment\"></span><a href=\"#%E3%82%84%E3%82%89%E3%81%AA%E3%81%84%E3%81%A8%E5%9B%B0%E3%82%8B\"><i class=\"fa fa-link\"></i></a>やらないと困る</h2>\n<p data-sourcepos=\"67:1-68:114\">ここらでようやくタイトル回収となりますが、やらないと「コラ」って言われる状況を作れたらどうでしょうか。<br>\nすなわち、「やらないと困る」状況を人工的に作れたらやれるのかという考察です。</p>\n<p data-sourcepos=\"70:1-70:337\">「コラ」って言われるのがイヤというネガティブな理由でも、一度でも実践してもらえたら、<code>2.</code> のとりあえずやってしまえ路線での新しい経験を積み重ねることもできますし、実際に体験することで、<code>1.</code> の知識の獲得も達成できることになります。</p>\n<h2 data-sourcepos=\"72:1-72:54\">\n<span id=\"他社からのコラと自社のコラ\" class=\"fragment\"></span><a href=\"#%E4%BB%96%E7%A4%BE%E3%81%8B%E3%82%89%E3%81%AE%E3%82%B3%E3%83%A9%E3%81%A8%E8%87%AA%E7%A4%BE%E3%81%AE%E3%82%B3%E3%83%A9\"><i class=\"fa fa-link\"></i></a>他社からの「コラ」と自社の「コラ」</h2>\n<p data-sourcepos=\"74:1-74:288\">わたしの場合は、質問や確認を怠った結果「思ってたんとちゃう空中戦」をお客様と繰り広げる結果になってだいぶ大変な思いをしまして、「これは聞かないとダメなこと」とかを図らずも学ぶこととなりました。</p>\n<p data-sourcepos=\"76:1-76:141\">一方で、現代は失敗に不寛容なので、若い頃からお客様と直接やり取りする機会が少なくなりがちです。</p>\n<p data-sourcepos=\"78:1-78:336\">という環境下では、若手が <strong>『未知や不確実性への恐怖』を含む課題に対してアクションしていない場合には</strong> 、上司やメンターが「コラ」って言って大変な思いをさせないと、代わりになる学びの機会が発生しないことになることが懸念されます。</p>\n<p data-sourcepos=\"80:1-80:255\">ただ、お金で契約している他社のメンバーと、同じチーム内の自社のメンバーでは関係性が違うため、自社内で同じ体験は作れないですし、他人に「コラ」って言うのはそもそも大変です。</p>\n<h2 data-sourcepos=\"82:1-82:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"84:1-85:216\">昭和の頃だと無差別にコラって言う人はたくさんいたと思うのですが、最近では心理的安全性に重きが置かれたりしてあまり見かけない様に思います。<sup><a href=\"#fn-5\" id=\"fnref-5\">5</a></sup><br>\n平和になったのはよいことなのですが、業務上必要なスキルを身につけるための機会が減ってしまっているのであれば、それは困ったことだなあと思いました。</p>\n<h2 data-sourcepos=\"87:1-87:15\">\n<span id=\"おまけ０\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%90\"><i class=\"fa fa-link\"></i></a>おまけ０</h2>\n<p data-sourcepos=\"89:1-89:50\"><iframe id=\"qiita-embed-content__5a17e62b311f1173d982fa47d2a9f84a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__5a17e62b311f1173d982fa47d2a9f84a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F593eda66f272903df61e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"91:1-91:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"93:1-93:50\"><iframe id=\"qiita-embed-content__c6514071038b31f25128162eaf6e409c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c6514071038b31f25128162eaf6e409c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"95:1-95:50\"><iframe id=\"qiita-embed-content__eea7a0f2b18f2a19fd724bb8818f6f5e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__eea7a0f2b18f2a19fd724bb8818f6f5e\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"97:1-97:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"99:1-99:50\"><iframe id=\"qiita-embed-content__9cf5cf4530702c0dc62a7ce5383b1be0\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9cf5cf4530702c0dc62a7ce5383b1be0\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"101:1-101:50\"><iframe id=\"qiita-embed-content__0d24e7ac1e418d055d2300b9a4b9f18f\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__0d24e7ac1e418d055d2300b9a4b9f18f\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"103:1-103:50\"><iframe id=\"qiita-embed-content__e77318337b5d72b9a8bfa0f93e5dd574\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e77318337b5d72b9a8bfa0f93e5dd574\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"105:1-105:50\"><iframe id=\"qiita-embed-content__d064878d3dfdad316b7cfab1396d404a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__d064878d3dfdad316b7cfab1396d404a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"107:1-107:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"109:1-109:50\"><iframe id=\"qiita-embed-content__3cd9240f787ab6b90ef2ca1483b0a44c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__3cd9240f787ab6b90ef2ca1483b0a44c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"111:1-111:50\"><iframe id=\"qiita-embed-content__37a57cb55e642547b551d07bad912844\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__37a57cb55e642547b551d07bad912844\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"113:1-113:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"115:1-115:50\"><iframe id=\"qiita-embed-content__843e5f2cda7bac2c71668c8681c4ab8b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__843e5f2cda7bac2c71668c8681c4ab8b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"117:1-117:50\"><iframe id=\"qiita-embed-content__622c957b4596a4ebc104c70a89816f70\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__622c957b4596a4ebc104c70a89816f70\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"119:1-119:50\"><iframe id=\"qiita-embed-content__22253f51fe4df4229954c0f30f0dacca\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__22253f51fe4df4229954c0f30f0dacca\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"121:1-121:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"123:1-123:50\"><iframe id=\"qiita-embed-content__b0d0efb2655693d48161d836b1b8134b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b0d0efb2655693d48161d836b1b8134b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"125:1-125:50\"><iframe id=\"qiita-embed-content__a8db78a474168a8255687257a57d8026\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a8db78a474168a8255687257a57d8026\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"127:1-127:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"129:1-130:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"132:1-132:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"134:7-134:147\">即効性が期待できることは少ないけれども、たくさん読むと突然何かに目覚めることはあると思います。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"135:7-135:66\">バンジージャンプをやったことはないです。 <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-3\">\n<p data-sourcepos=\"136:7-136:84\">ルビコプター倒して満足してやめました。ごめんなさい。 <a href=\"#fnref-3\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-4\">\n<p data-sourcepos=\"137:7-137:135\">こういう時に自分の頭で考えないことで、脳の重要な機能が失われる気もしないでもないです。 <a href=\"#fnref-4\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-5\">\n<p data-sourcepos=\"138:7-138:72\">無差別のコラは効果が薄かった様にも思います。 <a href=\"#fnref-5\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\nこんにちは。\n\nこんな↓記事を書くぐらいコミュニケーションを最小にしたいプレイングマネージャです。\n\nhttps://qiita.com/kaku3/items/2a91956cbbc489108875\n\n元々は最低限のコミュニケーションすら取れていなかった人間なのですが、どうやって取れるようになったんだろうと、ちょっと記憶を辿ってみようかと思います。\n\n## 『聞くは一時の恥聞かぬは一生の恥』とは言うものの…\n\nなんとなく人に質問するのが苦手でした。\n\nありがたいコトワザを聞いたり、啓蒙本やハウツー本を読んで質問ができるようになれば簡単ですが、人間はそんなに便利にできていないようでした。[^1]\n\nわたしの場合は、『聞くタイミングが分からない』、『聞くのが恥ずかしい』といった課題がありました。\n\n『聞くタイミングが分からない』問題は、「設計者と開発者は、**当然**と考えるものが違う」ことに起因していたかと思います。\n設計者はAのつもりで書いたけど、開発者はBのつもりで実装してしまうが、**お互いに当然と考えている**ため質問や確認を行いません。\n\n設計者は身の回りにあるソフトウェアが持っている機能は実装されると考え、開発者は一番シンプルに実装できる方法で実装をすると考えがちです。\n開発者の仕事は設計通りに実装することですが、見積もりを超える実装にはできません。シンプルな実装でよいのか、追加費用が発生するが追加の実装をするのかをうまく確認する必要がありますが、どのような確認結果が返ってくるかは分かりません。\n\n『聞くタイミングが分からない』、『聞くのが恥ずかしい』問題を合わせて『未知や不確実性への恐怖』問題として掘り下げてみます。\n\n## 『未知や不確実性への恐怖』問題\n\n例えば、誰かに新たにバンジージャンプをやらせることを考えます。[^2]\n\nバンジージャンプをやったら新たな体験は得られますが、怖いし、やらなくても困らないです。\nこの人にバンジージャンプをやらせるにはどうしたらいいでしょうか？\n\n- バンジージャンプの素晴らしさを説く？\n「素晴らしい」 >>>> 「怖い、やらなくても困らない」と思える程度に説得できれば気持ちが動くかもしれませんが、相手が未経験のコトの素晴らしさを体験する様に促す様に伝えるのはかなり難易度が高そうです。\n相手に体験を促すためには「分からない人に分かる」様にプレゼンするスキルが必要だからです。\n例えば、『AC6というゲームはストーリーが染みるしアセンブルが面白い』という文章は、分かる人にしか分からない、説得の役に立たない文章と言えるでしょう。[^3]\n\n- 怖さを取り除く？\n人は未知に対して恐怖を抱く様にできている、という心理学的な研究がなされているようです。\n自分の経験を元に「意外と怖くなかった！」というのは、体験した結果に対する感想なので、「未知への恐怖」の説得の材料にはならなそうです。\n\n考察を深めるために、GPT先生にも聞いてみることにします。[^4]\n\n(ChatGPT)\n> 未知や不確実性に対する恐怖心を軽減するためには、以下の方法が役立つかもしれません。ただし、個人差や状況により効果が異なることに注意してください。\n> \n> 1. **知識の獲得:** 不確実性や未知に対する恐怖は、理解不足から生じることがあります。関連する情報や知識を獲得することで、状況を理解しやすくなり、不確実性に対する恐怖感が軽減される可能性があります。\n> \n> 2. **新しい経験の積み重ね:** 新しい経験を通じて、未知や不確実性に対する抵抗力をつけることができます。新しい状況や挑戦に積極的に取り組んでみることで、徐々に恐怖感が減少するかもしれません。\n> \n> 3. **マインドフルネスやリラクゼーション技法の実践:** マインドフルネスや深呼吸、瞑想などのリラクゼーション技法を実践することで、不安や恐怖感を軽減させることができます。これらの技法は心を落ち着かせ、冷静に物事を受け入れるのに役立ちます。\n> \n> 4. **自己認識と向き合い方の見直し:** 自分の価値観や信念を再評価し、未知に対する恐怖がどのようにして生まれるかを理解することが重要です。自分と向き合い、ポジティブな自己評価を促進することで、恐怖感を和らげることができます。\n> \n> 5. **専門家の協力:** 必要であれば、心理療法やカウンセリングを受けることが有益です。専門家との対話を通じて、不安や恐怖に対処するスキルを向上させることができます。\n> \n> これらの方法は一般的なアプローチですが、具体的な状況や個人の状態によっては、効果が異なる可能性があります。個々のケースに合わせて適切な対処法を見つけることが大切です。\n\n専門家はお金がかかりそうなので `5.` は除外しましょう。\n`3.` や `4.` は自己解決の手段で他者の説得には使えないので除外となりますが、自分の課題を解決する時には役に立ちそうなので覚えておくことにしましょう。\n\n残るは、`1.`と`2.`ですが、`1.` は素晴らしさを語る路線、`2.` はとりあえずやってしまえ路線といったところでしょうか。\n\n## やらないと困る\n\nここらでようやくタイトル回収となりますが、やらないと「コラ」って言われる状況を作れたらどうでしょうか。\nすなわち、「やらないと困る」状況を人工的に作れたらやれるのかという考察です。\n\n「コラ」って言われるのがイヤというネガティブな理由でも、一度でも実践してもらえたら、`2.` のとりあえずやってしまえ路線での新しい経験を積み重ねることもできますし、実際に体験することで、`1.` の知識の獲得も達成できることになります。\n\n## 他社からの「コラ」と自社の「コラ」\n\nわたしの場合は、質問や確認を怠った結果「思ってたんとちゃう空中戦」をお客様と繰り広げる結果になってだいぶ大変な思いをしまして、「これは聞かないとダメなこと」とかを図らずも学ぶこととなりました。\n\n一方で、現代は失敗に不寛容なので、若い頃からお客様と直接やり取りする機会が少なくなりがちです。\n\nという環境下では、若手が **『未知や不確実性への恐怖』を含む課題に対してアクションしていない場合には** 、上司やメンターが「コラ」って言って大変な思いをさせないと、代わりになる学びの機会が発生しないことになることが懸念されます。\n\nただ、お金で契約している他社のメンバーと、同じチーム内の自社のメンバーでは関係性が違うため、自社内で同じ体験は作れないですし、他人に「コラ」って言うのはそもそも大変です。\n\n## おわりに\n\n昭和の頃だと無差別にコラって言う人はたくさんいたと思うのですが、最近では心理的安全性に重きが置かれたりしてあまり見かけない様に思います。[^5]\n平和になったのはよいことなのですが、業務上必要なスキルを身につけるための機会が減ってしまっているのであれば、それは困ったことだなあと思いました。\n\n## おまけ０\n\nhttps://qiita.com/kaku3/items/593eda66f272903df61e\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n[^1]: 即効性が期待できることは少ないけれども、たくさん読むと突然何かに目覚めることはあると思います。\n[^2]: バンジージャンプをやったことはないです。\n[^3]: ルビコプター倒して満足してやめました。ごめんなさい。\n[^4]: こういう時に自分の頭で考えないことで、脳の重要な機能が失われる気もしないでもないです。\n[^5]: 無差別のコラは効果が薄かった様にも思います。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2024-01-20T19:10:16+09:00",
    "group": null,
    "id": "9e8f3880f71c3d91bc6f",
    "likes_count": 4,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 5,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "教育",
        "versions": []
      },
      {
        "name": "コミュニケーション",
        "versions": []
      }
    ],
    "title": "コラって言う人は必要？",
    "updated_at": "2024-01-20T19:44:38+09:00",
    "url": "https://qiita.com/kaku3/items/9e8f3880f71c3d91bc6f",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 3383,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:251\">こんにちは。元ガチプログラマーのプレイングマネージャです。<br>\nできれば、プログラムをカタカタ打ってPC画面に向かって「いい感じのコードを書いちゃったなぁー」と独り言だけを言っていたい人間だったのですが、それだと仕事にならないなあと。</p>\n<p data-sourcepos=\"6:1-6:153\">ということで最小限のコミュニケーションで仕事をする方法について考えたことをまとめておきたいと思います。</p>\n<h2 data-sourcepos=\"8:1-8:39\">\n<span id=\"最小コミュニケーション術\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%B0%8F%E3%82%B3%E3%83%9F%E3%83%A5%E3%83%8B%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E8%A1%93\"><i class=\"fa fa-link\"></i></a>最小コミュニケーション術</h2>\n<p data-sourcepos=\"10:1-10:220\"><strong>『プロジェクトのゴールに対する』自分や相手の課題を解決できるようにコミュニケーションをとることが、コミュニケーションを最小にする方法と考えます。</strong></p>\n<p data-sourcepos=\"12:1-13:282\">相手の課題を解決するために自分となんらかの調整が必要なケースでは、相手の課題が解決するまではコミュニケーションが継続されますし、自分の課題についてもまたしかりです。<br>\n相手の質問の裏には、相手のプロジェクト上の課題が必ず存在します。相手の質問にそのまま答えても相手の課題が解決しなければ、さらなる質問をされ、最悪不毛なやり取りに発展することもありますよね？</p>\n<p data-sourcepos=\"15:1-15:311\"><strong>『プロジェクトのゴールに対する』自分や相手の課題</strong> を把握して、それを解決するためにどういった確認や相談や提案を行えばいいかを考えて実行することで、コミュニケーションの量を最小にすることができるかと思います。</p>\n<p data-sourcepos=\"17:1-17:45\">以下に少々長い考察を続けます。</p>\n<h2 data-sourcepos=\"19:1-19:27\">\n<span id=\"エンジニアの仕事\" class=\"fragment\"></span><a href=\"#%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E4%BB%95%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>エンジニアの仕事</h2>\n<p data-sourcepos=\"21:1-21:337\">給料が比較的よさそうに見えるからとなんとなくIT業界に就職した方が最初に知っておいた方がいいことは、<strong>「プログラムを書く仕事」</strong> ではなくて <strong>「まだ世の中にないモノを形にする仕事」</strong> だから給料が比較的よい、ということかと思います。</p>\n<p data-sourcepos=\"23:1-23:299\"><strong>『こんなモノを作ったら世の中がよくなるとか便利になるとか儲かるとかを考えているお金を持っている人や企業』</strong> が世の中には存在していて、そんな方々から依頼を頂いてモノを作ることで対価をいただく仕事です。</p>\n<p data-sourcepos=\"25:1-26:144\">売れるモノを作れれば、たくさんお金が儲かるから給料もたくさんもらえるという話ですね。<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup><br>\n※SESの場合は時給で労働力を提供しているだけなのでどんなに売れても直接給料には反映されなそうです。</p>\n<h2 data-sourcepos=\"28:1-28:42\">\n<span id=\"ゴールとコミュニケーション\" class=\"fragment\"></span><a href=\"#%E3%82%B4%E3%83%BC%E3%83%AB%E3%81%A8%E3%82%B3%E3%83%9F%E3%83%A5%E3%83%8B%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\"><i class=\"fa fa-link\"></i></a>ゴールとコミュニケーション</h2>\n<p data-sourcepos=\"30:1-30:194\"><strong>「まだ世の中にないモノ」</strong> というのは存在していないモノなので、発注側が作って欲しい内容を具体的に指示することはとても難しいです。</p>\n<p data-sourcepos=\"32:1-32:399\">一般的に発注側は業務知識を持っており、受注側は開発知識を持っていると思いますが、それぞれ自分が「普通」と思っていることは伝えないことが多いです。単純に量が膨大であることと、無意識で実行している事をわざわざ言語化して伝えるのがとても難しいことが理由として考えられます。</p>\n<p data-sourcepos=\"34:1-34:621\">そのような理由もあってか、知識の範囲が違う人からの指示や依頼には理解できない点が含まれることも多いです。全員が同じ知識を持っていたり、一人で要件定義から開発までできたりすればよいのかもしれませんが、そういうケースはあまり見かけません。多くのケースでは知識の範囲が違う人達が「こんなモノを作ってほしい」「そんなモノを作ればよいのですね」と <strong>相互理解を深めて合意をした内容をバケツリレーして</strong> ようやくモノが完成します。</p>\n<p data-sourcepos=\"36:1-36:480\">学生のアルバイトであれば、意味が分からない時には相手の指示が悪いと突っ返せるかもしれませんが、エンジニアの仕事は <strong>「まだ世の中にないモノを形にすることがゴール」</strong> なので突っ返したり、思い込みで作っていてはゴールに近づかず仕事になりません。ゴールに近づくために <strong>確認や相談といったコミュニケーション</strong> を取る必要があります。</p>\n<p data-sourcepos=\"38:1-39:175\">いちいち確認や相談をするのは面倒と感じるかもしれませんが、プロジェクトのゴールから見るといちいち確認するのが一番面倒くさくないです。<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup><br>\n<strong>確認を行わなかったり、思い込みで作った結果、依頼側の期待と異なるモノが出来ていた時の手戻りが最高に面倒くさいです。</strong></p>\n<h2 data-sourcepos=\"41:1-41:54\">\n<span id=\"確認や相談をしないと何が起きるの\" class=\"fragment\"></span><a href=\"#%E7%A2%BA%E8%AA%8D%E3%82%84%E7%9B%B8%E8%AB%87%E3%82%92%E3%81%97%E3%81%AA%E3%81%84%E3%81%A8%E4%BD%95%E3%81%8C%E8%B5%B7%E3%81%8D%E3%82%8B%E3%81%AE\"><i class=\"fa fa-link\"></i></a>確認や相談をしないと何が起きるの？</h2>\n<p data-sourcepos=\"43:1-43:84\">意図せずに時限爆弾を仕掛けることになる可能性があります。</p>\n<p data-sourcepos=\"45:1-46:81\">その場ではなく、プロジェクト後半で爆発したりします。<br>\nもっとひどいケースでは、リリース後に爆発したりします。</p>\n<p data-sourcepos=\"48:1-49:84\">発覚が遅れれば遅れる程爆発による被害は大きくなります。<br>\nまた、事態を収拾するチームを編成するのも難しくなります。</p>\n<h2 data-sourcepos=\"51:1-51:54\">\n<span id=\"確認や相談をすれば予定通り進むの\" class=\"fragment\"></span><a href=\"#%E7%A2%BA%E8%AA%8D%E3%82%84%E7%9B%B8%E8%AB%87%E3%82%92%E3%81%99%E3%82%8C%E3%81%B0%E4%BA%88%E5%AE%9A%E9%80%9A%E3%82%8A%E9%80%B2%E3%82%80%E3%81%AE\"><i class=\"fa fa-link\"></i></a>確認や相談をすれば予定通り進むの？</h2>\n<p data-sourcepos=\"53:1-53:81\">システム開発について、以下の様な調査結果が出ています。</p>\n<ul data-sourcepos=\"55:1-57:0\">\n<li data-sourcepos=\"55:1-55:54\">工期が予定通り完了する割合は 14% ~ 34%</li>\n<li data-sourcepos=\"56:1-57:0\">予算が予定通り完了する割合は 17% ~ 37%</li>\n</ul>\n<p data-sourcepos=\"58:1-58:78\">規模が大きいプロジェクト程予定通り進まないようです。</p>\n<p data-sourcepos=\"60:1-60:155\"><a href=\"https://camo.qiitausercontent.com/2590428284d0fac3b194a23378bc71e5379d01da/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f61643866323432322d663037392d616236622d356433352d3666346536343437316333612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fad8f2422-f079-ab6b-5d35-6f4e64471c3a.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b98a315849a22882433aa733964f6825\" alt=\"システム開発の工期遵守状況.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/ad8f2422-f079-ab6b-5d35-6f4e64471c3a.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fad8f2422-f079-ab6b-5d35-6f4e64471c3a.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=47b21d7bfc156845f365196e281f7be8 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"62:1-62:204\"><a href=\"https://juas.or.jp/cms/media/2022/04/JUAS_IT2022.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : 企業IT動向調査報告書 2022(図表 7-3-5 業種（製造業／非製造業）×売上高別 システム開発の工期遵守状況)</a></p>\n<p data-sourcepos=\"64:1-64:155\"><a href=\"https://camo.qiitausercontent.com/974681ecaec45545346c3bedcae4b7858f11bb40/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38343737353566332d616130392d653331372d613930652d3231636566386261626364612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F847755f3-aa09-e317-a90e-21cef8babcda.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=c693e6daaa11dda0b955b376f0778e53\" alt=\"システム開発の予算遵守状況.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/847755f3-aa09-e317-a90e-21cef8babcda.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F847755f3-aa09-e317-a90e-21cef8babcda.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b2bc52267781043b3d1664475c02be23 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"66:1-66:204\"><a href=\"https://juas.or.jp/cms/media/2022/04/JUAS_IT2022.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : 企業IT動向調査報告書 2022(図表 7-3-6 業種（製造業／非製造業）×売上高別 システム開発の予算遵守状況)</a></p>\n<p data-sourcepos=\"68:1-68:351\">今年は、こんなことをやって、このくらいの費用を投じて、このくらいのお金を儲けよう（またはこのくらいのコストを削減しよう）という計画が最初にあるため、プロジェクトに対するおよそのテーマ、リリース時期および予算がまず決定されると思います。</p>\n<p data-sourcepos=\"70:1-70:443\">ただ、テーマが決定されただけの <strong>「まだ世の中にないモノ」</strong> を作るプロジェクトの計画を立てるのは、エスパーか預言者ではない限りは難しいかと思います。<sup><a href=\"#fn-3\" id=\"fnref-3\">3</a></sup>類似のテーマのプロジェクト経験があれば可能かもしれませんが、それは「既に世の中にあるモノ」であるため大きくお金が儲かることはないかもしれません。<sup><a href=\"#fn-4\" id=\"fnref-4\">4</a></sup></p>\n<p data-sourcepos=\"72:1-73:488\">ここで <strong>「予定通り」</strong> という言葉に着目してみましょう。<br>\n「工期」と「予算」については予定通り完了したかは定量的に評価ができますが、<strong>「まだ世の中にないモノ」に対して、「思った通りできたのか？」を定量的に評価することはできません。</strong> 近い指標として「品質」がありますがちょっと違いますし、「売上」には広告宣伝やマーケティングなど営業的な要因も入ってきてしまうため評価には使えなそうです。</p>\n<p data-sourcepos=\"75:1-75:432\">とした場合、 <strong>プロジェクトのゴールから外れない範囲で</strong> 「工期」と「予算」を守れるように確認や相談を行うことで <strong>「予定通り」</strong> 進められる可能性を上げられないでしょうか？唯一の変数である <strong>「まだ世の中にないモノ」</strong> をどのような形にするかを走りながら決めるアジャイルという考え方もありますよね？</p>\n<h2 data-sourcepos=\"77:1-77:69\">\n<span id=\"最小コミュニケーション術確認や相談のしかた\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%B0%8F%E3%82%B3%E3%83%9F%E3%83%A5%E3%83%8B%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E8%A1%93%E7%A2%BA%E8%AA%8D%E3%82%84%E7%9B%B8%E8%AB%87%E3%81%AE%E3%81%97%E3%81%8B%E3%81%9F\"><i class=\"fa fa-link\"></i></a>最小コミュニケーション術：確認や相談のしかた</h2>\n<p data-sourcepos=\"79:1-80:96\">大前提として、プロジェクトのゴールを関係者全員が理解していること、それに向かって仕事を行うことが必要です。<br>\nその上で、関係者に対して等しく敬意を持って接することが大事です。</p>\n<ul data-sourcepos=\"82:1-85:0\">\n<li data-sourcepos=\"82:1-82:80\">開発者が案件ごとにすべての業務知識を持つことは難しい</li>\n<li data-sourcepos=\"83:1-83:65\">発注側がすべての開発知識を持つことも難しい</li>\n<li data-sourcepos=\"84:1-85:0\">業務知識を持っていることも開発知識を持っていることも等しく価値がある</li>\n</ul>\n<p data-sourcepos=\"86:1-86:135\">それぞれの人の立場を理解して、確認や相談を行う時に以下のようなことを考えるとよさそうです。</p>\n<ul data-sourcepos=\"88:1-90:0\">\n<li data-sourcepos=\"88:1-88:161\">この確認や相談を行うと、相手からどのような回答が得られるのか？それによって自分や相手がゴールに近づくのか？</li>\n<li data-sourcepos=\"89:1-90:0\">相手の質問に回答すると、相手はゴールに近づくのか？近づかない場合はどのような回答をすればいいのか？</li>\n</ul>\n<h2 data-sourcepos=\"91:1-91:51\">\n<span id=\"最小コミュニケーション術文書化\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%B0%8F%E3%82%B3%E3%83%9F%E3%83%A5%E3%83%8B%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E8%A1%93%E6%96%87%E6%9B%B8%E5%8C%96\"><i class=\"fa fa-link\"></i></a>最小コミュニケーション術：文書化</h2>\n<p data-sourcepos=\"93:1-93:33\">人は忘れる生き物です。</p>\n<p data-sourcepos=\"95:1-96:420\"><strong>相互理解を深めて合意をした内容をバケツリレー</strong> した結果を記録として残す文書が必要です。<br>\nまた、プロジェクトメンバーが増えれば増える程、同じ話を伝えなければいけない相手が増えるのに対して毎回同じ話をするのも効率が悪いので、 <strong>『分かりやすい文章を一度書く』</strong> というのはコミュニケーションの量を減らすためにはかなり効率的な手段と言えます。たとえ一度しか使わなかったとしても。</p>\n<h2 data-sourcepos=\"98:1-98:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"100:1-101:108\">プロジェクトのコミュニケーションは『プロジェクトのゴールに向けてどのように振る舞うか』という点に集約されると思います。<br>\nこの考え方はエンジニアとして仕事をしている間はずっと使えるかと思います。</p>\n<p data-sourcepos=\"103:1-103:378\">いわゆるコミュニケーションと考えられている会話の仕方については、相手によって全く異なったり、相手がいないと練習できなかったりと別の巨大な課題に突き当たりますが、これはいろいろな人と接して経験値を積んで少しずつ改善していくしかないのかなぁと思っています。</p>\n<p data-sourcepos=\"105:1-105:177\">お客様と話す機会や後輩の面倒を見る機会など、人と接する機会が与えられそうであれば積極的に取りに行くのがよいと思います。</p>\n<h2 data-sourcepos=\"107:1-107:15\">\n<span id=\"おまけ０\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%90\"><i class=\"fa fa-link\"></i></a>おまけ０</h2>\n<p data-sourcepos=\"109:1-109:50\"><iframe id=\"qiita-embed-content__bba209f92a2cb021012e1e230542d7b1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__bba209f92a2cb021012e1e230542d7b1\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F593eda66f272903df61e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"111:1-111:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"113:1-113:50\"><iframe id=\"qiita-embed-content__9fbb1df36ecca0c00ebcd435f92091d1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9fbb1df36ecca0c00ebcd435f92091d1\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"115:1-115:50\"><iframe id=\"qiita-embed-content__b083e012409fa9a3165279c5cfd27d38\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b083e012409fa9a3165279c5cfd27d38\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"117:1-117:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"119:1-119:50\"><iframe id=\"qiita-embed-content__aceec6591269b9e07fcafb420ea06dc4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__aceec6591269b9e07fcafb420ea06dc4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"121:1-121:50\"><iframe id=\"qiita-embed-content__c0cfc373d093b8cccfb22181742ece75\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c0cfc373d093b8cccfb22181742ece75\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"123:1-123:50\"><iframe id=\"qiita-embed-content__1f512033b107b44a2439248ecd75e657\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1f512033b107b44a2439248ecd75e657\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"125:1-125:50\"><iframe id=\"qiita-embed-content__0317a3780d497dcc4599dd648316dc01\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__0317a3780d497dcc4599dd648316dc01\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"127:1-127:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"129:1-129:50\"><iframe id=\"qiita-embed-content__d2cf4bb7444729213bd5b2dc0467d6d5\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__d2cf4bb7444729213bd5b2dc0467d6d5\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"131:1-131:50\"><iframe id=\"qiita-embed-content__e55f3d731c41a6ea71b0453c15683ca8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e55f3d731c41a6ea71b0453c15683ca8\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"133:1-133:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"135:1-135:50\"><iframe id=\"qiita-embed-content__99b558ae954923d63560357ccb62aefb\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__99b558ae954923d63560357ccb62aefb\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"137:1-137:50\"><iframe id=\"qiita-embed-content__5629bafe2139b5a768e920a1aec068d8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__5629bafe2139b5a768e920a1aec068d8\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"139:1-139:50\"><iframe id=\"qiita-embed-content__6d2351ab7273c59cf3d224827923fea4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6d2351ab7273c59cf3d224827923fea4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"141:1-141:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"143:1-143:50\"><iframe id=\"qiita-embed-content__f8c048c7b83c69ed78fd075406f567be\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f8c048c7b83c69ed78fd075406f567be\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"145:1-145:50\"><iframe id=\"qiita-embed-content__1623cd004b38df153a7ba0962bfcc0a5\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1623cd004b38df153a7ba0962bfcc0a5\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"147:1-147:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"149:1-150:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"152:1-152:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"154:7-154:69\">必ずしも給料はたくさんにならないミステリー <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"155:7-155:117\">「いい感じに」確認がなおよいのですが、「いい感じに」確認するには経験が必要 <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-3\">\n<p data-sourcepos=\"156:7-156:165\">この時点で概算見積もりを出して予算取りしちゃうのは、「鶏が先か、卵が先か」問題的なものを感じなくもないです <a href=\"#fnref-3\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-4\">\n<p data-sourcepos=\"157:7-157:171\">少し前であればソシャゲのプロジェクト経験があれば似たようなソシャゲを作ればお金が儲かっていたかもしれませんね？ <a href=\"#fnref-4\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\nこんにちは。元ガチプログラマーのプレイングマネージャです。\nできれば、プログラムをカタカタ打ってPC画面に向かって「いい感じのコードを書いちゃったなぁー」と独り言だけを言っていたい人間だったのですが、それだと仕事にならないなあと。\n\nということで最小限のコミュニケーションで仕事をする方法について考えたことをまとめておきたいと思います。\n\n## 最小コミュニケーション術\n\n**『プロジェクトのゴールに対する』自分や相手の課題を解決できるようにコミュニケーションをとることが、コミュニケーションを最小にする方法と考えます。**\n\n相手の課題を解決するために自分となんらかの調整が必要なケースでは、相手の課題が解決するまではコミュニケーションが継続されますし、自分の課題についてもまたしかりです。\n相手の質問の裏には、相手のプロジェクト上の課題が必ず存在します。相手の質問にそのまま答えても相手の課題が解決しなければ、さらなる質問をされ、最悪不毛なやり取りに発展することもありますよね？\n\n**『プロジェクトのゴールに対する』自分や相手の課題** を把握して、それを解決するためにどういった確認や相談や提案を行えばいいかを考えて実行することで、コミュニケーションの量を最小にすることができるかと思います。\n\n以下に少々長い考察を続けます。\n\n## エンジニアの仕事\n\n給料が比較的よさそうに見えるからとなんとなくIT業界に就職した方が最初に知っておいた方がいいことは、**「プログラムを書く仕事」** ではなくて **「まだ世の中にないモノを形にする仕事」** だから給料が比較的よい、ということかと思います。\n\n**『こんなモノを作ったら世の中がよくなるとか便利になるとか儲かるとかを考えているお金を持っている人や企業』** が世の中には存在していて、そんな方々から依頼を頂いてモノを作ることで対価をいただく仕事です。\n\n売れるモノを作れれば、たくさんお金が儲かるから給料もたくさんもらえるという話ですね。[^1]\n※SESの場合は時給で労働力を提供しているだけなのでどんなに売れても直接給料には反映されなそうです。\n\n## ゴールとコミュニケーション\n\n**「まだ世の中にないモノ」** というのは存在していないモノなので、発注側が作って欲しい内容を具体的に指示することはとても難しいです。\n\n一般的に発注側は業務知識を持っており、受注側は開発知識を持っていると思いますが、それぞれ自分が「普通」と思っていることは伝えないことが多いです。単純に量が膨大であることと、無意識で実行している事をわざわざ言語化して伝えるのがとても難しいことが理由として考えられます。\n\nそのような理由もあってか、知識の範囲が違う人からの指示や依頼には理解できない点が含まれることも多いです。全員が同じ知識を持っていたり、一人で要件定義から開発までできたりすればよいのかもしれませんが、そういうケースはあまり見かけません。多くのケースでは知識の範囲が違う人達が「こんなモノを作ってほしい」「そんなモノを作ればよいのですね」と **相互理解を深めて合意をした内容をバケツリレーして** ようやくモノが完成します。\n\n学生のアルバイトであれば、意味が分からない時には相手の指示が悪いと突っ返せるかもしれませんが、エンジニアの仕事は **「まだ世の中にないモノを形にすることがゴール」** なので突っ返したり、思い込みで作っていてはゴールに近づかず仕事になりません。ゴールに近づくために **確認や相談といったコミュニケーション** を取る必要があります。\n\nいちいち確認や相談をするのは面倒と感じるかもしれませんが、プロジェクトのゴールから見るといちいち確認するのが一番面倒くさくないです。[^2]\n**確認を行わなかったり、思い込みで作った結果、依頼側の期待と異なるモノが出来ていた時の手戻りが最高に面倒くさいです。**\n\n## 確認や相談をしないと何が起きるの？\n\n意図せずに時限爆弾を仕掛けることになる可能性があります。\n\nその場ではなく、プロジェクト後半で爆発したりします。\nもっとひどいケースでは、リリース後に爆発したりします。\n\n発覚が遅れれば遅れる程爆発による被害は大きくなります。\nまた、事態を収拾するチームを編成するのも難しくなります。\n\n## 確認や相談をすれば予定通り進むの？\n\nシステム開発について、以下の様な調査結果が出ています。\n\n- 工期が予定通り完了する割合は 14% ~ 34%\n- 予算が予定通り完了する割合は 17% ~ 37%\n\n規模が大きいプロジェクト程予定通り進まないようです。\n\n![システム開発の工期遵守状況.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/ad8f2422-f079-ab6b-5d35-6f4e64471c3a.png)\n\n[出典 : 企業IT動向調査報告書 2022(図表 7-3-5 業種（製造業／非製造業）×売上高別 システム開発の工期遵守状況)](https://juas.or.jp/cms/media/2022/04/JUAS_IT2022.pdf)\n\n![システム開発の予算遵守状況.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/847755f3-aa09-e317-a90e-21cef8babcda.png)\n\n[出典 : 企業IT動向調査報告書 2022(図表 7-3-6 業種（製造業／非製造業）×売上高別 システム開発の予算遵守状況)](https://juas.or.jp/cms/media/2022/04/JUAS_IT2022.pdf)\n\n今年は、こんなことをやって、このくらいの費用を投じて、このくらいのお金を儲けよう（またはこのくらいのコストを削減しよう）という計画が最初にあるため、プロジェクトに対するおよそのテーマ、リリース時期および予算がまず決定されると思います。\n\nただ、テーマが決定されただけの **「まだ世の中にないモノ」** を作るプロジェクトの計画を立てるのは、エスパーか預言者ではない限りは難しいかと思います。[^3]類似のテーマのプロジェクト経験があれば可能かもしれませんが、それは「既に世の中にあるモノ」であるため大きくお金が儲かることはないかもしれません。[^4]\n\nここで **「予定通り」** という言葉に着目してみましょう。\n「工期」と「予算」については予定通り完了したかは定量的に評価ができますが、**「まだ世の中にないモノ」に対して、「思った通りできたのか？」を定量的に評価することはできません。** 近い指標として「品質」がありますがちょっと違いますし、「売上」には広告宣伝やマーケティングなど営業的な要因も入ってきてしまうため評価には使えなそうです。\n\nとした場合、 **プロジェクトのゴールから外れない範囲で** 「工期」と「予算」を守れるように確認や相談を行うことで **「予定通り」** 進められる可能性を上げられないでしょうか？唯一の変数である **「まだ世の中にないモノ」** をどのような形にするかを走りながら決めるアジャイルという考え方もありますよね？\n\n## 最小コミュニケーション術：確認や相談のしかた\n\n大前提として、プロジェクトのゴールを関係者全員が理解していること、それに向かって仕事を行うことが必要です。\nその上で、関係者に対して等しく敬意を持って接することが大事です。\n\n- 開発者が案件ごとにすべての業務知識を持つことは難しい\n- 発注側がすべての開発知識を持つことも難しい\n- 業務知識を持っていることも開発知識を持っていることも等しく価値がある\n\nそれぞれの人の立場を理解して、確認や相談を行う時に以下のようなことを考えるとよさそうです。\n\n- この確認や相談を行うと、相手からどのような回答が得られるのか？それによって自分や相手がゴールに近づくのか？\n- 相手の質問に回答すると、相手はゴールに近づくのか？近づかない場合はどのような回答をすればいいのか？\n\n## 最小コミュニケーション術：文書化\n\n人は忘れる生き物です。\n\n**相互理解を深めて合意をした内容をバケツリレー** した結果を記録として残す文書が必要です。\nまた、プロジェクトメンバーが増えれば増える程、同じ話を伝えなければいけない相手が増えるのに対して毎回同じ話をするのも効率が悪いので、 **『分かりやすい文章を一度書く』** というのはコミュニケーションの量を減らすためにはかなり効率的な手段と言えます。たとえ一度しか使わなかったとしても。\n\n## おわりに\n\nプロジェクトのコミュニケーションは『プロジェクトのゴールに向けてどのように振る舞うか』という点に集約されると思います。\nこの考え方はエンジニアとして仕事をしている間はずっと使えるかと思います。\n\nいわゆるコミュニケーションと考えられている会話の仕方については、相手によって全く異なったり、相手がいないと練習できなかったりと別の巨大な課題に突き当たりますが、これはいろいろな人と接して経験値を積んで少しずつ改善していくしかないのかなぁと思っています。\n\nお客様と話す機会や後輩の面倒を見る機会など、人と接する機会が与えられそうであれば積極的に取りに行くのがよいと思います。\n\n## おまけ０\n\nhttps://qiita.com/kaku3/items/593eda66f272903df61e\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n[^1]: 必ずしも給料はたくさんにならないミステリー\n[^2]: 「いい感じに」確認がなおよいのですが、「いい感じに」確認するには経験が必要\n[^3]: この時点で概算見積もりを出して予算取りしちゃうのは、「鶏が先か、卵が先か」問題的なものを感じなくもないです\n[^4]: 少し前であればソシャゲのプロジェクト経験があれば似たようなソシャゲを作ればお金が儲かっていたかもしれませんね？\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2024-01-13T17:51:28+09:00",
    "group": null,
    "id": "2a91956cbbc489108875",
    "likes_count": 122,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 117,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      }
    ],
    "title": "エンジニアのための最小コミュニケーション術",
    "updated_at": "2024-01-13T17:51:28+09:00",
    "url": "https://qiita.com/kaku3/items/2a91956cbbc489108875",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 31674,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:118\">日本は2021年時点で高齢化率(65歳以上の高齢者の比率)が28.9%の超高齢化社会のようです。</p>\n<p data-sourcepos=\"5:1-5:296\">そして、<strong>わたし達の勤める会社も高齢化が緩やかに進んで</strong> いると思います。意外と認識するのが難しいのですが、すべての人は生きているだけで年を取りますので、会社の構成員の平均年齢は毎年自動で上がります。</p>\n<p data-sourcepos=\"7:1-7:89\">会社の高齢化は、IT業界の人口分布を調べると確認できそうです。</p>\n<p data-sourcepos=\"9:1-10:165\"><a href=\"https://camo.qiitausercontent.com/a5238ba5e3da24c7509dad8c25ff302905085be8/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f66333536336334362d353061302d306139622d613066372d6432336336653061653263662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff3563c46-50a0-0a9b-a0f7-d23c6e0ae2cf.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=77d64fa6fbcdbdcd6adbee2ba2bd3968\" alt=\"IT_年齢分布推移.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f3563c46-50a0-0a9b-a0f7-d23c6e0ae2cf.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff3563c46-50a0-0a9b-a0f7-d23c6e0ae2cf.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=189b2d5f4ad6747dff1ee6cae2fcabc4 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : - IT 人材需給に関する調査 － 調査報告書：みずほ情報総研株式会社</a></p>\n<p data-sourcepos=\"12:1-13:96\">レポートは出てきましたが、分かるような分からないような感じですね。<br>\n仕事の役割が変わりそうな年代で再集計してグラフ化してみましょう。</p>\n<p data-sourcepos=\"15:1-15:138\"><a href=\"https://camo.qiitausercontent.com/00c56ee21c71f7d3bfc4d0cd75bc80cb939ea8ca/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63393035663732392d646264612d353337332d343162622d6234643261373161633036392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc905f729-dbda-5373-41bb-b4d2a71ac069.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=c8bb3bfbea6d70f655723a9e6f46696f\" alt=\"IT_年齢分布推移2.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c905f729-dbda-5373-41bb-b4d2a71ac069.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc905f729-dbda-5373-41bb-b4d2a71ac069.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=9daaa786aa5e02e9dd4e50c1af16b303 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"17:1-17:138\"><a href=\"https://camo.qiitausercontent.com/21825e77788344abf7e7000de20a9e7420d5568c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f66306666323832662d353133662d356235622d653833652d6562616637313266666136342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff0ff282f-513f-5b5b-e83e-ebaf712ffa64.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=40fe567aa2d2f76d358c90d679480ba8\" alt=\"IT_年齢分布推移3.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f0ff282f-513f-5b5b-e83e-ebaf712ffa64.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff0ff282f-513f-5b5b-e83e-ebaf712ffa64.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ca4917d71db096c73ce0dbfff285471d 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"19:1-20:60\">みなさんが仕事をしている周りの人達の年齢層はどのようなものでしょうか？<br>\nこのグラフに当てはまっているでしょうか？</p>\n<p data-sourcepos=\"22:1-22:102\">もしもそうであるとしたら、限界集落化が進行している可能性があります。</p>\n<h2 data-sourcepos=\"24:1-24:18\">\n<span id=\"限界集落化\" class=\"fragment\"></span><a href=\"#%E9%99%90%E7%95%8C%E9%9B%86%E8%90%BD%E5%8C%96\"><i class=\"fa fa-link\"></i></a>限界集落化</h2>\n<blockquote data-sourcepos=\"26:1-26:211\">\n<p data-sourcepos=\"26:3-26:211\">限界集落とは、人口の50%以上が65歳以上で、農業用水や森林、道路の維持管理、冠婚葬祭などの共同生活を維持することが限界に近づきつつある集落です。</p>\n</blockquote>\n<p data-sourcepos=\"28:1-28:88\"><a href=\"https://ja.wikipedia.org/wiki/%E9%99%90%E7%95%8C%E9%9B%86%E8%90%BD\" rel=\"nofollow noopener\" target=\"_blank\">出典 : Wikipedia</a></p>\n<p data-sourcepos=\"30:1-30:182\">IT業界においては、道路の維持管理や冠婚葬祭ではなく、以下の工程をできなくなると会社として維持できなくなると言えるでしょう。</p>\n<ul data-sourcepos=\"32:1-38:0\">\n<li data-sourcepos=\"32:1-32:38\">プロジェクトマネジメント</li>\n<li data-sourcepos=\"33:1-33:14\">要件定義</li>\n<li data-sourcepos=\"34:1-34:14\">外部設計</li>\n<li data-sourcepos=\"35:1-35:14\">詳細設計</li>\n<li data-sourcepos=\"36:1-36:44\">開発（インフラ構築等々含む）</li>\n<li data-sourcepos=\"37:1-38:0\">試験</li>\n</ul>\n<p data-sourcepos=\"39:1-41:252\">20 - 30年程前であれば、一人の人間が上記のすべての工程をできる必要はなかったと思います。<br>\nしかし現在では、低予算化に伴い、短納期で少数のメンバーで案件を回さなければならなくなったため、一人の人間の担当範囲がじわじわと増えている様に感じます。<br>\nこれは <strong>『給与が上がらないのにやらねばならないことが増えている』</strong> 状況に見えますが、『アジャイル開発人材』や『即戦力人材』と表現されうやむやになっている様にも感じます。</p>\n<h2 data-sourcepos=\"43:1-43:47\">\n<span id=\"高度it人材の育成という課題\" class=\"fragment\"></span><a href=\"#%E9%AB%98%E5%BA%A6it%E4%BA%BA%E6%9D%90%E3%81%AE%E8%82%B2%E6%88%90%E3%81%A8%E3%81%84%E3%81%86%E8%AA%B2%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>『高度IT人材』の育成という課題</h2>\n<p data-sourcepos=\"45:1-46:90\">限界集落化を防ぐためには、若い『高度IT人材』の獲得または育成が必須です。<br>\n部落に若い人がいなくなれば、限界集落になってしまうからです。</p>\n<p data-sourcepos=\"48:1-48:142\">若い人は高確率でIT未経験なので、高確率で未経験者を『高度IT人材』に育成する必要性があるでしょう。</p>\n<p data-sourcepos=\"50:1-51:312\">レポートでも育成の重要性については語られていましたが、DXやAIが使えるドリーミーな先端技術者の育成に焦点が当てられている印象でした。大きく生産性をあげようと思ったら確かにそうなのでしょう。<br>\nただ、現場レベルでは『アジャイル開発』ができる人材、つまりは <strong>『給与は開発者の給与だけれども、責任範囲の機能については、設計から試験まですべて行いセルフマネジメントできる人材』</strong> の育成が必要なように感じます。</p>\n<p data-sourcepos=\"53:1-53:36\">なかなか難しい課題です。</p>\n<p data-sourcepos=\"55:1-56:307\">低予算、短納期に対応するため、即戦力な人材を求めたり、40代、50代の人間に上流工程を依頼して、その人達に仕事が集中する状況もあるかもしれません。<br>\nこれは、経験者に頼むことで短期的にはリスクを最小にする判断の結果かと思いますが、それと引き換えに『20代、30代の人間が経験する機会』を失っているため、持続可能性の観点からはリスクの高い判断なのかもしれません。</p>\n<h2 data-sourcepos=\"58:1-58:29\">\n<span id=\"pmの育成という課題\" class=\"fragment\"></span><a href=\"#pm%E3%81%AE%E8%82%B2%E6%88%90%E3%81%A8%E3%81%84%E3%81%86%E8%AA%B2%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>PMの育成という課題</h2>\n<p data-sourcepos=\"60:1-61:282\">プロジェクトマネジメントは、プロジェクトメンバーの構成によって最適解が毎回変わるため、難易度がとても高く、適切にマネジメントするためにはかなりの経験が必要な業務かと思います。<br>\nまた、マネジメント手法も個人差が大きく、自分にあった方法を見つけるのも難しい上に、自分で制御できないことが多く存在する中で、期間内に最適解を探すのはストレスもプレッシャーも大きい業務です。</p>\n<p data-sourcepos=\"63:1-63:204\">にも関わらず、「プロジェクトはうまくいく前提」であるため、適切にマネジメントしても評価されず、うまくいかないと非難される傾向があります。</p>\n<p data-sourcepos=\"65:1-65:111\">ここを担当してくれる人を探すのも、育成するのも難しい課題と言えるでしょう。</p>\n<h2 data-sourcepos=\"67:1-67:27\">\n<span id=\"年の差という課題\" class=\"fragment\"></span><a href=\"#%E5%B9%B4%E3%81%AE%E5%B7%AE%E3%81%A8%E3%81%84%E3%81%86%E8%AA%B2%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>年の差という課題</h2>\n<p data-sourcepos=\"69:1-71:187\">20代の人間は近い年の先輩がいるような状況で少しずつ経験を積みたいでしょう。<br>\nところが、40代、50代のメンバーとチームを組む機会が多くなっていく可能性が示唆されています。<br>\nここは、そういうもんだと割り切って、いかに『高度IT人材になるか』『高度IT人材を育成するか』とお互い歩みよることが大事そうです。</p>\n<h2 data-sourcepos=\"73:1-73:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"75:1-75:412\"><a href=\"https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf\" rel=\"nofollow noopener\" target=\"_blank\">IT 人材需給に関する調査 － 調査報告書：みずほ情報総研株式会社</a> にある予測通り【未経験の人材】が供給されたとしても、それらの人を全て【高度IT人材】にして活躍してもらうためには、難しい課題をいくつも解決しなければいけないように思えました。</p>\n<p data-sourcepos=\"77:1-77:330\">エンジニアとしては『責任範囲の機能については、設計から試験まですべて行いセルフマネジメントできる人材』や『自分の属する会社が限界集落化しないように若手を育成できる人材』になる、というのは生存戦略の一つなのかもしれません。</p>\n<h2 data-sourcepos=\"79:1-79:15\">\n<span id=\"おまけ０\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%90\"><i class=\"fa fa-link\"></i></a>おまけ０</h2>\n<p data-sourcepos=\"81:1-81:50\"><iframe id=\"qiita-embed-content__ebcff519a8cb8f908d2c77d79b67ba09\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ebcff519a8cb8f908d2c77d79b67ba09\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff3dd9920b1dd29550ac0\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"83:1-83:50\"><iframe id=\"qiita-embed-content__11a798f9ed17ebd3df9a4e2815513a54\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__11a798f9ed17ebd3df9a4e2815513a54\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2a91956cbbc489108875\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"85:1-85:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"87:1-87:50\"><iframe id=\"qiita-embed-content__d7659453d3ff2a51c9c6e5f827cf08af\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__d7659453d3ff2a51c9c6e5f827cf08af\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"89:1-89:50\"><iframe id=\"qiita-embed-content__01a6f5ea59b6f12f4e427c11b2f59dc3\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__01a6f5ea59b6f12f4e427c11b2f59dc3\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"91:1-91:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"93:1-93:50\"><iframe id=\"qiita-embed-content__576e29517db20cd9928e12dc53b87530\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__576e29517db20cd9928e12dc53b87530\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"95:1-95:50\"><iframe id=\"qiita-embed-content__974598d289fa1c5b516e14995a674934\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__974598d289fa1c5b516e14995a674934\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"97:1-97:50\"><iframe id=\"qiita-embed-content__6a6a39030dc86a8001607e09a9018283\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6a6a39030dc86a8001607e09a9018283\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"99:1-99:50\"><iframe id=\"qiita-embed-content__0d2d621ddaef33d49843d5d2b1419ac8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__0d2d621ddaef33d49843d5d2b1419ac8\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"101:1-101:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"103:1-103:50\"><iframe id=\"qiita-embed-content__38430cd35ad8e7aa8e8ddf54cf6ea5f9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__38430cd35ad8e7aa8e8ddf54cf6ea5f9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"105:1-105:50\"><iframe id=\"qiita-embed-content__9fb3410790bcbde7228fe70f2d7248b5\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9fb3410790bcbde7228fe70f2d7248b5\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"107:1-107:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"109:1-109:50\"><iframe id=\"qiita-embed-content__c457b20e7803d855a2ef83d19d76399b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c457b20e7803d855a2ef83d19d76399b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"111:1-111:50\"><iframe id=\"qiita-embed-content__69daa170f0b9e1c4a92faade0ef0a360\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__69daa170f0b9e1c4a92faade0ef0a360\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"113:1-113:50\"><iframe id=\"qiita-embed-content__1916f298173086ffebf123fd1d92b766\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1916f298173086ffebf123fd1d92b766\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"115:1-115:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"117:1-117:50\"><iframe id=\"qiita-embed-content__ab9f314efb695f15a68b28c7a778af5b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ab9f314efb695f15a68b28c7a778af5b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"119:1-119:50\"><iframe id=\"qiita-embed-content__3dc730a42b19ebb5f34f82fb3364115c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__3dc730a42b19ebb5f34f82fb3364115c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"121:1-121:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"123:1-124:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"126:1-126:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\n日本は2021年時点で高齢化率(65歳以上の高齢者の比率)が28.9%の超高齢化社会のようです。\n\nそして、**わたし達の勤める会社も高齢化が緩やかに進んで** いると思います。意外と認識するのが難しいのですが、すべての人は生きているだけで年を取りますので、会社の構成員の平均年齢は毎年自動で上がります。\n\n会社の高齢化は、IT業界の人口分布を調べると確認できそうです。\n\n![IT_年齢分布推移.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f3563c46-50a0-0a9b-a0f7-d23c6e0ae2cf.png)\n[出典 : - IT 人材需給に関する調査 － 調査報告書：みずほ情報総研株式会社](https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf)\n\nレポートは出てきましたが、分かるような分からないような感じですね。\n仕事の役割が変わりそうな年代で再集計してグラフ化してみましょう。\n\n![IT_年齢分布推移2.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c905f729-dbda-5373-41bb-b4d2a71ac069.png)\n\n![IT_年齢分布推移3.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f0ff282f-513f-5b5b-e83e-ebaf712ffa64.png)\n\nみなさんが仕事をしている周りの人達の年齢層はどのようなものでしょうか？\nこのグラフに当てはまっているでしょうか？\n\nもしもそうであるとしたら、限界集落化が進行している可能性があります。\n\n## 限界集落化\n\n> 限界集落とは、人口の50%以上が65歳以上で、農業用水や森林、道路の維持管理、冠婚葬祭などの共同生活を維持することが限界に近づきつつある集落です。\n\n[出典 : Wikipedia](https://ja.wikipedia.org/wiki/%E9%99%90%E7%95%8C%E9%9B%86%E8%90%BD)\n\nIT業界においては、道路の維持管理や冠婚葬祭ではなく、以下の工程をできなくなると会社として維持できなくなると言えるでしょう。\n\n- プロジェクトマネジメント\n- 要件定義\n- 外部設計\n- 詳細設計\n- 開発（インフラ構築等々含む）\n- 試験\n\n20 - 30年程前であれば、一人の人間が上記のすべての工程をできる必要はなかったと思います。\nしかし現在では、低予算化に伴い、短納期で少数のメンバーで案件を回さなければならなくなったため、一人の人間の担当範囲がじわじわと増えている様に感じます。\nこれは **『給与が上がらないのにやらねばならないことが増えている』** 状況に見えますが、『アジャイル開発人材』や『即戦力人材』と表現されうやむやになっている様にも感じます。\n\n## 『高度IT人材』の育成という課題\n\n限界集落化を防ぐためには、若い『高度IT人材』の獲得または育成が必須です。\n部落に若い人がいなくなれば、限界集落になってしまうからです。\n\n若い人は高確率でIT未経験なので、高確率で未経験者を『高度IT人材』に育成する必要性があるでしょう。\n\nレポートでも育成の重要性については語られていましたが、DXやAIが使えるドリーミーな先端技術者の育成に焦点が当てられている印象でした。大きく生産性をあげようと思ったら確かにそうなのでしょう。\nただ、現場レベルでは『アジャイル開発』ができる人材、つまりは **『給与は開発者の給与だけれども、責任範囲の機能については、設計から試験まですべて行いセルフマネジメントできる人材』** の育成が必要なように感じます。\n\nなかなか難しい課題です。\n\n低予算、短納期に対応するため、即戦力な人材を求めたり、40代、50代の人間に上流工程を依頼して、その人達に仕事が集中する状況もあるかもしれません。\nこれは、経験者に頼むことで短期的にはリスクを最小にする判断の結果かと思いますが、それと引き換えに『20代、30代の人間が経験する機会』を失っているため、持続可能性の観点からはリスクの高い判断なのかもしれません。\n\n## PMの育成という課題\n\nプロジェクトマネジメントは、プロジェクトメンバーの構成によって最適解が毎回変わるため、難易度がとても高く、適切にマネジメントするためにはかなりの経験が必要な業務かと思います。\nまた、マネジメント手法も個人差が大きく、自分にあった方法を見つけるのも難しい上に、自分で制御できないことが多く存在する中で、期間内に最適解を探すのはストレスもプレッシャーも大きい業務です。\n\nにも関わらず、「プロジェクトはうまくいく前提」であるため、適切にマネジメントしても評価されず、うまくいかないと非難される傾向があります。\n\nここを担当してくれる人を探すのも、育成するのも難しい課題と言えるでしょう。\n\n## 年の差という課題\n\n20代の人間は近い年の先輩がいるような状況で少しずつ経験を積みたいでしょう。\nところが、40代、50代のメンバーとチームを組む機会が多くなっていく可能性が示唆されています。\nここは、そういうもんだと割り切って、いかに『高度IT人材になるか』『高度IT人材を育成するか』とお互い歩みよることが大事そうです。\n\n## おわりに\n\n[IT 人材需給に関する調査 － 調査報告書：みずほ情報総研株式会社](https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf) にある予測通り【未経験の人材】が供給されたとしても、それらの人を全て【高度IT人材】にして活躍してもらうためには、難しい課題をいくつも解決しなければいけないように思えました。\n\nエンジニアとしては『責任範囲の機能については、設計から試験まですべて行いセルフマネジメントできる人材』や『自分の属する会社が限界集落化しないように若手を育成できる人材』になる、というのは生存戦略の一つなのかもしれません。\n\n## おまけ０\n\nhttps://qiita.com/kaku3/items/f3dd9920b1dd29550ac0\n\nhttps://qiita.com/kaku3/items/2a91956cbbc489108875\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 6,
    "created_at": "2023-11-18T19:07:57+09:00",
    "group": null,
    "id": "593eda66f272903df61e",
    "likes_count": 330,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 260,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      }
    ],
    "title": "限界集落化するIT業界？",
    "updated_at": "2024-04-01T16:14:44+09:00",
    "url": "https://qiita.com/kaku3/items/593eda66f272903df61e",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 95130,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:60\">皆さんおはこんばんわ。<br>\nサイトマップ（画面遷移図）書いてますか？</p>\n<p data-sourcepos=\"6:1-6:204\">サイトマップは、サイトの全体像をサクッと確認できる有能な資料ですが、初回作成やメンテナンスが割りと大変で重労働感が強いのが難点ですよね。</p>\n<p data-sourcepos=\"8:1-8:173\">今回は、このサイトマップをExcelの画面一覧仕様書から自動生成するサンプルコードを作成しましたので紹介したいと思います。</p>\n<h2 data-sourcepos=\"10:1-10:21\">\n<span id=\"つくったもの\" class=\"fragment\"></span><a href=\"#%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%9F%E3%82%82%E3%81%AE\"><i class=\"fa fa-link\"></i></a>つくったもの</h2>\n<p data-sourcepos=\"12:1-12:96\">以下、Excel 仕様書を読み込んで、サイトマップを出力するツールです。</p>\n<ul data-sourcepos=\"14:1-17:0\">\n<li data-sourcepos=\"14:1-17:0\">画面一覧Excel<br>\nスクリーンショットはスプレッドシートですが、Excelです。<br>\n（サイトはツールのサンプルとして作成した、実在しない架空のECサイトです）</li>\n</ul>\n<p data-sourcepos=\"18:1-18:121\"><a href=\"https://camo.qiitausercontent.com/3dd722db085a74fd222c61e13405960d02196330/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f30313162653661382d373865322d643239372d313337352d3537613130383965396539362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F011be6a8-78e2-d297-1375-57a1089e9e96.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=1231cd6d0e721928720892a44b32ee13\" alt=\"excel.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/011be6a8-78e2-d297-1375-57a1089e9e96.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F011be6a8-78e2-d297-1375-57a1089e9e96.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d4990db934cd6c0805353870fb09b72a 1x\" loading=\"lazy\"></a></p>\n<ul data-sourcepos=\"20:1-22:0\">\n<li data-sourcepos=\"20:1-22:0\">サイトマップ<br>\n左側にサイトマップ、右側に現在選択中のページの情報が表示されます。</li>\n</ul>\n<p data-sourcepos=\"23:1-23:123\"><a href=\"https://camo.qiitausercontent.com/416b61bc355c43c9ccc44c89ccac95562b3b75b4/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f31633361643737622d636262652d643866312d623563652d3564613730306337376163362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F1c3ad77b-cbbe-d8f1-b5ce-5da700c77ac6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e65d70ca2b49a323de5f20989b3bef4c\" alt=\"sitemap.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/1c3ad77b-cbbe-d8f1-b5ce-5da700c77ac6.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F1c3ad77b-cbbe-d8f1-b5ce-5da700c77ac6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=8daf1914be8c41cf1e0f56eef72d4f96 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"25:1-26:185\">(サンプル置き場)<br>\n<a href=\"https://github.com/kaku3/workbooks/tree/main/04_%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%82%B5%E3%82%A4%E3%83%88%E3%83%9E%E3%83%83%E3%83%97/11_src/out\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kaku3/workbooks/tree/main/04_%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%82%B5%E3%82%A4%E3%83%88%E3%83%9E%E3%83%83%E3%83%97/11_src/out</a></p>\n<h2 data-sourcepos=\"28:1-28:48\">\n<span id=\"サンプルのサイトマップ作成方法\" class=\"fragment\"></span><a href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AE%E3%82%B5%E3%82%A4%E3%83%88%E3%83%9E%E3%83%83%E3%83%97%E4%BD%9C%E6%88%90%E6%96%B9%E6%B3%95\"><i class=\"fa fa-link\"></i></a>サンプルのサイトマップ作成方法</h2>\n<ol data-sourcepos=\"30:1-30:50\">\n<li data-sourcepos=\"30:1-30:50\">事前にnode をインストールしておく</li>\n</ol>\n<div class=\"code-frame\" data-lang=\"version\" data-sourcepos=\"31:1-33:3\"><div class=\"highlight\"><pre><code>node 16.19.0\n</code></pre></div></div>\n<p data-sourcepos=\"34:1-34:63\">※Windows だと Volta をインストールするのが簡単</p>\n<ol data-sourcepos=\"36:1-39:30\">\n<li data-sourcepos=\"36:1-38:0\">\n<p data-sourcepos=\"36:4-37:35\">リポジトリをクローンまたはダウンロード<br>\n<a href=\"https://github.com/kaku3/workbooks/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kaku3/workbooks/</a></p>\n</li>\n<li data-sourcepos=\"39:1-39:30\">\n<p data-sourcepos=\"39:4-39:30\">ディレクトリに移動</p>\n</li>\n</ol>\n<div class=\"code-frame\" data-lang=\"cmd\" data-sourcepos=\"40:1-42:3\"><div class=\"highlight\"><pre><code>cd 04_インタラクティブサイトマップ/11_src/\n</code></pre></div></div>\n<ol data-sourcepos=\"44:1-44:66\">\n<li data-sourcepos=\"44:1-44:66\">(初回のみ) npm install でモジュールインストール</li>\n</ol>\n<div class=\"code-frame\" data-lang=\"cmd\" data-sourcepos=\"45:1-47:3\"><div class=\"highlight\"><pre><code>npm install\n</code></pre></div></div>\n<ol data-sourcepos=\"49:1-49:48\">\n<li data-sourcepos=\"49:1-49:48\">サイトマップ作成コマンドを実行</li>\n</ol>\n<div class=\"code-frame\" data-lang=\"cmd\" data-sourcepos=\"50:1-55:3\"><div class=\"highlight\"><pre><code>node create-sitemap.js --i {Excelファイルパス} --o {サイトマップ出力フォルダ}\n# 例)\n# node create-sitemap.js --i .\\samples\\画面設計_sample_ECサイト.xlsx --o out/ECサイト\n\n</code></pre></div></div>\n<h2 data-sourcepos=\"57:1-57:21\">\n<span id=\"解説的なもの\" class=\"fragment\"></span><a href=\"#%E8%A7%A3%E8%AA%AC%E7%9A%84%E3%81%AA%E3%82%82%E3%81%AE\"><i class=\"fa fa-link\"></i></a>解説的なもの</h2>\n<p data-sourcepos=\"59:1-60:203\">納品物として使えるように、サーバーなしで動作するhtml ファイル形式で出力としました。<br>\n変換ツール(<code>create-sitemap.js</code>)で、Excel のページ情報を json に変換し、その json を読み込んで、html 上でサイトマップを描くという薄い仕組みにしました。</p>\n<p data-sourcepos=\"62:1-62:181\">ページの描画は、flexbox + div タグで、線分を結ぶところは svg として、改造しやすいようにできるだけ簡単な仕組みにしておきました。</p>\n<p data-sourcepos=\"64:1-64:163\">images/ フォルダにパスに対応する png ファイルを置くと情報部にサムネが表示されるようにしてあります。（ここは手動）</p>\n<p data-sourcepos=\"66:1-67:139\">変換ツールを修正すれば、案件で利用されている Excel を読み込むこともできるかもしれません。<br>\ntemplates/ フォルダ内の、html, css, js を修正すれば、よりよい見た目にすることもできるかもしれません。</p>\n<h2 data-sourcepos=\"69:1-69:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"71:1-72:240\">業務上Excelでサイトマップを作成することが多いのですが、なんとか楽ができないかなぁと作ってみました。<br>\nページ一覧の作成は必須かと思うので、ページ一覧は作成してサイトマップが自動生成できれば、似て非なる仕様書を作成して二重メンテしなくてよくなるのではと考えました。</p>\n<p data-sourcepos=\"74:1-74:266\"><a href=\"https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio\" rel=\"nofollow noopener\" target=\"_blank\">Draw.io Integration</a> だと図の描画自体はもう少し簡単になるのですが、相手がVS Code を使っていないと図でしか渡せないのが悩ましいところです。</p>\n<p data-sourcepos=\"76:1-76:161\">UI Flow も利用はしていたのですが、『思った通り』のサイトマップにするのが難しくて使わなくなってしまってました。</p>\n<p data-sourcepos=\"78:1-78:87\">その他よりよいものがありましたら情報を頂けますと幸いです。</p>\n<p data-sourcepos=\"80:1-81:207\">(2024/01/20 追記)<br>\nfigma やサイトへのリンクやエビデンスビュワー機能を追加したところプロジェクトの初期から最後まで参照される仕様書として使えるようになりました。</p>\n",
    "body": "## はじめに\n\n皆さんおはこんばんわ。\nサイトマップ（画面遷移図）書いてますか？\n\nサイトマップは、サイトの全体像をサクッと確認できる有能な資料ですが、初回作成やメンテナンスが割りと大変で重労働感が強いのが難点ですよね。\n\n今回は、このサイトマップをExcelの画面一覧仕様書から自動生成するサンプルコードを作成しましたので紹介したいと思います。\n\n## つくったもの\n\n以下、Excel 仕様書を読み込んで、サイトマップを出力するツールです。\n\n- 画面一覧Excel\nスクリーンショットはスプレッドシートですが、Excelです。\n（サイトはツールのサンプルとして作成した、実在しない架空のECサイトです）\n\n![excel.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/011be6a8-78e2-d297-1375-57a1089e9e96.png)\n\n- サイトマップ\n左側にサイトマップ、右側に現在選択中のページの情報が表示されます。\n\n![sitemap.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/1c3ad77b-cbbe-d8f1-b5ce-5da700c77ac6.png)\n\n(サンプル置き場)\nhttps://github.com/kaku3/workbooks/tree/main/04_%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%82%B5%E3%82%A4%E3%83%88%E3%83%9E%E3%83%83%E3%83%97/11_src/out\n\n## サンプルのサイトマップ作成方法\n\n0. 事前にnode をインストールしておく\n```version\nnode 16.19.0\n```\n※Windows だと Volta をインストールするのが簡単\n\n1. リポジトリをクローンまたはダウンロード\nhttps://github.com/kaku3/workbooks/\n\n2. ディレクトリに移動\n```cmd\ncd 04_インタラクティブサイトマップ/11_src/\n```\n\n3. (初回のみ) npm install でモジュールインストール\n```cmd\nnpm install\n```\n\n4. サイトマップ作成コマンドを実行\n```cmd\nnode create-sitemap.js --i {Excelファイルパス} --o {サイトマップ出力フォルダ}\n# 例)\n# node create-sitemap.js --i .\\samples\\画面設計_sample_ECサイト.xlsx --o out/ECサイト\n\n```\n\n## 解説的なもの\n\n納品物として使えるように、サーバーなしで動作するhtml ファイル形式で出力としました。\n変換ツール(`create-sitemap.js`)で、Excel のページ情報を json に変換し、その json を読み込んで、html 上でサイトマップを描くという薄い仕組みにしました。\n\nページの描画は、flexbox + div タグで、線分を結ぶところは svg として、改造しやすいようにできるだけ簡単な仕組みにしておきました。\n\nimages/ フォルダにパスに対応する png ファイルを置くと情報部にサムネが表示されるようにしてあります。（ここは手動）\n\n変換ツールを修正すれば、案件で利用されている Excel を読み込むこともできるかもしれません。\ntemplates/ フォルダ内の、html, css, js を修正すれば、よりよい見た目にすることもできるかもしれません。\n\n## おわりに\n\n業務上Excelでサイトマップを作成することが多いのですが、なんとか楽ができないかなぁと作ってみました。\nページ一覧の作成は必須かと思うので、ページ一覧は作成してサイトマップが自動生成できれば、似て非なる仕様書を作成して二重メンテしなくてよくなるのではと考えました。\n\n[Draw.io Integration](https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio) だと図の描画自体はもう少し簡単になるのですが、相手がVS Code を使っていないと図でしか渡せないのが悩ましいところです。\n\nUI Flow も利用はしていたのですが、『思った通り』のサイトマップにするのが難しくて使わなくなってしまってました。\n\nその他よりよいものがありましたら情報を頂けますと幸いです。\n\n(2024/01/20 追記)\nfigma やサイトへのリンクやエビデンスビュワー機能を追加したところプロジェクトの初期から最後まで参照される仕様書として使えるようになりました。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-10-08T19:00:28+09:00",
    "group": null,
    "id": "53a8690a5d9d3fa1b87e",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 2,
    "tags": [
      {
        "name": "HTML",
        "versions": []
      },
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "Excel",
        "versions": []
      },
      {
        "name": "仕様書",
        "versions": []
      },
      {
        "name": "自動生成",
        "versions": []
      }
    ],
    "title": "サイトマップ仕様書をExcelの画面一覧仕様書から自動生成してみた",
    "updated_at": "2024-01-20T14:57:37+09:00",
    "url": "https://qiita.com/kaku3/items/53a8690a5d9d3fa1b87e",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2237,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:169\">ロストテクノロジーとは、過去に存在したが、<strong>何らかの理由</strong>で後世に伝えられず、現代では再現不可能となった技術です。</p>\n<p data-sourcepos=\"5:1-5:307\">外部設計を行った結果を外部設計書に記録してプロジェクトを円滑に進める行為が<del>予算の理由で</del>ロストテクノロジーとなり、結果として後世に外部設計手法が伝えられないのではないかという考察を行ってみたいと思います。</p>\n<h2 data-sourcepos=\"7:1-7:30\">\n<span id=\"外部設計書について\" class=\"fragment\"></span><a href=\"#%E5%A4%96%E9%83%A8%E8%A8%AD%E8%A8%88%E6%9B%B8%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>外部設計書について</h2>\n<p data-sourcepos=\"9:1-9:285\">外部設計書は、本来は要件定義を行う顧客と、外部設計を行う開発間で合意を取るために必須の設計書ですが、顧客が欲しいのは「開発されたプロダクト」であり「設計書」ではないというジレンマがあります。</p>\n<p data-sourcepos=\"11:1-11:135\"><a href=\"https://camo.qiitausercontent.com/f4f4c3cb2f20e99cd027b294bdf8851ae53e7f7a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38306365333937342d376635392d346463662d386538612d3331383834663336373238632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F80ce3974-7f59-4dcf-8e8a-31884f36728c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=000d65db171910bd289d2d5470dc7ea1\" alt=\"外部設計.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/80ce3974-7f59-4dcf-8e8a-31884f36728c.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F80ce3974-7f59-4dcf-8e8a-31884f36728c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c87c5da34daa8d16996f584f14f6323c 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"13:1-13:132\">顧客目線では、ちゃんと動くビジネスや業務課題を解決するソフトウェアがあればよいだけです。</p>\n<p data-sourcepos=\"15:1-15:337\">ところが、手戻りなく無駄なく開発を行おうとすると、<strong>外部設計時点</strong>できちんと要求を満たしているかを確認する必要がありますが、書類から実際のソフトウェアの動作まで想像するのは熟練のエンジニアでもかなり難しいという問題があります。</p>\n<p data-sourcepos=\"17:1-18:143\">期限があるので一旦は承認は行うものの、<strong>受入試験時</strong>に「期待値と違う」ということもよくあります。受入試験時に調整するのであれば、外部設計時の承認は不要にも思えます。<br>\nしかし、<strong>「承認を受けた外部設計書」</strong> が存在しないと無限に受入対応が発生するリスクが出てきます。</p>\n<p data-sourcepos=\"20:1-20:318\">また、運用開始後に機能追加や改修を行う場合に外部設計書が存在しない場合、仕様解析から行うことになり、リバースエンジニアリングのコストが追加されたり、そもそも改修の見積もりができないといった新たな問題も発生します。</p>\n<p data-sourcepos=\"22:1-22:375\">総じて、外部設計書の重要度が増すのは「受入試験」工程より後で、初期の外部設計時に作るのが最も合理的でコストも最小になるにも関わらず、そのコストや期間が捻出されず、「後仕様」と言って申し訳程度のドキュメントを後で提出するといった傾向がある様に思えます。</p>\n<h2 data-sourcepos=\"24:1-24:51\">\n<span id=\"あれ設計者が減っていく\" class=\"fragment\"></span><a href=\"#%E3%81%82%E3%82%8C%E8%A8%AD%E8%A8%88%E8%80%85%E3%81%8C%E6%B8%9B%E3%81%A3%E3%81%A6%E3%81%84%E3%81%8F\"><i class=\"fa fa-link\"></i></a>あれ？設計者が減っていく・・・？</h2>\n<p data-sourcepos=\"26:1-26:92\"><strong>「書けるけど書かない」</strong> のと <strong>「書けない」</strong> のは別の話です。</p>\n<p data-sourcepos=\"28:1-28:333\">アジャイル開発と称して、外部設計を行う事ができるエンジニアが、顧客窓口と直接会話して外部設計～詳細設計～実装～単体試験まですべてを行えば外部設計書はなくても開発案件としては、一応成立します。（運用フェーズの問題は残ります）</p>\n<p data-sourcepos=\"30:1-31:174\">しかし、経験値の低いエンジニアがこれだけの工程をこなすことは難しいです。<br>\nまた、アウトプットとしてソースコードしか存在していない状況は、外部設計について認知する機会を減らしてしまっています。</p>\n<p data-sourcepos=\"33:1-34:113\">顧客からすると開発会社の若手を育てるのにお金を払う義理はないのですが、このまま放置しておくと、外部設計を行う人間が減っていき、開発案件自体を行うことができなくなっていくことが予想されます。<br>\n上級SEと言われる設計ができる人々は定年などの理由で確実に減っていくからです。</p>\n<h2 data-sourcepos=\"36:1-36:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"38:1-38:212\">昭和の町工場が、技術の伝承ができなくて消えつつあるのと同様に、令和のIT工場が、外部設計手法の伝承ができずに消えていく可能性を考察してみました。</p>\n<p data-sourcepos=\"40:1-40:180\">アジャイル開発をやめて昔のウォーターフォール開発にすることは現実的ではないし、それで解決する問題でもないように思えます。</p>\n<p data-sourcepos=\"42:1-42:234\">ただ、アジャイル開発手法を取る限りは未経験エンジニアでも案件にアサインされると同時に、設計と開発の能力を求められるチャレンジングな状況となっていくでしょう。</p>\n<p data-sourcepos=\"44:1-44:108\">ゆでガエルにならないように、生存戦略を考えないといけないかもしれません。</p>\n<h2 data-sourcepos=\"46:1-46:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"48:1-48:50\"><iframe id=\"qiita-embed-content__e03b58b0c03c31bfd0cb525946f73055\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e03b58b0c03c31bfd0cb525946f73055\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"50:1-50:50\"><iframe id=\"qiita-embed-content__ad430528daec2823eb88a77e1dbe18fb\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ad430528daec2823eb88a77e1dbe18fb\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"52:1-52:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"54:1-54:50\"><iframe id=\"qiita-embed-content__b9704b9d7964207b5fafef56027ed42a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b9704b9d7964207b5fafef56027ed42a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"56:1-56:50\"><iframe id=\"qiita-embed-content__b903d4414d5f2e7e953ab2436d7a5dd7\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b903d4414d5f2e7e953ab2436d7a5dd7\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"58:1-58:50\"><iframe id=\"qiita-embed-content__acbe22a97497c1b0fd9c178ca385a2bc\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__acbe22a97497c1b0fd9c178ca385a2bc\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"60:1-60:50\"><iframe id=\"qiita-embed-content__0210c52d897ee1ee1e5237d1cec985a6\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__0210c52d897ee1ee1e5237d1cec985a6\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"62:1-62:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"64:1-64:50\"><iframe id=\"qiita-embed-content__898babe46a12efabbece6ef96ea16451\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__898babe46a12efabbece6ef96ea16451\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"66:1-66:50\"><iframe id=\"qiita-embed-content__67bb26e80d4ad423c9393b42a1093640\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__67bb26e80d4ad423c9393b42a1093640\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"68:1-68:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"70:1-70:50\"><iframe id=\"qiita-embed-content__822396e6c7ed2417be885c41a50d3634\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__822396e6c7ed2417be885c41a50d3634\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"72:1-72:50\"><iframe id=\"qiita-embed-content__1459573e9c9c441b08472ce17493111c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1459573e9c9c441b08472ce17493111c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"74:1-74:50\"><iframe id=\"qiita-embed-content__4186a213086befe483898bcf27b5189e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__4186a213086befe483898bcf27b5189e\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"76:1-76:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"78:1-78:50\"><iframe id=\"qiita-embed-content__2ed1f68bb80c659e3e4aad1c2218aa53\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2ed1f68bb80c659e3e4aad1c2218aa53\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"80:1-80:50\"><iframe id=\"qiita-embed-content__69099b8919cbea67b3c41f2c0aad93a7\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__69099b8919cbea67b3c41f2c0aad93a7\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"82:1-82:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"84:1-85:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"87:1-87:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\nロストテクノロジーとは、過去に存在したが、**何らかの理由**で後世に伝えられず、現代では再現不可能となった技術です。\n\n外部設計を行った結果を外部設計書に記録してプロジェクトを円滑に進める行為が~~予算の理由で~~ロストテクノロジーとなり、結果として後世に外部設計手法が伝えられないのではないかという考察を行ってみたいと思います。\n\n## 外部設計書について\n\n外部設計書は、本来は要件定義を行う顧客と、外部設計を行う開発間で合意を取るために必須の設計書ですが、顧客が欲しいのは「開発されたプロダクト」であり「設計書」ではないというジレンマがあります。\n\n![外部設計.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/80ce3974-7f59-4dcf-8e8a-31884f36728c.png)\n\n顧客目線では、ちゃんと動くビジネスや業務課題を解決するソフトウェアがあればよいだけです。\n\nところが、手戻りなく無駄なく開発を行おうとすると、**外部設計時点**できちんと要求を満たしているかを確認する必要がありますが、書類から実際のソフトウェアの動作まで想像するのは熟練のエンジニアでもかなり難しいという問題があります。\n\n期限があるので一旦は承認は行うものの、**受入試験時**に「期待値と違う」ということもよくあります。受入試験時に調整するのであれば、外部設計時の承認は不要にも思えます。\nしかし、**「承認を受けた外部設計書」** が存在しないと無限に受入対応が発生するリスクが出てきます。\n\nまた、運用開始後に機能追加や改修を行う場合に外部設計書が存在しない場合、仕様解析から行うことになり、リバースエンジニアリングのコストが追加されたり、そもそも改修の見積もりができないといった新たな問題も発生します。\n\n総じて、外部設計書の重要度が増すのは「受入試験」工程より後で、初期の外部設計時に作るのが最も合理的でコストも最小になるにも関わらず、そのコストや期間が捻出されず、「後仕様」と言って申し訳程度のドキュメントを後で提出するといった傾向がある様に思えます。\n\n## あれ？設計者が減っていく・・・？\n\n**「書けるけど書かない」** のと **「書けない」** のは別の話です。\n\nアジャイル開発と称して、外部設計を行う事ができるエンジニアが、顧客窓口と直接会話して外部設計～詳細設計～実装～単体試験まですべてを行えば外部設計書はなくても開発案件としては、一応成立します。（運用フェーズの問題は残ります）\n\nしかし、経験値の低いエンジニアがこれだけの工程をこなすことは難しいです。\nまた、アウトプットとしてソースコードしか存在していない状況は、外部設計について認知する機会を減らしてしまっています。\n\n顧客からすると開発会社の若手を育てるのにお金を払う義理はないのですが、このまま放置しておくと、外部設計を行う人間が減っていき、開発案件自体を行うことができなくなっていくことが予想されます。\n上級SEと言われる設計ができる人々は定年などの理由で確実に減っていくからです。\n\n## おわりに\n\n昭和の町工場が、技術の伝承ができなくて消えつつあるのと同様に、令和のIT工場が、外部設計手法の伝承ができずに消えていく可能性を考察してみました。\n\nアジャイル開発をやめて昔のウォーターフォール開発にすることは現実的ではないし、それで解決する問題でもないように思えます。\n\nただ、アジャイル開発手法を取る限りは未経験エンジニアでも案件にアサインされると同時に、設計と開発の能力を求められるチャレンジングな状況となっていくでしょう。\n\nゆでガエルにならないように、生存戦略を考えないといけないかもしれません。\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 5,
    "created_at": "2023-09-16T19:31:35+09:00",
    "group": null,
    "id": "6442adb13601dd06f84e",
    "likes_count": 15,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 12,
    "tags": [
      {
        "name": "アジャイル",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "設計",
        "versions": []
      }
    ],
    "title": "ロストテクノロジー化する外部設計",
    "updated_at": "2023-09-16T19:31:35+09:00",
    "url": "https://qiita.com/kaku3/items/6442adb13601dd06f84e",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 5276,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:229\">文章力を上げるには読み書きの量が大事だという話はよくでてくるのですが、<strong>「いや別に書きたいことないし」</strong> <strong>「ネタがないから続かないし」</strong> って思いませんか？</p>\n<p data-sourcepos=\"5:1-5:27\">わたしは思います。</p>\n<p data-sourcepos=\"7:1-7:239\"><a href=\"https://www.hyuki.com/wl/\" rel=\"nofollow noopener\" target=\"_blank\">文章教室</a>という結城浩先生のサイトが楽しく文章の読み書きの練習ができてよいのですが、残念なことに長いこと新しい問題が供給されていないようです。</p>\n<p data-sourcepos=\"9:1-9:270\">仕方なく本屋で読み書きの問題集の様な本も探しているのですが、考え方を身につけるのに良さそうな本はあるのですが、そのまま読み書きの量を増やすことに使えそうな本は見つけられていません。</p>\n<p data-sourcepos=\"11:1-11:198\">また、『新聞の社説みたいなのを要約するといい』という話もありますが、これは要約をしてみても誰がレビューをするのか問題があり却下です。</p>\n<p data-sourcepos=\"13:1-13:114\">といったところで、GPT先生に練習問題をくださいとお願いしてみることにしました。</p>\n<h2 data-sourcepos=\"15:1-15:27\">\n<span id=\"お願いプロンプト\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E9%A1%98%E3%81%84%E3%83%97%E3%83%AD%E3%83%B3%E3%83%97%E3%83%88\"><i class=\"fa fa-link\"></i></a>お願いプロンプト</h2>\n<p data-sourcepos=\"17:1-17:27\">こちらになります。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"19:1-22:3\"><div class=\"highlight\"><pre><code>文章の要約の練習がしたいので、３０行ぐらいの論旨が散漫な文章をください。\nまとめやヒントや解説はまだ出さないでください。\n</code></pre></div></div>\n<p data-sourcepos=\"24:1-26:199\">分かりにくい文章をどうやって作らせるかに試行錯誤しました。ヒントや解答をセットで出されないように２行目で念押しをしてます。<br>\n難易度は行数等の指示で変えられると思います。<br>\n「キャンプの話をお願いします。」などと好きなテーマを追加してもいいかもしれませんが、AC6<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup>の話など最新の話題は知らないのが残念ですね。</p>\n<h2 data-sourcepos=\"28:1-28:24\">\n<span id=\"gpt先生の出題例\" class=\"fragment\"></span><a href=\"#gpt%E5%85%88%E7%94%9F%E3%81%AE%E5%87%BA%E9%A1%8C%E4%BE%8B\"><i class=\"fa fa-link\"></i></a>GPT先生の出題例</h2>\n<blockquote data-sourcepos=\"30:1-32:907\">\n<p data-sourcepos=\"30:3-30:89\">もちろん、論旨が散漫な文章を提供します。以下はその例です。</p>\n<p data-sourcepos=\"32:3-32:907\">\"近年の環境問題に対する国際的なアプローチは複雑であり、さまざまな国が異なるアプローチをとっています。一方で、科学的な証拠は環境変化の深刻さを示しており、対策が急務です。経済的な要因も環境政策に影響を与えており、持続可能な経済モデルの探求が求められています。一方で、環境保護活動には資金とリーダーシップが必要です。さらに、技術革新も環境問題に対する解決策の一部となっており、新たなエネルギー源の開発やクリーンテクノロジーの普及が進んでいます。しかし、これらの取り組みには課題も多く、国際的な協力が不可欠です。環境問題は人類全体に影響を与える重要な課題であり、持続可能な未来のためには緊急の行動が必要です。\"</p>\n</blockquote>\n<p data-sourcepos=\"34:1-36:90\">いつも理路整然としたGPT先生とは思えない文章です。<br>\n一つ一つの文章は整っているにも関わらずに全体を通してみると何を言いたいのかがさっぱり分かりません。<br>\n要約の問題としてはかなり良問と感じましたがいかがでしょうか？</p>\n<h2 data-sourcepos=\"38:1-38:48\">\n<span id=\"要約理解と整理アウトプット\" class=\"fragment\"></span><a href=\"#%E8%A6%81%E7%B4%84%E7%90%86%E8%A7%A3%E3%81%A8%E6%95%B4%E7%90%86%E3%82%A2%E3%82%A6%E3%83%88%E3%83%97%E3%83%83%E3%83%88\"><i class=\"fa fa-link\"></i></a>要約＝理解と整理＋アウトプット</h2>\n<p data-sourcepos=\"40:1-40:189\">ここで、この文章の構造をよく見ると、この文章を要約することで、わたし達の業務において重要な能力が鍛えられることが見えてきます。</p>\n<p data-sourcepos=\"42:1-43:202\"><strong>様々な部署を回ってきたであろう</strong>エクセルの要件定義資料。<strong>他の担当者が書いた部分との整合性は気にせずに自分の担当分を記入したであろう</strong>要件定義資料を思い浮かべてください。<br>\n異なる利害関係を持つ担当者がそれぞれの要求を書いた資料は、ChatGPT先生が例題に出してくれた文章の様な構造になる可能性があると思いませんか？</p>\n<p data-sourcepos=\"45:1-45:135\">要約は、そういったものを理解したり整理したりした結果を <strong>アウトプット</strong> する行為だからです。</p>\n<p data-sourcepos=\"47:1-47:225\">頭の中で理解して整理するだけではなく、要約した結果をアウトプットして見える化することで、他の担当者との要件の調整がスムーズになることもあると思います。</p>\n<p data-sourcepos=\"49:1-49:141\">そういった意味では、要約力は、どんな仕事をする上でも必要になる基本的なスキルと言えるでしょう。</p>\n<h2 data-sourcepos=\"51:1-51:12\">\n<span id=\"回答例\" class=\"fragment\"></span><a href=\"#%E5%9B%9E%E7%AD%94%E4%BE%8B\"><i class=\"fa fa-link\"></i></a>回答例</h2>\n<p data-sourcepos=\"53:1-54:84\">この様なエントリーを書いてますが、わたしも修行中の身です。回答を書くのにエライ時間かかってしまいました。(笑)<br>\n日頃読み書きしない文章だったのでだいぶ勉強になりました。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"56:1-62:3\"><div class=\"highlight\"><pre><code>要約すると以下でよいですか？\n＝＝＝＝\n環境問題は、科学的な証拠から深刻と示されている問題です。\n問題の解決には、資金、リーダーシップ、および新たなエネルギー源の開発やクリーンテクノロジーの普及といった技術革新などが必要です。\n人類全体が、国際的な協力をもって、持続可能な未来に向けて緊急の行動を取る必要があると言えるでしょう。\n</code></pre></div></div>\n<blockquote data-sourcepos=\"64:1-64:194\">\n<p data-sourcepos=\"64:3-64:194\">はい、提供された要約は原文の主要なポイントを簡潔にまとめており、正確に要約されています。原文の内容を要約したものとして適切です。</p>\n</blockquote>\n<p data-sourcepos=\"66:1-67:99\">GPT先生がレビューしてくれるのがポイントが高いですね。普通に嬉しいです。<br>\n指摘される時も、人間に指摘されるより痛みが少ないのでオススメです。</p>\n<h2 data-sourcepos=\"69:1-69:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"71:1-71:181\">ChatGPT先生は常々壁打ちに便利だなとは思っていたのですが、要約力を上げるのにも使えそうというのはかなり便利だなと思いました。</p>\n<p data-sourcepos=\"73:1-73:407\">遠くない未来のITエンジニアの仕事は、案件の小型化が進んだ結果、<strong>AIに仕事を取られるのではなくて、１人の人間が担当する範囲が広がることになり、</strong> 外部設計や要件定義などにも時間を取られる様になり、開発をする時間が減るからそこはAIでうまいことやるようになるのかなという気もします。</p>\n<p data-sourcepos=\"75:1-75:141\">そうした未来に向けて、要約力を上げておくことはエンジニアの生存戦略としては有効だと思いました。</p>\n<h2 data-sourcepos=\"77:1-77:15\">\n<span id=\"おまけ０\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%90\"><i class=\"fa fa-link\"></i></a>おまけ０</h2>\n<p data-sourcepos=\"79:1-79:50\"><iframe id=\"qiita-embed-content__a261a4135dde39c6d4f9ac61af8ec677\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a261a4135dde39c6d4f9ac61af8ec677\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F71c389c0cc5e89463ce9\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"81:1-81:50\"><iframe id=\"qiita-embed-content__a6a94961c1a2b4703fdeab37e7affa80\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a6a94961c1a2b4703fdeab37e7affa80\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fd519a2b0e35a7a269ea4\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"83:1-83:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"85:1-85:50\"><iframe id=\"qiita-embed-content__e059ff9d175fc8db9ebee6f70bb85b57\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e059ff9d175fc8db9ebee6f70bb85b57\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"87:1-87:50\"><iframe id=\"qiita-embed-content__672f61ea2c5662251e1491df0f35ee48\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__672f61ea2c5662251e1491df0f35ee48\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"89:1-89:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"91:1-91:50\"><iframe id=\"qiita-embed-content__0b1983992768a5e7e5a03eae487f44b5\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__0b1983992768a5e7e5a03eae487f44b5\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"93:1-93:50\"><iframe id=\"qiita-embed-content__2656da8b8318bfacdcb59bff375263d1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2656da8b8318bfacdcb59bff375263d1\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"95:1-95:50\"><iframe id=\"qiita-embed-content__b84486e0645450429765688c67a3bb2d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b84486e0645450429765688c67a3bb2d\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"97:1-97:50\"><iframe id=\"qiita-embed-content__26cf170b7b9d42708e5e7857c302157a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__26cf170b7b9d42708e5e7857c302157a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"99:1-99:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"101:1-101:50\"><iframe id=\"qiita-embed-content__b0530d20c68c733a83e1a9a4859bd609\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b0530d20c68c733a83e1a9a4859bd609\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"103:1-103:50\"><iframe id=\"qiita-embed-content__71439768b8991134b0217efa1cf1cd20\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__71439768b8991134b0217efa1cf1cd20\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"105:1-105:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"107:1-107:50\"><iframe id=\"qiita-embed-content__8018c0a1d4c6617f27edd56855d6bb8f\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__8018c0a1d4c6617f27edd56855d6bb8f\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"109:1-109:50\"><iframe id=\"qiita-embed-content__51e8fa396709af33d37e9edeb3c46a02\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__51e8fa396709af33d37e9edeb3c46a02\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"111:1-111:50\"><iframe id=\"qiita-embed-content__e61d3cc12f3f74f653746c4f887aa7f2\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e61d3cc12f3f74f653746c4f887aa7f2\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"113:1-113:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"115:1-115:50\"><iframe id=\"qiita-embed-content__080c94752acce88c3ee2b70fb1055b7c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__080c94752acce88c3ee2b70fb1055b7c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"117:1-117:50\"><iframe id=\"qiita-embed-content__486e19f7dde7bb5b43c02878d2fe87d8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__486e19f7dde7bb5b43c02878d2fe87d8\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"119:1-119:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"121:1-122:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"124:1-124:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"126:7-126:156\">アーマード・コアVI ファイアーズオブルビコン。フロム・ソフトウェアのロボットゲーム。身体は闘争を求める <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\n文章力を上げるには読み書きの量が大事だという話はよくでてくるのですが、**「いや別に書きたいことないし」** **「ネタがないから続かないし」** って思いませんか？\n\nわたしは思います。\n\n[文章教室](https://www.hyuki.com/wl/)という結城浩先生のサイトが楽しく文章の読み書きの練習ができてよいのですが、残念なことに長いこと新しい問題が供給されていないようです。\n\n仕方なく本屋で読み書きの問題集の様な本も探しているのですが、考え方を身につけるのに良さそうな本はあるのですが、そのまま読み書きの量を増やすことに使えそうな本は見つけられていません。\n\nまた、『新聞の社説みたいなのを要約するといい』という話もありますが、これは要約をしてみても誰がレビューをするのか問題があり却下です。\n\nといったところで、GPT先生に練習問題をくださいとお願いしてみることにしました。\n\n## お願いプロンプト\n\nこちらになります。\n\n```\n文章の要約の練習がしたいので、３０行ぐらいの論旨が散漫な文章をください。\nまとめやヒントや解説はまだ出さないでください。\n```\n\n分かりにくい文章をどうやって作らせるかに試行錯誤しました。ヒントや解答をセットで出されないように２行目で念押しをしてます。\n難易度は行数等の指示で変えられると思います。\n「キャンプの話をお願いします。」などと好きなテーマを追加してもいいかもしれませんが、AC6[^1]の話など最新の話題は知らないのが残念ですね。\n\n## GPT先生の出題例\n\n> もちろん、論旨が散漫な文章を提供します。以下はその例です。\n>\n> \"近年の環境問題に対する国際的なアプローチは複雑であり、さまざまな国が異なるアプローチをとっています。一方で、科学的な証拠は環境変化の深刻さを示しており、対策が急務です。経済的な要因も環境政策に影響を与えており、持続可能な経済モデルの探求が求められています。一方で、環境保護活動には資金とリーダーシップが必要です。さらに、技術革新も環境問題に対する解決策の一部となっており、新たなエネルギー源の開発やクリーンテクノロジーの普及が進んでいます。しかし、これらの取り組みには課題も多く、国際的な協力が不可欠です。環境問題は人類全体に影響を与える重要な課題であり、持続可能な未来のためには緊急の行動が必要です。\"\n\nいつも理路整然としたGPT先生とは思えない文章です。\n一つ一つの文章は整っているにも関わらずに全体を通してみると何を言いたいのかがさっぱり分かりません。\n要約の問題としてはかなり良問と感じましたがいかがでしょうか？\n\n## 要約＝理解と整理＋アウトプット\n\nここで、この文章の構造をよく見ると、この文章を要約することで、わたし達の業務において重要な能力が鍛えられることが見えてきます。\n\n**様々な部署を回ってきたであろう**エクセルの要件定義資料。**他の担当者が書いた部分との整合性は気にせずに自分の担当分を記入したであろう**要件定義資料を思い浮かべてください。\n異なる利害関係を持つ担当者がそれぞれの要求を書いた資料は、ChatGPT先生が例題に出してくれた文章の様な構造になる可能性があると思いませんか？\n\n要約は、そういったものを理解したり整理したりした結果を **アウトプット** する行為だからです。\n\n頭の中で理解して整理するだけではなく、要約した結果をアウトプットして見える化することで、他の担当者との要件の調整がスムーズになることもあると思います。\n\nそういった意味では、要約力は、どんな仕事をする上でも必要になる基本的なスキルと言えるでしょう。\n\n## 回答例\n\nこの様なエントリーを書いてますが、わたしも修行中の身です。回答を書くのにエライ時間かかってしまいました。(笑)\n日頃読み書きしない文章だったのでだいぶ勉強になりました。\n\n```\n要約すると以下でよいですか？\n＝＝＝＝\n環境問題は、科学的な証拠から深刻と示されている問題です。\n問題の解決には、資金、リーダーシップ、および新たなエネルギー源の開発やクリーンテクノロジーの普及といった技術革新などが必要です。\n人類全体が、国際的な協力をもって、持続可能な未来に向けて緊急の行動を取る必要があると言えるでしょう。\n```\n\n> はい、提供された要約は原文の主要なポイントを簡潔にまとめており、正確に要約されています。原文の内容を要約したものとして適切です。\n\nGPT先生がレビューしてくれるのがポイントが高いですね。普通に嬉しいです。\n指摘される時も、人間に指摘されるより痛みが少ないのでオススメです。\n\n## おわりに\n\nChatGPT先生は常々壁打ちに便利だなとは思っていたのですが、要約力を上げるのにも使えそうというのはかなり便利だなと思いました。\n\n遠くない未来のITエンジニアの仕事は、案件の小型化が進んだ結果、**AIに仕事を取られるのではなくて、１人の人間が担当する範囲が広がることになり、** 外部設計や要件定義などにも時間を取られる様になり、開発をする時間が減るからそこはAIでうまいことやるようになるのかなという気もします。\n\nそうした未来に向けて、要約力を上げておくことはエンジニアの生存戦略としては有効だと思いました。\n\n## おまけ０\n\nhttps://qiita.com/kaku3/items/71c389c0cc5e89463ce9\n\nhttps://qiita.com/kaku3/items/d519a2b0e35a7a269ea4\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n[^1]: アーマード・コアVI ファイアーズオブルビコン。フロム・ソフトウェアのロボットゲーム。身体は闘争を求める\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-09-09T16:35:42+09:00",
    "group": null,
    "id": "4243a1c0cb9779d6bc1f",
    "likes_count": 33,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 34,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "アウトプット",
        "versions": []
      },
      {
        "name": "ChatGPT",
        "versions": []
      }
    ],
    "title": "アウトプットしたいものはないけど文章力を上げなきゃ…という人のためのChatGPTプロンプト",
    "updated_at": "2023-09-09T16:35:42+09:00",
    "url": "https://qiita.com/kaku3/items/4243a1c0cb9779d6bc1f",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 14844,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:51\">先日こんなツイートを見かけました。</p>\n<p data-sourcepos=\"5:1-5:86\"><iframe id=\"qiita-embed-content__31330bae87ab027858e8c03829517270\" src=\"https://qiita.com/embed-contents/tweet#qiita-embed-content__31330bae87ab027858e8c03829517270\" data-content=\"https%3A%2F%2Ftwitter.com%2Fkomitsubo%2Fstatus%2F1696296654104600883%3Ft%3D7paolOf2HnReyIDudY2sPw%26s%3D19\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"7:1-7:141\">期待値を大きく外してきた成果物に対してどのように対応するかという問題についてのツイートでした。</p>\n<p data-sourcepos=\"9:1-9:346\">このツイートのレビュー依頼者は「まずい点」を指摘してもらって修正すれば成果物として成立すると考えているけれど、レビュワーから見ると<strong>評価できる点がなく</strong>このままでは成果物として成立させることができないと考えているように読み取れます。</p>\n<p data-sourcepos=\"11:1-11:279\">7-8割程度期待値を満たしているものに対してのレビューであれば、レビューによって修正して成果物として成立させることができ、また、考え方を伝えることで次回からの成果物の質も上げられるでしょう。</p>\n<p data-sourcepos=\"13:1-14:160\">一方で、期待値を全く満たしていない成果物に対してのレビューは、レビュワー、レビューイともに大きな苦痛を与えます。<br>\n<strong>懸命に作ったものを跡形なく直されるのは辛いですが、懸命に作ったものを跡形なく直すのも同じぐらい辛いです。</strong></p>\n<p data-sourcepos=\"16:1-16:288\">7-8割程度期待値を満たしてからレビュー依頼に出す、または、ポイントを絞って質問をしながら進めればこのような悲劇は回避できるはずですが、なぜ評価できる点がないものがレビュー依頼されるのでしょうか？</p>\n<p data-sourcepos=\"18:1-18:85\">ChatGPT先生にヒントをもらいながら考察してみたいと思います。</p>\n<h2 data-sourcepos=\"20:1-20:30\">\n<span id=\"外部設計作業を考察\" class=\"fragment\"></span><a href=\"#%E5%A4%96%E9%83%A8%E8%A8%AD%E8%A8%88%E4%BD%9C%E6%A5%AD%E3%82%92%E8%80%83%E5%AF%9F\"><i class=\"fa fa-link\"></i></a>外部設計作業を考察</h2>\n<p data-sourcepos=\"22:1-22:138\">あるウェブシステムについて、要件定義書から外部設計書を作成する作業で考えてみることにします。</p>\n<ul data-sourcepos=\"24:1-25:0\">\n<li data-sourcepos=\"24:1-25:0\">(わたし)</li>\n</ul>\n<blockquote data-sourcepos=\"26:1-27:42\">\n<p data-sourcepos=\"26:3-27:42\">ウェブシステムについて要件定義書から外部設計書を作成しなければなりません。<br>\n必要な作業を教えてください。</p>\n</blockquote>\n<ul data-sourcepos=\"29:1-30:0\">\n<li data-sourcepos=\"29:1-30:0\">(GPT)</li>\n</ul>\n<blockquote data-sourcepos=\"31:1-56:221\">\n<p data-sourcepos=\"31:3-31:329\">ウェブシステムの要件定義書から外部設計書を作成するためには、以下の一般的な作業手順を考慮できます。これらのステップは、システムの構造や機能を明確に文書化し、開発者や関係者にとって理解しやすい形に整理するのに役立ちます。</p>\n<ol data-sourcepos=\"33:3-55:1\">\n<li data-sourcepos=\"33:3-34:285\">要件定義書のレビュー:<br>\nまず初めに、既存の要件定義書を詳細にレビューし、システムの主要な機能や要件を把握します。要件定義書が不完全な場合、ステークホルダーとのコミュニケーションを通じて不足している情報を収集します。</li>\n<li data-sourcepos=\"35:3-36:287\">外部設計の概要:<br>\nシステム全体の外部設計の概要を作成します。これは、システムの全体的なアーキテクチャ、ユーザーインターフェース（UI）の概要、および主要なコンポーネントやモジュールの役割についての説明を含みます。</li>\n<li data-sourcepos=\"37:3-38:334\">ユーザーインターフェース（UI）設計:<br>\nウェブシステムのUIデザインを文書化します。画面のレイアウト、ユーザーコントロール、ナビゲーション、色、フォントなどの詳細を含みます。ユーザーエクスペリエンス（UX）を向上させるために、ユーザーフローとプロトタイプも考慮します。</li>\n<li data-sourcepos=\"39:3-40:363\">機能仕様の詳細化:<br>\n各機能やモジュールに関する詳細な仕様を文書化します。これには、入力と出力の形式、データ処理のロジック、エラーハンドリング、セキュリティ要件などが含まれます。UML図、フローチャート、シーケンス図などを使用してプロセスを視覚化することが役立ちます。</li>\n<li data-sourcepos=\"41:3-42:186\">データモデルの設計:<br>\nデータベーススキーマやデータモデルを文書化し、テーブル、関係、データのフロー、およびデータの整合性について詳細に説明します。</li>\n<li data-sourcepos=\"43:3-44:165\">アーキテクチャと技術スタック:<br>\nシステムのアーキテクチャと使用する技術スタックを明確にし、ハードウェアおよびソフトウェアの要件を文書化します。</li>\n<li data-sourcepos=\"45:3-46:129\">拡張性と保守性の検討:<br>\nシステムの将来の拡張性と保守性を向上させるための設計を検討し、外部設計に反映させます。</li>\n<li data-sourcepos=\"47:3-48:165\">セキュリティ要件:<br>\nシステムのセキュリティ要件を文書化し、データ保護、アクセス制御、認証などのセキュリティ関連の要件を考慮します。</li>\n<li data-sourcepos=\"49:3-50:183\">外部設計書のドキュメンテーション:<br>\n上記の情報を整理し、外部設計書としてまとめます。一貫性があり、わかりやすい形式に整形し、図表やテキストで説明を補完します。</li>\n<li data-sourcepos=\"51:3-52:141\">レビューと承認:<br>\n外部設計書を関係者や開発チームに提出し、レビューと承認を受けます。必要に応じて修正を加えます。</li>\n<li data-sourcepos=\"53:3-55:1\">外部設計の更新と保守:<br>\nシステムが変更されるたびに、外部設計書を更新し、最新の情報を反映させます。これにより、システムの保守が容易になります。</li>\n</ol>\n<p data-sourcepos=\"56:3-56:221\">これらのステップを追跡し、外部設計書を丁寧に作成することで、ウェブシステムの開発と保守が円滑に進行し、関係者とのコミュニケーションも強化されます。</p>\n</blockquote>\n<p data-sourcepos=\"58:1-59:99\">さすがGPT先生。かなり分かりやすい作業分類ですね。<br>\n業務によって過不足等ありそうですが、これがあれば考察できそうです。</p>\n<p data-sourcepos=\"61:1-62:144\">外部設計書を作成してレビューするという作業は上記の 9, 10 にあたります。<br>\nレビュワーのインプットは、前工程で誰かが作成した要件定義書とレビューイが作成した外部設計書です。</p>\n<p data-sourcepos=\"64:1-64:135\">考察を進めるため作業とレビュワーとレビューイが見るもの、作成するものを図に示しておきます。</p>\n<p data-sourcepos=\"66:1-66:135\"><a href=\"https://camo.qiitausercontent.com/dabd16ee746fdd50f322968b32e4d86efbde5a5b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64393533626538302d643565372d656532312d643066652d3562306162313766636634342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fd953be80-d5e7-ee21-d0fe-5b0ab17fcf44.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=5ee5f25ed3f1625dd00df4d596913330\" alt=\"外部設計.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d953be80-d5e7-ee21-d0fe-5b0ab17fcf44.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fd953be80-d5e7-ee21-d0fe-5b0ab17fcf44.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=0e441335e1400a2edc840e1c5f1615b5 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"68:1-68:109\"><strong>どの作業に課題があるとレビューで跡形なく直るのか見えましたでしょうか？</strong></p>\n<h2 data-sourcepos=\"70:1-70:33\">\n<span id=\"課題のある作業と考察\" class=\"fragment\"></span><a href=\"#%E8%AA%B2%E9%A1%8C%E3%81%AE%E3%81%82%E3%82%8B%E4%BD%9C%E6%A5%AD%E3%81%A8%E8%80%83%E5%AF%9F\"><i class=\"fa fa-link\"></i></a>課題のある作業と考察</h2>\n<h3 data-sourcepos=\"72:1-72:37\">\n<span id=\"1-要件定義書のレビュー\" class=\"fragment\"></span><a href=\"#1-%E8%A6%81%E4%BB%B6%E5%AE%9A%E7%BE%A9%E6%9B%B8%E3%81%AE%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC\"><i class=\"fa fa-link\"></i></a>1. 要件定義書のレビュー</h3>\n<p data-sourcepos=\"74:1-75:156\">跡形なく直る場合、最初の作業に問題があると考えるのが自然でしょう。<br>\n最初の作業が正しく実施できていなければ、その後に積み上がる作業は全部間違って無駄になる可能性が高いです。</p>\n<p data-sourcepos=\"77:1-78:123\">このパートは逆転裁判<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup>の調査パートのようなものです。地味で分かりにくい点も多いのですが証拠品を全て集めきらないと裁判パートで勝利できないです。裁判パートで勝利するためにも証拠品を全部かき集めましょう。<br>\n※ゲームではハマり回避のため証拠を集めきらないと裁判パートに進めない仕様でしたが。</p>\n<blockquote data-sourcepos=\"80:1-81:287\">\n<ol data-sourcepos=\"80:3-81:287\">\n<li data-sourcepos=\"80:3-81:287\">要件定義書のレビュー:<br>\nまず初めに、既存の要件定義書を詳細にレビューし、システムの主要な機能や要件を把握します。要件定義書が不完全な場合、ステークホルダーとのコミュニケーションを通じて不足している情報を収集します。</li>\n</ol>\n</blockquote>\n<p data-sourcepos=\"83:1-83:164\"><strong>「システムの主要な機能や要件を把握します。」</strong> とサクッと書かれていますが、把握するには相当な訓練が必要です。</p>\n<p data-sourcepos=\"85:1-85:431\">わたし達の日常生活では、ググって一番安い物を探したり、YouTubeをダラダラ見てLINEやツイッターで感想を投げつけ合うことはあるかもしれませんが、まとまった量の文章を読んで、それを理解して整理して誰かに分かりやすい形で伝えるということはしていないため、日本語の読み書きをする訓練が別途必要なのです。</p>\n<p data-sourcepos=\"87:1-87:171\">また、自分では分かったと思っても <strong>「本当に分かったのかは、本人では分からない」</strong> ことも問題を複雑にしていそうです。</p>\n<ul data-sourcepos=\"89:1-91:0\">\n<li data-sourcepos=\"89:1-89:69\">レビュワー：承太郎<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup>「もうだいたいおぼえた」</li>\n<li data-sourcepos=\"90:1-91:0\">レビューイ：ポプ子<sup><a href=\"#fn-3\" id=\"fnref-3\">3</a></sup>「あーそーゆーことね完全に理解した」（わかってない）</li>\n</ul>\n<p data-sourcepos=\"92:1-92:409\">システムの把握の仕方には個人差があると思いますが、とりあえず資料には全て目を通して、<strong>これから作るシステムを脳内で（以後脳内システムと表記）動かしてヌケモレがないか確認して</strong>、ヌケモレがあれば必要な資料を更に探すか関係者に質問するなどする事ができるようになるとよさそうです。</p>\n<h3 data-sourcepos=\"94:1-94:28\">\n<span id=\"2-外部設計の概要\" class=\"fragment\"></span><a href=\"#2-%E5%A4%96%E9%83%A8%E8%A8%AD%E8%A8%88%E3%81%AE%E6%A6%82%E8%A6%81\"><i class=\"fa fa-link\"></i></a>2. 外部設計の概要</h3>\n<p data-sourcepos=\"96:1-97:165\">残念ながら「要件定義書のレビュー」の作業には成果物がありません。<br>\n一番手戻りが少なく、レビュワーに成果物ベースで確認を取れる最初の作業は「外部設計の概要」の作業となりそうです。</p>\n<blockquote data-sourcepos=\"99:1-100:287\">\n<ol data-sourcepos=\"99:3-100:287\">\n<li data-sourcepos=\"99:3-100:287\">外部設計の概要:<br>\nシステム全体の外部設計の概要を作成します。これは、システムの全体的なアーキテクチャ、ユーザーインターフェース（UI）の概要、および主要なコンポーネントやモジュールの役割についての説明を含みます。</li>\n</ol>\n</blockquote>\n<p data-sourcepos=\"102:1-102:126\">「要件定義書のレビュー」作業で作った「脳内システム」の書き出しをするとよさそうです。</p>\n<p data-sourcepos=\"104:1-104:66\">概要と、目次を並行して作成するイメージです。</p>\n<p data-sourcepos=\"106:1-107:267\">概要には「脳内システム」が実現するシステムの主要な機能や要件を書きます。<strong>「こんな要件を満たしたいからこんな機能を持ったシステムを作ります」</strong> という全体像を冒頭で説明し、システムについて何も知らない読者にシステムを理解してもらえるようにします。<br>\n概要のレビュー観点は「脳内システム」の整合性になります。脳内でシステムがある程度組み立てられていて、それを説明できるようになってくれば跡形なく直されることは減っていくと思います。</p>\n<p data-sourcepos=\"109:1-111:249\">目次は外部設計書の骨組みです。この後何をどの様な粒度で説明していくかの指針が分かる程度に書けるといいでしょう。<br>\n章立てや粒度の構成はかなり基本的な技術であるにも関わらず、なぜか学校ではそれを訓練する機会があまり設けられていません。<br>\n『「脳内システム」を説明するための最良の構成』が必要であるため、他のプロジェクトの外部設計書などを参考にすることはできても、コピペで使えるテンプレなどは存在しません。</p>\n<p data-sourcepos=\"113:1-113:210\">書いて、自分の課題を客観的に判断して、本屋に行って課題を解決できそうな本を買って読んでまた書いて…と試行錯誤を繰り返していくとよさそうです。</p>\n<h3 data-sourcepos=\"115:1-115:55\">\n<span id=\"9-外部設計書のドキュメンテーション\" class=\"fragment\"></span><a href=\"#9-%E5%A4%96%E9%83%A8%E8%A8%AD%E8%A8%88%E6%9B%B8%E3%81%AE%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%86%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\"><i class=\"fa fa-link\"></i></a>9. 外部設計書のドキュメンテーション</h3>\n<p data-sourcepos=\"117:1-117:147\">基本的な「仕様書文章力」がないと、全行修正されてしまい、結果として跡形なく直される原因となります。</p>\n<p data-sourcepos=\"119:1-120:81\">これは字を読み書きすることでしか改善しません。<br>\nよさそうな本を買ってきて読んだり書いたりしてください。</p>\n<p data-sourcepos=\"122:1-122:417\">例) <a href=\"https://www.amazon.co.jp/%E4%BC%9D%E3%82%8F%E3%82%8B-%E6%96%87%E7%AB%A0%E5%8A%9B%E3%81%8C%E8%BA%AB%E3%81%AB%E3%81%A4%E3%81%8F%E6%9C%AC-%E5%9F%BA%E7%A4%8E%E3%81%8B%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E2%80%9C%E4%BC%9D%E3%82%8F%E3%82%8B-%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-%E5%B0%8F%E7%AC%A0%E5%8E%9F/dp/4471191160\" rel=\"nofollow noopener\" target=\"_blank\">amazon : 伝わる! 文章力が身につく本 (基礎からわかる\"伝わる!\"シリーズ)</a></p>\n<p data-sourcepos=\"124:1-125:309\">絵がうまくなる方法と考え方は同じです。<br>\n本や人づてでテクニックを学ぶのも大事ですが、一番大事なのはたくさん読み書きすることです。字を読んだり書いたりする速さが上がれば試行錯誤できる回数も増えてレビューを受けられる回数も増え、改善の機会も増えます。</p>\n<p data-sourcepos=\"127:1-127:156\">すぐに文章を作ったり直したりできる様になれば指摘されても直すことが苦痛ではなくなるので、痛みも減ります。</p>\n<p data-sourcepos=\"129:1-129:321\">※個人的にはテクニカルな本を読むよりは、小説や漫画など好きな本を大量に読む方が苦しくなく続けらてよいのかなと思っています。小説や漫画には、分かりやすく効果的に人に物を伝えるテクニックの実例が大量に登場していますし。</p>\n<h2 data-sourcepos=\"131:1-131:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"133:1-133:90\">今回はレビューで跡形なく直される理由について考えてみました。</p>\n<p data-sourcepos=\"135:1-135:126\">大きく以下３点の力を身に着けていくと跡形なく直されることは減っていく様に思えました。</p>\n<ol data-sourcepos=\"137:1-140:0\">\n<li data-sourcepos=\"137:1-137:69\">要件定義を把握してシステムを組み上げる設計力</li>\n<li data-sourcepos=\"138:1-138:66\">概要、骨組みを作成し理路整然と伝える構成力</li>\n<li data-sourcepos=\"139:1-140:0\">仕様書文章力</li>\n</ol>\n<p data-sourcepos=\"141:1-142:171\">跡形なく直される事を回避する一番のコツは「マメにポイントを絞って確認をとること」だと思いますが、それを実践するためには、「ある程度の構成力」や「ある程度の仕様書文章力」を身に着けておくことは必須となると思います。<br>\n相手には解決できない基本的な問題は先に解決しておかないと、相手に時間を使ってもらっても問題が解決できないからです。</p>\n<p data-sourcepos=\"144:1-144:302\">設計力については、今見ているQiitaの外部設計を書き出してみるなどでも訓練になるかもしれません。存在しない新しいシステムの設計は答え合わせができないのと企画に時間がかかることから訓練には適さないと思います。</p>\n<p data-sourcepos=\"146:1-146:199\">[3. ユーザーインターフェース（UI）設計] ~ [8. セキュリティ要件] についても色々ありますが「跡形なく直される」のテーマからは除外としました。</p>\n<h2 data-sourcepos=\"148:1-148:15\">\n<span id=\"おまけ０\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%90\"><i class=\"fa fa-link\"></i></a>おまけ０</h2>\n<p data-sourcepos=\"150:1-150:50\"><iframe id=\"qiita-embed-content__61611fdee18ecccfb6e69a67f0260491\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__61611fdee18ecccfb6e69a67f0260491\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F53a8690a5d9d3fa1b87e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"152:1-152:50\"><iframe id=\"qiita-embed-content__82fedd38d32c41497ecdb80a8e1da025\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__82fedd38d32c41497ecdb80a8e1da025\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F6442adb13601dd06f84e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"154:1-154:50\"><iframe id=\"qiita-embed-content__92558eb57a6eace566fd44f60bda3482\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__92558eb57a6eace566fd44f60bda3482\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F4243a1c0cb9779d6bc1f\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"156:1-156:50\"><iframe id=\"qiita-embed-content__989cd9b1e3de451c7f65d658f6e20e78\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__989cd9b1e3de451c7f65d658f6e20e78\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F9354614403000ee4b6d8\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"158:1-158:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"160:1-160:50\"><iframe id=\"qiita-embed-content__d5cf95ebbb6444969afdd4937c72ea52\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__d5cf95ebbb6444969afdd4937c72ea52\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"162:1-162:50\"><iframe id=\"qiita-embed-content__a5c9b4e70bac9de00782e490df3ab50f\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a5c9b4e70bac9de00782e490df3ab50f\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"164:1-164:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"166:1-166:50\"><iframe id=\"qiita-embed-content__567b797d2fcbff19e8333eb07fde25e2\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__567b797d2fcbff19e8333eb07fde25e2\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"168:1-168:50\"><iframe id=\"qiita-embed-content__91785aaf980a4aba03002a2825e72ab3\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__91785aaf980a4aba03002a2825e72ab3\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"170:1-170:50\"><iframe id=\"qiita-embed-content__183e3adb71784e9f77e3c9dfa2452476\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__183e3adb71784e9f77e3c9dfa2452476\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"172:1-172:50\"><iframe id=\"qiita-embed-content__95f05569725c3dc1b13cf3484b540db9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__95f05569725c3dc1b13cf3484b540db9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"174:1-174:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"176:1-176:50\"><iframe id=\"qiita-embed-content__2620e96f51b56bfb854ca7c2cb462fda\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2620e96f51b56bfb854ca7c2cb462fda\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"178:1-178:50\"><iframe id=\"qiita-embed-content__7b48f185210e695569eb34dae44843be\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__7b48f185210e695569eb34dae44843be\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"180:1-180:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"182:1-182:50\"><iframe id=\"qiita-embed-content__6753e586724ff474df39e4a0b03a0896\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6753e586724ff474df39e4a0b03a0896\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"184:1-184:50\"><iframe id=\"qiita-embed-content__6a36f1a0c1418ffac87e94b0adffd089\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6a36f1a0c1418ffac87e94b0adffd089\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"186:1-186:50\"><iframe id=\"qiita-embed-content__b8483f55505ad7fb9a6411b34ede3eeb\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b8483f55505ad7fb9a6411b34ede3eeb\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"188:1-188:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"190:1-190:50\"><iframe id=\"qiita-embed-content__8c632431d921863db410b707180cbba0\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__8c632431d921863db410b707180cbba0\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"192:1-192:50\"><iframe id=\"qiita-embed-content__767c2803d5f4f4a769bcae82d8951f6e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__767c2803d5f4f4a769bcae82d8951f6e\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"194:1-194:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"196:1-197:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"199:1-199:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"201:7-201:138\">カプコンの無実の罪を着せられた依頼人を救う法廷バトルゲーム。主人公は弁護士の成歩堂くん。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"202:7-202:93\">ジョジョの奇妙な冒険第３部の主人公。この後めっちゃつよい。 <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-3\">\n<p data-sourcepos=\"203:7-203:78\">漫画ポプテピピックの主人公。短い方。今日も一日。 <a href=\"#fnref-3\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\n先日こんなツイートを見かけました。\n\nhttps://twitter.com/komitsubo/status/1696296654104600883?t=7paolOf2HnReyIDudY2sPw&s=19\n\n期待値を大きく外してきた成果物に対してどのように対応するかという問題についてのツイートでした。\n\nこのツイートのレビュー依頼者は「まずい点」を指摘してもらって修正すれば成果物として成立すると考えているけれど、レビュワーから見ると**評価できる点がなく**このままでは成果物として成立させることができないと考えているように読み取れます。\n\n7-8割程度期待値を満たしているものに対してのレビューであれば、レビューによって修正して成果物として成立させることができ、また、考え方を伝えることで次回からの成果物の質も上げられるでしょう。\n\n一方で、期待値を全く満たしていない成果物に対してのレビューは、レビュワー、レビューイともに大きな苦痛を与えます。\n**懸命に作ったものを跡形なく直されるのは辛いですが、懸命に作ったものを跡形なく直すのも同じぐらい辛いです。**\n\n7-8割程度期待値を満たしてからレビュー依頼に出す、または、ポイントを絞って質問をしながら進めればこのような悲劇は回避できるはずですが、なぜ評価できる点がないものがレビュー依頼されるのでしょうか？\n\nChatGPT先生にヒントをもらいながら考察してみたいと思います。\n\n## 外部設計作業を考察\n\nあるウェブシステムについて、要件定義書から外部設計書を作成する作業で考えてみることにします。\n\n- (わたし)\n\n> ウェブシステムについて要件定義書から外部設計書を作成しなければなりません。\n必要な作業を教えてください。\n\n- (GPT)\n\n> ウェブシステムの要件定義書から外部設計書を作成するためには、以下の一般的な作業手順を考慮できます。これらのステップは、システムの構造や機能を明確に文書化し、開発者や関係者にとって理解しやすい形に整理するのに役立ちます。\n>\n> 1. 要件定義書のレビュー:\nまず初めに、既存の要件定義書を詳細にレビューし、システムの主要な機能や要件を把握します。要件定義書が不完全な場合、ステークホルダーとのコミュニケーションを通じて不足している情報を収集します。\n> 2. 外部設計の概要:\nシステム全体の外部設計の概要を作成します。これは、システムの全体的なアーキテクチャ、ユーザーインターフェース（UI）の概要、および主要なコンポーネントやモジュールの役割についての説明を含みます。\n> 3. ユーザーインターフェース（UI）設計:\nウェブシステムのUIデザインを文書化します。画面のレイアウト、ユーザーコントロール、ナビゲーション、色、フォントなどの詳細を含みます。ユーザーエクスペリエンス（UX）を向上させるために、ユーザーフローとプロトタイプも考慮します。\n> 4. 機能仕様の詳細化:\n各機能やモジュールに関する詳細な仕様を文書化します。これには、入力と出力の形式、データ処理のロジック、エラーハンドリング、セキュリティ要件などが含まれます。UML図、フローチャート、シーケンス図などを使用してプロセスを視覚化することが役立ちます。\n> 5. データモデルの設計:\nデータベーススキーマやデータモデルを文書化し、テーブル、関係、データのフロー、およびデータの整合性について詳細に説明します。\n> 6. アーキテクチャと技術スタック:\nシステムのアーキテクチャと使用する技術スタックを明確にし、ハードウェアおよびソフトウェアの要件を文書化します。\n> 7. 拡張性と保守性の検討:\nシステムの将来の拡張性と保守性を向上させるための設計を検討し、外部設計に反映させます。\n> 8. セキュリティ要件:\nシステムのセキュリティ要件を文書化し、データ保護、アクセス制御、認証などのセキュリティ関連の要件を考慮します。\n> 9. 外部設計書のドキュメンテーション:\n上記の情報を整理し、外部設計書としてまとめます。一貫性があり、わかりやすい形式に整形し、図表やテキストで説明を補完します。\n> 10. レビューと承認:\n外部設計書を関係者や開発チームに提出し、レビューと承認を受けます。必要に応じて修正を加えます。\n> 11. 外部設計の更新と保守:\nシステムが変更されるたびに、外部設計書を更新し、最新の情報を反映させます。これにより、システムの保守が容易になります。\n>\n> これらのステップを追跡し、外部設計書を丁寧に作成することで、ウェブシステムの開発と保守が円滑に進行し、関係者とのコミュニケーションも強化されます。\n\nさすがGPT先生。かなり分かりやすい作業分類ですね。\n業務によって過不足等ありそうですが、これがあれば考察できそうです。\n\n外部設計書を作成してレビューするという作業は上記の 9, 10 にあたります。\nレビュワーのインプットは、前工程で誰かが作成した要件定義書とレビューイが作成した外部設計書です。\n\n考察を進めるため作業とレビュワーとレビューイが見るもの、作成するものを図に示しておきます。\n\n![外部設計.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d953be80-d5e7-ee21-d0fe-5b0ab17fcf44.png)\n\n**どの作業に課題があるとレビューで跡形なく直るのか見えましたでしょうか？**\n\n## 課題のある作業と考察\n\n### 1. 要件定義書のレビュー\n\n跡形なく直る場合、最初の作業に問題があると考えるのが自然でしょう。\n最初の作業が正しく実施できていなければ、その後に積み上がる作業は全部間違って無駄になる可能性が高いです。\n\nこのパートは逆転裁判[^1]の調査パートのようなものです。地味で分かりにくい点も多いのですが証拠品を全て集めきらないと裁判パートで勝利できないです。裁判パートで勝利するためにも証拠品を全部かき集めましょう。\n※ゲームではハマり回避のため証拠を集めきらないと裁判パートに進めない仕様でしたが。\n\n> 1. 要件定義書のレビュー:\n> まず初めに、既存の要件定義書を詳細にレビューし、システムの主要な機能や要件を把握します。要件定義書が不完全な場合、ステークホルダーとのコミュニケーションを通じて不足している情報を収集します。\n\n**「システムの主要な機能や要件を把握します。」** とサクッと書かれていますが、把握するには相当な訓練が必要です。\n\nわたし達の日常生活では、ググって一番安い物を探したり、YouTubeをダラダラ見てLINEやツイッターで感想を投げつけ合うことはあるかもしれませんが、まとまった量の文章を読んで、それを理解して整理して誰かに分かりやすい形で伝えるということはしていないため、日本語の読み書きをする訓練が別途必要なのです。\n\nまた、自分では分かったと思っても **「本当に分かったのかは、本人では分からない」** ことも問題を複雑にしていそうです。\n\n- レビュワー：承太郎[^2]「もうだいたいおぼえた」\n- レビューイ：ポプ子[^3]「あーそーゆーことね完全に理解した」（わかってない）\n\nシステムの把握の仕方には個人差があると思いますが、とりあえず資料には全て目を通して、**これから作るシステムを脳内で（以後脳内システムと表記）動かしてヌケモレがないか確認して**、ヌケモレがあれば必要な資料を更に探すか関係者に質問するなどする事ができるようになるとよさそうです。\n\n### 2. 外部設計の概要\n\n残念ながら「要件定義書のレビュー」の作業には成果物がありません。\n一番手戻りが少なく、レビュワーに成果物ベースで確認を取れる最初の作業は「外部設計の概要」の作業となりそうです。\n\n> 2. 外部設計の概要:\nシステム全体の外部設計の概要を作成します。これは、システムの全体的なアーキテクチャ、ユーザーインターフェース（UI）の概要、および主要なコンポーネントやモジュールの役割についての説明を含みます。\n\n「要件定義書のレビュー」作業で作った「脳内システム」の書き出しをするとよさそうです。\n\n概要と、目次を並行して作成するイメージです。\n\n概要には「脳内システム」が実現するシステムの主要な機能や要件を書きます。**「こんな要件を満たしたいからこんな機能を持ったシステムを作ります」** という全体像を冒頭で説明し、システムについて何も知らない読者にシステムを理解してもらえるようにします。\n概要のレビュー観点は「脳内システム」の整合性になります。脳内でシステムがある程度組み立てられていて、それを説明できるようになってくれば跡形なく直されることは減っていくと思います。\n\n目次は外部設計書の骨組みです。この後何をどの様な粒度で説明していくかの指針が分かる程度に書けるといいでしょう。\n章立てや粒度の構成はかなり基本的な技術であるにも関わらず、なぜか学校ではそれを訓練する機会があまり設けられていません。\n『「脳内システム」を説明するための最良の構成』が必要であるため、他のプロジェクトの外部設計書などを参考にすることはできても、コピペで使えるテンプレなどは存在しません。\n\n書いて、自分の課題を客観的に判断して、本屋に行って課題を解決できそうな本を買って読んでまた書いて…と試行錯誤を繰り返していくとよさそうです。\n\n### 9. 外部設計書のドキュメンテーション\n\n基本的な「仕様書文章力」がないと、全行修正されてしまい、結果として跡形なく直される原因となります。\n\nこれは字を読み書きすることでしか改善しません。\nよさそうな本を買ってきて読んだり書いたりしてください。\n\n例) [amazon : 伝わる! 文章力が身につく本 (基礎からわかる\"伝わる!\"シリーズ)](https://www.amazon.co.jp/%E4%BC%9D%E3%82%8F%E3%82%8B-%E6%96%87%E7%AB%A0%E5%8A%9B%E3%81%8C%E8%BA%AB%E3%81%AB%E3%81%A4%E3%81%8F%E6%9C%AC-%E5%9F%BA%E7%A4%8E%E3%81%8B%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E2%80%9C%E4%BC%9D%E3%82%8F%E3%82%8B-%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-%E5%B0%8F%E7%AC%A0%E5%8E%9F/dp/4471191160)\n\n絵がうまくなる方法と考え方は同じです。\n本や人づてでテクニックを学ぶのも大事ですが、一番大事なのはたくさん読み書きすることです。字を読んだり書いたりする速さが上がれば試行錯誤できる回数も増えてレビューを受けられる回数も増え、改善の機会も増えます。\n\nすぐに文章を作ったり直したりできる様になれば指摘されても直すことが苦痛ではなくなるので、痛みも減ります。\n\n※個人的にはテクニカルな本を読むよりは、小説や漫画など好きな本を大量に読む方が苦しくなく続けらてよいのかなと思っています。小説や漫画には、分かりやすく効果的に人に物を伝えるテクニックの実例が大量に登場していますし。\n\n## おわりに\n\n今回はレビューで跡形なく直される理由について考えてみました。\n\n大きく以下３点の力を身に着けていくと跡形なく直されることは減っていく様に思えました。\n\n1. 要件定義を把握してシステムを組み上げる設計力\n1. 概要、骨組みを作成し理路整然と伝える構成力\n1. 仕様書文章力\n\n跡形なく直される事を回避する一番のコツは「マメにポイントを絞って確認をとること」だと思いますが、それを実践するためには、「ある程度の構成力」や「ある程度の仕様書文章力」を身に着けておくことは必須となると思います。\n相手には解決できない基本的な問題は先に解決しておかないと、相手に時間を使ってもらっても問題が解決できないからです。\n\n設計力については、今見ているQiitaの外部設計を書き出してみるなどでも訓練になるかもしれません。存在しない新しいシステムの設計は答え合わせができないのと企画に時間がかかることから訓練には適さないと思います。\n\n[3. ユーザーインターフェース（UI）設計] ~ [8. セキュリティ要件] についても色々ありますが「跡形なく直される」のテーマからは除外としました。\n\n## おまけ０\n\nhttps://qiita.com/kaku3/items/53a8690a5d9d3fa1b87e\n\nhttps://qiita.com/kaku3/items/6442adb13601dd06f84e\n\nhttps://qiita.com/kaku3/items/4243a1c0cb9779d6bc1f\n\nhttps://qiita.com/kaku3/items/9354614403000ee4b6d8\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n[^1]: カプコンの無実の罪を着せられた依頼人を救う法廷バトルゲーム。主人公は弁護士の成歩堂くん。\n[^2]: ジョジョの奇妙な冒険第３部の主人公。この後めっちゃつよい。\n[^3]: 漫画ポプテピピックの主人公。短い方。今日も一日。\n",
    "coediting": false,
    "comments_count": 2,
    "created_at": "2023-09-02T18:01:31+09:00",
    "group": null,
    "id": "71c389c0cc5e89463ce9",
    "likes_count": 78,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 90,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "設計",
        "versions": []
      },
      {
        "name": "レビュー",
        "versions": []
      },
      {
        "name": "仕様書",
        "versions": []
      }
    ],
    "title": "レビューで跡形なく直されるのはなぜ",
    "updated_at": "2023-10-14T13:13:54+09:00",
    "url": "https://qiita.com/kaku3/items/71c389c0cc5e89463ce9",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 32644,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:389\">IPAが無料公開している要件定義に関する書籍『<a href=\"https://www.ipa.go.jp/archive/publish/tn20191220.html\" rel=\"nofollow noopener\" target=\"_blank\">ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ</a>』が、響きから感じるようなお堅い書籍ではなく、かなり <strong>IT現場あるある</strong> が書かれている面白くてためになる良書でした。</p>\n<p data-sourcepos=\"5:1-5:319\">498ページと、微妙に500ページに見えないお得感(?)を醸している大ボリュームでとっつきにくいところがありますが、<strong>読み物としてもめちゃくちゃ面白いので</strong>、勢いよく読んで手元において辞書的に使うと幸せになれそうに思えました。</p>\n<p data-sourcepos=\"7:1-7:149\">ということで？全IT従事者が一度は目を通してもよいのでは？と感じましたので紹介しておきたいと思います。</p>\n<h2 data-sourcepos=\"9:1-9:9\">\n<span id=\"構成\" class=\"fragment\"></span><a href=\"#%E6%A7%8B%E6%88%90\"><i class=\"fa fa-link\"></i></a>構成</h2>\n<p data-sourcepos=\"11:1-11:22\">全7章構成です。</p>\n<p data-sourcepos=\"13:1-13:399\">第１章では歴史や現状などの背景をデータを用いて <strong>生々しく</strong> 描き、第２章で要件定義の座組と問題についての認識を書き、第３章で要件定義工程について解説し、第４～６章で個別の問題と解決の勘どころを述べ、最後第７章ではドキュメントの書き方を詳細に説明する、という構成でした。</p>\n<blockquote data-sourcepos=\"15:1-21:74\">\n<p data-sourcepos=\"15:3-21:74\">第１章 背景<br>\n第 2 章 要件定義の問題認識<br>\n第 3 章 要件定義の全体像<br>\n第 4 章 ビジネス要求定義(BR)における問題と解決の勘どころ<br>\n第 5 章 システム化要求定義(SR)における問題と解決の勘所<br>\n第 6 章 要件定義マネジメント(RM)における問題と解決の勘どころ<br>\n第 7 章 要件定義の主要ドキュメント作成(DD)の勘どころ</p>\n</blockquote>\n<p data-sourcepos=\"23:1-23:157\">引用 : <a href=\"https://www.ipa.go.jp/publish/tn20191220.html\" rel=\"nofollow noopener\" target=\"_blank\">ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ</a></p>\n<h2 data-sourcepos=\"25:1-25:12\">\n<span id=\"第１章\" class=\"fragment\"></span><a href=\"#%E7%AC%AC%EF%BC%91%E7%AB%A0\"><i class=\"fa fa-link\"></i></a>第１章</h2>\n<p data-sourcepos=\"27:1-28:177\">第１章ではIT業界の歴史や <del>闇</del> 現状が書かれています。 <strong>「【既存システムの運用・保守に資金も人材も割かれている」「納期遅延・品質満足度が低い」</strong> などのトピックをデータを用いて丁寧に説明しています。<br>\n厳しい環境で仕事をされている方においては自分の職場だけではなく、業界全体がそうなのかと勇気を与えられるかもしれません。</p>\n<p data-sourcepos=\"30:1-30:48\">印象的な段落を引用しておきます。</p>\n<blockquote data-sourcepos=\"32:1-34:668\">\n<p data-sourcepos=\"32:3-34:668\">【再構築の難しさ】<br>\nシステムが既に存在していることを前提に考えると、その既存システムの存在が課題を生んでいる。刷新するにも、改造するにしても既存システム理解が重要である一方、その既存システムが巨大・複雑化しているために、すべての仕様を明確にすることが困難になっているからである。新しい要求は新しい要求を持っている人が存在するので検討し提示すれば良いが、既存システムに変更がない部分は「現行踏襲」という安易な要求で片付けられる。<br>\nしかし、既存システムのドキュメントが陳腐化していたり、業務知識を持っている人が業務部門にすら居なくなってきている。少しでも業務を IT 化しようと拡張と過剰品質を繰り返してきた結果、業務がシステムの中に埋没し業務部門でも分からなくなってきている。「システム部門の方が常に保守し続けているからわかっているでしょ」と謂れのない責任転嫁がされることもある。さらに、当初の IT システム開発に携わった有識者が定年退職を迎えブラックボックス化に拍車が掛かっている。</p>\n</blockquote>\n<p data-sourcepos=\"36:1-36:164\">引用 : <a href=\"https://www.ipa.go.jp/publish/tn20191220.html\" rel=\"nofollow noopener\" target=\"_blank\">ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ</a> P.23 ~</p>\n<p data-sourcepos=\"38:1-38:291\">ある程度歴戦の <del>レイブン</del> ITエンジニアであれば <del>体が闘争を求める</del> 何か感じるものがあるのではないでしょうか。そうでないITエンジニアにとっては、IT業界の現状の把握の助けになる文章ではないでしょうか。</p>\n<p data-sourcepos=\"40:1-40:122\">一方で、DXなビジネス書を凝縮したような段落もありますのでこちらも引用しておきます。</p>\n<blockquote data-sourcepos=\"42:1-43:1524\">\n<p data-sourcepos=\"42:3-43:1524\">【人間中心アプローチ デザイン思考/UX デザイン】<br>\nビジネス・モデル変更の背景には、商品を出せば売れる時代ではなくなったことも挙げられる。一昔前は、商品の機能の差別化や品質の差別化でコンシューマを振り向かせていたが、直ぐにコモディティ化する。贅沢な機能は必要なく基本機能で十分だという。そして、買い換える、いや「モノ」が欲しいという気持ち自体がコンシューマの中で減っている。「モノ」中心の考え方ではコンシューマは振り向かないのである。人の心をつかまないと、振り向いてもらえない時代である。コンシューマは、最低限の機能（当たり前）があった上で、色や見栄え、使いやすさ、楽しさ、驚き、感動、心地よさなどで振り向く場合がある。いわゆる人間中心の発想が必要になってきている。ユーザ起点（人間中心）でアイデア発想する「デザイン思考」や、ユーザに「楽しさ」や「驚き」、「心地よさ」を与えようとする「UX（UserExperience:ユーザエクスペリエンス）デザイン」などが DX に役立つ技術である。DX レポートでも、DX を「新しい製品やサービス、新しいビジネス・モデルを通じて、ネットとリアルの両面での顧客エクスペリエンスの変革を図ることで価値を創出し、競争上の優位を確立すること」という定義を紹介している。</p>\n</blockquote>\n<p data-sourcepos=\"45:1-45:162\">引用 : <a href=\"https://www.ipa.go.jp/publish/tn20191220.html\" rel=\"nofollow noopener\" target=\"_blank\">ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ</a> P.29</p>\n<p data-sourcepos=\"47:1-47:243\">幅広い読者にお楽しみ頂ける内容かと思います。自分に興味のあるところをじっくり読んでそれ以外のところを読み飛ばして、いつの日か読み直すなどしてもいいかもしれません。</p>\n<p data-sourcepos=\"49:1-49:267\">第１章では要件定義が難しくなっている歴史的背景や理由が述べられていますが、要件定義に限らず外部設計や開発の難易度が上がっている理由も合わせて考えながら読むと面白いかもしれません。</p>\n<h2 data-sourcepos=\"51:1-51:12\">\n<span id=\"第２章\" class=\"fragment\"></span><a href=\"#%E7%AC%AC%EF%BC%92%E7%AB%A0\"><i class=\"fa fa-link\"></i></a>第２章</h2>\n<p data-sourcepos=\"53:1-54:117\">経営層、業務部門、システム部門等が意識すべきことなどが書かれています。<br>\n全体的にアグレッシブ（？）な文章が多くワクワクする読み物になっている印象です。</p>\n<p data-sourcepos=\"56:1-56:4\">例)</p>\n<blockquote data-sourcepos=\"57:1-58:86\">\n<p data-sourcepos=\"57:3-58:86\">【良き構想なくして良き要件定義はない】<br>\n【要件定義プロジェクトの体制がシステム部門に偏っている】</p>\n</blockquote>\n<blockquote data-sourcepos=\"60:1-60:380\">\n<p data-sourcepos=\"60:3-60:380\">要件定義は、本当に必要な人をアサインし、その人に十分な期間を与えることが成功のポイントである。「一文惜しみの百知らず」。ここでの工期延長、工数増加を惜しんで未決事項を残した結果、設計、実装、テスト期間や負荷が膨張して予算超過になるケースは後を絶たない。</p>\n</blockquote>\n<p data-sourcepos=\"62:1-62:164\">引用 : <a href=\"https://www.ipa.go.jp/publish/tn20191220.html\" rel=\"nofollow noopener\" target=\"_blank\">ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ</a> P.42 ~</p>\n<p data-sourcepos=\"64:1-64:201\">要件定義は、経営層を含む、業務やシステムに関係する人間が一丸となって行わないとうまくいかないということが示唆されているように見えます。</p>\n<p data-sourcepos=\"66:1-66:273\">顧客を巻き込んだアジャイルを実施したいが、自分に権威がなくて巻き込み力が足りないといったケースでは、権威あるIPA文書にこのような内容が書かれているのをうまく使えるといいかもしれません。</p>\n<p data-sourcepos=\"68:1-68:126\">忙しい方は、以下のページをざっくり参照して、関連する部分を読むとよいかもしれません。</p>\n<ul data-sourcepos=\"70:1-71:0\">\n<li data-sourcepos=\"70:1-71:0\">P.57 ~ 2.2.1 問題の抽出と整理</li>\n</ul>\n<h2 data-sourcepos=\"72:1-72:12\">\n<span id=\"第３章\" class=\"fragment\"></span><a href=\"#%E7%AC%AC%EF%BC%93%E7%AB%A0\"><i class=\"fa fa-link\"></i></a>第３章</h2>\n<p data-sourcepos=\"74:1-74:84\">「要件定義」を細分化して明確に定義している章になります。</p>\n<p data-sourcepos=\"76:1-76:156\"><a href=\"https://camo.qiitausercontent.com/100015436673ab99b10d8400e20dff1821cc8e6f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f33623833386338652d383536612d663366342d386666342d3931616633353236643237322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F3b838c8e-856a-f3f4-8ff4-91af3526d272.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=c1a358307bfa5bb1d37f888ea0efafff\" alt=\"要件定義_問題カテゴリマップ.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/3b838c8e-856a-f3f4-8ff4-91af3526d272.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F3b838c8e-856a-f3f4-8ff4-91af3526d272.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=9dec57d82f6a4e7ebdf85f895e5f8cba 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"78:1-79:67\">引用 : <a href=\"https://www.ipa.go.jp/publish/tn20191220.html\" rel=\"nofollow noopener\" target=\"_blank\">ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ</a><br>\nP.75 : 図 3.2 要件定義 問題カテゴリマップ（再掲）</p>\n<p data-sourcepos=\"81:1-81:229\">RM が要件定義工程全体のマネジメント、BR がビジネス要求部分、SR がシステム化要求部分を指しており、ITエンジニアの要件定義は主にSRを指すことが多い様に思います。</p>\n<p data-sourcepos=\"83:1-83:345\">以下構成となっているので、忙しい方は自分の業務に関係ある章のみを読むとよいかもしれませんが、 <strong>実は自分の業務と直接関係ないところを理解することが自分の業務を円滑に進めるために必要</strong> であったりするので全部読んでもよいかもしれません。</p>\n<ul data-sourcepos=\"85:1-88:0\">\n<li data-sourcepos=\"85:1-85:88\">「第 4 章 ビジネス要求定義(BR)における問題と解決の勘どころ」</li>\n<li data-sourcepos=\"86:1-86:85\">「第 5 章 システム化要求定義(SR)における問題と解決の勘所」</li>\n<li data-sourcepos=\"87:1-88:0\">「第 6 章 要件定義マネジメント(RM)における問題と解決の勘どころ」</li>\n</ul>\n<h2 data-sourcepos=\"89:1-89:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"91:1-91:446\">ページ数が大ボリュームかつ、なんとなく難しそうだったり、要件定義は自分には関係ないと見えたりする書籍なのですが、全IT従事者が目を通した方がよさそうに思えたので本書の構成と第１章～第３章部分を紹介してみました。第４章～第６章は興味のあるところを読んで頂き、第７章は辞書的にご利用頂くのがよさそうです。</p>\n<p data-sourcepos=\"93:1-93:208\">「<a href=\"https://www.ipa.go.jp/publish/tn20191220.html\" rel=\"nofollow noopener\" target=\"_blank\">ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ</a>」には興味深く役に立つ内容が満載です。</p>\n<p data-sourcepos=\"95:1-95:141\">忙しい方も、斜めに目を通すだけでも今までと違った視点で業務に取り組めるなどあるかもしれません。</p>\n<p data-sourcepos=\"97:1-100:149\">一方で、このレベルの書籍が無料で公開される理由が気にもなります。<br>\n要件定義ができることにはとても価値があるはずなのに、 <strong>時間さえかければ誰でも無料で学ぶことができてしまいます。</strong><br>\n最大７９万人不足すると言われている「ITエンジニア不足」は「プログラムが書ける人」ではなく「お客様の要望を聞いて意図を汲み取ってアジャイル的にシステム開発ができる人」だったりするのでしょうか。<br>\n「ITエンジニア」の単価は変わらないのに求められているスキルは年々増加傾向にあるような気がしています。</p>\n<h2 data-sourcepos=\"103:1-103:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"105:1-105:50\"><iframe id=\"qiita-embed-content__716c7161542bc67a216965bd8c82f925\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__716c7161542bc67a216965bd8c82f925\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"107:1-107:50\"><iframe id=\"qiita-embed-content__a8883d368f03df17c259809bd90171bd\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a8883d368f03df17c259809bd90171bd\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"109:1-109:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"111:1-111:50\"><iframe id=\"qiita-embed-content__9589b9c533543b6b7d8c8de0cb68f1b5\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9589b9c533543b6b7d8c8de0cb68f1b5\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"113:1-113:50\"><iframe id=\"qiita-embed-content__c34ae9ef7e5a68d389aa3a93fb8f833b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c34ae9ef7e5a68d389aa3a93fb8f833b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"115:1-115:50\"><iframe id=\"qiita-embed-content__eac709fae01a0e59b8067ff8fe7721ae\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__eac709fae01a0e59b8067ff8fe7721ae\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"117:1-117:50\"><iframe id=\"qiita-embed-content__d7ea24d1f2f9acd2f658faa018ac6790\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__d7ea24d1f2f9acd2f658faa018ac6790\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"119:1-119:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"121:1-121:50\"><iframe id=\"qiita-embed-content__9cb974178ed8ff67e4a648aff6dd521c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9cb974178ed8ff67e4a648aff6dd521c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"123:1-123:50\"><iframe id=\"qiita-embed-content__da51b10a9ec1be84b1b0d275ee38a3ef\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__da51b10a9ec1be84b1b0d275ee38a3ef\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"125:1-125:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"127:1-127:50\"><iframe id=\"qiita-embed-content__e8685f2656813c4ec9258395376c026f\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e8685f2656813c4ec9258395376c026f\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"129:1-129:50\"><iframe id=\"qiita-embed-content__02cae1881bf276efd1fb6c95cb3f92d1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__02cae1881bf276efd1fb6c95cb3f92d1\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"131:1-131:50\"><iframe id=\"qiita-embed-content__360b9bf858047cc9883b11808aa83fe0\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__360b9bf858047cc9883b11808aa83fe0\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"133:1-133:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"135:1-135:50\"><iframe id=\"qiita-embed-content__2415f9ebbc1becc6e6190050860f57a8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2415f9ebbc1becc6e6190050860f57a8\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"137:1-137:50\"><iframe id=\"qiita-embed-content__69ad319858db55f822fc99efb49310e5\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__69ad319858db55f822fc99efb49310e5\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"139:1-139:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"141:1-142:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"144:1-144:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\nIPAが無料公開している要件定義に関する書籍『[ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ](https://www.ipa.go.jp/archive/publish/tn20191220.html)』が、響きから感じるようなお堅い書籍ではなく、かなり **IT現場あるある** が書かれている面白くてためになる良書でした。\n\n498ページと、微妙に500ページに見えないお得感(?)を醸している大ボリュームでとっつきにくいところがありますが、**読み物としてもめちゃくちゃ面白いので**、勢いよく読んで手元において辞書的に使うと幸せになれそうに思えました。\n\nということで？全IT従事者が一度は目を通してもよいのでは？と感じましたので紹介しておきたいと思います。\n\n## 構成\n\n全7章構成です。\n\n第１章では歴史や現状などの背景をデータを用いて **生々しく** 描き、第２章で要件定義の座組と問題についての認識を書き、第３章で要件定義工程について解説し、第４～６章で個別の問題と解決の勘どころを述べ、最後第７章ではドキュメントの書き方を詳細に説明する、という構成でした。\n\n> 第１章 背景\n第 2 章 要件定義の問題認識\n第 3 章 要件定義の全体像\n第 4 章 ビジネス要求定義(BR)における問題と解決の勘どころ\n第 5 章 システム化要求定義(SR)における問題と解決の勘所\n第 6 章 要件定義マネジメント(RM)における問題と解決の勘どころ\n第 7 章 要件定義の主要ドキュメント作成(DD)の勘どころ\n\n引用 : [ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ](https://www.ipa.go.jp/publish/tn20191220.html)\n\n## 第１章\n\n第１章ではIT業界の歴史や ~~闇~~ 現状が書かれています。 **「【既存システムの運用・保守に資金も人材も割かれている」「納期遅延・品質満足度が低い」** などのトピックをデータを用いて丁寧に説明しています。\n厳しい環境で仕事をされている方においては自分の職場だけではなく、業界全体がそうなのかと勇気を与えられるかもしれません。\n\n印象的な段落を引用しておきます。\n\n> 【再構築の難しさ】\nシステムが既に存在していることを前提に考えると、その既存システムの存在が課題を生んでいる。刷新するにも、改造するにしても既存システム理解が重要である一方、その既存システムが巨大・複雑化しているために、すべての仕様を明確にすることが困難になっているからである。新しい要求は新しい要求を持っている人が存在するので検討し提示すれば良いが、既存システムに変更がない部分は「現行踏襲」という安易な要求で片付けられる。\nしかし、既存システムのドキュメントが陳腐化していたり、業務知識を持っている人が業務部門にすら居なくなってきている。少しでも業務を IT 化しようと拡張と過剰品質を繰り返してきた結果、業務がシステムの中に埋没し業務部門でも分からなくなってきている。「システム部門の方が常に保守し続けているからわかっているでしょ」と謂れのない責任転嫁がされることもある。さらに、当初の IT システム開発に携わった有識者が定年退職を迎えブラックボックス化に拍車が掛かっている。\n\n引用 : [ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ](https://www.ipa.go.jp/publish/tn20191220.html) P.23 ~\n\nある程度歴戦の ~~レイブン~~ ITエンジニアであれば ~~体が闘争を求める~~ 何か感じるものがあるのではないでしょうか。そうでないITエンジニアにとっては、IT業界の現状の把握の助けになる文章ではないでしょうか。\n\n一方で、DXなビジネス書を凝縮したような段落もありますのでこちらも引用しておきます。\n\n> 【人間中心アプローチ デザイン思考/UX デザイン】\nビジネス・モデル変更の背景には、商品を出せば売れる時代ではなくなったことも挙げられる。一昔前は、商品の機能の差別化や品質の差別化でコンシューマを振り向かせていたが、直ぐにコモディティ化する。贅沢な機能は必要なく基本機能で十分だという。そして、買い換える、いや「モノ」が欲しいという気持ち自体がコンシューマの中で減っている。「モノ」中心の考え方ではコンシューマは振り向かないのである。人の心をつかまないと、振り向いてもらえない時代である。コンシューマは、最低限の機能（当たり前）があった上で、色や見栄え、使いやすさ、楽しさ、驚き、感動、心地よさなどで振り向く場合がある。いわゆる人間中心の発想が必要になってきている。ユーザ起点（人間中心）でアイデア発想する「デザイン思考」や、ユーザに「楽しさ」や「驚き」、「心地よさ」を与えようとする「UX（UserExperience:ユーザエクスペリエンス）デザイン」などが DX に役立つ技術である。DX レポートでも、DX を「新しい製品やサービス、新しいビジネス・モデルを通じて、ネットとリアルの両面での顧客エクスペリエンスの変革を図ることで価値を創出し、競争上の優位を確立すること」という定義を紹介している。\n\n引用 : [ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ](https://www.ipa.go.jp/publish/tn20191220.html) P.29\n\n幅広い読者にお楽しみ頂ける内容かと思います。自分に興味のあるところをじっくり読んでそれ以外のところを読み飛ばして、いつの日か読み直すなどしてもいいかもしれません。\n\n第１章では要件定義が難しくなっている歴史的背景や理由が述べられていますが、要件定義に限らず外部設計や開発の難易度が上がっている理由も合わせて考えながら読むと面白いかもしれません。\n\n## 第２章\n\n経営層、業務部門、システム部門等が意識すべきことなどが書かれています。\n全体的にアグレッシブ（？）な文章が多くワクワクする読み物になっている印象です。\n\n例)\n> 【良き構想なくして良き要件定義はない】 \n> 【要件定義プロジェクトの体制がシステム部門に偏っている】\n\n> 要件定義は、本当に必要な人をアサインし、その人に十分な期間を与えることが成功のポイントである。「一文惜しみの百知らず」。ここでの工期延長、工数増加を惜しんで未決事項を残した結果、設計、実装、テスト期間や負荷が膨張して予算超過になるケースは後を絶たない。\n\n引用 : [ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ](https://www.ipa.go.jp/publish/tn20191220.html) P.42 ~\n\n要件定義は、経営層を含む、業務やシステムに関係する人間が一丸となって行わないとうまくいかないということが示唆されているように見えます。\n\n顧客を巻き込んだアジャイルを実施したいが、自分に権威がなくて巻き込み力が足りないといったケースでは、権威あるIPA文書にこのような内容が書かれているのをうまく使えるといいかもしれません。\n\n忙しい方は、以下のページをざっくり参照して、関連する部分を読むとよいかもしれません。\n\n- P.57 ~ 2.2.1 問題の抽出と整理\n\n## 第３章\n\n「要件定義」を細分化して明確に定義している章になります。\n\n![要件定義_問題カテゴリマップ.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/3b838c8e-856a-f3f4-8ff4-91af3526d272.png)\n\n引用 : [ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ](https://www.ipa.go.jp/publish/tn20191220.html)\nP.75 : 図 3.2 要件定義 問題カテゴリマップ（再掲）\n\nRM が要件定義工程全体のマネジメント、BR がビジネス要求部分、SR がシステム化要求部分を指しており、ITエンジニアの要件定義は主にSRを指すことが多い様に思います。\n\n以下構成となっているので、忙しい方は自分の業務に関係ある章のみを読むとよいかもしれませんが、 **実は自分の業務と直接関係ないところを理解することが自分の業務を円滑に進めるために必要** であったりするので全部読んでもよいかもしれません。\n\n- 「第 4 章 ビジネス要求定義(BR)における問題と解決の勘どころ」\n- 「第 5 章 システム化要求定義(SR)における問題と解決の勘所」\n- 「第 6 章 要件定義マネジメント(RM)における問題と解決の勘どころ」\n\n## おわりに\n\nページ数が大ボリュームかつ、なんとなく難しそうだったり、要件定義は自分には関係ないと見えたりする書籍なのですが、全IT従事者が目を通した方がよさそうに思えたので本書の構成と第１章～第３章部分を紹介してみました。第４章～第６章は興味のあるところを読んで頂き、第７章は辞書的にご利用頂くのがよさそうです。\n\n「[ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ](https://www.ipa.go.jp/publish/tn20191220.html)」には興味深く役に立つ内容が満載です。\n\n忙しい方も、斜めに目を通すだけでも今までと違った視点で業務に取り組めるなどあるかもしれません。\n\n一方で、このレベルの書籍が無料で公開される理由が気にもなります。\n要件定義ができることにはとても価値があるはずなのに、 **時間さえかければ誰でも無料で学ぶことができてしまいます。**\n最大７９万人不足すると言われている「ITエンジニア不足」は「プログラムが書ける人」ではなく「お客様の要望を聞いて意図を汲み取ってアジャイル的にシステム開発ができる人」だったりするのでしょうか。\n「ITエンジニア」の単価は変わらないのに求められているスキルは年々増加傾向にあるような気がしています。\n\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-08-26T16:44:19+09:00",
    "group": null,
    "id": "d519a2b0e35a7a269ea4",
    "likes_count": 23,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 26,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "書籍",
        "versions": []
      },
      {
        "name": "要件定義",
        "versions": []
      }
    ],
    "title": "忙しい人のための『ユーザのための要件定義ガイド 第2版 要件定義を成功に導く128の勘どころ』紹介",
    "updated_at": "2024-03-02T15:16:45+09:00",
    "url": "https://qiita.com/kaku3/items/d519a2b0e35a7a269ea4",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 5609,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:86\">ITエンジニアのみなさんこんにちは。<br>\n今日はIT業界でストレスなく働くということについて考えます。</p>\n<p data-sourcepos=\"6:1-6:75\">GPT先生にお題を頂いてそれぞれコメントしていきます。</p>\n<p data-sourcepos=\"8:1-8:128\"><a href=\"https://camo.qiitausercontent.com/ee529ad5c3b755317fba48da0c76df9c015919c8/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f30663039333763642d643236342d653234342d373931612d3134663634376133313837332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F0f0937cd-d264-e244-791a-14f647a31873.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=9ee144fa8bb4d7a2dd0c0b0ead29d206\" alt=\"ストレス.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/0f0937cd-d264-e244-791a-14f647a31873.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F0f0937cd-d264-e244-791a-14f647a31873.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=2e909612d4a7c746979a2798e7753027 1x\" loading=\"lazy\"></a></p>\n<h2 data-sourcepos=\"10:1-10:33\">\n<span id=\"状況への適応の困難さ\" class=\"fragment\"></span><a href=\"#%E7%8A%B6%E6%B3%81%E3%81%B8%E3%81%AE%E9%81%A9%E5%BF%9C%E3%81%AE%E5%9B%B0%E9%9B%A3%E3%81%95\"><i class=\"fa fa-link\"></i></a>状況への適応の困難さ</h2>\n<p data-sourcepos=\"12:1-12:80\">IT業界で最も多く発生しているのはこの要因かと思います。</p>\n<p data-sourcepos=\"14:1-14:210\">ITエンジニアはSESなどで時間いくらで切り売りしている時給労働者ですが、<strong>簡単にはできない技術</strong>を提供することで高い単価を頂く仕事になっています。</p>\n<p data-sourcepos=\"16:1-16:198\">学生さんから社会人になった人には分かりにくいですが、一定の期間内に一定の成果を出すといった点がコンビニのバイトとは大きく異なります。</p>\n<blockquote data-sourcepos=\"18:1-18:200\">\n<p data-sourcepos=\"18:3-18:200\">現実の状況や要求が個人の能力や資源を超えている場合、適応することが難しくなります。このような状況では、ストレスが生じやすくなります。</p>\n</blockquote>\n<p data-sourcepos=\"20:1-20:251\"><strong>誰にでも簡単にはできない技術</strong> はマニュアル化されておらず、自分で状況を判断して適切な結果を出していく仕事となりますが、それができないとするとストレスの原因となります。</p>\n<p data-sourcepos=\"22:1-22:176\"><strong>『自分ができること』</strong> と <strong>『やらなければいけないこと』</strong> に差異がある状態が続くとはメンタルに良くない影響を与えます。</p>\n<p data-sourcepos=\"24:1-25:148\">多くのケースを見てきましたが、これは本人が自力で解決する以外に方法がなさそうです。<br>\n周りでサポートをすることはできますが、<strong>能力を身につけて状況に適応するのは本人しかできませんので。</strong></p>\n<p data-sourcepos=\"27:1-27:260\">ITの仕事はプログラムを書く仕事と思われがちですが、それはプロジェクトのほんの一部です。当然プログラムの読み書きは必須ですが、日本語の読み書きの方が重要な仕事であったりします。</p>\n<p data-sourcepos=\"29:1-29:306\">ITの仕事を頼む方は、IT以外の仕事をしている方です。自分達の業務には詳しいけれどもITには詳しくない方々です。その様な方々から依頼を受けて、自分達の知らない業務に対して理解をし提案をしていかなければいけません。</p>\n<p data-sourcepos=\"31:1-31:210\">大量のドキュメントを読んで理解して整理して、大量のドキュメントを書いて、自分とは価値観の異なる方々とコミュニケーションを取っていく仕事です。</p>\n<p data-sourcepos=\"33:1-33:210\">文章の読み書きが速くなっていれば適応できる状況が劇的に増えるので、まずはそこをやって、できることを一つずつ増やしていくのが大事かと思います。</p>\n<h2 data-sourcepos=\"35:1-35:15\">\n<span id=\"不確実性\" class=\"fragment\"></span><a href=\"#%E4%B8%8D%E7%A2%BA%E5%AE%9F%E6%80%A7\"><i class=\"fa fa-link\"></i></a>不確実性</h2>\n<p data-sourcepos=\"37:1-38:300\">うまくいくかどうかわからないことをやるのはストレスです。<br>\n過去に経験のあるプロジェクトの似たようなプロジェクトであればある程度予測が立つので不安も軽減されストレスも感じにくくなるかもしれませんが、多様化が進み似たようなプロジェクトも見かけなくなってきました。</p>\n<p data-sourcepos=\"40:1-41:222\">伝統的なプロマネ手法にKKD（勘・経験・度胸）法というのがあります。<br>\n度胸や勘は先天的な能力ですから、それらを持たない人は基本的に経験でなんとかするという微妙な手法ですが、未だに根強く使われているような気がしています。</p>\n<p data-sourcepos=\"43:1-43:217\">経験ですが、<strong>「成功の経験」よりも「失敗の経験」の方が重要</strong>だと思っています。なぜなら、失敗経験からは、勘と度胸に相当するものが手に入るからです。</p>\n<p data-sourcepos=\"45:1-46:108\">「ここまでやったら失敗する」ことを知っているのは「ここまでだったら失敗しない」ことを知っているのと同義で、知らない人より大胆な手を打てるようになりますし、決断までの時間も短縮できます。<br>\nまた、仮に失敗しても次からはやり方を変えようと割り切れる様にもなります。</p>\n<p data-sourcepos=\"48:1-48:96\">恐れずどんどん致命的ではない失敗をすることが大事かもしれません。</p>\n<h2 data-sourcepos=\"50:1-50:18\">\n<span id=\"負荷の重さ\" class=\"fragment\"></span><a href=\"#%E8%B2%A0%E8%8D%B7%E3%81%AE%E9%87%8D%E3%81%95\"><i class=\"fa fa-link\"></i></a>負荷の重さ</h2>\n<p data-sourcepos=\"52:1-52:339\">仕事、課題をかかえるのを回避するには、「状況への適応の困難さ」に記載の通り、自分の戦闘力を上げるのがまず最低限必要です。その上で、自分がやるべき仕事、人に振るべき仕事というのをうまく仕分けていくというのが必要になると思います。</p>\n<p data-sourcepos=\"54:1-55:360\">ITエンジニアは基本的に人から依頼されて作業をすることからはじめますが、どこからか、人に依頼する側に回らないといけなくなります。<br>\n人に依頼などしたことないからどうやって振っていいか分かりません。適当に指示を出しても思った通り結果が得られないので、自分でやった方が速いという思考になると自分で抱える上に、チームメンバーを遊ばせることになるのでそれは避けなければなりません。</p>\n<p data-sourcepos=\"57:1-57:282\">それまでの仕事と全く異なる仕事をなぜかやらないといけないのはストレスだと思いますが、チームビルディングやマネジメントの書籍を読み漁って自分の価値観のアップデートをするとよいかもしれません。</p>\n<h2 data-sourcepos=\"59:1-59:27\">\n<span id=\"個人の期待や要求\" class=\"fragment\"></span><a href=\"#%E5%80%8B%E4%BA%BA%E3%81%AE%E6%9C%9F%E5%BE%85%E3%82%84%E8%A6%81%E6%B1%82\"><i class=\"fa fa-link\"></i></a>個人の期待や要求</h2>\n<p data-sourcepos=\"61:1-62:111\">これは適度にあった方がよいストレスかと思います。<br>\nあまりに重い場合にはそれらから逃れる方法を考えることも必要かもしれません。</p>\n<h2 data-sourcepos=\"64:1-64:18\">\n<span id=\"環境の変化\" class=\"fragment\"></span><a href=\"#%E7%92%B0%E5%A2%83%E3%81%AE%E5%A4%89%E5%8C%96\"><i class=\"fa fa-link\"></i></a>環境の変化</h2>\n<p data-sourcepos=\"66:1-66:177\">これはイベントが発生したら不可避のストレスになると思いますが、持続性のあるものではないので時間が解決するかと思います。</p>\n<p data-sourcepos=\"68:1-69:204\">ただし、変化した結果が「状況への適応が困難な環境」への変化であれば、自力での解決が必要になるかと思います。<br>\n海外へ転勤になるなどであれば、英語を覚えたりなども必要になりそうですが、それに対応するのか断るのかなどの選択肢もあるのかもしれませんね。</p>\n<h2 data-sourcepos=\"71:1-71:24\">\n<span id=\"人間関係の変化\" class=\"fragment\"></span><a href=\"#%E4%BA%BA%E9%96%93%E9%96%A2%E4%BF%82%E3%81%AE%E5%A4%89%E5%8C%96\"><i class=\"fa fa-link\"></i></a>人間関係の変化</h2>\n<p data-sourcepos=\"73:1-73:108\">社会人の人間関係は、学生の人間関係と異なり利害関係がメインかと思います。</p>\n<p data-sourcepos=\"75:1-75:192\">社会人の関係性と、学生同士の関係性の大きな違いは、仮にアウトプットが足りない時に指摘をしないといけないのかという点だと思います。</p>\n<p data-sourcepos=\"77:1-78:162\">学生であれば、指摘する側に指摘をするメリットがありません。仮に指摘をしないことで相手が留年したとしても、翌年も楽しく遊べることでしょう。指摘側の被害はゼロです。<br>\n一方で指摘しても、改善しなかったりするリスクや、人間関係が壊れるリスクがあったりとデメリットしかありません。</p>\n<p data-sourcepos=\"80:1-80:160\">しかし社会人は違います。<strong>指摘しないことによって会社がアサインできない人間を抱え続けるリスクに繋がります。</strong></p>\n<p data-sourcepos=\"82:1-82:84\">困ったことに言う方も言われる方もストレスしかありません。</p>\n<p data-sourcepos=\"84:1-85:186\">結果として、多くの人はこのことをうっすらと理解しつつ、指摘は行わずにそこはそれとして自分のできることをやるという選択肢を取る気がします。<br>\n帰属意識が薄れたり終身雇用が崩れつつあったりするので、そこでリスクを取ったりコストをかける意味も薄れているのかもしれません。</p>\n<h2 data-sourcepos=\"87:1-87:21\">\n<span id=\"生活スタイル\" class=\"fragment\"></span><a href=\"#%E7%94%9F%E6%B4%BB%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB\"><i class=\"fa fa-link\"></i></a>生活スタイル</h2>\n<p data-sourcepos=\"89:1-90:72\">運動は大事です。自転車楽しいです。<br>\n体力が落ちるととにかくネガティブになりがちです。</p>\n<h2 data-sourcepos=\"92:1-92:18\">\n<span id=\"過去の経験\" class=\"fragment\"></span><a href=\"#%E9%81%8E%E5%8E%BB%E3%81%AE%E7%B5%8C%E9%A8%93\"><i class=\"fa fa-link\"></i></a>過去の経験</h2>\n<p data-sourcepos=\"94:1-94:78\">こちらはコメントできることがないのでスキップします。</p>\n<h2 data-sourcepos=\"96:1-96:12\">\n<span id=\"個人差\" class=\"fragment\"></span><a href=\"#%E5%80%8B%E4%BA%BA%E5%B7%AE\"><i class=\"fa fa-link\"></i></a>個人差</h2>\n<p data-sourcepos=\"98:1-98:78\">こちらはコメントできることがないのでスキップします。</p>\n<h2 data-sourcepos=\"100:1-100:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"102:1-103:207\">なんだかんだでITは技術職なので「簡単にはできない技術」を提供できるようにならないと続けられない仕事かと思います。<br>\nそれでも、文書の読み書きや、プログラムを書いたり、新しい知識を増やすことが好きであればあまりストレスを感じずにやっていけるかもしれません。</p>\n<p data-sourcepos=\"105:1-106:237\">一方で『好きだから』でやっていると『好きではない』ことをやらなければならない時に大きなストレスを感じる難しさがあるかもしれません。<br>\n個人的には、『 <strong>「やらなければならないこと」</strong> を <strong>「やりたいこと」</strong> と思い込むようにしたら色々なストレスから開放される。』というライフハックを愛用しています。</p>\n<p data-sourcepos=\"108:1-108:81\">皆様がストレスの少ないエンジニア人生を送れますように。</p>\n<h2 data-sourcepos=\"110:1-110:13\">\n<span id=\"おまけ0\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%910\"><i class=\"fa fa-link\"></i></a>おまけ0</h2>\n<p data-sourcepos=\"112:1-112:50\"><iframe id=\"qiita-embed-content__4b75833dea19ea52603d7b1b6a3699f3\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__4b75833dea19ea52603d7b1b6a3699f3\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F71c389c0cc5e89463ce9\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"114:1-114:50\"><iframe id=\"qiita-embed-content__78a14374945d11255532b4e0d9f1fd44\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__78a14374945d11255532b4e0d9f1fd44\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fd519a2b0e35a7a269ea4\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"116:1-116:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"118:1-118:50\"><iframe id=\"qiita-embed-content__ea963f3c992522cba030ef4ed549526a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ea963f3c992522cba030ef4ed549526a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"120:1-120:50\"><iframe id=\"qiita-embed-content__1b9017c7be4929e5e0df0daa8963e721\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1b9017c7be4929e5e0df0daa8963e721\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"122:1-122:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"124:1-124:50\"><iframe id=\"qiita-embed-content__cc0be76a51435435f2a833e917ede381\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__cc0be76a51435435f2a833e917ede381\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"126:1-126:50\"><iframe id=\"qiita-embed-content__48cc11e6e95783f032ff19d2b85022cc\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__48cc11e6e95783f032ff19d2b85022cc\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"128:1-128:50\"><iframe id=\"qiita-embed-content__1ff215b0cf3a06bc2a5f0888c497f282\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1ff215b0cf3a06bc2a5f0888c497f282\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"130:1-130:50\"><iframe id=\"qiita-embed-content__83309c8b68e970d85c38df6984234b9c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__83309c8b68e970d85c38df6984234b9c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"132:1-132:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"134:1-134:50\"><iframe id=\"qiita-embed-content__ad3f3b1ce5bd0cc0101970c4d1852498\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ad3f3b1ce5bd0cc0101970c4d1852498\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"136:1-136:50\"><iframe id=\"qiita-embed-content__b83b13c749b920d20a9708bb7b6c569d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b83b13c749b920d20a9708bb7b6c569d\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"138:1-138:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"140:1-140:50\"><iframe id=\"qiita-embed-content__ab0e2ecbfbf3f5470d9f2bae2971bce4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ab0e2ecbfbf3f5470d9f2bae2971bce4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"142:1-142:50\"><iframe id=\"qiita-embed-content__0987237a07069936a8d5c7a0910c379c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__0987237a07069936a8d5c7a0910c379c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"144:1-144:50\"><iframe id=\"qiita-embed-content__a5ed6f12efc6128c2594d8e2ed2b441c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a5ed6f12efc6128c2594d8e2ed2b441c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"146:1-146:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"148:1-148:50\"><iframe id=\"qiita-embed-content__232931566b3f5dd6cdff4c9acbdfb71b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__232931566b3f5dd6cdff4c9acbdfb71b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"150:1-150:50\"><iframe id=\"qiita-embed-content__13525255ae26fcbc516355b32fb1a8b7\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__13525255ae26fcbc516355b32fb1a8b7\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"152:1-152:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"154:1-155:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"157:1-157:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\nITエンジニアのみなさんこんにちは。\n今日はIT業界でストレスなく働くということについて考えます。\n\nGPT先生にお題を頂いてそれぞれコメントしていきます。\n\n![ストレス.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/0f0937cd-d264-e244-791a-14f647a31873.png)\n\n## 状況への適応の困難さ\n\nIT業界で最も多く発生しているのはこの要因かと思います。\n\nITエンジニアはSESなどで時間いくらで切り売りしている時給労働者ですが、**簡単にはできない技術**を提供することで高い単価を頂く仕事になっています。\n\n学生さんから社会人になった人には分かりにくいですが、一定の期間内に一定の成果を出すといった点がコンビニのバイトとは大きく異なります。\n\n> 現実の状況や要求が個人の能力や資源を超えている場合、適応することが難しくなります。このような状況では、ストレスが生じやすくなります。\n\n**誰にでも簡単にはできない技術** はマニュアル化されておらず、自分で状況を判断して適切な結果を出していく仕事となりますが、それができないとするとストレスの原因となります。\n\n**『自分ができること』** と **『やらなければいけないこと』** に差異がある状態が続くとはメンタルに良くない影響を与えます。\n\n多くのケースを見てきましたが、これは本人が自力で解決する以外に方法がなさそうです。\n周りでサポートをすることはできますが、**能力を身につけて状況に適応するのは本人しかできませんので。**\n\nITの仕事はプログラムを書く仕事と思われがちですが、それはプロジェクトのほんの一部です。当然プログラムの読み書きは必須ですが、日本語の読み書きの方が重要な仕事であったりします。\n\nITの仕事を頼む方は、IT以外の仕事をしている方です。自分達の業務には詳しいけれどもITには詳しくない方々です。その様な方々から依頼を受けて、自分達の知らない業務に対して理解をし提案をしていかなければいけません。\n\n大量のドキュメントを読んで理解して整理して、大量のドキュメントを書いて、自分とは価値観の異なる方々とコミュニケーションを取っていく仕事です。\n\n文章の読み書きが速くなっていれば適応できる状況が劇的に増えるので、まずはそこをやって、できることを一つずつ増やしていくのが大事かと思います。\n\n## 不確実性\n\nうまくいくかどうかわからないことをやるのはストレスです。\n過去に経験のあるプロジェクトの似たようなプロジェクトであればある程度予測が立つので不安も軽減されストレスも感じにくくなるかもしれませんが、多様化が進み似たようなプロジェクトも見かけなくなってきました。\n\n伝統的なプロマネ手法にKKD（勘・経験・度胸）法というのがあります。\n度胸や勘は先天的な能力ですから、それらを持たない人は基本的に経験でなんとかするという微妙な手法ですが、未だに根強く使われているような気がしています。\n\n経験ですが、**「成功の経験」よりも「失敗の経験」の方が重要**だと思っています。なぜなら、失敗経験からは、勘と度胸に相当するものが手に入るからです。\n\n「ここまでやったら失敗する」ことを知っているのは「ここまでだったら失敗しない」ことを知っているのと同義で、知らない人より大胆な手を打てるようになりますし、決断までの時間も短縮できます。\nまた、仮に失敗しても次からはやり方を変えようと割り切れる様にもなります。\n\n恐れずどんどん致命的ではない失敗をすることが大事かもしれません。\n\n## 負荷の重さ\n\n仕事、課題をかかえるのを回避するには、「状況への適応の困難さ」に記載の通り、自分の戦闘力を上げるのがまず最低限必要です。その上で、自分がやるべき仕事、人に振るべき仕事というのをうまく仕分けていくというのが必要になると思います。\n\nITエンジニアは基本的に人から依頼されて作業をすることからはじめますが、どこからか、人に依頼する側に回らないといけなくなります。\n人に依頼などしたことないからどうやって振っていいか分かりません。適当に指示を出しても思った通り結果が得られないので、自分でやった方が速いという思考になると自分で抱える上に、チームメンバーを遊ばせることになるのでそれは避けなければなりません。\n\nそれまでの仕事と全く異なる仕事をなぜかやらないといけないのはストレスだと思いますが、チームビルディングやマネジメントの書籍を読み漁って自分の価値観のアップデートをするとよいかもしれません。\n\n## 個人の期待や要求\n\nこれは適度にあった方がよいストレスかと思います。\nあまりに重い場合にはそれらから逃れる方法を考えることも必要かもしれません。\n\n## 環境の変化\n\nこれはイベントが発生したら不可避のストレスになると思いますが、持続性のあるものではないので時間が解決するかと思います。\n\nただし、変化した結果が「状況への適応が困難な環境」への変化であれば、自力での解決が必要になるかと思います。\n海外へ転勤になるなどであれば、英語を覚えたりなども必要になりそうですが、それに対応するのか断るのかなどの選択肢もあるのかもしれませんね。\n\n## 人間関係の変化\n\n社会人の人間関係は、学生の人間関係と異なり利害関係がメインかと思います。\n\n社会人の関係性と、学生同士の関係性の大きな違いは、仮にアウトプットが足りない時に指摘をしないといけないのかという点だと思います。\n\n学生であれば、指摘する側に指摘をするメリットがありません。仮に指摘をしないことで相手が留年したとしても、翌年も楽しく遊べることでしょう。指摘側の被害はゼロです。\n一方で指摘しても、改善しなかったりするリスクや、人間関係が壊れるリスクがあったりとデメリットしかありません。\n\nしかし社会人は違います。**指摘しないことによって会社がアサインできない人間を抱え続けるリスクに繋がります。**\n\n困ったことに言う方も言われる方もストレスしかありません。\n\n結果として、多くの人はこのことをうっすらと理解しつつ、指摘は行わずにそこはそれとして自分のできることをやるという選択肢を取る気がします。\n帰属意識が薄れたり終身雇用が崩れつつあったりするので、そこでリスクを取ったりコストをかける意味も薄れているのかもしれません。\n\n## 生活スタイル\n\n運動は大事です。自転車楽しいです。\n体力が落ちるととにかくネガティブになりがちです。\n\n## 過去の経験\n\nこちらはコメントできることがないのでスキップします。\n\n## 個人差\n\nこちらはコメントできることがないのでスキップします。\n\n## おわりに\n\nなんだかんだでITは技術職なので「簡単にはできない技術」を提供できるようにならないと続けられない仕事かと思います。\nそれでも、文書の読み書きや、プログラムを書いたり、新しい知識を増やすことが好きであればあまりストレスを感じずにやっていけるかもしれません。\n\n一方で『好きだから』でやっていると『好きではない』ことをやらなければならない時に大きなストレスを感じる難しさがあるかもしれません。\n個人的には、『 **「やらなければならないこと」** を **「やりたいこと」** と思い込むようにしたら色々なストレスから開放される。』というライフハックを愛用しています。\n\n皆様がストレスの少ないエンジニア人生を送れますように。\n\n## おまけ0\n\nhttps://qiita.com/kaku3/items/71c389c0cc5e89463ce9\n\nhttps://qiita.com/kaku3/items/d519a2b0e35a7a269ea4\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 3,
    "created_at": "2023-08-19T18:38:15+09:00",
    "group": null,
    "id": "a6291ba623b739f35c46",
    "likes_count": 320,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 266,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "ストレス",
        "versions": []
      }
    ],
    "title": "IT業界でストレスなく働くには",
    "updated_at": "2023-09-04T07:26:33+09:00",
    "url": "https://qiita.com/kaku3/items/a6291ba623b739f35c46",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 73908,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:168\">「100万人に伝えたい！失敗を乗り超えた話を共有しよう」にエントリする記事を書こうと過去の経験を引っ張ってきました。</p>\n<p data-sourcepos=\"5:1-5:126\">失敗とか乗り越えたとはちょっと違うのですが、製品開発を行う方の参考になれば幸いです。</p>\n<h2 data-sourcepos=\"7:1-7:45\">\n<span id=\"ゲーム屋のキャリアのはじまり\" class=\"fragment\"></span><a href=\"#%E3%82%B2%E3%83%BC%E3%83%A0%E5%B1%8B%E3%81%AE%E3%82%AD%E3%83%A3%E3%83%AA%E3%82%A2%E3%81%AE%E3%81%AF%E3%81%98%E3%81%BE%E3%82%8A\"><i class=\"fa fa-link\"></i></a>ゲーム屋のキャリアのはじまり</h2>\n<p data-sourcepos=\"9:1-10:147\">元々システム屋から、ゲームが好きでゲームが作りたくてゲーム屋に転職したことがある人間です。<br>\nゲームプログラムは個人で勉強はしていましたが、職業としてできる程でもないからと企画職で入りました。</p>\n<p data-sourcepos=\"12:1-12:538\">スタート時点で色々間違っていたのですが、なぜ『プログラムは職業としてできる程でもない』と思ったのに『企画は職業としてできる』と思ったのでしょうね。<strong>自分の考える企画は最高に面白いという思い込み</strong>はクリエィティブでいるためのモチベーションとして必要だと思うのですが、同時に、客観的に価値判断できる自分も頭の片隅に置く必要があると気づいたのは大分立ってからでした。</p>\n<p data-sourcepos=\"14:1-14:361\">プログラマーの方々は自分の好きなゲームを作りたくて頑張って勉強していたのに、<strong>ぽっと出の何の実績もない若造</strong>が『これ面白いから作って』と未熟な言葉で伝えても聞いてくれるわけがないし、話を聞いてもらおうという方が失礼な話だったと反省しています。</p>\n<p data-sourcepos=\"16:1-16:306\">ゲームが好きでゲーム屋に入ったら、親切な先輩がいて手取り足取り教えてくれて、程よい課題が用意されて、大した努力もしていない未経験者にゲームを作れるまで育ててもらえるかというとそんなことはなかったわけです。</p>\n<p data-sourcepos=\"18:1-18:463\">ただ、幸か不幸か、自分の様な素人でも採用してもらえる会社でしたから、周りもゲーム開発の経験がない方ばかりで、なんでも<del>やらなければなりませんでした</del>手を上げればやらせてもらえましたので、昼も夜もありませんでしたが、最初のプロジェクトが終わる頃には企画もシナリオもプログラムもなんとなくできるようになってました。</p>\n<h2 data-sourcepos=\"20:1-20:27\">\n<span id=\"そして持ち込みへ\" class=\"fragment\"></span><a href=\"#%E3%81%9D%E3%81%97%E3%81%A6%E6%8C%81%E3%81%A1%E8%BE%BC%E3%81%BF%E3%81%B8\"><i class=\"fa fa-link\"></i></a>そして持ち込みへ</h2>\n<p data-sourcepos=\"22:1-23:240\">わたしがいたのは小さなゲーム屋で、自社開発ではなく受託業務をメインとしていました。安定してお客様からの仕事があるわけではないので、仕事がない時期は企画書を書いたりプロトタイプを作ったりもしました。<br>\nアクション性の高いゲームなどは企画書だけでは面白さを伝えるのが難しいので動くサンプルがあった方がよいでしょうし、持ち込まれる側も完成形が見えた方がいいでしょう。</p>\n<p data-sourcepos=\"25:1-26:204\">何一つ制約がない中で自社製品の企画を考えるのはとても大変でした。好きなことをようやく好き放題やれるようになったはずなのに。<br>\n受託の仕事と違って、期日や費用などを言い訳にできないし、色々な人が色々なことを言うのを矛盾なく取り入れるのが大変だったのかもしれません。</p>\n<p data-sourcepos=\"28:1-28:102\">そんなこんなで仕事の合間をぬって(?)持ち込み用のゲームが完成しました。</p>\n<p data-sourcepos=\"30:1-30:336\">ぽっと出の何の実績もない若造の話を聞きたくないと同様、謎のゲームの企画をいきなり持ち込まれても対応に困ると思うのですが、社長のつてで割りと大手のプロデューサーがお話を聞いてくれることとなりプレゼンに行くことになったのでした。</p>\n<h2 data-sourcepos=\"32:1-32:33\">\n<span id=\"面白さは十分わかった\" class=\"fragment\"></span><a href=\"#%E9%9D%A2%E7%99%BD%E3%81%95%E3%81%AF%E5%8D%81%E5%88%86%E3%82%8F%E3%81%8B%E3%81%A3%E3%81%9F\"><i class=\"fa fa-link\"></i></a>面白さは十分わかった</h2>\n<p data-sourcepos=\"34:1-35:66\">プロデューサーの方は、物腰も柔らかい感じで随分いい方だなぁと思いました。<br>\n一通り説明を聞いて、最後にこう言われました。</p>\n<p data-sourcepos=\"37:1-37:70\">「面白さは十分わかった。<strong>で、売れる保証は？</strong>」</p>\n<p data-sourcepos=\"39:1-39:213\">当時のわたしにはかなり衝撃的であるとともに大変分かりやすい言葉でした。自分なりに面白いことばかり考えてたのを一言で全否定されているわけですが。</p>\n<p data-sourcepos=\"41:1-41:401\">今のソシャゲーの企画が、システムは使いまわしで、IPをどこからともなく集めてきて数字を作るような企画が溢れていることを考えると、随分早くにその考えに至られていてすごいなとなりますが、「おもしろいクリエィティブなものを作りたい」とは随分遠いところにいるよなぁとも思います。</p>\n<p data-sourcepos=\"43:1-44:267\">趣味ではなく仕事なのだから、予算や計画があって、投資した分のお金を回収できる売上は必要です。<br>\n大きな会社になればなる程所属する人間が多くなり必要な給与も多くなるので、大きな売上が必要です。より多くの人間を何年間も同じ方向を向いて働かせるためには分かりやすい理由が必要です。</p>\n<p data-sourcepos=\"46:1-46:183\">それは「面白い」などという曖昧な指標ではなく、「売れる」という分かりやすい指標が必要と考えるのは企業としてはシンプルです。</p>\n<p data-sourcepos=\"48:1-48:228\">ただ、「誰にでも簡単に分かる売れる指標」は、それは「コストさえかければ誰にでも模倣可能」となる指標の可能性があり、あまりよい指標ではないかもしれません。</p>\n<h2 data-sourcepos=\"50:1-50:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"52:1-53:105\">今回記事にしたエピソード後、ゲーム屋は辞めて随分時間が経ってから、個人で企画を持ち込んで製品化に至りました。<br>\nゲームは儲からないから足洗ったはずなのですが人生分からないものでした。</p>\n<p data-sourcepos=\"55:1-55:255\">こちらの成功体験の振り返りを行ったところ、どうも簡単に再現が可能ではないようで、売れる企画を作るためには、必要条件と十分条件というのがあるのでは？と考える様になりました。</p>\n<p data-sourcepos=\"57:1-57:195\">必要条件は書籍や過去の経験から学べるけれど、十分条件には、運の要素や、成功するまで続けられる体力などが含まれていると思っています。</p>\n<p data-sourcepos=\"59:1-60:132\">以下、わたしが現時点で必要条件と感じている事項を列挙してまとめとしておきます。<br>\nゲームやアプリの部分は適宜読み替えて頂くと、その他のプロダクトにも応用が効くと思います。</p>\n<ul data-sourcepos=\"62:1-79:0\">\n<li data-sourcepos=\"62:1-64:46\">企画をするのに十分なインプットをする\n<ul data-sourcepos=\"63:3-64:46\">\n<li data-sourcepos=\"63:3-63:61\">既存のゲームなどをとにかくたくさん遊ぶ</li>\n<li data-sourcepos=\"64:3-64:46\">好きなものも嫌いなものも遊ぶ</li>\n</ul>\n</li>\n<li data-sourcepos=\"65:1-68:61\">実績を積む\n<ul data-sourcepos=\"66:3-68:61\">\n<li data-sourcepos=\"66:3-66:58\">フリーでアプリを作ってリリースする等</li>\n<li data-sourcepos=\"67:3-67:49\">数撃たないと見えないものもある</li>\n<li data-sourcepos=\"68:3-68:61\">相手から見える「あなたの凄さ」をつくる</li>\n</ul>\n</li>\n<li data-sourcepos=\"69:1-72:34\">フィードバックを得る\n<ul data-sourcepos=\"70:3-72:34\">\n<li data-sourcepos=\"70:3-70:55\">数字が出ないも重要なフィードバック</li>\n<li data-sourcepos=\"71:3-71:37\">厳しい意見も受け止める</li>\n<li data-sourcepos=\"72:3-72:34\">独りよがりにならない</li>\n</ul>\n</li>\n<li data-sourcepos=\"73:1-74:67\">最高におもしろい自分は忘れない\n<ul data-sourcepos=\"74:3-74:67\">\n<li data-sourcepos=\"74:3-74:67\">売れるもの研究をしていると、自分を忘れがち</li>\n</ul>\n</li>\n<li data-sourcepos=\"75:1-76:82\">世界観をつくる\n<ul data-sourcepos=\"76:3-76:82\">\n<li data-sourcepos=\"76:3-76:82\">一言で伝わる企画にはあなたの想いの強さと世界観が必要</li>\n</ul>\n</li>\n<li data-sourcepos=\"77:1-79:0\">企画を聞いてくれる人を探す\n<ul data-sourcepos=\"78:3-79:0\">\n<li data-sourcepos=\"78:3-79:0\">予算を握っている人と会話できるようにする</li>\n</ul>\n</li>\n</ul>\n<h2 data-sourcepos=\"80:1-80:15\">\n<span id=\"おまけ０\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%90\"><i class=\"fa fa-link\"></i></a>おまけ０</h2>\n<p data-sourcepos=\"82:1-82:50\"><iframe id=\"qiita-embed-content__87a439ae6de8e4695720b9da52593274\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__87a439ae6de8e4695720b9da52593274\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F340bedc548bc4efd38b5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"84:1-84:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"86:1-86:50\"><iframe id=\"qiita-embed-content__97133f8155256cdf630d15ff98669d79\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__97133f8155256cdf630d15ff98669d79\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"88:1-88:50\"><iframe id=\"qiita-embed-content__2ddc1c7be4e67b6f45e5196478e38d49\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2ddc1c7be4e67b6f45e5196478e38d49\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"90:1-90:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"92:1-92:50\"><iframe id=\"qiita-embed-content__15a451605bed1244a9b8b9824d451e84\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__15a451605bed1244a9b8b9824d451e84\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"94:1-94:50\"><iframe id=\"qiita-embed-content__1030f45d3b13b150c55bd754e6cd172c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1030f45d3b13b150c55bd754e6cd172c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"96:1-96:50\"><iframe id=\"qiita-embed-content__8bf89a65c1bce52304836302f6d4c9e4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__8bf89a65c1bce52304836302f6d4c9e4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"98:1-98:50\"><iframe id=\"qiita-embed-content__9d12f4cafdd15b156c8bd4109b0680bd\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9d12f4cafdd15b156c8bd4109b0680bd\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"100:1-100:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"102:1-102:50\"><iframe id=\"qiita-embed-content__7c7cad31c074f1125433faa9147faca9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__7c7cad31c074f1125433faa9147faca9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"104:1-104:50\"><iframe id=\"qiita-embed-content__6e8eefcfbb9161b97d0848e48dbf46f8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6e8eefcfbb9161b97d0848e48dbf46f8\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"106:1-106:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"108:1-108:50\"><iframe id=\"qiita-embed-content__426b02f31c30d11ff2dea93ba6497c79\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__426b02f31c30d11ff2dea93ba6497c79\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"110:1-110:50\"><iframe id=\"qiita-embed-content__f2fa93dc17d8221a05deca132501223e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f2fa93dc17d8221a05deca132501223e\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"112:1-112:50\"><iframe id=\"qiita-embed-content__69d266fe9ffa50b8ba8226881234ff64\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__69d266fe9ffa50b8ba8226881234ff64\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"114:1-114:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"116:1-116:50\"><iframe id=\"qiita-embed-content__6104e117b2f17149be987e89a8f798c6\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6104e117b2f17149be987e89a8f798c6\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"118:1-118:50\"><iframe id=\"qiita-embed-content__52c10796790f835155b103c5d4ebc55b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__52c10796790f835155b103c5d4ebc55b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"120:1-120:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"122:1-123:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"125:1-125:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\n「100万人に伝えたい！失敗を乗り超えた話を共有しよう」にエントリする記事を書こうと過去の経験を引っ張ってきました。\n\n失敗とか乗り越えたとはちょっと違うのですが、製品開発を行う方の参考になれば幸いです。\n\n## ゲーム屋のキャリアのはじまり\n\n元々システム屋から、ゲームが好きでゲームが作りたくてゲーム屋に転職したことがある人間です。\nゲームプログラムは個人で勉強はしていましたが、職業としてできる程でもないからと企画職で入りました。\n\nスタート時点で色々間違っていたのですが、なぜ『プログラムは職業としてできる程でもない』と思ったのに『企画は職業としてできる』と思ったのでしょうね。**自分の考える企画は最高に面白いという思い込み**はクリエィティブでいるためのモチベーションとして必要だと思うのですが、同時に、客観的に価値判断できる自分も頭の片隅に置く必要があると気づいたのは大分立ってからでした。\n\nプログラマーの方々は自分の好きなゲームを作りたくて頑張って勉強していたのに、**ぽっと出の何の実績もない若造**が『これ面白いから作って』と未熟な言葉で伝えても聞いてくれるわけがないし、話を聞いてもらおうという方が失礼な話だったと反省しています。\n\nゲームが好きでゲーム屋に入ったら、親切な先輩がいて手取り足取り教えてくれて、程よい課題が用意されて、大した努力もしていない未経験者にゲームを作れるまで育ててもらえるかというとそんなことはなかったわけです。\n\nただ、幸か不幸か、自分の様な素人でも採用してもらえる会社でしたから、周りもゲーム開発の経験がない方ばかりで、なんでも~~やらなければなりませんでした~~手を上げればやらせてもらえましたので、昼も夜もありませんでしたが、最初のプロジェクトが終わる頃には企画もシナリオもプログラムもなんとなくできるようになってました。\n\n## そして持ち込みへ\n\nわたしがいたのは小さなゲーム屋で、自社開発ではなく受託業務をメインとしていました。安定してお客様からの仕事があるわけではないので、仕事がない時期は企画書を書いたりプロトタイプを作ったりもしました。\nアクション性の高いゲームなどは企画書だけでは面白さを伝えるのが難しいので動くサンプルがあった方がよいでしょうし、持ち込まれる側も完成形が見えた方がいいでしょう。\n\n何一つ制約がない中で自社製品の企画を考えるのはとても大変でした。好きなことをようやく好き放題やれるようになったはずなのに。\n受託の仕事と違って、期日や費用などを言い訳にできないし、色々な人が色々なことを言うのを矛盾なく取り入れるのが大変だったのかもしれません。\n\nそんなこんなで仕事の合間をぬって(?)持ち込み用のゲームが完成しました。\n\nぽっと出の何の実績もない若造の話を聞きたくないと同様、謎のゲームの企画をいきなり持ち込まれても対応に困ると思うのですが、社長のつてで割りと大手のプロデューサーがお話を聞いてくれることとなりプレゼンに行くことになったのでした。\n\n## 面白さは十分わかった\n\nプロデューサーの方は、物腰も柔らかい感じで随分いい方だなぁと思いました。\n一通り説明を聞いて、最後にこう言われました。\n\n「面白さは十分わかった。**で、売れる保証は？**」\n\n当時のわたしにはかなり衝撃的であるとともに大変分かりやすい言葉でした。自分なりに面白いことばかり考えてたのを一言で全否定されているわけですが。\n\n今のソシャゲーの企画が、システムは使いまわしで、IPをどこからともなく集めてきて数字を作るような企画が溢れていることを考えると、随分早くにその考えに至られていてすごいなとなりますが、「おもしろいクリエィティブなものを作りたい」とは随分遠いところにいるよなぁとも思います。\n\n趣味ではなく仕事なのだから、予算や計画があって、投資した分のお金を回収できる売上は必要です。\n大きな会社になればなる程所属する人間が多くなり必要な給与も多くなるので、大きな売上が必要です。より多くの人間を何年間も同じ方向を向いて働かせるためには分かりやすい理由が必要です。\n\nそれは「面白い」などという曖昧な指標ではなく、「売れる」という分かりやすい指標が必要と考えるのは企業としてはシンプルです。\n\nただ、「誰にでも簡単に分かる売れる指標」は、それは「コストさえかければ誰にでも模倣可能」となる指標の可能性があり、あまりよい指標ではないかもしれません。\n\n## おわりに\n\n今回記事にしたエピソード後、ゲーム屋は辞めて随分時間が経ってから、個人で企画を持ち込んで製品化に至りました。\nゲームは儲からないから足洗ったはずなのですが人生分からないものでした。\n\nこちらの成功体験の振り返りを行ったところ、どうも簡単に再現が可能ではないようで、売れる企画を作るためには、必要条件と十分条件というのがあるのでは？と考える様になりました。\n\n必要条件は書籍や過去の経験から学べるけれど、十分条件には、運の要素や、成功するまで続けられる体力などが含まれていると思っています。\n\n以下、わたしが現時点で必要条件と感じている事項を列挙してまとめとしておきます。\nゲームやアプリの部分は適宜読み替えて頂くと、その他のプロダクトにも応用が効くと思います。\n\n- 企画をするのに十分なインプットをする\n  - 既存のゲームなどをとにかくたくさん遊ぶ\n  - 好きなものも嫌いなものも遊ぶ\n- 実績を積む\n  - フリーでアプリを作ってリリースする等\n  - 数撃たないと見えないものもある\n  - 相手から見える「あなたの凄さ」をつくる\n- フィードバックを得る\n  - 数字が出ないも重要なフィードバック\n  - 厳しい意見も受け止める\n  - 独りよがりにならない\n- 最高におもしろい自分は忘れない\n  - 売れるもの研究をしていると、自分を忘れがち\n- 世界観をつくる\n  - 一言で伝わる企画にはあなたの想いの強さと世界観が必要\n- 企画を聞いてくれる人を探す\n  - 予算を握っている人と会話できるようにする\n\n## おまけ０\n\nhttps://qiita.com/kaku3/items/340bedc548bc4efd38b5\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-08-12T16:53:25+09:00",
    "group": null,
    "id": "1e1543e51c8e093dd310",
    "likes_count": 48,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 33,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "企画",
        "versions": []
      }
    ],
    "title": "ゲームを持ち込んで、「面白さは十分わかった、で…」って言われた話",
    "updated_at": "2023-08-12T16:53:25+09:00",
    "url": "https://qiita.com/kaku3/items/1e1543e51c8e093dd310",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 14713,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:9\">\n<span id=\"始動\" class=\"fragment\"></span><a href=\"#%E5%A7%8B%E5%8B%95\"><i class=\"fa fa-link\"></i></a>始動</h2>\n<p data-sourcepos=\"3:1-3:269\">288ページにもおよぶ<del>死海文書</del><a href=\"https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf\" rel=\"nofollow noopener\" target=\"_blank\">企業IT動向調査報告書 2023 (PDF形式) : 一般社団法人　日本情報システム・ユーザー協会（JUAS）</a>が全文無料公開されていました。</p>\n<p data-sourcepos=\"5:1-5:128\">この文書等から2030年最大79万人不足するITエンジニアの補完計画の考察してみたいと思います。</p>\n<p data-sourcepos=\"7:1-8:134\"><a href=\"https://camo.qiitausercontent.com/aed802026866206583537f2bb7e796b7d6a1645d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36326632343561662d356164622d326164352d363031342d3561303731383838383533352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F62f245af-5adb-2ad5-6014-5a0718888535.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=5b35464580c0a46061c96504f732ee5b\" alt=\"IT人口推移.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/62f245af-5adb-2ad5-6014-5a0718888535.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F62f245af-5adb-2ad5-6014-5a0718888535.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=6e5b19a6e6f9c322aec4b5286b663bab 1x\" loading=\"lazy\"></a><br>\n出典：経済産業省「ITベンチャー等によるイノベーション促進のための人材育成・確保モデル事業」</p>\n<h2 data-sourcepos=\"10:1-10:23\">\n<span id=\"2nd-pf-から-3rd-pf\" class=\"fragment\"></span><a href=\"#2nd-pf-%E3%81%8B%E3%82%89-3rd-pf\"><i class=\"fa fa-link\"></i></a>2nd PF から 3rd PF</h2>\n<p data-sourcepos=\"12:1-12:390\">従来型のITサービスを第2のプラットフォーム(2nd PF)、クラウド、モビリティ、ソーシャル、ビッグデータ／アナリティクス、さらにはIoT/AIといった分野でのITサービスを第3のプラットフォーム(3rd PF)と定義し、2030年までの<del>3rdインパクトによる影響を</del>それらの遷移を以下グラフに示します。</p>\n<p data-sourcepos=\"14:1-17:104\"><a href=\"https://camo.qiitausercontent.com/057cbcc14609405e6a63829f98037fd16dd37c71/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f66333966383463322d316363332d333639322d383365302d3661626633356334363534342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff39f84c2-1cc3-3692-83e0-6abf35c46544.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=a88a33d79677b6688a35617589193e7b\" alt=\"2ndPF-3rdPF.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f39f84c2-1cc3-3692-83e0-6abf35c46544.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff39f84c2-1cc3-3692-83e0-6abf35c46544.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=177093eaca9ea3c69296085c190eaca6 1x\" loading=\"lazy\"></a><br>\n出典 : 各調査会社による市場予測をもとにみずほ情報総研推計<br>\n<a href=\"https://www.meti.go.jp/shingikai/economy/daiyoji_sangyo_skill/pdf/001_s03_00.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : 参考資料（ＩＴ人材育成の状況等について） : 経済産業省 商務情報政策局<br>\n情報処理振興課</a></p>\n<p data-sourcepos=\"19:1-19:225\">グラフでは、2030年には2nd PF と 3rd PF の割合が逆転しており、従来型ITエンジニアのスキルでは対応できない案件が半数を超える可能性を示しているようにも見えます。</p>\n<h2 data-sourcepos=\"21:1-21:105\">\n<span id=\"2nd-pfを維持するランザビジネス予算と3rd-pfを推進するバリューアップ予算\" class=\"fragment\"></span><a href=\"#2nd-pf%E3%82%92%E7%B6%AD%E6%8C%81%E3%81%99%E3%82%8B%E3%83%A9%E3%83%B3%E3%82%B6%E3%83%93%E3%82%B8%E3%83%8D%E3%82%B9%E4%BA%88%E7%AE%97%E3%81%A83rd-pf%E3%82%92%E6%8E%A8%E9%80%B2%E3%81%99%E3%82%8B%E3%83%90%E3%83%AA%E3%83%A5%E3%83%BC%E3%82%A2%E3%83%83%E3%83%97%E4%BA%88%E7%AE%97\"><i class=\"fa fa-link\"></i></a>2nd PFを維持するランザビジネス予算と、3rd PFを推進するバリューアップ予算</h2>\n<p data-sourcepos=\"23:1-23:373\">一方で、ランザビジネス（現行ビジネスの維持運営）予算とバリューアップ（ビジネスの新しい施策展開）予算の比率は、2022年で、76.1% : 23.9% とレガシーシステムからの脱却の難しさも示されており、3rd PF への推移がそこまでの勢いで推進しない可能性もあるかもしれません。</p>\n<p data-sourcepos=\"25:1-27:76\"><a href=\"https://camo.qiitausercontent.com/81920c4906021d1029cec35b6db35dd686746efe/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f39313031316230662d313038652d386634322d376666652d6234333833616439656664662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F91011b0f-108e-8f42-7ffe-b4383ad9efdf.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ad2b650cdf49d677354c8ddb9a065327\" alt=\"IT予算分配_年度別.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/91011b0f-108e-8f42-7ffe-b4383ad9efdf.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F91011b0f-108e-8f42-7ffe-b4383ad9efdf.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=06c97c268debde2ac91a8a2bf86ace5e 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 2-1-17 年度別 IT 予算配分（平均割合）</a><br>\n一般社団法人　日本情報システム・ユーザー協会（JUAS）</p>\n<p data-sourcepos=\"29:1-31:205\">業務で使っているシステムが、<strong>『現在のテクノロジーから見ると明らかに非効率な業務システムだからDXしようZE』</strong> と言っても即座にDXされるわけではありません。<br>\n操作に慣れてしまった担当者目線で言えば、それまで <strong>「問題なく」</strong> 行えていた業務を行うのに、<strong>なぜわざわざ新しいことを覚えないといけないのか</strong> 理解ができません。BtoBやBtoCのシステムであれば、社内の人間だけではなく、社外の人間にもコストをかけてトレーニングを行う必要も出てきてしまいます。<br>\nまた、<strong>誰も使ってないかもしれない現行システムの謎仕様</strong>を新システムにどのように移行していいか分からないといった問題もあるかもしれません。</p>\n<p data-sourcepos=\"33:1-33:299\">その様な状況を鑑みると、DXや業務改善の難しさはシステムの使いやすさうんぬんよりも、システムを使う人間の意識をどう変えていくか、古いしがらみをどの様に断ち切っていくかというところにあるのかもしれません。</p>\n<p data-sourcepos=\"35:1-35:192\">ここで、売上高1兆円以上の企業に着目すると、ランザビジネス予算とバリューアップ予算の比率が、61.8% : 38.2% となっているのが分かります。</p>\n<p data-sourcepos=\"37:1-39:76\"><a href=\"https://camo.qiitausercontent.com/d8582b56ca4756dbd69102f2bd3b207c1961f285/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f62366234393438312d623934302d366136322d353438662d6665303830363566303539312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb6b49481-b940-6a62-548f-fe08065f0591.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=9c25aae2af28748c1065eaf19d11c8d7\" alt=\"IT予算分配_売上高別.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b6b49481-b940-6a62-548f-fe08065f0591.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb6b49481-b940-6a62-548f-fe08065f0591.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=346f628b81332ad20fcddf5c8b190172 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 2-1-19 年度別 売上高別 IT 予算配分（3 年後の目標）</a><br>\n一般社団法人　日本情報システム・ユーザー協会（JUAS）</p>\n<p data-sourcepos=\"41:1-42:156\">予算を多く持っている会社では、RPA導入やリスキリングと言ったバズワードを使いつつ、システムを使う人間の意識を変革してDXを推進できているのかもしれません。<br>\nこのような投資をできた会社とできなかった会社で数年後にどのような差がついているのかは興味深いところです。</p>\n<p data-sourcepos=\"44:1-44:278\">話がそれましたが、現時点までの情報からは「ITエンジニア」は「現行システムの維持運営エンジニア」と「ビジネスの新しい施策展開に関する開発エンジニア」の二極化が進んでいくと推察できそうです。</p>\n<h2 data-sourcepos=\"46:1-46:71\">\n<span id=\"現行システムの維持運営エンジニア補完計画2nd-pf\" class=\"fragment\"></span><a href=\"#%E7%8F%BE%E8%A1%8C%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E7%B6%AD%E6%8C%81%E9%81%8B%E5%96%B6%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E8%A3%9C%E5%AE%8C%E8%A8%88%E7%94%BB2nd-pf\"><i class=\"fa fa-link\"></i></a>現行システムの維持運営エンジニア補完計画(2nd PF)</h2>\n<p data-sourcepos=\"48:1-48:189\">現行システムの維持運営案件は、新規ビジネスの創出と異なり <strong>「答えが明確な業務」</strong> であり、以下のような傾向があるように思えます。</p>\n<ul data-sourcepos=\"50:1-54:0\">\n<li data-sourcepos=\"50:1-50:56\">一度入れば長期にわたり安定が得られる</li>\n<li data-sourcepos=\"51:1-51:89\">案件固有の知識やスキルを活かしてベンダーロックインしやすい</li>\n<li data-sourcepos=\"52:1-52:95\">長期案件であればある程ドキュメントが充実していて、変化が少ない</li>\n<li data-sourcepos=\"53:1-54:0\">いずれはリプレイス対象のレガシーシステムとなり消滅する</li>\n</ul>\n<p data-sourcepos=\"55:1-55:383\">こちらは現時点で所属会社が 2nd PF 案件を握っているかで、案件に参画できるかが決まってしまいそうです。また、この案件にアサインできるタイプの人材は充足傾向にあるようで、計画的に補完しなくても人材不足にならないかわりに、単価を低く抑えられる可能性がありそうです。</p>\n<p data-sourcepos=\"57:1-59:76\"><a href=\"https://camo.qiitausercontent.com/c3d212f6263bd4d747df47ed664b259aafd4a0a8/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37343239663237622d646363342d656438642d316531622d6136663136663637383661622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7429f27b-dcc4-ed8d-1e1b-a6f16f6786ab.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f98c10e0a8db8d6758a54626563ef9ce\" alt=\"人材タイプ別.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7429f27b-dcc4-ed8d-1e1b-a6f16f6786ab.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7429f27b-dcc4-ed8d-1e1b-a6f16f6786ab.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=0ab10db5f45b30f40a46a66795591700 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 6-1-2 人材タイプ別 IT 部門要員数の充足状況</a><br>\n一般社団法人　日本情報システム・ユーザー協会（JUAS）</p>\n<p data-sourcepos=\"61:1-61:310\">2nd PF 案件は、システムの寿命と共に消える運命の案件なので、生存戦略としては、他案件でも利用可能なヒューマンスキルや資料作成能力などを重点的に上げたり、業務外で近代言語の習得をしておく必要があるかもしれません。</p>\n<h2 data-sourcepos=\"63:1-63:92\">\n<span id=\"ビジネスの新しい施策展開に関する開発エンジニア補完計画3rd-pf\" class=\"fragment\"></span><a href=\"#%E3%83%93%E3%82%B8%E3%83%8D%E3%82%B9%E3%81%AE%E6%96%B0%E3%81%97%E3%81%84%E6%96%BD%E7%AD%96%E5%B1%95%E9%96%8B%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8B%E9%96%8B%E7%99%BA%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E8%A3%9C%E5%AE%8C%E8%A8%88%E7%94%BB3rd-pf\"><i class=\"fa fa-link\"></i></a>ビジネスの新しい施策展開に関する開発エンジニア補完計画(3rd PF)</h2>\n<p data-sourcepos=\"65:1-65:167\">先の「図表 6-1-2 人材タイプ別 IT 部門要員数の充足状況」を見ると、不足している人材は以下に大別されるように思えます。</p>\n<ul data-sourcepos=\"67:1-71:0\">\n<li data-sourcepos=\"67:1-67:62\">企画職のような答えがない業務を行える人材</li>\n<li data-sourcepos=\"68:1-68:71\">推進職の様な多くの人間と関わる業務を行える人材</li>\n<li data-sourcepos=\"69:1-69:53\">データ分析の様な専門技術を持つ人材</li>\n<li data-sourcepos=\"70:1-71:0\">アジャイル開発の様にプロジェクト活動のすべてを実施できる人材</li>\n</ul>\n<p data-sourcepos=\"72:1-72:99\">それらの人材をどうやって補完するかひとつひとつ検討してみましょう。</p>\n<h3 data-sourcepos=\"74:1-74:64\">\n<span id=\"企画職のような答えがない業務を行える人材\" class=\"fragment\"></span><a href=\"#%E4%BC%81%E7%94%BB%E8%81%B7%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E7%AD%94%E3%81%88%E3%81%8C%E3%81%AA%E3%81%84%E6%A5%AD%E5%8B%99%E3%82%92%E8%A1%8C%E3%81%88%E3%82%8B%E4%BA%BA%E6%9D%90\"><i class=\"fa fa-link\"></i></a>企画職のような答えがない業務を行える人材</h3>\n<p data-sourcepos=\"76:1-77:171\">学校教育では「答えがない問題」に対処する方法は教えてくれませんし、評価もしてくれません。<br>\nそのためか、社会に出てやれと言われてもやり方が分からないし、やる意味も分からないといったことがあるかもしれません。</p>\n<p data-sourcepos=\"79:1-80:182\">そもそも他人から教えてもらえる企画は教える人が実現可能で、それを実現しても売れる企画とはなりません。<br>\n<strong>『あなたにだけ教える必ず儲かる方法』</strong> が存在しないのと同様に、人から教えてもらってそのまま使える企画は存在しないのです。</p>\n<p data-sourcepos=\"82:1-82:153\">基本的な考え方は書籍などで学ぶことはできますが、大事なのは成功するまで継続するつよい心かもしれません。</p>\n<p data-sourcepos=\"84:1-85:159\">散々調査して苦労して作った企画があっさりボツにされたり、自分が面白いと思うことよりも企画を受け取る人が何を考えるかとか、数字を取るためには何が必要かの方が大事な世界です。思い込みで企画になると大ヤケドをします。<br>\nそのような世界で自我を保ち続けて、奇跡を待たずに地道な努力を続けてヒット作を作る人材が企画職かと思います。</p>\n<p data-sourcepos=\"87:1-87:236\">この様な人材を『ITエンジニア』として募集しても補完はできないですが、「答えがない問題」に取り組める人間に適切な経験を積ませることで補完ができるかもしれません。</p>\n<h3 data-sourcepos=\"89:1-89:73\">\n<span id=\"推進職の様な多くの人間と関わる業務を行える人材\" class=\"fragment\"></span><a href=\"#%E6%8E%A8%E9%80%B2%E8%81%B7%E3%81%AE%E6%A7%98%E3%81%AA%E5%A4%9A%E3%81%8F%E3%81%AE%E4%BA%BA%E9%96%93%E3%81%A8%E9%96%A2%E3%82%8F%E3%82%8B%E6%A5%AD%E5%8B%99%E3%82%92%E8%A1%8C%E3%81%88%E3%82%8B%E4%BA%BA%E6%9D%90\"><i class=\"fa fa-link\"></i></a>推進職の様な多くの人間と関わる業務を行える人材</h3>\n<p data-sourcepos=\"91:1-92:114\">大きな企業になればなるほど多くの部署や人が関わる業務が増えます。<br>\n異なる部署には異なる人が存在して、利害関係もしやすい仕事の方法も異なります。</p>\n<p data-sourcepos=\"94:1-94:234\">これをまとめ上げる調整力や権威、あるいは政治力を持った人材、はおそらく先天的な性質と若い頃からの教育や環境などが組み合わさらないと錬成されない様に思えます。</p>\n<p data-sourcepos=\"96:1-96:233\">この様な人材を『ITエンジニア』として募集しても補完できないですが、「人と関わる仕事」に取り組める人間に適切な経験を積ませることで補完ができるかもしれません。</p>\n<h3 data-sourcepos=\"98:1-98:55\">\n<span id=\"データ分析の様な専門技術を持つ人材\" class=\"fragment\"></span><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E5%88%86%E6%9E%90%E3%81%AE%E6%A7%98%E3%81%AA%E5%B0%82%E9%96%80%E6%8A%80%E8%A1%93%E3%82%92%E6%8C%81%E3%81%A4%E4%BA%BA%E6%9D%90\"><i class=\"fa fa-link\"></i></a>データ分析の様な専門技術を持つ人材</h3>\n<p data-sourcepos=\"100:1-100:120\">３度の飯よりデータ分析が好き、と、寝食を忘れて研究に没頭するような人材でしょう。</p>\n<p data-sourcepos=\"102:1-102:230\">この様な人材は、街のIT屋が募集をかけると無用の長物になる可能性が高いので注意が必要ですが、然るべき機関にて然るべき募集をすれば補完できるのかもしれません。</p>\n<h3 data-sourcepos=\"104:1-104:94\">\n<span id=\"アジャイル開発の様にプロジェクト工程のすべてを実施できる人材\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%82%B8%E3%83%A3%E3%82%A4%E3%83%AB%E9%96%8B%E7%99%BA%E3%81%AE%E6%A7%98%E3%81%AB%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E5%B7%A5%E7%A8%8B%E3%81%AE%E3%81%99%E3%81%B9%E3%81%A6%E3%82%92%E5%AE%9F%E6%96%BD%E3%81%A7%E3%81%8D%E3%82%8B%E4%BA%BA%E6%9D%90\"><i class=\"fa fa-link\"></i></a>アジャイル開発の様にプロジェクト工程のすべてを実施できる人材</h3>\n<p data-sourcepos=\"106:1-107:398\">ウォーターフォール開発はできて、アジャイル開発ができない人材は、開発プロジェクト工程の一部しか経験していないからできるようにならないと考えられます。<br>\nアジャイル開発は、短いサイクルで開発のすべての工程を回す手法なので、従事する人材は全ての工程を実施できる必要があります。この人材は、既存の業務の中で、要件定義、外部設計、詳細設計、開発、試験まですべての工程およびPMを経験させることで、育成することで補完できそうです。</p>\n<p data-sourcepos=\"109:1-109:247\">ただし、<strong>「開発が好きで開発しかやりたくないです。」</strong> 、<strong>「プログラムが苦手なので外部設計しかしません」</strong> といった傾向もあるため、簡単には補完できないかもしれません。</p>\n<h2 data-sourcepos=\"111:1-111:30\">\n<span id=\"システム開発の現状\" class=\"fragment\"></span><a href=\"#%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E9%96%8B%E7%99%BA%E3%81%AE%E7%8F%BE%E7%8A%B6\"><i class=\"fa fa-link\"></i></a>システム開発の現状</h2>\n<p data-sourcepos=\"113:1-113:287\">ビジネスの新しい施策展開に関する開発エンジニア補完計画(3rd PF)にて、辛うじてアジャイル人材だけは育成できるかもしれないと考察しましたが、育成できるような環境が存在しているのかを見ておきましょう。</p>\n<p data-sourcepos=\"115:1-115:138\">以下、システム開発において、工期遵守、予算遵守、品質満足度についての推移のグラフを示します。</p>\n<p data-sourcepos=\"117:1-119:76\"><a href=\"https://camo.qiitausercontent.com/3f46039822c361a3193a00ecd838adc2ef13499f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f65363339346630372d353733612d336265302d306130332d3262613963663432353931312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe6394f07-573a-3be0-0a03-2ba9cf425911.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2fed15db3990a390897dfe6e7b1af18b\" alt=\"システム開発_工期遵守.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e6394f07-573a-3be0-0a03-2ba9cf425911.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe6394f07-573a-3be0-0a03-2ba9cf425911.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=7fcaff1de8ff3c9e147041954a0171a4 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 7-1-1 プロジェクト規模別・年度別 システム開発の工期遵守状況</a><br>\n一般社団法人　日本情報システム・ユーザー協会（JUAS）</p>\n<p data-sourcepos=\"121:1-123:76\"><a href=\"https://camo.qiitausercontent.com/415a79e83695f58c13bf18d44f99f61f2ed3abf3/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f65303262666138322d393038372d366262332d666135652d3132386363306530343539312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe02bfa82-9087-6bb3-fa5e-128cc0e04591.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=57c677b9b4c1575c3ade96d82a25767e\" alt=\"システム開発_予算遵守.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e02bfa82-9087-6bb3-fa5e-128cc0e04591.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe02bfa82-9087-6bb3-fa5e-128cc0e04591.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=6a1e82240d643221599564e3c5026e78 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 7-1-2 プロジェクト規模別・年度別 システム開発の予算遵守状況</a><br>\n一般社団法人　日本情報システム・ユーザー協会（JUAS）</p>\n<p data-sourcepos=\"125:1-127:76\"><a href=\"https://camo.qiitausercontent.com/4ee9755cfcfe6b2ceea00f73de64807c7894dacb/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37636236373131332d646637322d353634322d653831372d3734666562613036383331662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7cb67113-df72-5642-e817-74feba06831f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=5437521d2f7beec0f329a3e4ffdb1395\" alt=\"システム開発_品質満足度.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7cb67113-df72-5642-e817-74feba06831f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7cb67113-df72-5642-e817-74feba06831f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=df31fca9354b0df79b3ffc1cce8652f5 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 7-1-3 プロジェクト規模別・年度別 システム開発の品質満足度の状況</a><br>\n一般社団法人　日本情報システム・ユーザー協会（JUAS）</p>\n<p data-sourcepos=\"129:1-129:90\">また、予定通りにならなかった要因についてもグラフを示します。</p>\n<p data-sourcepos=\"131:1-133:76\"><a href=\"https://camo.qiitausercontent.com/bd3fee7eb723473002d63c02da5407f3b7274e11/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64623438616266332d373835322d333939302d646239662d6561613664616132616263342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdb48abf3-7852-3990-db9f-eaa6daa2abc4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=02f7d4a34e246a6da878c135e47d6f06\" alt=\"システム開発_要因.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/db48abf3-7852-3990-db9f-eaa6daa2abc4.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdb48abf3-7852-3990-db9f-eaa6daa2abc4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=fecf4a0ad63ba9b5cc8a0b15f056b5c8 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 7-1-4 予定どおりにならなかった要因(複数回答）</a><br>\n一般社団法人　日本情報システム・ユーザー協会（JUAS）</p>\n<p data-sourcepos=\"135:1-135:231\">アンケートが起点であるため鵜呑みにできない点、1人月や5人月の仕事のデータがない点、2000年など昔のデータがない点が残念ですが、得られたデータだけで考察します。</p>\n<p data-sourcepos=\"137:1-137:282\">より答えのない開発を行っていかなければいけない状況と、それに対する人材または予算が不足しているためじわじわと工期や予算を守れず、品質についてはとりあえずヨシ！としているように読み取れます。</p>\n<p data-sourcepos=\"139:1-139:411\">そのような状況において、教育や育成に充分な時間を取ることは難しくなっていくことが想像でき、それでも、開発に関するすべての業務を経験して成長していくためには、大炎上ではないにせよ若干くすぶった案件にそれなりにうまく適応してアウトプットを出す能力を求められることになるでしょう。</p>\n<h2 data-sourcepos=\"141:1-141:24\">\n<span id=\"終わらない世界\" class=\"fragment\"></span><a href=\"#%E7%B5%82%E3%82%8F%E3%82%89%E3%81%AA%E3%81%84%E4%B8%96%E7%95%8C\"><i class=\"fa fa-link\"></i></a>終わらない世界</h2>\n<p data-sourcepos=\"143:1-144:308\">グラフの2030年を見ると、供給されるエンジニアは85万人、不足するエンジニアは79万人です。<br>\nこのエンジニア不足を解消するには、最低でも未経験者をどこからともなく79万人かき集めて、ほぼ全ての現存エンジニアが未経験者をアジャイルエンジニア以上のエンジニアに育てなければいけないという計算になりそうです。</p>\n<p data-sourcepos=\"146:1-146:123\">これがわずか7年後、今新卒のエンジニアが30歳になる頃に直面する世界の話とは驚きです。</p>\n<p data-sourcepos=\"148:1-148:260\">実際にはAIが人間の肩代わりをして79万人を育成する必要はなくなっているかもしれませんし、「ITエンジニア」の仕事は今の「ITエンジニア」の仕事と全く異なっている可能性もありそうです。</p>\n<p data-sourcepos=\"150:1-150:138\">最後に、未来の世界に備える参考に新規テクノロジーやフレームワークの導入状況を載せておきます。</p>\n<p data-sourcepos=\"152:1-152:57\">「希望は残っているよ。どんな時にもね」</p>\n<p data-sourcepos=\"154:1-156:76\"><a href=\"https://camo.qiitausercontent.com/a0b26548925981e927b8b3fdad3662391df62f1b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f31373265663635662d376263352d363730342d306666362d3864623433613635383636332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F172ef65f-7bc5-6704-0ff6-8db43a658663.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=a584c74ba2040f1d367a509661c69085\" alt=\"新規テクノロジーやフレームワーク等の導入状況.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/172ef65f-7bc5-6704-0ff6-8db43a658663.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F172ef65f-7bc5-6704-0ff6-8db43a658663.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=0f00debe97ddbe1a40b5957f7e820579 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf\" rel=\"nofollow noopener\" target=\"_blank\">出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 9-1-1 新規テクノロジーやフレームワーク等の導入状況</a><br>\n一般社団法人　日本情報システム・ユーザー協会（JUAS）</p>\n<h2 data-sourcepos=\"158:1-158:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"160:1-160:50\"><iframe id=\"qiita-embed-content__10dcd017dd71ececb3d29783691a6e2f\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__10dcd017dd71ececb3d29783691a6e2f\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"162:1-162:50\"><iframe id=\"qiita-embed-content__8dbef96a56673c36f3c357a7b10bb431\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__8dbef96a56673c36f3c357a7b10bb431\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"164:1-164:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"166:1-166:50\"><iframe id=\"qiita-embed-content__298fbab7d6e69831939cc797707e6627\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__298fbab7d6e69831939cc797707e6627\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"168:1-168:50\"><iframe id=\"qiita-embed-content__9c39fb5ecf99ae73369c3ae59bd8eacc\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9c39fb5ecf99ae73369c3ae59bd8eacc\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"170:1-170:50\"><iframe id=\"qiita-embed-content__c5cfd57e70c8d69fa19242e49afe2848\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c5cfd57e70c8d69fa19242e49afe2848\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"172:1-172:50\"><iframe id=\"qiita-embed-content__243d3e5e55ad7245568c4b5301ecd56a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__243d3e5e55ad7245568c4b5301ecd56a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"174:1-174:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"176:1-176:50\"><iframe id=\"qiita-embed-content__ab8dce89a9226327fab1ab648ccb0c4b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ab8dce89a9226327fab1ab648ccb0c4b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"178:1-178:50\"><iframe id=\"qiita-embed-content__9052423a3509e616b7b9df05858c4f8f\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9052423a3509e616b7b9df05858c4f8f\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"180:1-180:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"182:1-182:50\"><iframe id=\"qiita-embed-content__d4291b02b7ce2bc6bd2186347d7855a3\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__d4291b02b7ce2bc6bd2186347d7855a3\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"184:1-184:50\"><iframe id=\"qiita-embed-content__bc23d85d8f53bb22adf5339f88ff8dce\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__bc23d85d8f53bb22adf5339f88ff8dce\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"186:1-186:50\"><iframe id=\"qiita-embed-content__5bd1ab83fdeaf9f721e8658572653dc8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__5bd1ab83fdeaf9f721e8658572653dc8\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"188:1-188:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"190:1-190:50\"><iframe id=\"qiita-embed-content__4d2098a88c01f3652d8830aac465711e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__4d2098a88c01f3652d8830aac465711e\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"192:1-192:50\"><iframe id=\"qiita-embed-content__7025b42c415b914e6dab828c1a736794\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__7025b42c415b914e6dab828c1a736794\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"194:1-194:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"196:1-197:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"199:1-199:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## 始動\n\n288ページにもおよぶ~~死海文書~~[企業IT動向調査報告書 2023 (PDF形式) : 一般社団法人　日本情報システム・ユーザー協会（JUAS）](https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf)が全文無料公開されていました。\n\nこの文書等から2030年最大79万人不足するITエンジニアの補完計画の考察してみたいと思います。\n\n![IT人口推移.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/62f245af-5adb-2ad5-6014-5a0718888535.png)\n出典：経済産業省「ITベンチャー等によるイノベーション促進のための人材育成・確保モデル事業」\n\n## 2nd PF から 3rd PF\n\n従来型のITサービスを第2のプラットフォーム(2nd PF)、クラウド、モビリティ、ソーシャル、ビッグデータ／アナリティクス、さらにはIoT/AIといった分野でのITサービスを第3のプラットフォーム(3rd PF)と定義し、2030年までの~~3rdインパクトによる影響を~~それらの遷移を以下グラフに示します。\n\n![2ndPF-3rdPF.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f39f84c2-1cc3-3692-83e0-6abf35c46544.png)\n出典 : 各調査会社による市場予測をもとにみずほ情報総研推計\n[出典 : 参考資料（ＩＴ人材育成の状況等について） : 経済産業省 商務情報政策局\n情報処理振興課](https://www.meti.go.jp/shingikai/economy/daiyoji_sangyo_skill/pdf/001_s03_00.pdf)\n\nグラフでは、2030年には2nd PF と 3rd PF の割合が逆転しており、従来型ITエンジニアのスキルでは対応できない案件が半数を超える可能性を示しているようにも見えます。\n\n## 2nd PFを維持するランザビジネス予算と、3rd PFを推進するバリューアップ予算\n\n一方で、ランザビジネス（現行ビジネスの維持運営）予算とバリューアップ（ビジネスの新しい施策展開）予算の比率は、2022年で、76.1% : 23.9% とレガシーシステムからの脱却の難しさも示されており、3rd PF への推移がそこまでの勢いで推進しない可能性もあるかもしれません。\n\n![IT予算分配_年度別.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/91011b0f-108e-8f42-7ffe-b4383ad9efdf.png)\n[出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 2-1-17 年度別 IT 予算配分（平均割合）](https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf)\n一般社団法人　日本情報システム・ユーザー協会（JUAS）\n\n業務で使っているシステムが、**『現在のテクノロジーから見ると明らかに非効率な業務システムだからDXしようZE』** と言っても即座にDXされるわけではありません。\n操作に慣れてしまった担当者目線で言えば、それまで **「問題なく」** 行えていた業務を行うのに、**なぜわざわざ新しいことを覚えないといけないのか** 理解ができません。BtoBやBtoCのシステムであれば、社内の人間だけではなく、社外の人間にもコストをかけてトレーニングを行う必要も出てきてしまいます。\nまた、**誰も使ってないかもしれない現行システムの謎仕様**を新システムにどのように移行していいか分からないといった問題もあるかもしれません。\n\nその様な状況を鑑みると、DXや業務改善の難しさはシステムの使いやすさうんぬんよりも、システムを使う人間の意識をどう変えていくか、古いしがらみをどの様に断ち切っていくかというところにあるのかもしれません。\n\nここで、売上高1兆円以上の企業に着目すると、ランザビジネス予算とバリューアップ予算の比率が、61.8% : 38.2% となっているのが分かります。\n\n![IT予算分配_売上高別.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b6b49481-b940-6a62-548f-fe08065f0591.png)\n[出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 2-1-19 年度別 売上高別 IT 予算配分（3 年後の目標）](https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf)\n一般社団法人　日本情報システム・ユーザー協会（JUAS）\n\n予算を多く持っている会社では、RPA導入やリスキリングと言ったバズワードを使いつつ、システムを使う人間の意識を変革してDXを推進できているのかもしれません。\nこのような投資をできた会社とできなかった会社で数年後にどのような差がついているのかは興味深いところです。\n\n話がそれましたが、現時点までの情報からは「ITエンジニア」は「現行システムの維持運営エンジニア」と「ビジネスの新しい施策展開に関する開発エンジニア」の二極化が進んでいくと推察できそうです。\n\n## 現行システムの維持運営エンジニア補完計画(2nd PF)\n\n現行システムの維持運営案件は、新規ビジネスの創出と異なり **「答えが明確な業務」** であり、以下のような傾向があるように思えます。\n\n- 一度入れば長期にわたり安定が得られる\n- 案件固有の知識やスキルを活かしてベンダーロックインしやすい\n- 長期案件であればある程ドキュメントが充実していて、変化が少ない\n- いずれはリプレイス対象のレガシーシステムとなり消滅する\n\nこちらは現時点で所属会社が 2nd PF 案件を握っているかで、案件に参画できるかが決まってしまいそうです。また、この案件にアサインできるタイプの人材は充足傾向にあるようで、計画的に補完しなくても人材不足にならないかわりに、単価を低く抑えられる可能性がありそうです。\n\n![人材タイプ別.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7429f27b-dcc4-ed8d-1e1b-a6f16f6786ab.png)\n[出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 6-1-2 人材タイプ別 IT 部門要員数の充足状況](https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf)\n一般社団法人　日本情報システム・ユーザー協会（JUAS）\n\n2nd PF 案件は、システムの寿命と共に消える運命の案件なので、生存戦略としては、他案件でも利用可能なヒューマンスキルや資料作成能力などを重点的に上げたり、業務外で近代言語の習得をしておく必要があるかもしれません。\n\n## ビジネスの新しい施策展開に関する開発エンジニア補完計画(3rd PF)\n\n先の「図表 6-1-2 人材タイプ別 IT 部門要員数の充足状況」を見ると、不足している人材は以下に大別されるように思えます。\n\n- 企画職のような答えがない業務を行える人材\n- 推進職の様な多くの人間と関わる業務を行える人材\n- データ分析の様な専門技術を持つ人材\n- アジャイル開発の様にプロジェクト活動のすべてを実施できる人材\n\nそれらの人材をどうやって補完するかひとつひとつ検討してみましょう。\n\n### 企画職のような答えがない業務を行える人材\n\n学校教育では「答えがない問題」に対処する方法は教えてくれませんし、評価もしてくれません。\nそのためか、社会に出てやれと言われてもやり方が分からないし、やる意味も分からないといったことがあるかもしれません。\n\nそもそも他人から教えてもらえる企画は教える人が実現可能で、それを実現しても売れる企画とはなりません。\n**『あなたにだけ教える必ず儲かる方法』** が存在しないのと同様に、人から教えてもらってそのまま使える企画は存在しないのです。\n\n基本的な考え方は書籍などで学ぶことはできますが、大事なのは成功するまで継続するつよい心かもしれません。\n\n散々調査して苦労して作った企画があっさりボツにされたり、自分が面白いと思うことよりも企画を受け取る人が何を考えるかとか、数字を取るためには何が必要かの方が大事な世界です。思い込みで企画になると大ヤケドをします。\nそのような世界で自我を保ち続けて、奇跡を待たずに地道な努力を続けてヒット作を作る人材が企画職かと思います。\n\nこの様な人材を『ITエンジニア』として募集しても補完はできないですが、「答えがない問題」に取り組める人間に適切な経験を積ませることで補完ができるかもしれません。\n\n### 推進職の様な多くの人間と関わる業務を行える人材\n\n大きな企業になればなるほど多くの部署や人が関わる業務が増えます。\n異なる部署には異なる人が存在して、利害関係もしやすい仕事の方法も異なります。\n\nこれをまとめ上げる調整力や権威、あるいは政治力を持った人材、はおそらく先天的な性質と若い頃からの教育や環境などが組み合わさらないと錬成されない様に思えます。\n\nこの様な人材を『ITエンジニア』として募集しても補完できないですが、「人と関わる仕事」に取り組める人間に適切な経験を積ませることで補完ができるかもしれません。\n\n### データ分析の様な専門技術を持つ人材\n\n３度の飯よりデータ分析が好き、と、寝食を忘れて研究に没頭するような人材でしょう。\n\nこの様な人材は、街のIT屋が募集をかけると無用の長物になる可能性が高いので注意が必要ですが、然るべき機関にて然るべき募集をすれば補完できるのかもしれません。\n\n### アジャイル開発の様にプロジェクト工程のすべてを実施できる人材\n\nウォーターフォール開発はできて、アジャイル開発ができない人材は、開発プロジェクト工程の一部しか経験していないからできるようにならないと考えられます。\nアジャイル開発は、短いサイクルで開発のすべての工程を回す手法なので、従事する人材は全ての工程を実施できる必要があります。この人材は、既存の業務の中で、要件定義、外部設計、詳細設計、開発、試験まですべての工程およびPMを経験させることで、育成することで補完できそうです。\n\nただし、**「開発が好きで開発しかやりたくないです。」** 、**「プログラムが苦手なので外部設計しかしません」** といった傾向もあるため、簡単には補完できないかもしれません。\n\n## システム開発の現状\n\nビジネスの新しい施策展開に関する開発エンジニア補完計画(3rd PF)にて、辛うじてアジャイル人材だけは育成できるかもしれないと考察しましたが、育成できるような環境が存在しているのかを見ておきましょう。\n\n以下、システム開発において、工期遵守、予算遵守、品質満足度についての推移のグラフを示します。\n\n![システム開発_工期遵守.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e6394f07-573a-3be0-0a03-2ba9cf425911.png)\n[出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 7-1-1 プロジェクト規模別・年度別 システム開発の工期遵守状況](https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf)\n一般社団法人　日本情報システム・ユーザー協会（JUAS）\n\n![システム開発_予算遵守.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e02bfa82-9087-6bb3-fa5e-128cc0e04591.png)\n[出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 7-1-2 プロジェクト規模別・年度別 システム開発の予算遵守状況](https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf)\n一般社団法人　日本情報システム・ユーザー協会（JUAS）\n\n![システム開発_品質満足度.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7cb67113-df72-5642-e817-74feba06831f.png)\n[出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 7-1-3 プロジェクト規模別・年度別 システム開発の品質満足度の状況](https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf)\n一般社団法人　日本情報システム・ユーザー協会（JUAS）\n\nまた、予定通りにならなかった要因についてもグラフを示します。\n\n![システム開発_要因.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/db48abf3-7852-3990-db9f-eaa6daa2abc4.png)\n[出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 7-1-4 予定どおりにならなかった要因(複数回答）](https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf)\n一般社団法人　日本情報システム・ユーザー協会（JUAS）\n\nアンケートが起点であるため鵜呑みにできない点、1人月や5人月の仕事のデータがない点、2000年など昔のデータがない点が残念ですが、得られたデータだけで考察します。\n\nより答えのない開発を行っていかなければいけない状況と、それに対する人材または予算が不足しているためじわじわと工期や予算を守れず、品質についてはとりあえずヨシ！としているように読み取れます。\n\nそのような状況において、教育や育成に充分な時間を取ることは難しくなっていくことが想像でき、それでも、開発に関するすべての業務を経験して成長していくためには、大炎上ではないにせよ若干くすぶった案件にそれなりにうまく適応してアウトプットを出す能力を求められることになるでしょう。\n\n## 終わらない世界\n\nグラフの2030年を見ると、供給されるエンジニアは85万人、不足するエンジニアは79万人です。\nこのエンジニア不足を解消するには、最低でも未経験者をどこからともなく79万人かき集めて、ほぼ全ての現存エンジニアが未経験者をアジャイルエンジニア以上のエンジニアに育てなければいけないという計算になりそうです。\n\nこれがわずか7年後、今新卒のエンジニアが30歳になる頃に直面する世界の話とは驚きです。\n\n実際にはAIが人間の肩代わりをして79万人を育成する必要はなくなっているかもしれませんし、「ITエンジニア」の仕事は今の「ITエンジニア」の仕事と全く異なっている可能性もありそうです。\n\n最後に、未来の世界に備える参考に新規テクノロジーやフレームワークの導入状況を載せておきます。\n\n「希望は残っているよ。どんな時にもね」\n\n![新規テクノロジーやフレームワーク等の導入状況.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/172ef65f-7bc5-6704-0ff6-8db43a658663.png)\n[出典 : 企業IT動向調査報告書 2023 (PDF形式) / 図表 9-1-1 新規テクノロジーやフレームワーク等の導入状況](https://juas.or.jp/cms/media/2023/07/JUAS_IT2023.pdf)\n一般社団法人　日本情報システム・ユーザー協会（JUAS）\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-08-06T00:11:20+09:00",
    "group": null,
    "id": "340bedc548bc4efd38b5",
    "likes_count": 7,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 10,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      }
    ],
    "title": "ITエンジニア補完計画",
    "updated_at": "2023-08-06T00:11:20+09:00",
    "url": "https://qiita.com/kaku3/items/340bedc548bc4efd38b5",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 3538,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:44\">Qiitaを見てる皆さんこんにちわ。</p>\n<p data-sourcepos=\"5:1-5:240\">いつもは皆さんの一服の清涼剤となるべく、ゆるめの新人向けの記事やマネジメントの記事をポエムしているのですが、ふと、いいねを取れる記事ってなんだろうと思いまして。</p>\n<p data-sourcepos=\"7:1-7:349\">ChatGPTのようなバズワードな技術に乗っかるといいねを取れそうだけど、なかなか難しそうだなぁと思っているうちに、いいねを取れる記事の長期的な推移を見ると傾向が見えるのではと思い調べてみたらなかなかの結果が見えましたので記事にしてみました。</p>\n<h2 data-sourcepos=\"9:1-9:24\">\n<span id=\"qiita-記事の取得\" class=\"fragment\"></span><a href=\"#qiita-%E8%A8%98%E4%BA%8B%E3%81%AE%E5%8F%96%E5%BE%97\"><i class=\"fa fa-link\"></i></a>Qiita 記事の取得</h2>\n<p data-sourcepos=\"11:1-11:233\">調査をするためには、過去～現在の投稿に関するデータが必要です。QiitaはAPIを公開していて記事の一覧を取得できるので、それを利用して記事を取得することにしました。</p>\n<p data-sourcepos=\"13:1-14:70\">(参考)<br>\n<a href=\"https://qiita.com/api/v2/docs#%E6%8A%95%E7%A8%BF\">Qiita API : 投稿</a></p>\n<p data-sourcepos=\"16:1-16:98\">単一の検索条件に対して取得できる記事の件数は最大で 10,000 件でした。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"18:1-20:3\"><div class=\"highlight\"><pre><code>1ページあたりの件数の最大(100) x 指定可能なページの最大(100) = 10,000\n</code></pre></div></div>\n<p data-sourcepos=\"22:1-22:193\">月に10,000投稿あったとすると1ヶ月分のデータしか取れないため長期の推移を見るためには、何らかの検索条件を指定する必要がありそうです。</p>\n<p data-sourcepos=\"24:1-24:381\">ある程度人気があったタグを推測できるように件数を絞るのであれば「いいね数」か「ストック数」がある程度以上の記事を集めるのがよさそうです。「ストック数」は指定可能、「いいね数」は指定不可という仕様でしたので、「ストック数」を指定して検索することにしました。</p>\n<p data-sourcepos=\"26:1-27:89\">(参考)<br>\n<a href=\"https://help.qiita.com/ja/articles/qiita-search-options\" rel=\"nofollow noopener\" target=\"_blank\">Qiita ヘルプ : 検索機能</a></p>\n<p data-sourcepos=\"29:1-29:309\">ストック数50以上で検索すれば大分遡れるかと思いましたが、毎月数百件のレコードが取得され <del>軽く嫉妬しました</del> あまり遡れなかったので、ストック数100以上を指定してデータを取得したところ 2017 年まで3月まで遡れました。</p>\n<p data-sourcepos=\"31:1-31:246\">ストック数がそこまで多くないデータの集計にも重要な情報がありそうですが、取れないものは仕方ないので、観測には充分なデータが取得できたとして先に進めることにしました。</p>\n<h2 data-sourcepos=\"33:1-33:15\">\n<span id=\"観測方法\" class=\"fragment\"></span><a href=\"#%E8%A6%B3%E6%B8%AC%E6%96%B9%E6%B3%95\"><i class=\"fa fa-link\"></i></a>観測方法</h2>\n<p data-sourcepos=\"35:1-35:225\">大雑把に傾向が見れればよいので、ストック数100以上を獲得した記事についていたタグを分解して、それぞれのタグにストック数をそのまま分配することにしました。</p>\n<ul data-sourcepos=\"37:1-38:0\">\n<li data-sourcepos=\"37:1-38:0\">記事AにタグT1,T2,T3,T4,T5 がついていて、ストック数が101の場合</li>\n</ul>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"39:1-45:3\"><div class=\"highlight\"><pre><code>T1 : 101\nT2 : 101\nT3 : 101\nT4 : 101\nT5 : 101\n</code></pre></div></div>\n<p data-sourcepos=\"47:1-47:195\">このタグとストックのデータをスプレッドシートに貼り付けて、年度別でタグ毎のストック数をピボットテーブルで求めて多い順に並べました。</p>\n<h2 data-sourcepos=\"49:1-49:47\">\n<span id=\"タグストックランキング-2023-top50\" class=\"fragment\"></span><a href=\"#%E3%82%BF%E3%82%B0%E3%82%B9%E3%83%88%E3%83%83%E3%82%AF%E3%83%A9%E3%83%B3%E3%82%AD%E3%83%B3%E3%82%B0-2023-top50\"><i class=\"fa fa-link\"></i></a>タグストックランキング 2023 TOP50</h2>\n<p data-sourcepos=\"51:1-52:282\">2023年のTOP50の過去の推移を見られる形としました。<br>\n過去数年を鑑みてランキングを求めたらChatGPTの台頭が分からなくなってしまったのと、古い技術は消え去っていくというITの性質を鑑みると、最新のデータを基準に過去の推移を見るのが良いかと思いました。</p>\n<p data-sourcepos=\"54:1-54:152\">皆さんご想像の通り？ChatGPTは2022年に登場以後、勢い衰えず2023年も圧勝となっていました。AIもつよつよですね。</p>\n<table data-sourcepos=\"56:1-106:66\">\n<thead>\n<tr data-sourcepos=\"56:1-56:42\">\n<th data-sourcepos=\"56:2-56:7\">タグ</th>\n<th data-sourcepos=\"56:9-56:12\">2017</th>\n<th data-sourcepos=\"56:14-56:17\">2018</th>\n<th data-sourcepos=\"56:19-56:22\">2019</th>\n<th data-sourcepos=\"56:24-56:27\">2020</th>\n<th data-sourcepos=\"56:29-56:32\">2021</th>\n<th data-sourcepos=\"56:34-56:37\">2022</th>\n<th data-sourcepos=\"56:39-56:42\">2023</th>\n</tr>\n</thead>\n<tbody>\n<tr data-sourcepos=\"58:1-58:24\">\n<td data-sourcepos=\"58:2-58:8\">ChatGPT</td>\n<td data-sourcepos=\"58:10-58:9\"></td>\n<td data-sourcepos=\"58:11-58:10\"></td>\n<td data-sourcepos=\"58:12-58:11\"></td>\n<td data-sourcepos=\"58:13-58:12\"></td>\n<td data-sourcepos=\"58:14-58:13\"></td>\n<td data-sourcepos=\"58:15-58:18\">2867</td>\n<td data-sourcepos=\"58:20-58:24\">25561</td>\n</tr>\n<tr data-sourcepos=\"59:1-59:51\">\n<td data-sourcepos=\"59:2-59:7\">Python</td>\n<td data-sourcepos=\"59:9-59:13\">79286</td>\n<td data-sourcepos=\"59:15-59:20\">143985</td>\n<td data-sourcepos=\"59:22-59:27\">120573</td>\n<td data-sourcepos=\"59:29-59:33\">96812</td>\n<td data-sourcepos=\"59:35-59:39\">40967</td>\n<td data-sourcepos=\"59:41-59:45\">19658</td>\n<td data-sourcepos=\"59:47-59:51\">16442</td>\n</tr>\n<tr data-sourcepos=\"60:1-60:52\">\n<td data-sourcepos=\"60:2-60:10\">初心者</td>\n<td data-sourcepos=\"60:12-60:16\">14281</td>\n<td data-sourcepos=\"60:18-60:22\">38717</td>\n<td data-sourcepos=\"60:24-60:28\">85032</td>\n<td data-sourcepos=\"60:30-60:34\">75886</td>\n<td data-sourcepos=\"60:36-60:40\">35776</td>\n<td data-sourcepos=\"60:42-60:46\">33167</td>\n<td data-sourcepos=\"60:48-60:52\">13164</td>\n</tr>\n<tr data-sourcepos=\"61:1-61:40\">\n<td data-sourcepos=\"61:2-61:3\">AI</td>\n<td data-sourcepos=\"61:5-61:7\">553</td>\n<td data-sourcepos=\"61:9-61:13\">11334</td>\n<td data-sourcepos=\"61:15-61:18\">9712</td>\n<td data-sourcepos=\"61:20-61:24\">10110</td>\n<td data-sourcepos=\"61:26-61:29\">7118</td>\n<td data-sourcepos=\"61:31-61:34\">5551</td>\n<td data-sourcepos=\"61:36-61:40\">11160</td>\n</tr>\n<tr data-sourcepos=\"62:1-62:50\">\n<td data-sourcepos=\"62:2-62:39\">記事投稿キャンペーン_ChatGPT</td>\n<td data-sourcepos=\"62:41-62:40\"></td>\n<td data-sourcepos=\"62:42-62:41\"></td>\n<td data-sourcepos=\"62:43-62:42\"></td>\n<td data-sourcepos=\"62:44-62:43\"></td>\n<td data-sourcepos=\"62:45-62:44\"></td>\n<td data-sourcepos=\"62:46-62:45\"></td>\n<td data-sourcepos=\"62:47-62:50\">8143</td>\n</tr>\n<tr data-sourcepos=\"63:1-63:49\">\n<td data-sourcepos=\"63:2-63:10\">ポエム</td>\n<td data-sourcepos=\"63:12-63:15\">5254</td>\n<td data-sourcepos=\"63:17-63:21\">21427</td>\n<td data-sourcepos=\"63:23-63:27\">26097</td>\n<td data-sourcepos=\"63:29-63:33\">19238</td>\n<td data-sourcepos=\"63:35-63:39\">21706</td>\n<td data-sourcepos=\"63:41-63:44\">9691</td>\n<td data-sourcepos=\"63:46-63:49\">7071</td>\n</tr>\n<tr data-sourcepos=\"64:1-64:69\">\n<td data-sourcepos=\"64:2-64:28\">新人プログラマ応援</td>\n<td data-sourcepos=\"64:30-64:34\">12709</td>\n<td data-sourcepos=\"64:36-64:40\">71500</td>\n<td data-sourcepos=\"64:42-64:46\">52292</td>\n<td data-sourcepos=\"64:48-64:52\">52094</td>\n<td data-sourcepos=\"64:54-64:58\">28113</td>\n<td data-sourcepos=\"64:60-64:64\">23355</td>\n<td data-sourcepos=\"64:66-64:69\">6928</td>\n</tr>\n<tr data-sourcepos=\"65:1-65:21\">\n<td data-sourcepos=\"65:2-65:7\">OpenAI</td>\n<td data-sourcepos=\"65:9-65:8\"></td>\n<td data-sourcepos=\"65:10-65:9\"></td>\n<td data-sourcepos=\"65:11-65:10\"></td>\n<td data-sourcepos=\"65:12-65:11\"></td>\n<td data-sourcepos=\"65:13-65:12\"></td>\n<td data-sourcepos=\"65:14-65:16\">105</td>\n<td data-sourcepos=\"65:18-65:21\">6567</td>\n</tr>\n<tr data-sourcepos=\"66:1-66:46\">\n<td data-sourcepos=\"66:2-66:7\">VSCode</td>\n<td data-sourcepos=\"66:9-66:13\">10067</td>\n<td data-sourcepos=\"66:15-66:19\">22305</td>\n<td data-sourcepos=\"66:21-66:25\">27145</td>\n<td data-sourcepos=\"66:27-66:31\">20135</td>\n<td data-sourcepos=\"66:33-66:36\">7663</td>\n<td data-sourcepos=\"66:38-66:41\">6769</td>\n<td data-sourcepos=\"66:43-66:46\">5780</td>\n</tr>\n<tr data-sourcepos=\"67:1-67:17\">\n<td data-sourcepos=\"67:2-67:6\">GPT-4</td>\n<td data-sourcepos=\"67:8-67:7\"></td>\n<td data-sourcepos=\"67:9-67:8\"></td>\n<td data-sourcepos=\"67:10-67:9\"></td>\n<td data-sourcepos=\"67:11-67:10\"></td>\n<td data-sourcepos=\"67:12-67:11\"></td>\n<td data-sourcepos=\"67:13-67:12\"></td>\n<td data-sourcepos=\"67:14-67:17\">5721</td>\n</tr>\n<tr data-sourcepos=\"68:1-68:44\">\n<td data-sourcepos=\"68:2-68:4\">AWS</td>\n<td data-sourcepos=\"68:6-68:10\">11370</td>\n<td data-sourcepos=\"68:12-68:16\">39737</td>\n<td data-sourcepos=\"68:18-68:22\">30027</td>\n<td data-sourcepos=\"68:24-68:28\">20924</td>\n<td data-sourcepos=\"68:30-68:34\">14008</td>\n<td data-sourcepos=\"68:36-68:39\">9040</td>\n<td data-sourcepos=\"68:41-68:44\">5210</td>\n</tr>\n<tr data-sourcepos=\"69:1-69:55\">\n<td data-sourcepos=\"69:2-69:11\">JavaScript</td>\n<td data-sourcepos=\"69:13-69:17\">81104</td>\n<td data-sourcepos=\"69:19-69:24\">150510</td>\n<td data-sourcepos=\"69:26-69:31\">136293</td>\n<td data-sourcepos=\"69:33-69:38\">100877</td>\n<td data-sourcepos=\"69:40-69:44\">44305</td>\n<td data-sourcepos=\"69:46-69:50\">29137</td>\n<td data-sourcepos=\"69:52-69:55\">4266</td>\n</tr>\n<tr data-sourcepos=\"70:1-70:47\">\n<td data-sourcepos=\"70:2-70:6\">React</td>\n<td data-sourcepos=\"70:8-70:12\">17334</td>\n<td data-sourcepos=\"70:14-70:18\">30123</td>\n<td data-sourcepos=\"70:20-70:24\">26370</td>\n<td data-sourcepos=\"70:26-70:30\">33223</td>\n<td data-sourcepos=\"70:32-70:36\">17230</td>\n<td data-sourcepos=\"70:38-70:42\">16867</td>\n<td data-sourcepos=\"70:44-70:47\">3699</td>\n</tr>\n<tr data-sourcepos=\"71:1-71:24\">\n<td data-sourcepos=\"71:2-71:10\">langchain</td>\n<td data-sourcepos=\"71:12-71:11\"></td>\n<td data-sourcepos=\"71:13-71:12\"></td>\n<td data-sourcepos=\"71:14-71:13\"></td>\n<td data-sourcepos=\"71:15-71:14\"></td>\n<td data-sourcepos=\"71:16-71:15\"></td>\n<td data-sourcepos=\"71:17-71:19\">150</td>\n<td data-sourcepos=\"71:21-71:24\">3648</td>\n</tr>\n<tr data-sourcepos=\"72:1-72:43\">\n<td data-sourcepos=\"72:2-72:7\">Design</td>\n<td data-sourcepos=\"72:9-72:12\">3371</td>\n<td data-sourcepos=\"72:14-72:17\">2180</td>\n<td data-sourcepos=\"72:19-72:22\">3921</td>\n<td data-sourcepos=\"72:24-72:27\">5636</td>\n<td data-sourcepos=\"72:29-72:33\">15556</td>\n<td data-sourcepos=\"72:35-72:38\">5548</td>\n<td data-sourcepos=\"72:40-72:43\">3445</td>\n</tr>\n<tr data-sourcepos=\"73:1-73:41\">\n<td data-sourcepos=\"73:2-73:8\">Next.js</td>\n<td data-sourcepos=\"73:10-73:12\">177</td>\n<td data-sourcepos=\"73:14-73:17\">1752</td>\n<td data-sourcepos=\"73:19-73:21\">523</td>\n<td data-sourcepos=\"73:23-73:26\">6334</td>\n<td data-sourcepos=\"73:28-73:31\">3225</td>\n<td data-sourcepos=\"73:33-73:36\">5549</td>\n<td data-sourcepos=\"73:38-73:41\">3327</td>\n</tr>\n<tr data-sourcepos=\"74:1-74:47\">\n<td data-sourcepos=\"74:2-74:7\">GitHub</td>\n<td data-sourcepos=\"74:9-74:13\">12875</td>\n<td data-sourcepos=\"74:15-74:19\">20528</td>\n<td data-sourcepos=\"74:21-74:25\">13106</td>\n<td data-sourcepos=\"74:27-74:31\">19431</td>\n<td data-sourcepos=\"74:33-74:37\">16033</td>\n<td data-sourcepos=\"74:39-74:42\">3969</td>\n<td data-sourcepos=\"74:44-74:47\">3203</td>\n</tr>\n<tr data-sourcepos=\"75:1-75:73\">\n<td data-sourcepos=\"75:2-75:59\">新人プログラマ応援_記事投稿キャンペーン</td>\n<td data-sourcepos=\"75:61-75:63\">497</td>\n<td data-sourcepos=\"75:65-75:64\"></td>\n<td data-sourcepos=\"75:66-75:65\"></td>\n<td data-sourcepos=\"75:67-75:66\"></td>\n<td data-sourcepos=\"75:68-75:67\"></td>\n<td data-sourcepos=\"75:69-75:68\"></td>\n<td data-sourcepos=\"75:70-75:73\">3184</td>\n</tr>\n<tr data-sourcepos=\"76:1-76:61\">\n<td data-sourcepos=\"76:2-76:22\">フロントエンド</td>\n<td data-sourcepos=\"76:24-76:27\">7574</td>\n<td data-sourcepos=\"76:29-76:33\">17862</td>\n<td data-sourcepos=\"76:35-76:39\">32897</td>\n<td data-sourcepos=\"76:41-76:45\">18857</td>\n<td data-sourcepos=\"76:47-76:51\">15432</td>\n<td data-sourcepos=\"76:53-76:56\">9904</td>\n<td data-sourcepos=\"76:58-76:61\">3088</td>\n</tr>\n<tr data-sourcepos=\"77:1-77:52\">\n<td data-sourcepos=\"77:2-77:16\">エンジニア</td>\n<td data-sourcepos=\"77:18-77:21\">2997</td>\n<td data-sourcepos=\"77:23-77:27\">14112</td>\n<td data-sourcepos=\"77:29-77:32\">5465</td>\n<td data-sourcepos=\"77:34-77:37\">7169</td>\n<td data-sourcepos=\"77:39-77:42\">5458</td>\n<td data-sourcepos=\"77:44-77:47\">7615</td>\n<td data-sourcepos=\"77:49-77:52\">2968</td>\n</tr>\n<tr data-sourcepos=\"78:1-78:50\">\n<td data-sourcepos=\"78:2-78:11\">TypeScript</td>\n<td data-sourcepos=\"78:13-78:16\">6189</td>\n<td data-sourcepos=\"78:18-78:22\">16510</td>\n<td data-sourcepos=\"78:24-78:28\">28414</td>\n<td data-sourcepos=\"78:30-78:34\">26226</td>\n<td data-sourcepos=\"78:36-78:39\">8536</td>\n<td data-sourcepos=\"78:41-78:45\">15062</td>\n<td data-sourcepos=\"78:47-78:50\">2964</td>\n</tr>\n<tr data-sourcepos=\"79:1-79:38\">\n<td data-sourcepos=\"79:2-79:8\">Flutter</td>\n<td data-sourcepos=\"79:10-79:9\"></td>\n<td data-sourcepos=\"79:11-79:14\">3191</td>\n<td data-sourcepos=\"79:16-79:19\">9322</td>\n<td data-sourcepos=\"79:21-79:24\">5897</td>\n<td data-sourcepos=\"79:26-79:29\">1334</td>\n<td data-sourcepos=\"79:31-79:33\">383</td>\n<td data-sourcepos=\"79:35-79:38\">2701</td>\n</tr>\n<tr data-sourcepos=\"80:1-80:43\">\n<td data-sourcepos=\"80:2-80:4\">Git</td>\n<td data-sourcepos=\"80:6-80:10\">21560</td>\n<td data-sourcepos=\"80:12-80:16\">31919</td>\n<td data-sourcepos=\"80:18-80:22\">23952</td>\n<td data-sourcepos=\"80:24-80:28\">16675</td>\n<td data-sourcepos=\"80:30-80:33\">6498</td>\n<td data-sourcepos=\"80:35-80:38\">2492</td>\n<td data-sourcepos=\"80:40-80:43\">2671</td>\n</tr>\n<tr data-sourcepos=\"81:1-81:53\">\n<td data-sourcepos=\"81:2-81:13\">機械学習</td>\n<td data-sourcepos=\"81:15-81:19\">42848</td>\n<td data-sourcepos=\"81:21-81:25\">47356</td>\n<td data-sourcepos=\"81:27-81:31\">44729</td>\n<td data-sourcepos=\"81:33-81:37\">37587</td>\n<td data-sourcepos=\"81:39-81:43\">19714</td>\n<td data-sourcepos=\"81:45-81:48\">8303</td>\n<td data-sourcepos=\"81:50-81:53\">2509</td>\n</tr>\n<tr data-sourcepos=\"82:1-82:45\">\n<td data-sourcepos=\"82:2-82:9\">Security</td>\n<td data-sourcepos=\"82:11-82:14\">2911</td>\n<td data-sourcepos=\"82:16-82:20\">11975</td>\n<td data-sourcepos=\"82:22-82:25\">8229</td>\n<td data-sourcepos=\"82:27-82:30\">8814</td>\n<td data-sourcepos=\"82:32-82:35\">2144</td>\n<td data-sourcepos=\"82:37-82:40\">4052</td>\n<td data-sourcepos=\"82:42-82:45\">2331</td>\n</tr>\n<tr data-sourcepos=\"83:1-83:43\">\n<td data-sourcepos=\"83:2-83:10\">ツール</td>\n<td data-sourcepos=\"83:12-83:14\">578</td>\n<td data-sourcepos=\"83:16-83:19\">1102</td>\n<td data-sourcepos=\"83:21-83:24\">2599</td>\n<td data-sourcepos=\"83:26-83:29\">6902</td>\n<td data-sourcepos=\"83:31-83:33\">449</td>\n<td data-sourcepos=\"83:35-83:38\">4045</td>\n<td data-sourcepos=\"83:40-83:43\">2285</td>\n</tr>\n<tr data-sourcepos=\"84:1-84:29\">\n<td data-sourcepos=\"84:2-84:6\">figma</td>\n<td data-sourcepos=\"84:8-84:10\">838</td>\n<td data-sourcepos=\"84:12-84:14\">169</td>\n<td data-sourcepos=\"84:16-84:18\">981</td>\n<td data-sourcepos=\"84:20-84:19\"></td>\n<td data-sourcepos=\"84:21-84:20\"></td>\n<td data-sourcepos=\"84:22-84:24\">473</td>\n<td data-sourcepos=\"84:26-84:29\">2171</td>\n</tr>\n<tr data-sourcepos=\"85:1-85:42\">\n<td data-sourcepos=\"85:2-85:13\">レビュー</td>\n<td data-sourcepos=\"85:15-85:18\">2029</td>\n<td data-sourcepos=\"85:20-85:19\"></td>\n<td data-sourcepos=\"85:21-85:23\">404</td>\n<td data-sourcepos=\"85:25-85:28\">4296</td>\n<td data-sourcepos=\"85:30-85:33\">1335</td>\n<td data-sourcepos=\"85:35-85:37\">133</td>\n<td data-sourcepos=\"85:39-85:42\">2153</td>\n</tr>\n<tr data-sourcepos=\"86:1-86:21\">\n<td data-sourcepos=\"86:2-86:6\">gpt-3</td>\n<td data-sourcepos=\"86:8-86:7\"></td>\n<td data-sourcepos=\"86:9-86:8\"></td>\n<td data-sourcepos=\"86:10-86:9\"></td>\n<td data-sourcepos=\"86:11-86:10\"></td>\n<td data-sourcepos=\"86:12-86:11\"></td>\n<td data-sourcepos=\"86:13-86:16\">2348</td>\n<td data-sourcepos=\"86:18-86:21\">2099</td>\n</tr>\n<tr data-sourcepos=\"87:1-87:49\">\n<td data-sourcepos=\"87:2-87:25\">アクセシビリティ</td>\n<td data-sourcepos=\"87:27-87:26\"></td>\n<td data-sourcepos=\"87:28-87:30\">137</td>\n<td data-sourcepos=\"87:32-87:35\">1701</td>\n<td data-sourcepos=\"87:37-87:36\"></td>\n<td data-sourcepos=\"87:38-87:40\">638</td>\n<td data-sourcepos=\"87:42-87:44\">205</td>\n<td data-sourcepos=\"87:46-87:49\">2060</td>\n</tr>\n<tr data-sourcepos=\"88:1-88:46\">\n<td data-sourcepos=\"88:2-88:7\">Docker</td>\n<td data-sourcepos=\"88:9-88:13\">22855</td>\n<td data-sourcepos=\"88:15-88:19\">40293</td>\n<td data-sourcepos=\"88:21-88:25\">38158</td>\n<td data-sourcepos=\"88:27-88:31\">28708</td>\n<td data-sourcepos=\"88:33-88:36\">6944</td>\n<td data-sourcepos=\"88:38-88:41\">5163</td>\n<td data-sourcepos=\"88:43-88:46\">1983</td>\n</tr>\n<tr data-sourcepos=\"89:1-89:56\">\n<td data-sourcepos=\"89:2-89:25\">未経験エンジニア</td>\n<td data-sourcepos=\"89:27-89:26\"></td>\n<td data-sourcepos=\"89:28-89:31\">1489</td>\n<td data-sourcepos=\"89:33-89:36\">3441</td>\n<td data-sourcepos=\"89:38-89:41\">3904</td>\n<td data-sourcepos=\"89:43-89:46\">2701</td>\n<td data-sourcepos=\"89:48-89:51\">1247</td>\n<td data-sourcepos=\"89:53-89:56\">1923</td>\n</tr>\n<tr data-sourcepos=\"90:1-90:41\">\n<td data-sourcepos=\"90:2-90:7\">学習</td>\n<td data-sourcepos=\"90:9-90:12\">2159</td>\n<td data-sourcepos=\"90:14-90:16\">859</td>\n<td data-sourcepos=\"90:18-90:21\">2631</td>\n<td data-sourcepos=\"90:23-90:26\">7400</td>\n<td data-sourcepos=\"90:28-90:31\">6457</td>\n<td data-sourcepos=\"90:33-90:36\">2287</td>\n<td data-sourcepos=\"90:38-90:41\">1851</td>\n</tr>\n<tr data-sourcepos=\"91:1-91:28\">\n<td data-sourcepos=\"91:2-91:7\">バグ</td>\n<td data-sourcepos=\"91:9-91:8\"></td>\n<td data-sourcepos=\"91:10-91:12\">351</td>\n<td data-sourcepos=\"91:14-91:13\"></td>\n<td data-sourcepos=\"91:15-91:18\">1134</td>\n<td data-sourcepos=\"91:20-91:22\">103</td>\n<td data-sourcepos=\"91:24-91:23\"></td>\n<td data-sourcepos=\"91:25-91:28\">1826</td>\n</tr>\n<tr data-sourcepos=\"92:1-92:51\">\n<td data-sourcepos=\"92:2-92:40\">プロンプトエンジニアリング</td>\n<td data-sourcepos=\"92:42-92:41\"></td>\n<td data-sourcepos=\"92:43-92:42\"></td>\n<td data-sourcepos=\"92:44-92:43\"></td>\n<td data-sourcepos=\"92:45-92:44\"></td>\n<td data-sourcepos=\"92:46-92:45\"></td>\n<td data-sourcepos=\"92:47-92:46\"></td>\n<td data-sourcepos=\"92:48-92:51\">1701</td>\n</tr>\n<tr data-sourcepos=\"93:1-93:15\">\n<td data-sourcepos=\"93:2-93:4\">LLM</td>\n<td data-sourcepos=\"93:6-93:5\"></td>\n<td data-sourcepos=\"93:7-93:6\"></td>\n<td data-sourcepos=\"93:8-93:7\"></td>\n<td data-sourcepos=\"93:9-93:8\"></td>\n<td data-sourcepos=\"93:10-93:9\"></td>\n<td data-sourcepos=\"93:11-93:10\"></td>\n<td data-sourcepos=\"93:12-93:15\">1597</td>\n</tr>\n<tr data-sourcepos=\"94:1-94:59\">\n<td data-sourcepos=\"94:2-94:25\">データサイエンス</td>\n<td data-sourcepos=\"94:27-94:29\">962</td>\n<td data-sourcepos=\"94:31-94:34\">6078</td>\n<td data-sourcepos=\"94:36-94:39\">6033</td>\n<td data-sourcepos=\"94:41-94:44\">5709</td>\n<td data-sourcepos=\"94:46-94:49\">4836</td>\n<td data-sourcepos=\"94:51-94:54\">1143</td>\n<td data-sourcepos=\"94:56-94:59\">1589</td>\n</tr>\n<tr data-sourcepos=\"95:1-95:35\">\n<td data-sourcepos=\"95:2-95:6\">Azure</td>\n<td data-sourcepos=\"95:8-95:10\">228</td>\n<td data-sourcepos=\"95:12-95:14\">400</td>\n<td data-sourcepos=\"95:16-95:19\">3948</td>\n<td data-sourcepos=\"95:21-95:24\">4017</td>\n<td data-sourcepos=\"95:26-95:29\">3237</td>\n<td data-sourcepos=\"95:31-95:30\"></td>\n<td data-sourcepos=\"95:32-95:35\">1565</td>\n</tr>\n<tr data-sourcepos=\"96:1-96:47\">\n<td data-sourcepos=\"96:2-96:13\">インフラ</td>\n<td data-sourcepos=\"96:15-96:18\">2539</td>\n<td data-sourcepos=\"96:20-96:23\">4231</td>\n<td data-sourcepos=\"96:25-96:28\">5840</td>\n<td data-sourcepos=\"96:30-96:33\">3183</td>\n<td data-sourcepos=\"96:35-96:38\">3460</td>\n<td data-sourcepos=\"96:40-96:42\">332</td>\n<td data-sourcepos=\"96:44-96:47\">1486</td>\n</tr>\n<tr data-sourcepos=\"97:1-97:38\">\n<td data-sourcepos=\"97:2-97:6\">debug</td>\n<td data-sourcepos=\"97:8-97:10\">929</td>\n<td data-sourcepos=\"97:12-97:15\">1163</td>\n<td data-sourcepos=\"97:17-97:20\">1209</td>\n<td data-sourcepos=\"97:22-97:25\">3041</td>\n<td data-sourcepos=\"97:27-97:29\">844</td>\n<td data-sourcepos=\"97:31-97:33\">840</td>\n<td data-sourcepos=\"97:35-97:38\">1461</td>\n</tr>\n<tr data-sourcepos=\"98:1-98:16\">\n<td data-sourcepos=\"98:2-98:5\">Flet</td>\n<td data-sourcepos=\"98:7-98:6\"></td>\n<td data-sourcepos=\"98:8-98:7\"></td>\n<td data-sourcepos=\"98:9-98:8\"></td>\n<td data-sourcepos=\"98:10-98:9\"></td>\n<td data-sourcepos=\"98:11-98:10\"></td>\n<td data-sourcepos=\"98:12-98:11\"></td>\n<td data-sourcepos=\"98:13-98:16\">1446</td>\n</tr>\n<tr data-sourcepos=\"99:1-99:51\">\n<td data-sourcepos=\"99:2-99:13\">個人開発</td>\n<td data-sourcepos=\"99:15-99:17\">521</td>\n<td data-sourcepos=\"99:19-99:23\">13700</td>\n<td data-sourcepos=\"99:25-99:29\">17845</td>\n<td data-sourcepos=\"99:31-99:35\">18594</td>\n<td data-sourcepos=\"99:37-99:41\">11586</td>\n<td data-sourcepos=\"99:43-99:46\">8908</td>\n<td data-sourcepos=\"99:48-99:51\">1414</td>\n</tr>\n<tr data-sourcepos=\"100:1-100:17\">\n<td data-sourcepos=\"100:2-100:6\">Wi-Fi</td>\n<td data-sourcepos=\"100:8-100:7\"></td>\n<td data-sourcepos=\"100:9-100:8\"></td>\n<td data-sourcepos=\"100:10-100:9\"></td>\n<td data-sourcepos=\"100:11-100:10\"></td>\n<td data-sourcepos=\"100:12-100:11\"></td>\n<td data-sourcepos=\"100:13-100:12\"></td>\n<td data-sourcepos=\"100:14-100:17\">1362</td>\n</tr>\n<tr data-sourcepos=\"101:1-101:44\">\n<td data-sourcepos=\"101:2-101:5\">HTML</td>\n<td data-sourcepos=\"101:7-101:11\">10623</td>\n<td data-sourcepos=\"101:13-101:17\">22819</td>\n<td data-sourcepos=\"101:19-101:23\">32126</td>\n<td data-sourcepos=\"101:25-101:29\">13821</td>\n<td data-sourcepos=\"101:31-101:34\">5057</td>\n<td data-sourcepos=\"101:36-101:39\">5673</td>\n<td data-sourcepos=\"101:41-101:44\">1288</td>\n</tr>\n<tr data-sourcepos=\"102:1-102:45\">\n<td data-sourcepos=\"102:2-102:7\">設計</td>\n<td data-sourcepos=\"102:9-102:12\">7209</td>\n<td data-sourcepos=\"102:14-102:18\">10166</td>\n<td data-sourcepos=\"102:20-102:24\">10554</td>\n<td data-sourcepos=\"102:26-102:30\">19506</td>\n<td data-sourcepos=\"102:32-102:35\">4885</td>\n<td data-sourcepos=\"102:37-102:40\">4730</td>\n<td data-sourcepos=\"102:42-102:45\">1280</td>\n</tr>\n<tr data-sourcepos=\"103:1-103:52\">\n<td data-sourcepos=\"103:2-103:13\">DeepLearning</td>\n<td data-sourcepos=\"103:15-103:19\">24106</td>\n<td data-sourcepos=\"103:21-103:25\">34708</td>\n<td data-sourcepos=\"103:27-103:31\">30002</td>\n<td data-sourcepos=\"103:33-103:37\">24725</td>\n<td data-sourcepos=\"103:39-103:42\">6463</td>\n<td data-sourcepos=\"103:44-103:47\">4504</td>\n<td data-sourcepos=\"103:49-103:52\">1273</td>\n</tr>\n<tr data-sourcepos=\"104:1-104:41\">\n<td data-sourcepos=\"104:2-104:13\">拡張機能</td>\n<td data-sourcepos=\"104:15-104:17\">387</td>\n<td data-sourcepos=\"104:19-104:22\">1968</td>\n<td data-sourcepos=\"104:24-104:26\">324</td>\n<td data-sourcepos=\"104:28-104:30\">237</td>\n<td data-sourcepos=\"104:32-104:31\"></td>\n<td data-sourcepos=\"104:33-104:36\">1427</td>\n<td data-sourcepos=\"104:38-104:41\">1270</td>\n</tr>\n<tr data-sourcepos=\"105:1-105:54\">\n<td data-sourcepos=\"105:2-105:16\">データ分析</td>\n<td data-sourcepos=\"105:18-105:21\">7539</td>\n<td data-sourcepos=\"105:23-105:27\">14823</td>\n<td data-sourcepos=\"105:29-105:33\">13928</td>\n<td data-sourcepos=\"105:35-105:39\">12274</td>\n<td data-sourcepos=\"105:41-105:44\">5657</td>\n<td data-sourcepos=\"105:46-105:49\">4181</td>\n<td data-sourcepos=\"105:51-105:54\">1267</td>\n</tr>\n<tr data-sourcepos=\"106:1-106:66\">\n<td data-sourcepos=\"106:2-106:28\">競技プログラミング</td>\n<td data-sourcepos=\"106:30-106:33\">3208</td>\n<td data-sourcepos=\"106:35-106:39\">30503</td>\n<td data-sourcepos=\"106:41-106:45\">16583</td>\n<td data-sourcepos=\"106:47-106:51\">17254</td>\n<td data-sourcepos=\"106:53-106:56\">6764</td>\n<td data-sourcepos=\"106:58-106:61\">1781</td>\n<td data-sourcepos=\"106:63-106:66\">1262</td>\n</tr>\n</tbody>\n</table>\n<h2 data-sourcepos=\"108:1-108:27\">\n<span id=\"タグストック推移\" class=\"fragment\"></span><a href=\"#%E3%82%BF%E3%82%B0%E3%82%B9%E3%83%88%E3%83%83%E3%82%AF%E6%8E%A8%E7%A7%BB\"><i class=\"fa fa-link\"></i></a>タグストック推移</h2>\n<p data-sourcepos=\"110:1-110:201\">鋭い方は表からも色々読み取れたかもしれませんが、人間の目は表から傾向を理解できる程便利にできていないと思うので、グラフにしてみました。</p>\n<p data-sourcepos=\"112:1-112:54\">何か別の傾向が見えてくるでしょうか？</p>\n<p data-sourcepos=\"114:1-114:122\"><a href=\"https://camo.qiitausercontent.com/6bac679aa276a6ba479ebf65cdead1ebcfdf0053/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f31626166313232372d373337352d303239622d653436662d3966643334626231626365352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F1baf1227-7375-029b-e46f-9fd34bb1bce5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=04837969b2b9c64b6cdbd4be0ff9ab42\" alt=\"推移.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/1baf1227-7375-029b-e46f-9fd34bb1bce5.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F1baf1227-7375-029b-e46f-9fd34bb1bce5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=2757de6f3bf53c237784c28a0cdbaec2 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"116:1-117:208\">まず目につくのは JavaScript と Python の2大巨頭です。これは今回の集計方法に問題がある可能性もあります。多くの記事は JavaScript や Python のみをタグづけせずに、他に「なにか」をタグづけするので、実際は JavaScript や Python に付随する何かが数字を稼いでいると考えられます。<br>\nReactやVueが 2013年や2014年に出てそろそろ時代はデータバインディングとか、機械学習とかでしょうか。個人的には、何かと便利な Node.js や Nuxt.js推しです。</p>\n<p data-sourcepos=\"119:1-119:227\">JavaScript も Python も簡単なので誰でも手を付けやすいので、いいねをつける人の母数が増えると推察できますが、他のタグの5-10倍というのはバブルの様な突出具合です。</p>\n<p data-sourcepos=\"121:1-121:133\">ここで次の系列に目を移すと、初心者と新人プログラマ応援が2大巨頭に追従した動きが見えます。</p>\n<p data-sourcepos=\"123:1-123:151\"><strong>『あれ？プログラミングスクールが乱立して情報商材ビジネスが流行ったのってどんな時系列でしたっけ？』</strong></p>\n<p data-sourcepos=\"125:1-125:420\">という疑問はさておいて、さらに他の系列を見てみます。これらの系列には本当に有用な技術情報が多いかと思いますが、キーワードでググって必要な情報を仕入れてそのまま離脱して作業に戻る程度に自走ができる方が利用し「いいね」をつけたり「ストック」をしない傾向が出てくるのかと推察されました。</p>\n<h2 data-sourcepos=\"127:1-127:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"129:1-129:27\"><strong>いかがでしたか()</strong></p>\n<p data-sourcepos=\"131:1-131:75\">Qiitaの記事のタグから6年程の推移を観測してみました。</p>\n<p data-sourcepos=\"133:1-133:263\">技術の多様化が進んでいるからか、何らかのバブルがはじけたからか、既存の技術で大きく数字を稼いでいるものがないこと、ChatGPTは7末時点でもかなりの数字を出していることが分かりました。</p>\n<p data-sourcepos=\"135:1-135:352\">技術を身につけるのは一朝一夕ではなんとかなるものではないのですが、ChatGPTの様なトレンドを追いかけて一山当てるのでないのであれば、年々増えている既存の技術のうち消えてなくならない技術を『何でもできる』様にしておく必要があるかもしれません。</p>\n<p data-sourcepos=\"137:1-137:410\">直近では、設計からフロントエンドからバックエンド、AWS含むインフラまで幅広く様々な技術を身につけていないとITの仕事を行うのが難しくなり、どこかで全部入りの新しい何かが登場してまた全部覚え直しが必要になって…といった未来が推察されますが、地道にひとつひとつ勉強していきましょう。</p>\n<h2 data-sourcepos=\"139:1-139:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"141:1-141:50\"><iframe id=\"qiita-embed-content__23da85fedbd5dc4b41e3ae4df4c1ba48\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__23da85fedbd5dc4b41e3ae4df4c1ba48\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"143:1-143:50\"><iframe id=\"qiita-embed-content__a6017abbf20485f9a1b3d37d4b25cd66\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a6017abbf20485f9a1b3d37d4b25cd66\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"145:1-145:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"147:1-147:50\"><iframe id=\"qiita-embed-content__9b4aa82f9796cebb924561cd380cec6a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9b4aa82f9796cebb924561cd380cec6a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"149:1-149:50\"><iframe id=\"qiita-embed-content__f40748e4dd728b1954c360539307925f\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f40748e4dd728b1954c360539307925f\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"151:1-151:50\"><iframe id=\"qiita-embed-content__e15e50aeda1e236eeb9e4e5b6cf660a0\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e15e50aeda1e236eeb9e4e5b6cf660a0\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"153:1-153:50\"><iframe id=\"qiita-embed-content__6a9ef75d7dae470f46894a9ff8060d70\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6a9ef75d7dae470f46894a9ff8060d70\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"155:1-155:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"157:1-157:50\"><iframe id=\"qiita-embed-content__cc7647f57a437267c18a42e5723f845e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__cc7647f57a437267c18a42e5723f845e\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"159:1-159:50\"><iframe id=\"qiita-embed-content__f2e1a3484468ad4b39a63b016a6c8244\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f2e1a3484468ad4b39a63b016a6c8244\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"161:1-161:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"163:1-163:50\"><iframe id=\"qiita-embed-content__c943c6fcf47da1bc0ec9388c1104b878\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c943c6fcf47da1bc0ec9388c1104b878\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"165:1-165:50\"><iframe id=\"qiita-embed-content__ecbf546f0ce081881290f62784635d66\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ecbf546f0ce081881290f62784635d66\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"167:1-167:50\"><iframe id=\"qiita-embed-content__8b0ecfcd29e1c3b22c058bbdd27f0475\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__8b0ecfcd29e1c3b22c058bbdd27f0475\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"169:1-169:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"171:1-171:50\"><iframe id=\"qiita-embed-content__f9502608844e292bebc6de00f415d8a5\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f9502608844e292bebc6de00f415d8a5\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"173:1-173:50\"><iframe id=\"qiita-embed-content__233868fbbbfc98e1204ee1384f50804e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__233868fbbbfc98e1204ee1384f50804e\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"175:1-175:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"177:1-178:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"180:1-180:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\nQiitaを見てる皆さんこんにちわ。\n\nいつもは皆さんの一服の清涼剤となるべく、ゆるめの新人向けの記事やマネジメントの記事をポエムしているのですが、ふと、いいねを取れる記事ってなんだろうと思いまして。\n\nChatGPTのようなバズワードな技術に乗っかるといいねを取れそうだけど、なかなか難しそうだなぁと思っているうちに、いいねを取れる記事の長期的な推移を見ると傾向が見えるのではと思い調べてみたらなかなかの結果が見えましたので記事にしてみました。\n\n## Qiita 記事の取得\n\n調査をするためには、過去～現在の投稿に関するデータが必要です。QiitaはAPIを公開していて記事の一覧を取得できるので、それを利用して記事を取得することにしました。\n\n(参考)\n[Qiita API : 投稿](https://qiita.com/api/v2/docs#%E6%8A%95%E7%A8%BF)\n\n単一の検索条件に対して取得できる記事の件数は最大で 10,000 件でした。\n\n```\n1ページあたりの件数の最大(100) x 指定可能なページの最大(100) = 10,000\n```\n\n月に10,000投稿あったとすると1ヶ月分のデータしか取れないため長期の推移を見るためには、何らかの検索条件を指定する必要がありそうです。\n\nある程度人気があったタグを推測できるように件数を絞るのであれば「いいね数」か「ストック数」がある程度以上の記事を集めるのがよさそうです。「ストック数」は指定可能、「いいね数」は指定不可という仕様でしたので、「ストック数」を指定して検索することにしました。\n\n(参考)\n[Qiita ヘルプ : 検索機能](https://help.qiita.com/ja/articles/qiita-search-options)\n\nストック数50以上で検索すれば大分遡れるかと思いましたが、毎月数百件のレコードが取得され ~~軽く嫉妬しました~~ あまり遡れなかったので、ストック数100以上を指定してデータを取得したところ 2017 年まで3月まで遡れました。\n\nストック数がそこまで多くないデータの集計にも重要な情報がありそうですが、取れないものは仕方ないので、観測には充分なデータが取得できたとして先に進めることにしました。\n\n## 観測方法\n\n大雑把に傾向が見れればよいので、ストック数100以上を獲得した記事についていたタグを分解して、それぞれのタグにストック数をそのまま分配することにしました。\n\n- 記事AにタグT1,T2,T3,T4,T5 がついていて、ストック数が101の場合\n\n```\nT1 : 101\nT2 : 101\nT3 : 101\nT4 : 101\nT5 : 101\n```\n\nこのタグとストックのデータをスプレッドシートに貼り付けて、年度別でタグ毎のストック数をピボットテーブルで求めて多い順に並べました。\n\n## タグストックランキング 2023 TOP50\n\n2023年のTOP50の過去の推移を見られる形としました。\n過去数年を鑑みてランキングを求めたらChatGPTの台頭が分からなくなってしまったのと、古い技術は消え去っていくというITの性質を鑑みると、最新のデータを基準に過去の推移を見るのが良いかと思いました。\n\n皆さんご想像の通り？ChatGPTは2022年に登場以後、勢い衰えず2023年も圧勝となっていました。AIもつよつよですね。\n\n|タグ|2017|2018|2019|2020|2021|2022|2023\n|---|---|---|---|---|---|---|---|\n|ChatGPT||||||2867|25561\n|Python|79286|143985|120573|96812|40967|19658|16442\n|初心者|14281|38717|85032|75886|35776|33167|13164\n|AI|553|11334|9712|10110|7118|5551|11160\n|記事投稿キャンペーン_ChatGPT|||||||8143\n|ポエム|5254|21427|26097|19238|21706|9691|7071\n|新人プログラマ応援|12709|71500|52292|52094|28113|23355|6928\n|OpenAI||||||105|6567\n|VSCode|10067|22305|27145|20135|7663|6769|5780\n|GPT-4|||||||5721\n|AWS|11370|39737|30027|20924|14008|9040|5210\n|JavaScript|81104|150510|136293|100877|44305|29137|4266\n|React|17334|30123|26370|33223|17230|16867|3699\n|langchain||||||150|3648\n|Design|3371|2180|3921|5636|15556|5548|3445\n|Next.js|177|1752|523|6334|3225|5549|3327\n|GitHub|12875|20528|13106|19431|16033|3969|3203\n|新人プログラマ応援_記事投稿キャンペーン|497||||||3184\n|フロントエンド|7574|17862|32897|18857|15432|9904|3088\n|エンジニア|2997|14112|5465|7169|5458|7615|2968\n|TypeScript|6189|16510|28414|26226|8536|15062|2964\n|Flutter||3191|9322|5897|1334|383|2701\n|Git|21560|31919|23952|16675|6498|2492|2671\n|機械学習|42848|47356|44729|37587|19714|8303|2509\n|Security|2911|11975|8229|8814|2144|4052|2331\n|ツール|578|1102|2599|6902|449|4045|2285\n|figma|838|169|981|||473|2171\n|レビュー|2029||404|4296|1335|133|2153\n|gpt-3||||||2348|2099\n|アクセシビリティ||137|1701||638|205|2060\n|Docker|22855|40293|38158|28708|6944|5163|1983\n|未経験エンジニア||1489|3441|3904|2701|1247|1923\n|学習|2159|859|2631|7400|6457|2287|1851\n|バグ||351||1134|103||1826\n|プロンプトエンジニアリング|||||||1701\n|LLM|||||||1597\n|データサイエンス|962|6078|6033|5709|4836|1143|1589\n|Azure|228|400|3948|4017|3237||1565\n|インフラ|2539|4231|5840|3183|3460|332|1486\n|debug|929|1163|1209|3041|844|840|1461\n|Flet|||||||1446\n|個人開発|521|13700|17845|18594|11586|8908|1414\n|Wi-Fi|||||||1362\n|HTML|10623|22819|32126|13821|5057|5673|1288\n|設計|7209|10166|10554|19506|4885|4730|1280\n|DeepLearning|24106|34708|30002|24725|6463|4504|1273\n|拡張機能|387|1968|324|237||1427|1270\n|データ分析|7539|14823|13928|12274|5657|4181|1267\n|競技プログラミング|3208|30503|16583|17254|6764|1781|1262\n\n## タグストック推移\n\n鋭い方は表からも色々読み取れたかもしれませんが、人間の目は表から傾向を理解できる程便利にできていないと思うので、グラフにしてみました。\n\n何か別の傾向が見えてくるでしょうか？\n\n![推移.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/1baf1227-7375-029b-e46f-9fd34bb1bce5.png)\n\nまず目につくのは JavaScript と Python の2大巨頭です。これは今回の集計方法に問題がある可能性もあります。多くの記事は JavaScript や Python のみをタグづけせずに、他に「なにか」をタグづけするので、実際は JavaScript や Python に付随する何かが数字を稼いでいると考えられます。\nReactやVueが 2013年や2014年に出てそろそろ時代はデータバインディングとか、機械学習とかでしょうか。個人的には、何かと便利な Node.js や Nuxt.js推しです。\n\nJavaScript も Python も簡単なので誰でも手を付けやすいので、いいねをつける人の母数が増えると推察できますが、他のタグの5-10倍というのはバブルの様な突出具合です。\n\nここで次の系列に目を移すと、初心者と新人プログラマ応援が2大巨頭に追従した動きが見えます。\n\n**『あれ？プログラミングスクールが乱立して情報商材ビジネスが流行ったのってどんな時系列でしたっけ？』**\n\nという疑問はさておいて、さらに他の系列を見てみます。これらの系列には本当に有用な技術情報が多いかと思いますが、キーワードでググって必要な情報を仕入れてそのまま離脱して作業に戻る程度に自走ができる方が利用し「いいね」をつけたり「ストック」をしない傾向が出てくるのかと推察されました。\n\n## おわりに\n\n**いかがでしたか()**\n\nQiitaの記事のタグから6年程の推移を観測してみました。\n\n技術の多様化が進んでいるからか、何らかのバブルがはじけたからか、既存の技術で大きく数字を稼いでいるものがないこと、ChatGPTは7末時点でもかなりの数字を出していることが分かりました。\n\n技術を身につけるのは一朝一夕ではなんとかなるものではないのですが、ChatGPTの様なトレンドを追いかけて一山当てるのでないのであれば、年々増えている既存の技術のうち消えてなくならない技術を『何でもできる』様にしておく必要があるかもしれません。\n\n直近では、設計からフロントエンドからバックエンド、AWS含むインフラまで幅広く様々な技術を身につけていないとITの仕事を行うのが難しくなり、どこかで全部入りの新しい何かが登場してまた全部覚え直しが必要になって…といった未来が推察されますが、地道にひとつひとつ勉強していきましょう。\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-07-30T01:52:39+09:00",
    "group": null,
    "id": "7865bcab9c24aa134e5f",
    "likes_count": 26,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 26,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      }
    ],
    "title": "Qiitaで見る技術トレンド推移(2017 - 2023)",
    "updated_at": "2023-07-30T01:52:39+09:00",
    "url": "https://qiita.com/kaku3/items/7865bcab9c24aa134e5f",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 18922,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"july-7-2023\" class=\"fragment\"></span><a href=\"#july-7-2023\"><i class=\"fa fa-link\"></i></a>July 7, 2023</h2>\n<p data-sourcepos=\"3:1-3:81\">昼、若手に依頼していた調査実装のタスクの状況を聞いた。</p>\n<p data-sourcepos=\"5:1-6:63\">話を聞いても分からねぇから、調査メモを見せてもらったら<br>\nバイオハザードの飼育係の日誌みたいだった。</p>\n<h2 data-sourcepos=\"8:1-8:54\">\n<span id=\"バイオハザードと飼育係の日誌とは\" class=\"fragment\"></span><a href=\"#%E3%83%90%E3%82%A4%E3%82%AA%E3%83%8F%E3%82%B6%E3%83%BC%E3%83%89%E3%81%A8%E9%A3%BC%E8%82%B2%E4%BF%82%E3%81%AE%E6%97%A5%E8%AA%8C%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>バイオハザードと飼育係の日誌とは？</h2>\n<p data-sourcepos=\"10:1-10:178\">バイオハザードとは、1996年に発売されたプレイステーション用のホラーゲームで、飼育係の日誌はその中で登場するテキストです。</p>\n<blockquote data-sourcepos=\"12:1-14:195\">\n<p data-sourcepos=\"12:3-14:195\">「飼育係の日誌」<br>\n最初の舞台となる洋館のとある部屋にあるファイル。全10ページで構成されている。<br>\n日誌の書き手である飼育係が、ウイルスに感染した末に徐々に人間性を喪失していく様を間接的かつリアルな文体で表現した秀逸な文章である。</p>\n</blockquote>\n<p data-sourcepos=\"16:1-16:123\"><a href=\"https://dic.pixiv.net/a/%E3%81%8B%E3%82%86%E3%81%84%E3%81%86%E3%81%BE\" rel=\"nofollow noopener\" target=\"_blank\">出典 : ピクシブ百科事典 かゆいうま </a></p>\n<p data-sourcepos=\"18:1-18:396\">実際の調査メモは、特に人間性を喪失していく文章ではなく、色々試行錯誤した内容を自分用に離散的に書きとめていただけなのですが、他人が見た時に脳内で補完してつなぎ合わせないと読めないあたりが、なんとなくバイオハザードっぽいなと思って、一人でツボに刺さってしまいました。</p>\n<h2 data-sourcepos=\"20:1-20:48\">\n<span id=\"面白さを伝えたい共有したい\" class=\"fragment\"></span><a href=\"#%E9%9D%A2%E7%99%BD%E3%81%95%E3%82%92%E4%BC%9D%E3%81%88%E3%81%9F%E3%81%84%E5%85%B1%E6%9C%89%E3%81%97%E3%81%9F%E3%81%84\"><i class=\"fa fa-link\"></i></a>面白さを伝えたい（共有したい）</h2>\n<p data-sourcepos=\"22:1-22:199\">個人的にはめちゃくちゃツボだったのでなんとかこの面白さを伝えたいとなったわけですが、1996年発売のゲームなど若手は知るわけがありません。</p>\n<p data-sourcepos=\"24:1-24:164\">うっかりやりがちですが、<strong>「自分が知っていることは相手も知っている」</strong> と思って話を進めてしまうことがあります。</p>\n<p data-sourcepos=\"26:1-27:189\"><strong>相手が全く分からない話を延々楽しそうに語るのは悪手です。</strong><br>\nこのような行いをすると「空気を読めない人」と思われがちですが、実際に読めていないのは <strong>「相手に伝わっているのかどうか」</strong> です。</p>\n<p data-sourcepos=\"29:1-30:186\">前提が伝わっていない話を伝わっているつもりで続けると、相手の脳内には、分からないの上に分からないが積み重なった状態になります。<br>\nバイオハザードの話は最悪伝わらなくても仕事に支障はないので問題ありませんが、仕様の話などはきちんと伝えないと問題になります。</p>\n<p data-sourcepos=\"32:1-32:48\">ではどう伝えるのがいいでしょう？</p>\n<h2 data-sourcepos=\"34:1-34:24\">\n<span id=\"相手に確認する\" class=\"fragment\"></span><a href=\"#%E7%9B%B8%E6%89%8B%E3%81%AB%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>相手に確認する</h2>\n<p data-sourcepos=\"36:1-36:111\">相手が知っているか分からないのであれば、知っているか確認すればいいですね。</p>\n<p data-sourcepos=\"38:1-39:18\">「バイオハザードって遊んだことあります？」<br>\n「ないです」</p>\n<p data-sourcepos=\"41:1-41:270\">ここで会話を打ち切ればダダ滑る危険は回避できそうです。よかったです。会話を細かく切って相手の反応をところどころで確認するようにすれば、いい感じに会話のキャッチボールができそうです。</p>\n<p data-sourcepos=\"43:1-43:192\">蛇足ですが、今書いている記事については、読者の皆さんのリアクションを確認することができないので怯えながら書き続けるしかないです。</p>\n<p data-sourcepos=\"45:1-45:186\">会話を打ち切ることでダダ滑るという最悪のケースは回避できましたが、それだと、伝えるべきことも伝えられないとなってしまいます。</p>\n<p data-sourcepos=\"47:1-47:102\">では、打ち切らないとしたら、どのように会話を続ければいいでしょうか？</p>\n<h2 data-sourcepos=\"49:1-49:24\">\n<span id=\"前提から伝える\" class=\"fragment\"></span><a href=\"#%E5%89%8D%E6%8F%90%E3%81%8B%E3%82%89%E4%BC%9D%E3%81%88%E3%82%8B\"><i class=\"fa fa-link\"></i></a>前提から伝える</h2>\n<p data-sourcepos=\"51:1-51:274\">「前提」と言うと少しぼんやりした表現になってしまいますが、<strong>相手に適切に質問や確認を行うことで相手が知っているところから</strong>話をすることで、相手に理解してもらうことができるかと思います。</p>\n<p data-sourcepos=\"53:1-53:354\">誰でも分かるようにと、毎回１から１０まで説明することもやってしまいがちですが、相手によっては、一度にたくさんのことを理解できなかったり、知っている話ばかりを聞いているうちに話に興味をなくして大事な部分を聞きこぼしたりするかもしれません。</p>\n<p data-sourcepos=\"55:1-55:156\">相手がいて、相手に伝わったことがゴールなので、「相手に確認して相手に合わせる」が基本なのかなと思います。</p>\n<h2 data-sourcepos=\"57:1-57:45\">\n<span id=\"ところで伝えるべきことって\" class=\"fragment\"></span><a href=\"#%E3%81%A8%E3%81%93%E3%82%8D%E3%81%A7%E4%BC%9D%E3%81%88%E3%82%8B%E3%81%B9%E3%81%8D%E3%81%93%E3%81%A8%E3%81%A3%E3%81%A6\"><i class=\"fa fa-link\"></i></a>ところで伝えるべきことって？</h2>\n<p data-sourcepos=\"59:1-60:237\">仕様の話であればプロジェクトメンバー全員が知るべきですが、「バイオハザード」はプロジェクトメンバー全員が知る必要はないです。<br>\nリモートワークになって雑談が減った問題が話題になりますが、全く興味がないバイオハザードの話を延々として貴重な仕事時間を削ってしまっては本末転倒かもしれません。</p>\n<p data-sourcepos=\"62:1-62:132\">しかも、延々語っても <strong>「言葉」でなく「心」で理解できた！</strong> という状況にはならなそうです。</p>\n<p data-sourcepos=\"64:1-64:156\">『面白さを共有する』というのは、『相手が「言葉」でなく「心」で理解できた！状態になる』ことかと思います。</p>\n<p data-sourcepos=\"66:1-66:408\">昭和の世の中であれば、サラリーマンは野球を見てゴルフをやる、みたいな価値観が共有されていましたが多様性がうたわれる令和では、同じ世代の中でも趣味嗜好が多様化していて、ただ同じものを見て同じ様に感じることも少なく、なかなか『「心」で理解できた』状態にするのは難しいでしょう。</p>\n<p data-sourcepos=\"68:1-68:327\">この記事も「飼育係の日誌」をリアルタイムで見ていた方の一部が「すげー分かるｗ」ってなってくれたり、何かのヒントにしてくれた方や読み物として楽しんでくれた方がいれば幸いですし、読み飛ばしちゃう人もいるのかなぁと思います。</p>\n<p data-sourcepos=\"70:1-70:288\">そんな難しい世の中で、若手もいずれ年を取って部下を持つと考えると「人ってみんな違うけど、お互いを尊重していこうね」みたいなざっくりした話をして、伝えることを楽しむことが大事なのかもしれません。</p>\n<h2 data-sourcepos=\"72:1-72:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"74:1-75:6\">かゆい<br>\nうま</p>\n<h2 data-sourcepos=\"77:1-77:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"79:1-79:50\"><iframe id=\"qiita-embed-content__6235b6c0b5e43af52238aaf14c07ec0a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6235b6c0b5e43af52238aaf14c07ec0a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"81:1-81:50\"><iframe id=\"qiita-embed-content__62d385c84156319727c557a04c10bedf\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__62d385c84156319727c557a04c10bedf\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"83:1-83:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"85:1-85:50\"><iframe id=\"qiita-embed-content__045e51b9f76a368de75dbee942fe3060\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__045e51b9f76a368de75dbee942fe3060\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"87:1-87:50\"><iframe id=\"qiita-embed-content__4988e9150d77d60ebb66c709993f4eca\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__4988e9150d77d60ebb66c709993f4eca\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"89:1-89:50\"><iframe id=\"qiita-embed-content__c3aa16c645a70a6712a3cfe7733409bd\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c3aa16c645a70a6712a3cfe7733409bd\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"91:1-91:50\"><iframe id=\"qiita-embed-content__7e46db050b7970bf3a4daca33410976d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__7e46db050b7970bf3a4daca33410976d\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"93:1-93:45\">\n<span id=\"おまけ３パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ３（パイセン向け記事）</h2>\n<p data-sourcepos=\"95:1-95:50\"><iframe id=\"qiita-embed-content__dce5dad7bfd5dc72a359f0a13d82b0e0\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__dce5dad7bfd5dc72a359f0a13d82b0e0\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"97:1-97:50\"><iframe id=\"qiita-embed-content__e7ff4d31e42f5a3ab3f3bae78305dde2\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e7ff4d31e42f5a3ab3f3bae78305dde2\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F422b5427024d29da6a6e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"99:1-99:48\">\n<span id=\"おまけ４は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"101:1-101:50\"><iframe id=\"qiita-embed-content__fb3c7751a6ece275b0a769864562e2d2\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__fb3c7751a6ece275b0a769864562e2d2\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"103:1-103:50\"><iframe id=\"qiita-embed-content__6891d1134fb51a6c2d2639392af43cb4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6891d1134fb51a6c2d2639392af43cb4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"105:1-105:50\"><iframe id=\"qiita-embed-content__107ba6d252569ec233798c5c133b8bd3\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__107ba6d252569ec233798c5c133b8bd3\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"107:1-107:46\">\n<span id=\"おまけ５営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ５（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"109:1-109:50\"><iframe id=\"qiita-embed-content__e28f1a9176095af5a5ccf58808c1950b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e28f1a9176095af5a5ccf58808c1950b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"111:1-111:50\"><iframe id=\"qiita-embed-content__93192e80a2d5834fb4609ac4f6a7fcc9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__93192e80a2d5834fb4609ac4f6a7fcc9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"113:1-113:66\">\n<span id=\"おまけ６エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%96%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ６（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"115:1-116:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"118:1-118:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## July 7, 2023\n\n昼、若手に依頼していた調査実装のタスクの状況を聞いた。\n\n話を聞いても分からねぇから、調査メモを見せてもらったら\nバイオハザードの飼育係の日誌みたいだった。\n\n## バイオハザードと飼育係の日誌とは？\n\nバイオハザードとは、1996年に発売されたプレイステーション用のホラーゲームで、飼育係の日誌はその中で登場するテキストです。\n\n> 「飼育係の日誌」\n最初の舞台となる洋館のとある部屋にあるファイル。全10ページで構成されている。\n日誌の書き手である飼育係が、ウイルスに感染した末に徐々に人間性を喪失していく様を間接的かつリアルな文体で表現した秀逸な文章である。\n\n[出典 : ピクシブ百科事典 かゆいうま ](https://dic.pixiv.net/a/%E3%81%8B%E3%82%86%E3%81%84%E3%81%86%E3%81%BE)\n\n実際の調査メモは、特に人間性を喪失していく文章ではなく、色々試行錯誤した内容を自分用に離散的に書きとめていただけなのですが、他人が見た時に脳内で補完してつなぎ合わせないと読めないあたりが、なんとなくバイオハザードっぽいなと思って、一人でツボに刺さってしまいました。\n\n## 面白さを伝えたい（共有したい）\n\n個人的にはめちゃくちゃツボだったのでなんとかこの面白さを伝えたいとなったわけですが、1996年発売のゲームなど若手は知るわけがありません。\n\nうっかりやりがちですが、**「自分が知っていることは相手も知っている」** と思って話を進めてしまうことがあります。\n\n**相手が全く分からない話を延々楽しそうに語るのは悪手です。**\nこのような行いをすると「空気を読めない人」と思われがちですが、実際に読めていないのは **「相手に伝わっているのかどうか」** です。\n\n前提が伝わっていない話を伝わっているつもりで続けると、相手の脳内には、分からないの上に分からないが積み重なった状態になります。\nバイオハザードの話は最悪伝わらなくても仕事に支障はないので問題ありませんが、仕様の話などはきちんと伝えないと問題になります。\n\nではどう伝えるのがいいでしょう？\n\n## 相手に確認する\n\n相手が知っているか分からないのであれば、知っているか確認すればいいですね。\n\n「バイオハザードって遊んだことあります？」\n「ないです」\n\nここで会話を打ち切ればダダ滑る危険は回避できそうです。よかったです。会話を細かく切って相手の反応をところどころで確認するようにすれば、いい感じに会話のキャッチボールができそうです。\n\n蛇足ですが、今書いている記事については、読者の皆さんのリアクションを確認することができないので怯えながら書き続けるしかないです。\n\n会話を打ち切ることでダダ滑るという最悪のケースは回避できましたが、それだと、伝えるべきことも伝えられないとなってしまいます。\n\nでは、打ち切らないとしたら、どのように会話を続ければいいでしょうか？\n\n## 前提から伝える\n\n「前提」と言うと少しぼんやりした表現になってしまいますが、**相手に適切に質問や確認を行うことで相手が知っているところから**話をすることで、相手に理解してもらうことができるかと思います。\n\n誰でも分かるようにと、毎回１から１０まで説明することもやってしまいがちですが、相手によっては、一度にたくさんのことを理解できなかったり、知っている話ばかりを聞いているうちに話に興味をなくして大事な部分を聞きこぼしたりするかもしれません。\n\n相手がいて、相手に伝わったことがゴールなので、「相手に確認して相手に合わせる」が基本なのかなと思います。\n\n## ところで伝えるべきことって？\n\n仕様の話であればプロジェクトメンバー全員が知るべきですが、「バイオハザード」はプロジェクトメンバー全員が知る必要はないです。\nリモートワークになって雑談が減った問題が話題になりますが、全く興味がないバイオハザードの話を延々として貴重な仕事時間を削ってしまっては本末転倒かもしれません。\n\nしかも、延々語っても **「言葉」でなく「心」で理解できた！** という状況にはならなそうです。\n\n『面白さを共有する』というのは、『相手が「言葉」でなく「心」で理解できた！状態になる』ことかと思います。\n\n昭和の世の中であれば、サラリーマンは野球を見てゴルフをやる、みたいな価値観が共有されていましたが多様性がうたわれる令和では、同じ世代の中でも趣味嗜好が多様化していて、ただ同じものを見て同じ様に感じることも少なく、なかなか『「心」で理解できた』状態にするのは難しいでしょう。\n\nこの記事も「飼育係の日誌」をリアルタイムで見ていた方の一部が「すげー分かるｗ」ってなってくれたり、何かのヒントにしてくれた方や読み物として楽しんでくれた方がいれば幸いですし、読み飛ばしちゃう人もいるのかなぁと思います。\n\nそんな難しい世の中で、若手もいずれ年を取って部下を持つと考えると「人ってみんな違うけど、お互いを尊重していこうね」みたいなざっくりした話をして、伝えることを楽しむことが大事なのかもしれません。\n\n## おわりに\n\nかゆい\nうま\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\nhttps://qiita.com/kaku3/items/422b5427024d29da6a6e\n\n## おまけ４（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ５（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ６（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-07-15T18:00:16+09:00",
    "group": null,
    "id": "4f6ca61cc077f3b8bb16",
    "likes_count": 4,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 2,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "コミュニケーション",
        "versions": []
      }
    ],
    "title": "技術者のためのコミュニケーション術：バイオハザードの飼育係の日誌から学ぶ",
    "updated_at": "2023-07-17T18:19:16+09:00",
    "url": "https://qiita.com/kaku3/items/4f6ca61cc077f3b8bb16",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1717,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:42\">はいみなさん納品してますか？</p>\n<p data-sourcepos=\"5:1-5:197\">ITエンジニアになると、お客様と契約して <del>魔法少女</del> 決められた期間内に決められた成果物を納品することによって対価を頂く仕事を行います。</p>\n<p data-sourcepos=\"7:1-7:331\">実際には請負契約を行った元請け会社のITエンジニアがその様な仕事をし、SESでかき集められたITエンジニアは技術および労働力を提供するという仕事をしていることかと思いますが、ここでは気づかなかったことにして先に進めることにします。</p>\n<p data-sourcepos=\"9:1-9:150\">この納品という行為は、学校の定期試験と似ている点や異なる点があると思うという記事を書こうと思います。</p>\n<h2 data-sourcepos=\"11:1-11:18\">\n<span id=\"似ている点\" class=\"fragment\"></span><a href=\"#%E4%BC%BC%E3%81%A6%E3%81%84%E3%82%8B%E7%82%B9\"><i class=\"fa fa-link\"></i></a>似ている点</h2>\n<h3 data-sourcepos=\"13:1-13:61\">\n<span id=\"分からない問題は後回しにして全体を流す\" class=\"fragment\"></span><a href=\"#%E5%88%86%E3%81%8B%E3%82%89%E3%81%AA%E3%81%84%E5%95%8F%E9%A1%8C%E3%81%AF%E5%BE%8C%E5%9B%9E%E3%81%97%E3%81%AB%E3%81%97%E3%81%A6%E5%85%A8%E4%BD%93%E3%82%92%E6%B5%81%E3%81%99\"><i class=\"fa fa-link\"></i></a>分からない問題は後回しにして全体を流す</h3>\n<p data-sourcepos=\"15:1-15:120\">定期試験で、頭から順に解答を記入していって分からない難問にぶち当たったとします。</p>\n<p data-sourcepos=\"17:1-17:45\">さて、あなたならどうしますか？</p>\n<p data-sourcepos=\"19:1-20:168\">仮にこの難問を解くことができても、60分の試験で30分かけてしまった場合、達成感はあるかもしれませんが試験全体としては点数が下がることが想像されます。<br>\n一方で、全体で見た時には、ある程度の時間で見切りをつけて先に進めた場合、高い点数を取れる可能性が上がりそうです。</p>\n<p data-sourcepos=\"22:1-23:520\">また、社会人の問題は学生の問題と異なり <strong>必ず明確な正解がある問題ばかりとは限らない</strong> 点にも注意が必要です。<br>\n加えて、学生の試験の様に60分や90分などという <strong>脳内で処理できる単位の制限時間</strong> ではなく、『プロジェクト全体で1ヶ月』といった <strong>WBSなどに書き出さないと処理できない単位の制限時間</strong> の中で「何をどのように見切るのか」は大変難しいですが、締め切りや問題の重要度などを考えて、<strong>『その問題に対して使ってもいい時間』</strong> というのを意識するのが良さそうに思えました。</p>\n<p data-sourcepos=\"25:1-25:235\">10分前に全ての問題に目を通すことができていれば、もう一度その問題に取り組む時間も手に入りますし、他に点数を稼げるところに10分を使うことができるかもしれません。</p>\n<p data-sourcepos=\"27:1-27:274\">一方で、とある仕様を1つを決めるのに 80人参加のWeb会議を4時間(80人 x 4h / 160h = 2人月)という話もありますので、簡単に見切ってはいけない問題についてはとことん話し合う必要もあるのかもしれません。</p>\n<p data-sourcepos=\"29:1-30:223\">実際には、後回しにしないで誰かに質問や相談をするのがいいと思います。<br>\nネットなどでは「5分~15分考えて分からなかったら質問しよう」という話がよくでてきますが、無限に考えて闇に葬ったりせずにさっさと聞くのがよいかと思います。</p>\n<h2 data-sourcepos=\"32:1-32:15\">\n<span id=\"異なる点\" class=\"fragment\"></span><a href=\"#%E7%95%B0%E3%81%AA%E3%82%8B%E7%82%B9\"><i class=\"fa fa-link\"></i></a>異なる点</h2>\n<h3 data-sourcepos=\"34:1-34:31\">\n<span id=\"試験の結果は誰が\" class=\"fragment\"></span><a href=\"#%E8%A9%A6%E9%A8%93%E3%81%AE%E7%B5%90%E6%9E%9C%E3%81%AF%E8%AA%B0%E3%81%8C\"><i class=\"fa fa-link\"></i></a>試験の結果は誰が？</h3>\n<p data-sourcepos=\"36:1-36:206\">学校の試験は点数が悪くても、最悪<strong>自分ひとりが留年する</strong>だけですが、会社の仕事は納品試験で赤点を出すと<strong>責任者ひとりがボコボコに</strong>されます。</p>\n<p data-sourcepos=\"38:1-38:187\">更に悪いことに、<strong>100点で納品できるのが当たり前スタートと思われている</strong>試験なので、100点で納品できても評価されないマゾゲーです。</p>\n<p data-sourcepos=\"40:1-40:120\">責任者になるには <strong>動じない心</strong> や <strong>自分で自分を褒める能力</strong> が必要かもしれません。</p>\n<h3 data-sourcepos=\"42:1-42:28\">\n<span id=\"完成しないと０点\" class=\"fragment\"></span><a href=\"#%E5%AE%8C%E6%88%90%E3%81%97%E3%81%AA%E3%81%84%E3%81%A8%EF%BC%90%E7%82%B9\"><i class=\"fa fa-link\"></i></a>完成しないと０点</h3>\n<p data-sourcepos=\"44:1-44:145\"><strong>「頭から順に解答していって、時間が足りずに未着手の問題がありましたが納品物とさせてください。」</strong></p>\n<p data-sourcepos=\"46:1-46:81\">これは、さすがに受け取れないです。お客様噴飯モノです。</p>\n<p data-sourcepos=\"48:1-48:219\">解決できない問題についてはお客様に報連相してスコープ外にするなどの交渉はできますが、「全く手を付けてない」ものについては交渉のしようがありません。</p>\n<p data-sourcepos=\"50:1-50:180\">SESで時給労働の仕事をしているとこのあたりを意識が退化しがちですが、納品してお客様にニッコリ検収してもらうまでが遠足です。</p>\n<h3 data-sourcepos=\"52:1-52:46\">\n<span id=\"細かくアウトプットを共有する\" class=\"fragment\"></span><a href=\"#%E7%B4%B0%E3%81%8B%E3%81%8F%E3%82%A2%E3%82%A6%E3%83%88%E3%83%97%E3%83%83%E3%83%88%E3%82%92%E5%85%B1%E6%9C%89%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>細かくアウトプットを共有する</h3>\n<p data-sourcepos=\"54:1-54:243\">要件定義から入るプロジェクトに関しては、そもそも何をすると100点かはプロジェクト開始時には決まっていません。ひょっとすると終了時点でも決まっていないかもしれません。</p>\n<p data-sourcepos=\"56:1-57:366\">多くのユーザーが使うプロダクトは、極論するとユーザーの数だけ要求があり、往々にして相反する要求が多く含まれます。それらを何らかのコンセプトに従ってを整えて、要件を固めていき、予算と期間を鑑みてスコープ内の要件を切り出すことになると思います。<br>\n<strong>「Twitterのクローンが作りたい」</strong> など前例があるものなら別ですが、相手の頭の中が見えない以上、全く世の中に存在しない新規のプロダクトについて、ましてやそれを利用するユーザーのイメージについて完全にイメージを共有することは不可能とも言えるでしょう。</p>\n<p data-sourcepos=\"59:1-61:141\">相手が考えているものとイメージが異ならないか、細かく作って細かく共有することで認識を揃えていくことができると思います。<br>\nこれをみなさんがよく知っている横文字で言うと<strong>アジャイル</strong>になると思います。<br>\nプロジェクト全体を見通せない時にはスクラップアンドビルドで進めるしかないのかなという整理です。</p>\n<p data-sourcepos=\"63:1-63:135\"><a href=\"https://camo.qiitausercontent.com/7086f093cb87e26c638dc748b47cf5cb95f8754a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f66666436623866302d653861662d316165632d363838312d6264663336323963366133312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fffd6b8f0-e8af-1aec-6881-bdf3629c6a31.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=6cf850b41b69b5da382cae5d6ad57bfa\" alt=\"サイクル.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/ffd6b8f0-e8af-1aec-6881-bdf3629c6a31.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fffd6b8f0-e8af-1aec-6881-bdf3629c6a31.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=9eb6fa3210c659580308898392b2dbab 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"65:1-65:207\">作り込んでしまったものを破棄するのはプロジェクトにもメンタルにもダメージがありますので小さく作って小さく回すというのが合理的だと思います。</p>\n<h2 data-sourcepos=\"67:1-67:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"69:1-70:177\">期間や予算の都合でイテレーションが足りず、品質が上がり切らない場合もあるかもしれませんが、納品できなければそこで試合終了です。<br>\n納品できれば、次スコープにてカイゼンする機会も得られるかもしれませんが、往々にして得られないこともあるかもしれません。</p>\n<p data-sourcepos=\"72:1-73:237\">一方で、納品に対して責任の一端を担い納品までこぎつけた時に入る経験値は、（納品責任を分有しない）一メンバーとしてのみ参加した時には絶対に入らないものかと思いますし、異次元の達成感もあるかもしれません。<br>\nAIは適当なことを言ってはくれますが、責任は取ってくれません。きちんと<strong>責任の取れる仕事の仕方</strong>を身につけていくというのは生存戦略としては良さそうに思えています。</p>\n<h2 data-sourcepos=\"75:1-75:45\">\n<span id=\"おまけ１パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ１（パイセン向け記事）</h2>\n<p data-sourcepos=\"77:1-77:50\"><iframe id=\"qiita-embed-content__598df4dba4711d086aa8c64f61a465a6\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__598df4dba4711d086aa8c64f61a465a6\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"79:1-79:50\"><iframe id=\"qiita-embed-content__440025087333238f1c92726f75794aa7\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__440025087333238f1c92726f75794aa7\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"81:1-81:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"83:1-83:50\"><iframe id=\"qiita-embed-content__b73edfab74f80a9b0a8be0de082a1d29\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b73edfab74f80a9b0a8be0de082a1d29\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"85:1-85:50\"><iframe id=\"qiita-embed-content__fdd91a650c1c1f99d6d136ec30c4022c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__fdd91a650c1c1f99d6d136ec30c4022c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"87:1-87:50\"><iframe id=\"qiita-embed-content__31a35252484975fd013abb10167396e6\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__31a35252484975fd013abb10167396e6\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"89:1-89:50\"><iframe id=\"qiita-embed-content__ed9bd781508aae8fe1fb7162489ae1b0\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ed9bd781508aae8fe1fb7162489ae1b0\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"91:1-91:48\">\n<span id=\"おまけ３は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ３（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"93:1-93:50\"><iframe id=\"qiita-embed-content__e178053410438e672cf8348360c058ee\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e178053410438e672cf8348360c058ee\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"95:1-95:50\"><iframe id=\"qiita-embed-content__dcda7dacfe95fe126e18e2cbb6c63e3b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__dcda7dacfe95fe126e18e2cbb6c63e3b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"97:1-97:46\">\n<span id=\"おまけ４営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"99:1-99:50\"><iframe id=\"qiita-embed-content__9a33e4e6c245cfdeb024da65f8e59227\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9a33e4e6c245cfdeb024da65f8e59227\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"101:1-101:50\"><iframe id=\"qiita-embed-content__674e753304c1bd72b021277ec6046157\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__674e753304c1bd72b021277ec6046157\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"103:1-103:66\">\n<span id=\"おまけ５エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ５（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"105:1-106:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"108:1-108:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\nはいみなさん納品してますか？\n\nITエンジニアになると、お客様と契約して ~~魔法少女~~ 決められた期間内に決められた成果物を納品することによって対価を頂く仕事を行います。\n\n実際には請負契約を行った元請け会社のITエンジニアがその様な仕事をし、SESでかき集められたITエンジニアは技術および労働力を提供するという仕事をしていることかと思いますが、ここでは気づかなかったことにして先に進めることにします。\n\nこの納品という行為は、学校の定期試験と似ている点や異なる点があると思うという記事を書こうと思います。\n\n## 似ている点\n\n### 分からない問題は後回しにして全体を流す\n\n定期試験で、頭から順に解答を記入していって分からない難問にぶち当たったとします。\n\nさて、あなたならどうしますか？\n\n仮にこの難問を解くことができても、60分の試験で30分かけてしまった場合、達成感はあるかもしれませんが試験全体としては点数が下がることが想像されます。\n一方で、全体で見た時には、ある程度の時間で見切りをつけて先に進めた場合、高い点数を取れる可能性が上がりそうです。\n\nまた、社会人の問題は学生の問題と異なり **必ず明確な正解がある問題ばかりとは限らない** 点にも注意が必要です。\n加えて、学生の試験の様に60分や90分などという **脳内で処理できる単位の制限時間** ではなく、『プロジェクト全体で1ヶ月』といった **WBSなどに書き出さないと処理できない単位の制限時間** の中で「何をどのように見切るのか」は大変難しいですが、締め切りや問題の重要度などを考えて、**『その問題に対して使ってもいい時間』** というのを意識するのが良さそうに思えました。\n\n10分前に全ての問題に目を通すことができていれば、もう一度その問題に取り組む時間も手に入りますし、他に点数を稼げるところに10分を使うことができるかもしれません。\n\n一方で、とある仕様を1つを決めるのに 80人参加のWeb会議を4時間(80人 x 4h / 160h = 2人月)という話もありますので、簡単に見切ってはいけない問題についてはとことん話し合う必要もあるのかもしれません。\n\n実際には、後回しにしないで誰かに質問や相談をするのがいいと思います。\nネットなどでは「5分~15分考えて分からなかったら質問しよう」という話がよくでてきますが、無限に考えて闇に葬ったりせずにさっさと聞くのがよいかと思います。\n\n## 異なる点\n\n### 試験の結果は誰が？\n\n学校の試験は点数が悪くても、最悪**自分ひとりが留年する**だけですが、会社の仕事は納品試験で赤点を出すと**責任者ひとりがボコボコに**されます。\n\n更に悪いことに、**100点で納品できるのが当たり前スタートと思われている**試験なので、100点で納品できても評価されないマゾゲーです。\n\n責任者になるには **動じない心** や **自分で自分を褒める能力** が必要かもしれません。\n\n### 完成しないと０点\n\n**「頭から順に解答していって、時間が足りずに未着手の問題がありましたが納品物とさせてください。」**\n\nこれは、さすがに受け取れないです。お客様噴飯モノです。\n\n解決できない問題についてはお客様に報連相してスコープ外にするなどの交渉はできますが、「全く手を付けてない」ものについては交渉のしようがありません。\n\nSESで時給労働の仕事をしているとこのあたりを意識が退化しがちですが、納品してお客様にニッコリ検収してもらうまでが遠足です。\n\n### 細かくアウトプットを共有する\n\n要件定義から入るプロジェクトに関しては、そもそも何をすると100点かはプロジェクト開始時には決まっていません。ひょっとすると終了時点でも決まっていないかもしれません。\n\n多くのユーザーが使うプロダクトは、極論するとユーザーの数だけ要求があり、往々にして相反する要求が多く含まれます。それらを何らかのコンセプトに従ってを整えて、要件を固めていき、予算と期間を鑑みてスコープ内の要件を切り出すことになると思います。\n**「Twitterのクローンが作りたい」** など前例があるものなら別ですが、相手の頭の中が見えない以上、全く世の中に存在しない新規のプロダクトについて、ましてやそれを利用するユーザーのイメージについて完全にイメージを共有することは不可能とも言えるでしょう。\n\n相手が考えているものとイメージが異ならないか、細かく作って細かく共有することで認識を揃えていくことができると思います。\nこれをみなさんがよく知っている横文字で言うと**アジャイル**になると思います。\nプロジェクト全体を見通せない時にはスクラップアンドビルドで進めるしかないのかなという整理です。\n\n![サイクル.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/ffd6b8f0-e8af-1aec-6881-bdf3629c6a31.png)\n\n作り込んでしまったものを破棄するのはプロジェクトにもメンタルにもダメージがありますので小さく作って小さく回すというのが合理的だと思います。\n\n## おわりに\n\n期間や予算の都合でイテレーションが足りず、品質が上がり切らない場合もあるかもしれませんが、納品できなければそこで試合終了です。\n納品できれば、次スコープにてカイゼンする機会も得られるかもしれませんが、往々にして得られないこともあるかもしれません。\n\n一方で、納品に対して責任の一端を担い納品までこぎつけた時に入る経験値は、（納品責任を分有しない）一メンバーとしてのみ参加した時には絶対に入らないものかと思いますし、異次元の達成感もあるかもしれません。\nAIは適当なことを言ってはくれますが、責任は取ってくれません。きちんと**責任の取れる仕事の仕方**を身につけていくというのは生存戦略としては良さそうに思えています。\n\n## おまけ１（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ４（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ５（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 5,
    "created_at": "2023-07-08T15:52:46+09:00",
    "group": null,
    "id": "422b5427024d29da6a6e",
    "likes_count": 64,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 51,
    "tags": [
      {
        "name": "アジャイル",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      }
    ],
    "title": "納品という名のエンジニア定期試験",
    "updated_at": "2023-09-03T22:30:18+09:00",
    "url": "https://qiita.com/kaku3/items/422b5427024d29da6a6e",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 23303,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:21\">\n<span id=\"共有地の悲劇\" class=\"fragment\"></span><a href=\"#%E5%85%B1%E6%9C%89%E5%9C%B0%E3%81%AE%E6%82%B2%E5%8A%87\"><i class=\"fa fa-link\"></i></a>共有地の悲劇</h2>\n<p data-sourcepos=\"3:1-3:111\">昔で言うところのクラサバ開発、今で言うところの外部API連携開発についてです。</p>\n<p data-sourcepos=\"5:1-5:213\">クライアント開発とサーバ（外部API開発）は、制作内容が大きく異なり必要な専門知識や得意分野が異なるため、別の会社で行われることが多いと思います。</p>\n<p data-sourcepos=\"7:1-7:256\">ここで、クライアント側は<strong>サーバー側へ問い合わせてその応答を受けて処理を継続する</strong>ことが多いと思いますが、サーバー側が存在しなければ開発ができない、だと、困ってしまいます。</p>\n<p data-sourcepos=\"9:1-9:93\">そこでサーバーの応答をエミュレートするスタブが必要になります。</p>\n<p data-sourcepos=\"11:1-11:135\"><a href=\"https://camo.qiitausercontent.com/d04737bf54c6b7f630a850d51ffd9d657374cabd/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f62303730643965652d363731332d636363382d656338382d6161313139393866373138372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb070d9ee-6713-ccc8-ec88-aa11998f7187.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=a3f98ab79c114b3a51ea83f4c5e48a5e\" alt=\"クラサバ.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b070d9ee-6713-ccc8-ec88-aa11998f7187.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb070d9ee-6713-ccc8-ec88-aa11998f7187.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=382dcc6e21b30d547f699a2228431022 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"14:1-14:86\">参照：<a href=\"https://ja.wikipedia.org/wiki/%E3%82%B9%E3%82%BF%E3%83%96\" rel=\"nofollow noopener\" target=\"_blank\">wiki: スタブ</a></p>\n<blockquote data-sourcepos=\"15:1-15:777\">\n<p data-sourcepos=\"15:3-15:777\">スタブ（stub）とは、コンピュータプログラムのモジュールをテストする際、そのモジュールが呼び出す下位モジュールの代わりに用いる代用品のこと[1]。下位モジュールが未完成でも代わりにスタブを用いることでテストが可能になる。逆に上位モジュールの代わりに用いる代用品をドライバ（ソフトウェアの場合）またはコントローラ（ハードウェアの場合）と呼ぶ。ただし、仮のモジュールではなく正規のモジュールについてもドライバまたはコントローラと呼ばれることがあるので、区別するために「テストドライバ」や「サンプルドライバ」などと呼ぶことも多い。</p>\n</blockquote>\n<p data-sourcepos=\"17:1-17:271\">しかし、<strong>納品物として見ると必要のないもので</strong>、なぜか見積もりに含められず、スタブなしで無理やり開発して、いきなり本物に繋げて疎通確認してそこから頑張るといったケースが散見されます。</p>\n<p data-sourcepos=\"19:1-19:327\">また、外部連携のAPIを開発している側は、カジュアルにAPIの仕様を変えたくなることがあります。その様な時にAPIの仕様書の更新や連携が漏れると、クライアント側が動かなくなりますが、それに気づくのは大分時間が経ってからとなります。</p>\n<p data-sourcepos=\"21:1-21:184\">この様な問題に長く悩まされてきましたが、もしも、<strong>スタブの作成がとても簡単で、API仕様書が自動で生成されたら</strong>どうでしょうか？</p>\n<p data-sourcepos=\"23:1-23:172\">Python の FastAPI を用いるとおよそこの辺りの問題を解消できそうに思えましたので、導入方法などを紹介してみたいと思います。</p>\n<h2 data-sourcepos=\"25:1-25:9\">\n<span id=\"構成\" class=\"fragment\"></span><a href=\"#%E6%A7%8B%E6%88%90\"><i class=\"fa fa-link\"></i></a>構成</h2>\n<p data-sourcepos=\"27:1-27:198\">VS Code に Python の開発環境と、API試験用の Thunder Client をインストールし、Python の FastAPI でスタブコードを作成して確認するという構成となります。</p>\n<p data-sourcepos=\"29:1-29:129\"><a href=\"https://camo.qiitausercontent.com/ba75d8ae41c0782db7899064d25351f785d6b641/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f39653266323966632d336338352d383063652d646465392d3562663061343634663261352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F9e2f29fc-3c85-80ce-dde9-5bf0a464f2a5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=8ee1e26ca7070b386bbd3ee1eea0188e\" alt=\"構成.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/9e2f29fc-3c85-80ce-dde9-5bf0a464f2a5.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F9e2f29fc-3c85-80ce-dde9-5bf0a464f2a5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=a532e7d1d5067a1f30efd44b616dffab 1x\" loading=\"lazy\"></a></p>\n<h2 data-sourcepos=\"31:1-31:9\">\n<span id=\"準備\" class=\"fragment\"></span><a href=\"#%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>準備</h2>\n<p data-sourcepos=\"33:1-33:57\">環境に以下をインストールしてください。</p>\n<ul data-sourcepos=\"35:1-45:0\">\n<li data-sourcepos=\"35:1-36:45\">\n<a href=\"https://code.visualstudio.com/download\" rel=\"nofollow noopener\" target=\"_blank\">VS Code</a><br>\n言わずとしれたコードエディター</li>\n<li data-sourcepos=\"37:1-42:109\">VS Code Extension\n<ul data-sourcepos=\"38:5-42:109\">\n<li data-sourcepos=\"38:5-39:139\">\n<a href=\"https://marketplace.visualstudio.com/items?itemName=ms-python.python\" rel=\"nofollow noopener\" target=\"_blank\">Python</a><br>\nPython開発用エクステンション。昔は環境作るのが大変でしたが、今はエクステンションで一発です。</li>\n<li data-sourcepos=\"40:5-42:109\">\n<a href=\"https://marketplace.visualstudio.com/items?itemName=rangav.vscode-thunder-client\" rel=\"nofollow noopener\" target=\"_blank\">Thunder Client</a><br>\nAPIリクエストを投げられるエクステンション。リクエスト内容を json で export でき、共有可能。<br>\n<a href=\"https://www.postman.com/\" rel=\"nofollow noopener\" target=\"_blank\">Postman</a>と似た使用感だが、VS Code から使えるので超便利です。</li>\n</ul>\n</li>\n<li data-sourcepos=\"43:1-45:0\">\n<a href=\"https://www.python.org/downloads/windows/\" rel=\"nofollow noopener\" target=\"_blank\">Python 3.9</a>\n<ul data-sourcepos=\"44:5-45:0\">\n<li data-sourcepos=\"44:5-45:0\">最新版でもよいですが、依存モジュールが動作しないなどあるので…少し古いものにしています。</li>\n</ul>\n</li>\n</ul>\n<h2 data-sourcepos=\"46:1-46:18\">\n<span id=\"スタブ開発\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%82%BF%E3%83%96%E9%96%8B%E7%99%BA\"><i class=\"fa fa-link\"></i></a>スタブ開発</h2>\n<p data-sourcepos=\"48:1-48:108\">スタブ開発用に任意のフォルダを VS Code で開いて以下手順を実行してください。</p>\n<h3 data-sourcepos=\"50:1-50:26\">\n<span id=\"python-環境の作成\" class=\"fragment\"></span><a href=\"#python-%E7%92%B0%E5%A2%83%E3%81%AE%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>Python 環境の作成</h3>\n<p data-sourcepos=\"52:1-53:46\">VS Code でコマンドパレットで 環境の作成を選択し、Venv、Python 3.9.x を選択。<br>\n※Python のバージョンは任意です。</p>\n<p data-sourcepos=\"55:1-57:152\"><a href=\"https://camo.qiitausercontent.com/3e365a5b0e588e9baf84c25e1ca4c8f2f4562d33/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f30313834316363642d303962642d383539652d336634372d3637363130363738626666302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F01841ccd-09bd-859e-3f47-67610678bff0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=8cd00748c456041b58dbd80f90bca4ac\" alt=\"000_Python環境の作成_00.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/01841ccd-09bd-859e-3f47-67610678bff0.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F01841ccd-09bd-859e-3f47-67610678bff0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=a30be2236afa09aeda82ecc8613cd5d2 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/a6dcdc33f1977452c80b75b1c24287e933c98a6d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f66666637366662332d353837332d653233372d356136332d3766396336323036313733382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ffff76fb3-5873-e237-5a63-7f9c62061738.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2411bbf7b4c5b7191a621eca119622dd\" alt=\"000_Python環境の作成_01_Venv.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/fff76fb3-5873-e237-5a63-7f9c62061738.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ffff76fb3-5873-e237-5a63-7f9c62061738.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=4923e0d7e06c701f7a82488358030ba9 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/e96f218bc4552f6afd31eede82a4070ce0fdf494/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f61383834326333632d393461662d376135312d646266632d3836306132656536666537392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa8842c3c-94af-7a51-dbfc-860a2ee6fe79.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=31c467ae389d2bc406f4ef92940a788d\" alt=\"000_Python環境の作成_02_version.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a8842c3c-94af-7a51-dbfc-860a2ee6fe79.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa8842c3c-94af-7a51-dbfc-860a2ee6fe79.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ce12d5d3d69e7915e786a0bb049a2cea 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"59:1-60:185\">開いているフォルダに、<code>.venv</code> というフォルダが生成されたら環境の作成は完了です。<br>\n上手く動作しない、Python のバージョンを切り替えたいなどの時は、<code>.venv</code> フォルダを削除して再度 Python 環境の作成を実行してください。</p>\n<h3 data-sourcepos=\"62:1-62:35\">\n<span id=\"python-ターミナルを作成\" class=\"fragment\"></span><a href=\"#python-%E3%82%BF%E3%83%BC%E3%83%9F%E3%83%8A%E3%83%AB%E3%82%92%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>Python ターミナルを作成</h3>\n<p data-sourcepos=\"64:1-66:103\">「Python 環境の作成」で作成した <code>.venv</code> を利用する VS Code のターミナルを作成します。<br>\n使い勝手は通常のターミナルと全く同じですが、<code>.venv</code> の設定が利用されているところだけが異なります。<br>\n以後、Python に関するコマンドはこのターミナルで実行することになります。</p>\n<p data-sourcepos=\"68:1-68:144\"><a href=\"https://camo.qiitausercontent.com/a1ab0607580d81c93147caa274ff87bc4a5f2664/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64316366653235322d383665392d663433372d356234322d6632316363643230613432642e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fd1cfe252-86e9-f437-5b42-f21ccd20a42d.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=c0fb52958c8f3ec3704429098518125f\" alt=\"010_ターミナルを作成.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d1cfe252-86e9-f437-5b42-f21ccd20a42d.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fd1cfe252-86e9-f437-5b42-f21ccd20a42d.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=13fdf593099b1d6299b551d5a3f113ea 1x\" loading=\"lazy\"></a></p>\n<h3 data-sourcepos=\"70:1-70:40\">\n<span id=\"モジュールをインストール\" class=\"fragment\"></span><a href=\"#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>モジュールをインストール</h3>\n<p data-sourcepos=\"72:1-73:141\">Python ターミナルで以下実行します。<br>\n※パラメータが複雑なAPIを定義する場合は追加で対応するモジュールのインストールが必要になります。</p>\n<div class=\"code-frame\" data-lang=\"cmd\" data-sourcepos=\"75:1-78:3\"><div class=\"highlight\"><pre><code>pip install fastapi\npip install uvicorn\n</code></pre></div></div>\n<h3 data-sourcepos=\"80:1-80:21\">\n<span id=\"mainpy-を書く\" class=\"fragment\"></span><a href=\"#mainpy-%E3%82%92%E6%9B%B8%E3%81%8F\"><i class=\"fa fa-link\"></i></a>main.py を書く</h3>\n<p data-sourcepos=\"82:1-82:97\"><code>main.py</code> というファイルを作成し、以下のコードをコピペしてください。</p>\n<div class=\"code-frame\" data-lang=\"py\" data-sourcepos=\"84:1-110:3\"><div class=\"highlight\"><pre><code><span class=\"kn\">from</span> <span class=\"n\">fastapi</span> <span class=\"kn\">import</span> <span class=\"n\">FastAPI</span><span class=\"p\">,</span> <span class=\"n\">Query</span>\n<span class=\"kn\">from</span> <span class=\"n\">fastapi.openapi.docs</span> <span class=\"kn\">import</span> <span class=\"n\">get_redoc_html</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"nc\">FastAPI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@app.get</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">/test</span><span class=\"sh\">\"</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">(</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"nc\">Query</span><span class=\"p\">(...,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"sh\">\"</span><span class=\"s\">ユーザーID</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">example</span><span class=\"o\">=</span><span class=\"sh\">\"</span><span class=\"s\">12345</span><span class=\"sh\">\"</span><span class=\"p\">),</span>    <span class=\"c1\"># id\n</span>    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"nc\">Query</span><span class=\"p\">(...,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"sh\">\"</span><span class=\"s\">ユーザー名</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">example</span><span class=\"o\">=</span><span class=\"sh\">\"</span><span class=\"s\">Taro</span><span class=\"sh\">\"</span><span class=\"p\">)</span>   <span class=\"c1\"># 名前\n</span><span class=\"p\">):</span>\n    <span class=\"sh\">\"\"\"</span><span class=\"s\">\n    関数コメントは、ReDoc に表示される。md 記法が利用可能。\n    1行改行は、改行として認識されない。\n\n    改行したい時は、&lt;br&gt;brタグを利用するか、2行改行する。\n    </span><span class=\"sh\">\"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span> <span class=\"sh\">\"</span><span class=\"s\">message</span><span class=\"sh\">\"</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"sh\">'</span><span class=\"s\">Hello </span><span class=\"si\">{</span><span class=\"nb\">id</span><span class=\"si\">}</span><span class=\"s\">:</span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s\">!</span><span class=\"sh\">'</span> <span class=\"p\">}</span>\n\n<span class=\"nd\">@app.get</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">/redoc</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">include_in_schema</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">redoc_html</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"nf\">get_redoc_html</span><span class=\"p\">(</span>\n        <span class=\"n\">openapi_url</span><span class=\"o\">=</span><span class=\"sh\">\"</span><span class=\"s\">/openapi.json</span><span class=\"sh\">\"</span><span class=\"p\">,</span>\n        <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">title</span> <span class=\"o\">+</span> <span class=\"sh\">\"</span><span class=\"s\"> - ReDoc</span><span class=\"sh\">\"</span><span class=\"p\">,</span>\n        <span class=\"n\">redoc_js_url</span><span class=\"o\">=</span><span class=\"sh\">\"</span><span class=\"s\">/static/redoc.standalone.js</span><span class=\"sh\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n</code></pre></div></div>\n<p data-sourcepos=\"112:1-112:205\"><code>id</code>,<code>name</code> を引数とし、<code>Hello {id}:{name}!</code> を返却する test という api を持ち、その API仕様書を出力するスタブサーバの全コードです。<strong>とても短いですね。</strong></p>\n<h2 data-sourcepos=\"114:1-114:18\">\n<span id=\"スタブ実行\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%82%BF%E3%83%96%E5%AE%9F%E8%A1%8C\"><i class=\"fa fa-link\"></i></a>スタブ実行</h2>\n<p data-sourcepos=\"116:1-116:58\">Python ターミナルで以下実行してください。</p>\n<div class=\"code-frame\" data-lang=\"cmd\" data-sourcepos=\"118:1-121:3\"><div class=\"highlight\"><pre><code># --reload : ファイル更新時に自動リロード\nuvicorn main:app --reload\n</code></pre></div></div>\n<p data-sourcepos=\"123:1-123:138\">ブラウザで <code>http://localhost:8000/test?id=12345&amp;name=Tanaka</code> にアクセスできたらスタブサーバの起動は完了です。</p>\n<h2 data-sourcepos=\"125:1-125:16\">\n<span id=\"api-仕様書\" class=\"fragment\"></span><a href=\"#api-%E4%BB%95%E6%A7%98%E6%9B%B8\"><i class=\"fa fa-link\"></i></a>API 仕様書</h2>\n<p data-sourcepos=\"127:1-128:51\"><code>http://localhost:8000/redoc</code> にアクセスしてください。<br>\n以下のようなページが表示されます。</p>\n<p data-sourcepos=\"130:1-131:125\"><strong>(図) ReDoc で出力されたAPI仕様書</strong><br>\n<a href=\"https://camo.qiitausercontent.com/72a8eab858b50992ec448e2ef00c2d012ae65d79/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63643962393837332d666531372d313564382d383764322d3131386638336332383663352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fcd9b9873-fe17-15d8-87d2-118f83c286c5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=5f7bfc53623cc40f3fd929879601ea40\" alt=\"100_redoc.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/cd9b9873-fe17-15d8-87d2-118f83c286c5.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fcd9b9873-fe17-15d8-87d2-118f83c286c5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=596c23d8edeb86431893d06b4c512e4a 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"133:1-133:156\">このレベルの仕様書を手書きしてメンテナンスするのはかなりコストがかかると思いますが、自動で生成されます。</p>\n<h2 data-sourcepos=\"135:1-135:36\">\n<span id=\"thunder-client-での疎通試験\" class=\"fragment\"></span><a href=\"#thunder-client-%E3%81%A7%E3%81%AE%E7%96%8E%E9%80%9A%E8%A9%A6%E9%A8%93\"><i class=\"fa fa-link\"></i></a>Thunder Client での疎通試験</h2>\n<p data-sourcepos=\"137:1-137:220\">Get メソッドはブラウザからも簡単に確認が可能でしたが、Post メソッドやファイル添付であったり、OAuth や Basic 認証等の試験はブラウザからは簡単にできません。</p>\n<p data-sourcepos=\"139:1-139:88\">Thunder Client であればそれらの試験もVS Code上から簡単にできます。</p>\n<p data-sourcepos=\"141:1-142:134\"><strong>(図)左 : main.py、右 : Thunder Client、下 : Python ターミナル</strong><br>\n<a href=\"https://camo.qiitausercontent.com/ce8119548b292812c1b7e4a58e2e27d3f5658901/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36643435393730312d636364392d623532632d643266312d6536376630303664666530382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6d459701-ccd9-b52c-d2f1-e67f006dfe08.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=526ede48258294694127e7032372dad1\" alt=\"110_thunder_client.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6d459701-ccd9-b52c-d2f1-e67f006dfe08.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6d459701-ccd9-b52c-d2f1-e67f006dfe08.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=9f508c42387e376f9fbb4a387473a6a2 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"144:1-144:188\">実行コマンドは export でき、「このパラメータでは動作した」「このパラメータでは動作しなかった」といったことも簡単に共有できます。</p>\n<h2 data-sourcepos=\"146:1-146:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"148:1-149:125\">10分程度で、スタブサーバ、API仕様書、疎通確認結果を作成できることが分かりました。<br>\nPython や FastAPI がよく分からなくても、ChatGPT先生に聞きながらであれば、さくっと書けます。</p>\n<p data-sourcepos=\"151:1-151:192\">外部連携、API仕様が共有地であることは変わらないですが、これらのファイルを受け渡しすることでより円滑な開発ができるかもしれません。</p>\n<p data-sourcepos=\"153:1-154:279\">仕様書をいくら読んでも分からない事も、実際に動かしてみれる環境があれば動かして確認もできます。<br>\nこのような、従来であればAPI仕様書の不備にヘイトが溜まったり問い合わせのコミュニケーションコストが発生したところを、未然に防げる仕組みになりうる、ということにはとても価値があると思います。</p>\n<p data-sourcepos=\"156:1-156:227\">また、FastAPI は openapi の yaml も出力しています。それを用いてクライアントやサーバのコードを生成することもできますのでそれらも活用できるとよいかもしれません。</p>\n<p data-sourcepos=\"158:1-158:95\">(参照)<a href=\"https://openapi-generator.tech/docs/generators/\" rel=\"nofollow noopener\" target=\"_blank\">Open API Generator : Generators List</a></p>\n<h2 data-sourcepos=\"160:1-160:15\">\n<span id=\"おまけ０\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%90\"><i class=\"fa fa-link\"></i></a>おまけ０</h2>\n<p data-sourcepos=\"162:1-162:50\"><iframe id=\"qiita-embed-content__91b5881d4ad9045cf6d6b54c2dda5248\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__91b5881d4ad9045cf6d6b54c2dda5248\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F75d98759609820595bc6\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"164:1-164:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"166:1-166:50\"><iframe id=\"qiita-embed-content__e40c621d4de091539cc185c2679128a4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e40c621d4de091539cc185c2679128a4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"168:1-168:50\"><iframe id=\"qiita-embed-content__6de68c69aa468718b32bdfeae7dff6b8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6de68c69aa468718b32bdfeae7dff6b8\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"170:1-170:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"172:1-172:50\"><iframe id=\"qiita-embed-content__8170ca8797c5707b9a4d63742456c97d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__8170ca8797c5707b9a4d63742456c97d\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"174:1-174:50\"><iframe id=\"qiita-embed-content__3fde2556e64351b503b04f71ecdab0de\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__3fde2556e64351b503b04f71ecdab0de\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"176:1-176:50\"><iframe id=\"qiita-embed-content__e9506973912cfe24ddecb8fd635ee01a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e9506973912cfe24ddecb8fd635ee01a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"178:1-178:50\"><iframe id=\"qiita-embed-content__b752dbb01303bc802df543ca5ca7dc5c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b752dbb01303bc802df543ca5ca7dc5c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"180:1-180:48\">\n<span id=\"おまけ３は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ３（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"182:1-182:50\"><iframe id=\"qiita-embed-content__16971ed2182028c7563373bfb53cdd8f\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__16971ed2182028c7563373bfb53cdd8f\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"184:1-184:50\"><iframe id=\"qiita-embed-content__1b27f3b11ec062f090c4771b3e2834a5\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1b27f3b11ec062f090c4771b3e2834a5\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"186:1-186:46\">\n<span id=\"おまけ４営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"188:1-188:50\"><iframe id=\"qiita-embed-content__c93a2ea4357b23a357df57037f0a4731\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c93a2ea4357b23a357df57037f0a4731\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"190:1-190:50\"><iframe id=\"qiita-embed-content__8a0305c693fa5bc5ebf2ea3e6888cd3f\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__8a0305c693fa5bc5ebf2ea3e6888cd3f\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"192:1-192:66\">\n<span id=\"おまけ５エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ５（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"194:1-195:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"197:1-197:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## 共有地の悲劇\n\n昔で言うところのクラサバ開発、今で言うところの外部API連携開発についてです。\n\nクライアント開発とサーバ（外部API開発）は、制作内容が大きく異なり必要な専門知識や得意分野が異なるため、別の会社で行われることが多いと思います。\n\nここで、クライアント側は**サーバー側へ問い合わせてその応答を受けて処理を継続する**ことが多いと思いますが、サーバー側が存在しなければ開発ができない、だと、困ってしまいます。\n\nそこでサーバーの応答をエミュレートするスタブが必要になります。\n\n![クラサバ.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b070d9ee-6713-ccc8-ec88-aa11998f7187.png)\n\n\n参照：[wiki: スタブ](https://ja.wikipedia.org/wiki/%E3%82%B9%E3%82%BF%E3%83%96) \n> スタブ（stub）とは、コンピュータプログラムのモジュールをテストする際、そのモジュールが呼び出す下位モジュールの代わりに用いる代用品のこと[1]。下位モジュールが未完成でも代わりにスタブを用いることでテストが可能になる。逆に上位モジュールの代わりに用いる代用品をドライバ（ソフトウェアの場合）またはコントローラ（ハードウェアの場合）と呼ぶ。ただし、仮のモジュールではなく正規のモジュールについてもドライバまたはコントローラと呼ばれることがあるので、区別するために「テストドライバ」や「サンプルドライバ」などと呼ぶことも多い。\n\nしかし、**納品物として見ると必要のないもので**、なぜか見積もりに含められず、スタブなしで無理やり開発して、いきなり本物に繋げて疎通確認してそこから頑張るといったケースが散見されます。\n\nまた、外部連携のAPIを開発している側は、カジュアルにAPIの仕様を変えたくなることがあります。その様な時にAPIの仕様書の更新や連携が漏れると、クライアント側が動かなくなりますが、それに気づくのは大分時間が経ってからとなります。\n\nこの様な問題に長く悩まされてきましたが、もしも、**スタブの作成がとても簡単で、API仕様書が自動で生成されたら**どうでしょうか？\n\nPython の FastAPI を用いるとおよそこの辺りの問題を解消できそうに思えましたので、導入方法などを紹介してみたいと思います。\n\n## 構成\n\nVS Code に Python の開発環境と、API試験用の Thunder Client をインストールし、Python の FastAPI でスタブコードを作成して確認するという構成となります。\n\n![構成.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/9e2f29fc-3c85-80ce-dde9-5bf0a464f2a5.png)\n\n## 準備\n\n環境に以下をインストールしてください。\n\n- [VS Code](https://code.visualstudio.com/download)\n言わずとしれたコードエディター\n- VS Code Extension\n    - [Python](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\n    Python開発用エクステンション。昔は環境作るのが大変でしたが、今はエクステンションで一発です。\n    - [Thunder Client](https://marketplace.visualstudio.com/items?itemName=rangav.vscode-thunder-client)\n    APIリクエストを投げられるエクステンション。リクエスト内容を json で export でき、共有可能。\n[Postman](https://www.postman.com/)と似た使用感だが、VS Code から使えるので超便利です。\n- [Python 3.9](https://www.python.org/downloads/windows/)\n    - 最新版でもよいですが、依存モジュールが動作しないなどあるので…少し古いものにしています。\n\n## スタブ開発\n\nスタブ開発用に任意のフォルダを VS Code で開いて以下手順を実行してください。\n\n### Python 環境の作成\n\nVS Code でコマンドパレットで 環境の作成を選択し、Venv、Python 3.9.x を選択。\n※Python のバージョンは任意です。\n\n![000_Python環境の作成_00.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/01841ccd-09bd-859e-3f47-67610678bff0.png)\n![000_Python環境の作成_01_Venv.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/fff76fb3-5873-e237-5a63-7f9c62061738.png)\n![000_Python環境の作成_02_version.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a8842c3c-94af-7a51-dbfc-860a2ee6fe79.png)\n\n開いているフォルダに、`.venv` というフォルダが生成されたら環境の作成は完了です。\n上手く動作しない、Python のバージョンを切り替えたいなどの時は、`.venv` フォルダを削除して再度 Python 環境の作成を実行してください。\n\n### Python ターミナルを作成\n\n「Python 環境の作成」で作成した `.venv` を利用する VS Code のターミナルを作成します。\n使い勝手は通常のターミナルと全く同じですが、`.venv` の設定が利用されているところだけが異なります。\n以後、Python に関するコマンドはこのターミナルで実行することになります。\n\n![010_ターミナルを作成.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d1cfe252-86e9-f437-5b42-f21ccd20a42d.png)\n\n### モジュールをインストール\n\nPython ターミナルで以下実行します。\n※パラメータが複雑なAPIを定義する場合は追加で対応するモジュールのインストールが必要になります。\n\n```cmd\npip install fastapi\npip install uvicorn\n```\n\n### main.py を書く\n\n`main.py` というファイルを作成し、以下のコードをコピペしてください。\n\n```py\nfrom fastapi import FastAPI, Query\nfrom fastapi.openapi.docs import get_redoc_html\n\napp = FastAPI()\n\n@app.get(\"/test\")\nasync def test(\n    id: int = Query(..., description=\"ユーザーID\", example=\"12345\"),    # id\n    name: str = Query(..., description=\"ユーザー名\", example=\"Taro\")   # 名前\n):\n    \"\"\"\n    関数コメントは、ReDoc に表示される。md 記法が利用可能。\n    1行改行は、改行として認識されない。\n\n    改行したい時は、<br>brタグを利用するか、2行改行する。\n    \"\"\"\n    return { \"message\": f'Hello {id}:{name}!' }\n\n@app.get(\"/redoc\", include_in_schema=False)\nasync def redoc_html():\n    return get_redoc_html(\n        openapi_url=\"/openapi.json\",\n        title=app.title + \" - ReDoc\",\n        redoc_js_url=\"/static/redoc.standalone.js\",\n    )\n```\n\n`id`,`name` を引数とし、`Hello {id}:{name}!` を返却する test という api を持ち、その API仕様書を出力するスタブサーバの全コードです。**とても短いですね。**\n\n## スタブ実行\n\nPython ターミナルで以下実行してください。\n\n```cmd\n# --reload : ファイル更新時に自動リロード\nuvicorn main:app --reload\n```\n\nブラウザで `http://localhost:8000/test?id=12345&name=Tanaka` にアクセスできたらスタブサーバの起動は完了です。\n\n## API 仕様書\n\n`http://localhost:8000/redoc` にアクセスしてください。\n以下のようなページが表示されます。\n\n**(図) ReDoc で出力されたAPI仕様書**\n![100_redoc.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/cd9b9873-fe17-15d8-87d2-118f83c286c5.png)\n\nこのレベルの仕様書を手書きしてメンテナンスするのはかなりコストがかかると思いますが、自動で生成されます。\n\n## Thunder Client での疎通試験\n\nGet メソッドはブラウザからも簡単に確認が可能でしたが、Post メソッドやファイル添付であったり、OAuth や Basic 認証等の試験はブラウザからは簡単にできません。\n\nThunder Client であればそれらの試験もVS Code上から簡単にできます。\n\n**(図)左 : main.py、右 : Thunder Client、下 : Python ターミナル**\n![110_thunder_client.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6d459701-ccd9-b52c-d2f1-e67f006dfe08.png)\n\n実行コマンドは export でき、「このパラメータでは動作した」「このパラメータでは動作しなかった」といったことも簡単に共有できます。\n\n## おわりに\n\n10分程度で、スタブサーバ、API仕様書、疎通確認結果を作成できることが分かりました。\nPython や FastAPI がよく分からなくても、ChatGPT先生に聞きながらであれば、さくっと書けます。\n\n外部連携、API仕様が共有地であることは変わらないですが、これらのファイルを受け渡しすることでより円滑な開発ができるかもしれません。\n\n仕様書をいくら読んでも分からない事も、実際に動かしてみれる環境があれば動かして確認もできます。\nこのような、従来であればAPI仕様書の不備にヘイトが溜まったり問い合わせのコミュニケーションコストが発生したところを、未然に防げる仕組みになりうる、ということにはとても価値があると思います。\n\nまた、FastAPI は openapi の yaml も出力しています。それを用いてクライアントやサーバのコードを生成することもできますのでそれらも活用できるとよいかもしれません。\n\n(参照)[Open API Generator : Generators List](https://openapi-generator.tech/docs/generators/)\n\n## おまけ０\n\nhttps://qiita.com/kaku3/items/75d98759609820595bc6\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ４（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ５（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-06-24T16:53:21+09:00",
    "group": null,
    "id": "ef86fd099359b440aa28",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 2,
    "tags": [
      {
        "name": "Python",
        "versions": []
      },
      {
        "name": "API",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "仕様書",
        "versions": []
      },
      {
        "name": "FastAPI",
        "versions": []
      }
    ],
    "title": "もういがみ合わない。Thunder Client と FastAPIで10分で作るスタブとAPI仕様書",
    "updated_at": "2023-06-24T21:16:25+09:00",
    "url": "https://qiita.com/kaku3/items/ef86fd099359b440aa28",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2988,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:44\">ITエンジニアの皆様こんにちは。</p>\n<p data-sourcepos=\"5:1-5:196\">IT業界ができた頃は、ITエンジニアと言えば <strong>『一生プログラムを書いていればよさそうな人』</strong> と思えたのですが、今はなんだか違いますよね？</p>\n<p data-sourcepos=\"7:1-7:87\">現状を整理・把握するためにGPT先生にとりあえず聞いてみます。</p>\n<p data-sourcepos=\"9:1-9:133\"><a href=\"https://camo.qiitausercontent.com/f3313c7a529be19cc4b8606589c2e3a905cc8a7c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64613263643737662d356664332d613663622d343737312d3639393533646265643662662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fda2cd77f-5fd3-a6cb-4771-69953dbed6bf.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=fc2dda029eb6dc5d581e1856aaff49c6\" alt=\"ITエンジニア.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/da2cd77f-5fd3-a6cb-4771-69953dbed6bf.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fda2cd77f-5fd3-a6cb-4771-69953dbed6bf.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=7ed10ed9eee5977f77aa32bccc88d228 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"11:1-11:126\">保守が含まれていないのが気になりますが、非常に多岐に渡ることは見て取れたと思います。</p>\n<p data-sourcepos=\"13:1-13:250\">プログラムの勉強だけでも大変にも関わらず、プログラムが書けるだけでは40年を超えるITエンジニアライフを生き抜けなさそうなので、生存戦略について考察をしてみたいと思います。</p>\n<h2 data-sourcepos=\"15:1-15:27\">\n<span id=\"給与水準から考察\" class=\"fragment\"></span><a href=\"#%E7%B5%A6%E4%B8%8E%E6%B0%B4%E6%BA%96%E3%81%8B%E3%82%89%E8%80%83%E5%AF%9F\"><i class=\"fa fa-link\"></i></a>給与水準から考察</h2>\n<p data-sourcepos=\"17:1-17:116\"><a href=\"https://www.e-stat.go.jp/dbview?sid=0003084962\" rel=\"nofollow noopener\" target=\"_blank\">e-Stat : 統計で見る日本</a>で給与を調べてみました。</p>\n<p data-sourcepos=\"19:1-19:122\"><a href=\"https://camo.qiitausercontent.com/13d0ada6884862edb5af250c7072574019c41a40/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f62363066373363662d333434622d623330622d333338342d3237613564633330626439392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb60f73cf-344b-b30b-3384-27a5dc30bd99.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=8192fcec679ec6616143243e2a0cf94e\" alt=\"給与.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b60f73cf-344b-b30b-3384-27a5dc30bd99.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb60f73cf-344b-b30b-3384-27a5dc30bd99.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=4d2ac0147dff32b7ab86c3b02595c032 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"21:1-21:243\">また、<a href=\"https://www.meti.go.jp/shingikai/mono_info_service/digital_jinzai/pdf/001_s01_00.pdf\" rel=\"nofollow noopener\" target=\"_blank\">我が国におけるIT人材の動向</a>よりDXを担うIT人材の給与水準および、IT人材の処遇国際比較も調べてみました。</p>\n<p data-sourcepos=\"23:1-24:99\"><a href=\"https://camo.qiitausercontent.com/c383f606b8d124a94448474aaddbd0ee94dac436/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63336632623334392d646365392d643766312d376436642d3734353865306533623962612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc3f2b349-dce9-d7f1-7d6d-7458e0e3b9ba.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=dc905dc644cd0891e3e6f4e911bbff5f\" alt=\"我が国におけるIT人材の動向：DXを担うIT人材の給与水準.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c3f2b349-dce9-d7f1-7d6d-7458e0e3b9ba.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc3f2b349-dce9-d7f1-7d6d-7458e0e3b9ba.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=02d0d7abee39cbedf675bd3fa1e48edd 1x\" loading=\"lazy\"></a><br>\n経済産業省：我が国におけるIT人材の動向、DXを担うIT人材の給与水準より</p>\n<p data-sourcepos=\"26:1-27:94\"><a href=\"https://camo.qiitausercontent.com/954be80fe0f98ae24e4ea7f6fdda11f5c67c2504/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f33643161303165312d356431312d656466382d306436332d3038326664396137356235352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F3d1a01e1-5d11-edf8-0d63-082fd9a75b55.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f8f0a700ac6ec69963c5dcd0c4134533\" alt=\"我が国におけるIT人材の動向：IT人材の処遇国際比較.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/3d1a01e1-5d11-edf8-0d63-082fd9a75b55.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F3d1a01e1-5d11-edf8-0d63-082fd9a75b55.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=3e82fe1e4e2951219072a258374854fd 1x\" loading=\"lazy\"></a><br>\n経済産業省：我が国におけるIT人材の動向、IT人材の処遇国際比較より</p>\n<p data-sourcepos=\"29:1-29:87\">ここで気になるのは「水準」や「平均」が存在することですね。</p>\n<p data-sourcepos=\"31:1-31:294\">「Mincraft」のマルクス・ペルソン<sup><a href=\"#fn-2\" id=\"fnref-2\">1</a></sup>や「原神」の miHoYo<sup><a href=\"#fn-1\" id=\"fnref-1\">2</a></sup> の様なケースを除外、つまりは自分達で事業を起こして売上を立てていかない限りは、世の中の水準や平均を超えてお金を稼げることはないということですね。</p>\n<p data-sourcepos=\"33:1-34:229\">しかし、少子高齢化による人口オーナス期においては事業を成功させる難易度は高いとされています。社会を維持するために税金や社会保障費でお金が消えてしまい、消費が低迷してしまうからですね。<br>\nDXやAIなどバズワードは色々ありますが、消費が低迷している中で、新規に事業やプロダクトを創る（多額の費用を投じる）というのはなかなか難しい選択肢に思えます。</p>\n<p data-sourcepos=\"36:1-36:54\">一方で、システムには寿命があります。</p>\n<p data-sourcepos=\"38:1-40:268\">無機物であるハードウェアやOSやソフトウェアに寿命があるのは、１ユーザーの感覚としてはなんとなく違和感がありますが、寿命は存在します。<br>\n近代言語での開発は旧世代の言語での開発より往々にして工数が著しく低いです。新しくIT業界に入った人々は旧世代の言語を覚えないこともあるでしょう。<br>\nその様な中で、旧世代の言語で作ったシステムの維持管理を行っていくことには多大なるコストがかかりますが<strong>一度開始したサービスを止めるのはとても難しいためなんとかしないといけません。</strong></p>\n<p data-sourcepos=\"42:1-42:205\">寿命を迎えたシステムを、<strong>初期開発メンバーがおらず元仕様も分からない中で</strong>近代言語にリプレイスする案件の割合は増加していくかもしれません。</p>\n<p data-sourcepos=\"44:1-46:82\"><a href=\"https://camo.qiitausercontent.com/f6511998eff809aed3e3bd2430388db4ce07743f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f65393035633935392d396666302d613930642d393334652d3634393164646465663663622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe905c959-9ff0-a90d-934e-6491dddef6cb.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b1fa120ca7591c9834c81ecd52bdf470\" alt=\"データ白書：開発プロジェクトの種別.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e905c959-9ff0-a90d-934e-6491dddef6cb.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe905c959-9ff0-a90d-934e-6491dddef6cb.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=2bc4d34e6f66822888c2e08e5e17a306 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://www.ipa.go.jp/publish/wp-sd/ps6vr70000011kwd-att/000069381.pdf\" rel=\"nofollow noopener\" target=\"_blank\">ソフトウェア開発 データ白書 2018-2019</a> 開発プロジェクトの全般的な特徴 より<br>\nCopyright 独立行政法人情報処理推進機構 社会基盤センター 2018</p>\n<h2 data-sourcepos=\"48:1-48:20\">\n<span id=\"it人材の供給\" class=\"fragment\"></span><a href=\"#it%E4%BA%BA%E6%9D%90%E3%81%AE%E4%BE%9B%E7%B5%A6\"><i class=\"fa fa-link\"></i></a>IT人材の供給</h2>\n<p data-sourcepos=\"50:1-50:174\"><a href=\"https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf\" rel=\"nofollow noopener\" target=\"_blank\">経済産業省：－ IT 人材需給に関する調査 －</a>よりIT人材の供給を調べてみました。</p>\n<p data-sourcepos=\"52:1-52:149\"><a href=\"https://camo.qiitausercontent.com/75262998271160f4e62cd1061b119ca0c0a13e3e/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f34353862316630302d376563642d626138632d636564322d3233316539653933633434322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F458b1f00-7ecd-ba8c-ced2-231e9e93c442.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=30bf7935c4f3c9a8848ae192b9475e1b\" alt=\"IT 人材数（供給）の推移.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/458b1f00-7ecd-ba8c-ced2-231e9e93c442.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F458b1f00-7ecd-ba8c-ced2-231e9e93c442.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c5cf11e596ca8af439c12ddc14a80430 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"54:1-54:101\">経済産業省：－ IT 人材需給に関する調査 －　IT 人材数（供給）の推移より</p>\n<p data-sourcepos=\"56:1-56:167\">この無機的なレポートからは読み取れないのですが、ここに登場する『IT人材』はどの様な業務を行っているのでしょうか？</p>\n<p data-sourcepos=\"58:1-59:261\">ウォーターフォール開発であれば、設計・製造・試験の工程をそれぞれ別の人間が担当できましたが、小規模なアジャイル開発になると、それぞれの工程を全部同じ人間が担当する可能性が高くなります。<br>\n意識の高い横文字で語られていますが、単に予算がないので <strong>「案件内の全部の工程を担当できてお客様ともリレーションできる人」</strong> でプロジェクトを回そうという仕組みにも思えてきます。</p>\n<p data-sourcepos=\"61:1-61:393\">その様に考えると、供給されたばかりの『IT人材()』を『IT人材』にするのはとても難易度が高くなったと言えるでしょう。ベースのスキルが何もない人材を、プログラムだけではなく <strong>「案件内の全部の工程を担当できてお客様ともリレーションできる」</strong> 人材にする必要があるのですから。</p>\n<p data-sourcepos=\"63:1-64:185\">保守に関しても考え方は同じです。<br>\n<strong>「案件内の全部の工程を担当できてお客様ともリレーションできる」</strong> 人材は、保守の案件でとても重宝される人材と言えるでしょう。</p>\n<h2 data-sourcepos=\"66:1-66:26\">\n<span id=\"it人材の年齢分布\" class=\"fragment\"></span><a href=\"#it%E4%BA%BA%E6%9D%90%E3%81%AE%E5%B9%B4%E9%BD%A2%E5%88%86%E5%B8%83\"><i class=\"fa fa-link\"></i></a>IT人材の年齢分布</h2>\n<p data-sourcepos=\"68:1-68:180\"><a href=\"https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf\" rel=\"nofollow noopener\" target=\"_blank\">経済産業省：－ IT 人材需給に関する調査 －</a>よりIT人材の年齢分布を調べてみました。</p>\n<p data-sourcepos=\"70:1-70:149\"><a href=\"https://camo.qiitausercontent.com/ac1aa610545507149db666be92c61ece2c347da5/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f61316537616531642d306335372d363436392d636462372d3761616636666132643866392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa1e7ae1d-0c57-6469-cdb7-7aaf6fa2d8f9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=a79a5b23e3a9c71de86fffaf1b5d81dd\" alt=\"IT 人材の年齢分布の推移.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a1e7ae1d-0c57-6469-cdb7-7aaf6fa2d8f9.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa1e7ae1d-0c57-6469-cdb7-7aaf6fa2d8f9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c616fbab3815a7e58a2ef21dfc9ab736 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"72:1-72:101\">経済産業省：－ IT 人材需給に関する調査 －　IT 人材の年齢分布の推移より</p>\n<p data-sourcepos=\"74:1-75:249\">COBOL案件ができるCOBOLおじさんは、COBOL案件の寿命がCOBOLおじさんのIT寿命より長ければ、インターネットのない時代に難しい技術を習得した投資にリターンがあったと言えるかもしれません。<br>\n参入障壁も高く、若い人が敢えてCOBOLを覚える機会もない、初期仕様も壮大過ぎて既存システムのリプレイスができないのであれば、COBOLだけでIT人生を走り抜けられるかもしれません。</p>\n<p data-sourcepos=\"77:1-77:306\">一方で Java のような書ける人間が多い言語を『案件で指示された通り書いていただけ』という様なキャリアを形成した場合、ある年齢から <strong>単価が頭打ちをしたり案件に入るのが難しくなる</strong> ケースに遭遇するかもしれません。</p>\n<p data-sourcepos=\"79:1-79:125\"><strong>『プログラマー３５才定年説』</strong> というのはそのような状況を指しているかもしれません。</p>\n<p data-sourcepos=\"81:1-81:323\">作業者として案件に入るのではなく、PMや設計者として案件に入るような方向転換を迫られるかもしれませんが、お客様とのリレーションや設計のスキルもすぐに身につくものでもないので計画的に習得しておいた方がよいかもしれません。</p>\n<h2 data-sourcepos=\"83:1-83:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"85:1-85:179\">VUCA<sup><a href=\"#fn-3\" id=\"fnref-3\">3</a></sup>な時代において、将来を予測するのは難しいですが、人口オーナス期については歴史から推察できる点は多いかもしれません。</p>\n<p data-sourcepos=\"87:1-87:403\">ChatGPTの登場によってプログラムが飛躍的に簡単になりました。大分適当なことを言われて瞑想もしますが、プラマイで言うとプラスの印象です。しかし、既存案件の闇のコードや謎の仕様は今のところ自分で読み解くしかなさそうです。読み解くには１からスクラッチで書ける以上の力がいります。</p>\n<p data-sourcepos=\"89:1-90:72\">その様な中でわたし達が生存戦略として取るべき道は何になるでしょうか？<br>\n所属や立場、年齢などで人それぞれだとは思います。</p>\n<p data-sourcepos=\"92:1-92:348\">ただ、どの様な未来になっても <strong>『お客様や上司部下同僚問わず、仕事をする相手と良好な関係を築いてきちんと約束した結果を出すこと』</strong> というのは必須なのかなとは思います。その上で自分にあった生存戦略を組み立てるのがよいのかなと思いました。</p>\n<h2 data-sourcepos=\"94:1-94:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"96:1-96:50\"><iframe id=\"qiita-embed-content__8a417b368a80263c27b4fb9b86ac5868\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__8a417b368a80263c27b4fb9b86ac5868\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"98:1-98:50\"><iframe id=\"qiita-embed-content__241bd3ed3a02ee1c8c4d0ac4587a06ce\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__241bd3ed3a02ee1c8c4d0ac4587a06ce\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"100:1-100:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"102:1-102:50\"><iframe id=\"qiita-embed-content__eae3c7a16bef696571641d5be064a5c2\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__eae3c7a16bef696571641d5be064a5c2\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"104:1-104:50\"><iframe id=\"qiita-embed-content__7077475fd41642d3a3482c9df1799ea1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__7077475fd41642d3a3482c9df1799ea1\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"106:1-106:50\"><iframe id=\"qiita-embed-content__6dbbb9e4eca826be94e19e916e90b2a7\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6dbbb9e4eca826be94e19e916e90b2a7\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"108:1-108:50\"><iframe id=\"qiita-embed-content__41750235788212bbc7f80eac1aa66294\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__41750235788212bbc7f80eac1aa66294\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"110:1-110:48\">\n<span id=\"おまけ３は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ３（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"112:1-112:50\"><iframe id=\"qiita-embed-content__c9d330d27438f58291f162b63a6ee3d3\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c9d330d27438f58291f162b63a6ee3d3\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"114:1-114:50\"><iframe id=\"qiita-embed-content__ee54a4542da701892051716b401e5699\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ee54a4542da701892051716b401e5699\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"116:1-116:46\">\n<span id=\"おまけ４営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"118:1-118:50\"><iframe id=\"qiita-embed-content__732868be3473d3e5001a69c67c517813\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__732868be3473d3e5001a69c67c517813\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"120:1-120:50\"><iframe id=\"qiita-embed-content__a5b0aa88ac96db02c5d18eb9010dca30\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a5b0aa88ac96db02c5d18eb9010dca30\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"122:1-122:66\">\n<span id=\"おまけ５エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ５（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"124:1-125:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"127:1-127:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-2\">\n<p data-sourcepos=\"130:8-130:156\"><a href=\"https://ja.wikipedia.org/wiki/%E3%83%9E%E3%83%AB%E3%82%AF%E3%82%B9%E3%83%BB%E3%83%9A%E3%83%AB%E3%82%BD%E3%83%B3\" rel=\"nofollow noopener\" target=\"_blank\">wiki : マルクス・ペルソン</a> <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-1\">\n<p data-sourcepos=\"129:7-129:59\"><a href=\"https://ja.wikipedia.org/wiki/MiHoYo\" rel=\"nofollow noopener\" target=\"_blank\">wiki : miHoYo</a> <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-3\">\n<p data-sourcepos=\"131:7-131:55\"><a href=\"https://ja.wikipedia.org/wiki/VUCA\" rel=\"nofollow noopener\" target=\"_blank\">wiki : VUCA</a> <a href=\"#fnref-3\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\nITエンジニアの皆様こんにちは。\n\nIT業界ができた頃は、ITエンジニアと言えば **『一生プログラムを書いていればよさそうな人』** と思えたのですが、今はなんだか違いますよね？\n\n現状を整理・把握するためにGPT先生にとりあえず聞いてみます。\n\n![ITエンジニア.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/da2cd77f-5fd3-a6cb-4771-69953dbed6bf.png)\n\n保守が含まれていないのが気になりますが、非常に多岐に渡ることは見て取れたと思います。\n\nプログラムの勉強だけでも大変にも関わらず、プログラムが書けるだけでは40年を超えるITエンジニアライフを生き抜けなさそうなので、生存戦略について考察をしてみたいと思います。\n\n## 給与水準から考察\n\n[e-Stat : 統計で見る日本](https://www.e-stat.go.jp/dbview?sid=0003084962)で給与を調べてみました。\n\n![給与.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b60f73cf-344b-b30b-3384-27a5dc30bd99.png)\n\nまた、[我が国におけるIT人材の動向](https://www.meti.go.jp/shingikai/mono_info_service/digital_jinzai/pdf/001_s01_00.pdf)よりDXを担うIT人材の給与水準および、IT人材の処遇国際比較も調べてみました。\n\n![我が国におけるIT人材の動向：DXを担うIT人材の給与水準.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c3f2b349-dce9-d7f1-7d6d-7458e0e3b9ba.png)\n経済産業省：我が国におけるIT人材の動向、DXを担うIT人材の給与水準より\n\n![我が国におけるIT人材の動向：IT人材の処遇国際比較.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/3d1a01e1-5d11-edf8-0d63-082fd9a75b55.png)\n経済産業省：我が国におけるIT人材の動向、IT人材の処遇国際比較より\n\nここで気になるのは「水準」や「平均」が存在することですね。\n\n「Mincraft」のマルクス・ペルソン[^2]や「原神」の miHoYo[^1] の様なケースを除外、つまりは自分達で事業を起こして売上を立てていかない限りは、世の中の水準や平均を超えてお金を稼げることはないということですね。\n\nしかし、少子高齢化による人口オーナス期においては事業を成功させる難易度は高いとされています。社会を維持するために税金や社会保障費でお金が消えてしまい、消費が低迷してしまうからですね。\nDXやAIなどバズワードは色々ありますが、消費が低迷している中で、新規に事業やプロダクトを創る（多額の費用を投じる）というのはなかなか難しい選択肢に思えます。\n\n一方で、システムには寿命があります。\n\n無機物であるハードウェアやOSやソフトウェアに寿命があるのは、１ユーザーの感覚としてはなんとなく違和感がありますが、寿命は存在します。\n近代言語での開発は旧世代の言語での開発より往々にして工数が著しく低いです。新しくIT業界に入った人々は旧世代の言語を覚えないこともあるでしょう。\nその様な中で、旧世代の言語で作ったシステムの維持管理を行っていくことには多大なるコストがかかりますが**一度開始したサービスを止めるのはとても難しいためなんとかしないといけません。**\n\n寿命を迎えたシステムを、**初期開発メンバーがおらず元仕様も分からない中で**近代言語にリプレイスする案件の割合は増加していくかもしれません。\n\n![データ白書：開発プロジェクトの種別.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e905c959-9ff0-a90d-934e-6491dddef6cb.png)\n[ソフトウェア開発 データ白書 2018-2019](https://www.ipa.go.jp/publish/wp-sd/ps6vr70000011kwd-att/000069381.pdf) 開発プロジェクトの全般的な特徴 より\nCopyright 独立行政法人情報処理推進機構 社会基盤センター 2018\n\n## IT人材の供給\n\n[経済産業省：－ IT 人材需給に関する調査 －](https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf)よりIT人材の供給を調べてみました。\n\n![IT 人材数（供給）の推移.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/458b1f00-7ecd-ba8c-ced2-231e9e93c442.png)\n\n経済産業省：－ IT 人材需給に関する調査 －　IT 人材数（供給）の推移より\n\nこの無機的なレポートからは読み取れないのですが、ここに登場する『IT人材』はどの様な業務を行っているのでしょうか？\n\nウォーターフォール開発であれば、設計・製造・試験の工程をそれぞれ別の人間が担当できましたが、小規模なアジャイル開発になると、それぞれの工程を全部同じ人間が担当する可能性が高くなります。\n意識の高い横文字で語られていますが、単に予算がないので **「案件内の全部の工程を担当できてお客様ともリレーションできる人」** でプロジェクトを回そうという仕組みにも思えてきます。\n\nその様に考えると、供給されたばかりの『IT人材()』を『IT人材』にするのはとても難易度が高くなったと言えるでしょう。ベースのスキルが何もない人材を、プログラムだけではなく **「案件内の全部の工程を担当できてお客様ともリレーションできる」** 人材にする必要があるのですから。\n\n保守に関しても考え方は同じです。\n**「案件内の全部の工程を担当できてお客様ともリレーションできる」** 人材は、保守の案件でとても重宝される人材と言えるでしょう。\n\n## IT人材の年齢分布\n\n[経済産業省：－ IT 人材需給に関する調査 －](https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf)よりIT人材の年齢分布を調べてみました。\n\n![IT 人材の年齢分布の推移.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a1e7ae1d-0c57-6469-cdb7-7aaf6fa2d8f9.png)\n\n経済産業省：－ IT 人材需給に関する調査 －　IT 人材の年齢分布の推移より\n\nCOBOL案件ができるCOBOLおじさんは、COBOL案件の寿命がCOBOLおじさんのIT寿命より長ければ、インターネットのない時代に難しい技術を習得した投資にリターンがあったと言えるかもしれません。\n参入障壁も高く、若い人が敢えてCOBOLを覚える機会もない、初期仕様も壮大過ぎて既存システムのリプレイスができないのであれば、COBOLだけでIT人生を走り抜けられるかもしれません。\n\n一方で Java のような書ける人間が多い言語を『案件で指示された通り書いていただけ』という様なキャリアを形成した場合、ある年齢から **単価が頭打ちをしたり案件に入るのが難しくなる** ケースに遭遇するかもしれません。\n\n**『プログラマー３５才定年説』** というのはそのような状況を指しているかもしれません。\n\n作業者として案件に入るのではなく、PMや設計者として案件に入るような方向転換を迫られるかもしれませんが、お客様とのリレーションや設計のスキルもすぐに身につくものでもないので計画的に習得しておいた方がよいかもしれません。\n\n## おわりに\n\nVUCA[^3]な時代において、将来を予測するのは難しいですが、人口オーナス期については歴史から推察できる点は多いかもしれません。\n\nChatGPTの登場によってプログラムが飛躍的に簡単になりました。大分適当なことを言われて瞑想もしますが、プラマイで言うとプラスの印象です。しかし、既存案件の闇のコードや謎の仕様は今のところ自分で読み解くしかなさそうです。読み解くには１からスクラッチで書ける以上の力がいります。\n\nその様な中でわたし達が生存戦略として取るべき道は何になるでしょうか？\n所属や立場、年齢などで人それぞれだとは思います。\n\nただ、どの様な未来になっても **『お客様や上司部下同僚問わず、仕事をする相手と良好な関係を築いてきちんと約束した結果を出すこと』** というのは必須なのかなとは思います。その上で自分にあった生存戦略を組み立てるのがよいのかなと思いました。\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ４（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ５（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n[^1]: [wiki : miHoYo](https://ja.wikipedia.org/wiki/MiHoYo)\n[^2]:  [wiki : マルクス・ペルソン](https://ja.wikipedia.org/wiki/%E3%83%9E%E3%83%AB%E3%82%AF%E3%82%B9%E3%83%BB%E3%83%9A%E3%83%AB%E3%82%BD%E3%83%B3)\n[^3]: [wiki : VUCA](https://ja.wikipedia.org/wiki/VUCA)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-06-17T17:12:40+09:00",
    "group": null,
    "id": "75d98759609820595bc6",
    "likes_count": 29,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 24,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "キャリア",
        "versions": []
      },
      {
        "name": "エンジニア",
        "versions": []
      }
    ],
    "title": "ITエンジニアの未来予測と生存戦略",
    "updated_at": "2023-06-17T23:52:48+09:00",
    "url": "https://qiita.com/kaku3/items/75d98759609820595bc6",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 8522,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:48\">先日こんなやり取りがありました。</p>\n<p data-sourcepos=\"5:1-5:274\">わたし「何かを説明する時に<strong>図を描くと通じやすくていい</strong>という話をみんなにしてるけど誰も図を描いてくれないんだよね。お客さんと話をする時にもパパパっと描けるとものすごく話しやすいし。」</p>\n<p data-sourcepos=\"7:1-7:60\">若手「描く余裕がないんじゃないですか？」</p>\n<p data-sourcepos=\"9:1-9:15\">なるほど。</p>\n<h2 data-sourcepos=\"11:1-11:53\">\n<span id=\"twitter-の絵師さんにイラスト依頼の話\" class=\"fragment\"></span><a href=\"#twitter-%E3%81%AE%E7%B5%B5%E5%B8%AB%E3%81%95%E3%82%93%E3%81%AB%E3%82%A4%E3%83%A9%E3%82%B9%E3%83%88%E4%BE%9D%E9%A0%BC%E3%81%AE%E8%A9%B1\"><i class=\"fa fa-link\"></i></a>Twitter の絵師さんにイラスト依頼の話</h2>\n<p data-sourcepos=\"13:1-14:282\">「パパパっと描けるんでしょ？」と安い単価でイラスト依頼を出して炎上したケースがありました。<br>\nものすごい時間の練習と工夫と努力の結果、挫折せずに続けられた人だけがパパパっと描けるようになっているのに、それに対してリスペクトがなかったり報酬が伴っていないというのは酷いという話でした。</p>\n<p data-sourcepos=\"16:1-16:132\"><a href=\"https://camo.qiitausercontent.com/c42377f38a242a0c566f6c28089656bbcdb8446c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f34633233633038642d623364632d616331352d343038352d3061666533353231333836662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F4c23c08d-b3dc-ac15-4085-0afe3521386f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b0bb0e854f173f0a6c5002794a60cb63\" alt=\"パパパ.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/4c23c08d-b3dc-ac15-4085-0afe3521386f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F4c23c08d-b3dc-ac15-4085-0afe3521386f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b44606812dbc1f0a15928a59f336091f 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"18:1-18:156\">そうです。いきなりパパパっとは描けませんし、パパパっと描けるようになるにはものすごく時間がかかるのです。</p>\n<p data-sourcepos=\"20:1-20:138\">ただ、そうは言っても、描かないことにはいつまで経ってもパパパっと描けるようにならないのです。</p>\n<h2 data-sourcepos=\"22:1-22:60\">\n<span id=\"成果が見えづらい修行と口頭文章の限界\" class=\"fragment\"></span><a href=\"#%E6%88%90%E6%9E%9C%E3%81%8C%E8%A6%8B%E3%81%88%E3%81%A5%E3%82%89%E3%81%84%E4%BF%AE%E8%A1%8C%E3%81%A8%E5%8F%A3%E9%A0%AD%E6%96%87%E7%AB%A0%E3%81%AE%E9%99%90%E7%95%8C\"><i class=\"fa fa-link\"></i></a>成果が見えづらい修行と口頭・文章の限界</h2>\n<p data-sourcepos=\"24:1-26:168\">図を描き慣れていない方が図で説明しようとした場合、口頭で説明するより伝わりづらいことがあるかもしれません。<br>\nまた、作画するために口頭で説明するより時間がかかってしまうかもしれません。<br>\nただ、修行をしていくとそれは少しずつ改善されて口頭だけでは説明できないことを説明できるようになるかもしれません。</p>\n<p data-sourcepos=\"28:1-29:144\">図に示すとこのような感じかと思います。<br>\n<a href=\"https://camo.qiitausercontent.com/8dc0d3c115b2f59002a433ec1ef79db037526415/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f33376436333834652d656233632d333233342d333231632d3364613861356237323930612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F37d6384e-eb3c-3234-321c-3da8a5b7290a.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=399e04587834f90f796f187af91c0457\" alt=\"修行と伝わる度.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/37d6384e-eb3c-3234-321c-3da8a5b7290a.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F37d6384e-eb3c-3234-321c-3da8a5b7290a.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=85f4b7144b9814c0b2e3a0a591451a63 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"31:1-31:145\">上記の文章と図は同じ内容ですが、<strong>図の方が直感的に理解できる情報の量が多い</strong>のではないでしょうか。</p>\n<p data-sourcepos=\"33:1-33:405\">冒頭で「余裕がない」という話にあった通り <strong>「必要な速さで説明するためには口頭や文章でしかできない。」</strong> と感じているかもしれません。それは、日常生活で「口頭や文章」で伝える機会に対して「図」で伝える機会が圧倒的に少なく充分な修行が行えていないことに起因していると思います。</p>\n<p data-sourcepos=\"35:1-35:252\">ただ、口頭や文章では伝えきれないことを伝える必要もでてきます。その時に「図で説明するスキル」が欲しいと思っても、すぐに身につくスキルではないところが難しいところですね。</p>\n<h2 data-sourcepos=\"37:1-37:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"39:1-41:90\">口頭や文章で伝わるものは図にする必要はありません。<br>\nまた、資料が寂しいからと意味のない賑やかしの図を載せる必要もありません。<br>\nそういうことは、コスパやタイパが悪いのでやめた方がいいです。</p>\n<p data-sourcepos=\"43:1-43:291\">きちんと明確に伝えたいことを、より伝わりやすく伝える図を描くべきですが、その様な図を適材適所に配置できるようになるには相当な量の修行が必要なので、意識して図を描く機会は作るとよいと思っています。</p>\n<p data-sourcepos=\"45:1-45:98\">シンプルに図を描くのは楽しいのでぜひ取り組んでみてください。<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup><sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup></p>\n<p data-sourcepos=\"47:1-47:134\"><a href=\"https://camo.qiitausercontent.com/53dfd90a85b62f712c606dc4f7070103a8da27bb/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36656333316331372d313866622d323562352d306161372d3263343932303061633966312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6ec31c17-18fb-25b5-0aa7-2c49200ac9f1.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=bf5997e40a08652ff21bfcbf20c40eb8\" alt=\"Qiitaと図.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6ec31c17-18fb-25b5-0aa7-2c49200ac9f1.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6ec31c17-18fb-25b5-0aa7-2c49200ac9f1.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=93021ea6310a5256187d8a7a95a80a07 1x\" loading=\"lazy\"></a></p>\n<h2 data-sourcepos=\"49:1-49:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"51:1-51:50\"><iframe id=\"qiita-embed-content__59429c3dc294ee111c65f3d769f224b3\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__59429c3dc294ee111c65f3d769f224b3\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"53:1-53:50\"><iframe id=\"qiita-embed-content__e71f883f0336016cb2f3cbac0bb80480\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e71f883f0336016cb2f3cbac0bb80480\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"55:1-55:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"57:1-57:50\"><iframe id=\"qiita-embed-content__c6a28b5582294636b15c5c3822d1df53\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c6a28b5582294636b15c5c3822d1df53\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"59:1-59:50\"><iframe id=\"qiita-embed-content__028d984c0bfb47d8955d32e5e1dbf8a2\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__028d984c0bfb47d8955d32e5e1dbf8a2\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"61:1-61:50\"><iframe id=\"qiita-embed-content__c6372f39daf7b360fb993e1c84a3ed34\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c6372f39daf7b360fb993e1c84a3ed34\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"63:1-63:50\"><iframe id=\"qiita-embed-content__97e48b955ce37df751b053f303e1b950\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__97e48b955ce37df751b053f303e1b950\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"65:1-65:48\">\n<span id=\"おまけ３は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ３（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"67:1-67:50\"><iframe id=\"qiita-embed-content__0d0b1a2c038f1a923b148485bc707fe4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__0d0b1a2c038f1a923b148485bc707fe4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"69:1-69:50\"><iframe id=\"qiita-embed-content__5d55e588ec929a761e1852ea5c17c9ef\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__5d55e588ec929a761e1852ea5c17c9ef\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"71:1-71:46\">\n<span id=\"おまけ４営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"73:1-73:50\"><iframe id=\"qiita-embed-content__aab9d19f61c19efed27f788e8d3c8a6a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__aab9d19f61c19efed27f788e8d3c8a6a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"75:1-75:50\"><iframe id=\"qiita-embed-content__0f8b21ec76c4afc185ffe5b2c9f95fcc\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__0f8b21ec76c4afc185ffe5b2c9f95fcc\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"77:1-77:66\">\n<span id=\"おまけ５エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ５（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"79:1-80:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"82:1-82:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"84:7-84:135\">いいねがほしいと書くといやらしいので、さりげなく図でほのめかしてみました。ほしいです。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"85:7-85:181\">今回作成した図はすべて VS Code の <a href=\"https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio\" rel=\"nofollow noopener\" target=\"_blank\">Draw.io Integration</a> を用いて作成しました。 <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\n先日こんなやり取りがありました。\n\nわたし「何かを説明する時に**図を描くと通じやすくていい**という話をみんなにしてるけど誰も図を描いてくれないんだよね。お客さんと話をする時にもパパパっと描けるとものすごく話しやすいし。」\n\n若手「描く余裕がないんじゃないですか？」\n\nなるほど。\n\n## Twitter の絵師さんにイラスト依頼の話\n\n「パパパっと描けるんでしょ？」と安い単価でイラスト依頼を出して炎上したケースがありました。\nものすごい時間の練習と工夫と努力の結果、挫折せずに続けられた人だけがパパパっと描けるようになっているのに、それに対してリスペクトがなかったり報酬が伴っていないというのは酷いという話でした。\n\n![パパパ.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/4c23c08d-b3dc-ac15-4085-0afe3521386f.png)\n\nそうです。いきなりパパパっとは描けませんし、パパパっと描けるようになるにはものすごく時間がかかるのです。\n\nただ、そうは言っても、描かないことにはいつまで経ってもパパパっと描けるようにならないのです。\n\n## 成果が見えづらい修行と口頭・文章の限界\n\n図を描き慣れていない方が図で説明しようとした場合、口頭で説明するより伝わりづらいことがあるかもしれません。\nまた、作画するために口頭で説明するより時間がかかってしまうかもしれません。\nただ、修行をしていくとそれは少しずつ改善されて口頭だけでは説明できないことを説明できるようになるかもしれません。\n\n図に示すとこのような感じかと思います。\n![修行と伝わる度.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/37d6384e-eb3c-3234-321c-3da8a5b7290a.png)\n\n上記の文章と図は同じ内容ですが、**図の方が直感的に理解できる情報の量が多い**のではないでしょうか。\n\n冒頭で「余裕がない」という話にあった通り **「必要な速さで説明するためには口頭や文章でしかできない。」** と感じているかもしれません。それは、日常生活で「口頭や文章」で伝える機会に対して「図」で伝える機会が圧倒的に少なく充分な修行が行えていないことに起因していると思います。\n\nただ、口頭や文章では伝えきれないことを伝える必要もでてきます。その時に「図で説明するスキル」が欲しいと思っても、すぐに身につくスキルではないところが難しいところですね。\n\n## おわりに\n\n口頭や文章で伝わるものは図にする必要はありません。\nまた、資料が寂しいからと意味のない賑やかしの図を載せる必要もありません。\nそういうことは、コスパやタイパが悪いのでやめた方がいいです。\n\nきちんと明確に伝えたいことを、より伝わりやすく伝える図を描くべきですが、その様な図を適材適所に配置できるようになるには相当な量の修行が必要なので、意識して図を描く機会は作るとよいと思っています。\n\nシンプルに図を描くのは楽しいのでぜひ取り組んでみてください。[^1][^2]\n\n![Qiitaと図.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6ec31c17-18fb-25b5-0aa7-2c49200ac9f1.png)\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ４（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ５（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n[^1]: いいねがほしいと書くといやらしいので、さりげなく図でほのめかしてみました。ほしいです。\n[^2]: 今回作成した図はすべて VS Code の [Draw.io Integration](https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio) を用いて作成しました。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-06-10T15:18:35+09:00",
    "group": null,
    "id": "b4e038f5e91895aae163",
    "likes_count": 8,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 5,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人教育",
        "versions": []
      },
      {
        "name": "コミュニケーション",
        "versions": []
      },
      {
        "name": "Draw.io",
        "versions": []
      }
    ],
    "title": "図で説明するのは難しい",
    "updated_at": "2023-06-10T15:18:35+09:00",
    "url": "https://qiita.com/kaku3/items/b4e038f5e91895aae163",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 4225,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:60\">\n<span id=\"なぜメンターにならないといけないの\" class=\"fragment\"></span><a href=\"#%E3%81%AA%E3%81%9C%E3%83%A1%E3%83%B3%E3%82%BF%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%89%E3%81%AA%E3%81%84%E3%81%A8%E3%81%84%E3%81%91%E3%81%AA%E3%81%84%E3%81%AE\"><i class=\"fa fa-link\"></i></a>なぜメンターにならないといけないの！？</h2>\n<p data-sourcepos=\"3:1-4:165\">Qiitaを読んでるみなさんおはこんばんわ。<br>\nQiitaを読んでいるということはITのお仕事をされている方なのかなと思いますが、なぜITのお仕事を選ばれたのでしょうか？</p>\n<p data-sourcepos=\"6:1-7:201\"><strong>「プログラムが好きだから！」</strong><br>\nいいですね、ワクワクしますよね！ちょっといい感じのプログラムを書いて「オレ最高！」とかパソコンに向かって独り言を言っていたいですよね。</p>\n<p data-sourcepos=\"9:1-10:132\"><strong>「給料がいいから！」</strong><br>\nストレートですね！他の業種よりはいいみたいですねが、実際のところは諸説あるみたいですね？</p>\n<p data-sourcepos=\"12:1-13:159\"><strong>「リモートワーク！リモートワーク！」</strong><br>\nそうですよね！面倒な通勤から解放されたいですよね！家の作業環境を整えるとモチベーション上がったりしますね。</p>\n<p data-sourcepos=\"15:1-15:12\">…さて。</p>\n<p data-sourcepos=\"17:1-18:201\">おそらくですが <strong>「人が大好きで後輩の面倒を熱心に見たくてメンターになりたいから！」</strong> という理由でIT業界を志望された方はあんまりいないと思いますがいかがでしょうか？<br>\n少なくともわたしは違いましたし、プログラムが好きで一日中プログラム書いてられるなんて素晴らしい仕事だなと妄想で胸を膨らませていました。</p>\n<p data-sourcepos=\"20:1-20:57\">…が、現実はそうではありませんでした。</p>\n<p data-sourcepos=\"22:1-22:347\">業務で必要なプログラムを書くために勉強をする傍ら、企画やらPMやらの仕事もしながら新人の面倒も見なければいけませんでした。自分の成長だって手一杯で忙しいのに、人の面倒なんか見ている余裕なんかあるかいな、と思ったこともあったりしました。</p>\n<p data-sourcepos=\"24:1-24:212\">それでも、AIに取って代わられにくい超重要業務ではないかと最近は思えていますし、やらないといけないことだと思うので、そんな話をしようと思います。</p>\n<h2 data-sourcepos=\"26:1-26:33\">\n<span id=\"プロジェクトと柿の種\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%A8%E6%9F%BF%E3%81%AE%E7%A8%AE\"><i class=\"fa fa-link\"></i></a>プロジェクトと柿の種</h2>\n<p data-sourcepos=\"28:1-29:411\">柿の種、おいしいですよね。<br>\nおやつで出された柿の種を食べ終わってしまい、袋の中の柿の種を１つ２つくすねて食べた経験はあるでしょうか？１つ２つぐらいなら食べてもバレないかなと。実際１つ２つならバレないんですが、１つ２つを繰り返していると、取り返しが付かないぐらい減ってしまって大変なことになるんですよね。</p>\n<p data-sourcepos=\"31:1-31:90\">突然なんの話かというと、プロジェクトの人員のたとえ話でした。</p>\n<ul data-sourcepos=\"33:1-44:0\">\n<li data-sourcepos=\"33:1-36:0\">\n<p data-sourcepos=\"33:3-35:131\">予算が潤沢な昭和のプロジェクト<br>\nなんとなく１人２人いなくなっても大丈夫そうに見えますね？<br>\n<a href=\"https://camo.qiitausercontent.com/06be02d6c99d1ad87f77c661c21845f9d66eec6b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f33343265333538302d616264342d306661372d323363642d3263373632316139663665382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F342e3580-abd4-0fa7-23cd-2c7621a9f6e8.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ac76b5b224302aeb46497ba7261eb1af\" alt=\"project1.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/342e3580-abd4-0fa7-23cd-2c7621a9f6e8.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F342e3580-abd4-0fa7-23cd-2c7621a9f6e8.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c980f3ad66ea11afc37831737ac87b45 1x\" loading=\"lazy\"></a></p>\n</li>\n<li data-sourcepos=\"37:1-40:0\">\n<p data-sourcepos=\"37:3-39:131\">予算が少し削られた平成のプロジェクト<br>\n予算を削られてプロジェクトの縮小を余儀なくされました。そこでリーダーを引っこ抜いてチームを割って、２案件目を取りに行くことにしました。<br>\n<a href=\"https://camo.qiitausercontent.com/56483733ee5decf69622a13be404d759680419f7/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38313331303734382d396335302d636537302d383531332d3436326530373539666235642e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F81310748-9c50-ce70-8513-462e0759fb5d.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=24d8f65f0b0cf8d06ec444caa018dfd8\" alt=\"project2.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/81310748-9c50-ce70-8513-462e0759fb5d.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F81310748-9c50-ce70-8513-462e0759fb5d.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ee59944c7f36d1ad016e22bae97886f4 1x\" loading=\"lazy\"></a></p>\n</li>\n<li data-sourcepos=\"41:1-44:0\">\n<p data-sourcepos=\"41:3-43:131\">予算がとても削られた令和のプロジェクト<br>\n人月商売のSESでは、人数がいればモノができると信じられています。いや、信じるしかないのでしょう。<br>\n<a href=\"https://camo.qiitausercontent.com/f7a003f795081124adb91620a168a183959a469b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f30643034623261372d663964362d623938392d373265312d6436633038356631653538342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F0d04b2a7-f9d6-b989-72e1-d6c085f1e584.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=3a73e8215b0e6aa1001eb3ef5669d21e\" alt=\"project3.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/0d04b2a7-f9d6-b989-72e1-d6c085f1e584.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F0d04b2a7-f9d6-b989-72e1-d6c085f1e584.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=97449be9c72e6415d0a1fb3253bf2c16 1x\" loading=\"lazy\"></a></p>\n</li>\n</ul>\n<p data-sourcepos=\"45:1-45:81\">この変化が緩やかにしかし確実に行われていったのでした。</p>\n<p data-sourcepos=\"47:1-47:234\">お母さんは、柿の種の袋の中身に違和感を感じるも放置していたら、子どもたちを怒鳴り散らす以外の選択肢がない程度に柿の種が減っていたという状況です。怖いですね。</p>\n<h2 data-sourcepos=\"49:1-49:57\">\n<span id=\"人月の神話とかスタープログラマーとか\" class=\"fragment\"></span><a href=\"#%E4%BA%BA%E6%9C%88%E3%81%AE%E7%A5%9E%E8%A9%B1%E3%81%A8%E3%81%8B%E3%82%B9%E3%82%BF%E3%83%BC%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%83%BC%E3%81%A8%E3%81%8B\"><i class=\"fa fa-link\"></i></a>人月の神話とかスタープログラマーとか</h2>\n<p data-sourcepos=\"51:1-51:96\">さて、先程のプロジェクトの登場人物に戦闘力を記入してみましょう。</p>\n<ul data-sourcepos=\"53:1-55:0\">\n<li data-sourcepos=\"53:1-55:0\">戦闘力 3人月のリーダーと、1.2人月のサブリーダーと 0.2 ~ 0.8 人月のメンバー<br>\n<a href=\"https://camo.qiitausercontent.com/8db7a3665d3ffeec6b18291eeb9dc4c48c0e5b41/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37616266393662392d333065342d316539352d383262662d3435666332386434616533332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7abf96b9-30e4-1e95-82bf-45fc28d4ae33.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=7eaaaa9d17082e8e2b3fdbb5bc050baf\" alt=\"戦闘力.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7abf96b9-30e4-1e95-82bf-45fc28d4ae33.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7abf96b9-30e4-1e95-82bf-45fc28d4ae33.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=1736db516418cdac4cf484e67373ffdb 1x\" loading=\"lazy\"></a>\n</li>\n</ul>\n<p data-sourcepos=\"56:1-56:231\">SESは人月商売なので、戦闘力が一人あたり1.0ないといけませんが「未経験新人歓迎」などと求人を行っていると、いきなり1.0の戦闘力を揃えられることは考えにくいです。</p>\n<p data-sourcepos=\"58:1-58:213\">そこで戦闘力3.0のようなリーダーの下に戦闘力1.2のサブリーサーを2人つけて8人で8人月となるようにチームを編成して帳尻を合わせることにしていたのです。</p>\n<p data-sourcepos=\"60:1-60:470\">昔は技術の進歩が遅く一度覚えた技術が長く使えたため、本気を出せば3人月ぐらいのアウトプットを出せる <strong>スタープログラマー</strong> <sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup>が数多くいたと感じています。また、プロジェクトの規模も大きく期間も長かったため、少々ボヤ騒ぎになっても、スタープログラマーが本気を出せば取り戻せるというスタイルが横行していたようにも思えます。</p>\n<p data-sourcepos=\"62:1-62:138\">このスタープログラマーが大活躍するスタイルは一見華やかですが決定的な問題をはらんでいました。</p>\n<p data-sourcepos=\"64:1-64:103\"><strong>スタープログラマーに仕事が集中し、チームが育たないという問題です。</strong></p>\n<p data-sourcepos=\"66:1-66:150\"><a href=\"https://camo.qiitausercontent.com/f7990c1c08df8e9db17fa4f60c18f4cd11620f6a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f34323439613633642d373733642d626538362d373737642d3730346362393638346161382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F4249a63d-773d-be86-777d-704cb9684aa8.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ca9330c7879d3485a3a7fdcfc274a1f2\" alt=\"スタープログラマー.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/4249a63d-773d-be86-777d-704cb9684aa8.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F4249a63d-773d-be86-777d-704cb9684aa8.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=fdf89ec3cc5fa997d70791f98b91d653 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"68:1-69:252\">チームが育たないと、プロジェクトの規模や期間が縮小した時に、対応できなくなります。<br>\n不景気においてプロジェクトの規模や期間の縮小は免れません。また、スタープログラマーもいい年になって定年を迎えたり技術の刷新によってスター性が失われることもあるでしょう。</p>\n<p data-sourcepos=\"71:1-71:274\">より条件の厳しい案件に対応していくには、チーム全体を成長させることが必須であり、<strong>チームを抜けるためには人を一人以上は育てなければいけないという、鉄の掟が暗黙的に存在していたのです。</strong></p>\n<p data-sourcepos=\"73:1-73:303\">メンターとして若手を育成していくことで、不条理に誰かに仕事を集中させずに、持続可能な組織に近づけるかもしれませんし、チームや組織を強化していくことで終身雇用への漠然とした不安を解消できるかもしれません。</p>\n<h2 data-sourcepos=\"75:1-75:42\">\n<span id=\"チーム運営とよきメンター\" class=\"fragment\"></span><a href=\"#%E3%83%81%E3%83%BC%E3%83%A0%E9%81%8B%E5%96%B6%E3%81%A8%E3%82%88%E3%81%8D%E3%83%A1%E3%83%B3%E3%82%BF%E3%83%BC\"><i class=\"fa fa-link\"></i></a>チーム運営とよきメンター？</h2>\n<p data-sourcepos=\"77:1-77:69\">以下、チーム運営で留意している点を記載します。</p>\n<h3 data-sourcepos=\"79:1-79:54\">\n<span id=\"戦闘力-10-を意識してタスクを決める\" class=\"fragment\"></span><a href=\"#%E6%88%A6%E9%97%98%E5%8A%9B-10-%E3%82%92%E6%84%8F%E8%AD%98%E3%81%97%E3%81%A6%E3%82%BF%E3%82%B9%E3%82%AF%E3%82%92%E6%B1%BA%E3%82%81%E3%82%8B\"><i class=\"fa fa-link\"></i></a>戦闘力 1.0 を意識してタスクを決める</h3>\n<p data-sourcepos=\"81:1-82:288\">「新人だから」「未経験だから」という理由で与えるタスクを絞らない方がよさそうです。<br>\nプロジェクト内で必要な作業を、「１人月の戦闘力であればこれぐらいの期間でできてほしい」という説明をして、それに対して何ができて何ができないかを会話しながら切り出して決めて行くのがよいでしょう。</p>\n<h3 data-sourcepos=\"84:1-84:38\">\n<span id=\"戦闘力-02-を-08-にしよう\" class=\"fragment\"></span><a href=\"#%E6%88%A6%E9%97%98%E5%8A%9B-02-%E3%82%92-08-%E3%81%AB%E3%81%97%E3%82%88%E3%81%86\"><i class=\"fa fa-link\"></i></a>戦闘力 0.2 を 0.8 にしよう</h3>\n<p data-sourcepos=\"86:1-86:89\">戦闘力 0.2 を 0.8 にする方が、1.0 を 1.6 にするより効率的です。<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup></p>\n<p data-sourcepos=\"88:1-90:261\">SESでは毎回チーム構成はガチャで決まります。小さなチームで最初にすべきことは、各メンバーの戦闘力の把握です。全員が戦闘力1.0を超えるSSRばかりのデッキはガチャの排出率的にもコスト的にも組めないはずです。<br>\nコストも戦闘力も低いメンバーを入れて、案件が終わるまでにそのメンバーにいかに経験を積ませて戦闘力を上げるかが持続可能な組織を作る上では重要です。<br>\n戦闘力が高くコストも高いメンバーは、同じ様な製造を繰り返していると得られる経験値は減ってくるので、メンタリングのスキルやプロジェクト運営の経験値を取りに行くのがよいでしょう。</p>\n<p data-sourcepos=\"92:1-92:348\">オンラインゲームであれば、メンティーに敵を一撃攻撃させて後はメンターが敵を倒せば経験値が分配される、メンティーにとどめをささせてボーナス経験値を渡すなどがありますが、現実世界では目に見える形で数値化されていないので難しいところです。</p>\n<p data-sourcepos=\"94:1-94:376\">『Javaエンジニア』などの相場は決まっているため、単純に『Javaエンジニア』としての戦闘力を5.0に上げても売上は5倍にはならないですが、0.2 を 0.8 にしたエンジニアを５人育成できれば売上が5倍になる可能性が出てきて、それがあなたの給与に反映される可能性が出てきます。</p>\n<p data-sourcepos=\"96:1-96:132\"><a href=\"https://camo.qiitausercontent.com/e556be9e3131698a943bb15f96e3e9421f79ab44/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64346131656630662d656331302d356237312d393131302d3363376231363164336464622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fd4a1ef0f-ec10-5b71-9110-3c7b161d3ddb.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=78d36d76a3d3096defdeab4789451086\" alt=\"経験値.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d4a1ef0f-ec10-5b71-9110-3c7b161d3ddb.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fd4a1ef0f-ec10-5b71-9110-3c7b161d3ddb.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=9813b2f7d17d422f5c458c2b455e09f5 1x\" loading=\"lazy\"></a></p>\n<h3 data-sourcepos=\"98:1-98:25\">\n<span id=\"課題とレビュー\" class=\"fragment\"></span><a href=\"#%E8%AA%B2%E9%A1%8C%E3%81%A8%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC\"><i class=\"fa fa-link\"></i></a>課題とレビュー</h3>\n<p data-sourcepos=\"100:1-102:201\">知識を一方的に伝えて「分かった？」と聞いてみて、なんとも言えない表情で「分かった」と言わせてもあまり意味がないです。<br>\n伝えたいことを課題形式にして伝えて、その結果をレビューするようにすると伝わったかどうかを確認することができます。<br>\n観察力や知覚力を上げたり、適切なフィードバックを行う力を上げることもできるかと思います。何より、伝わらなくてガッカリしなくてよいです。</p>\n<p data-sourcepos=\"104:1-104:153\">また、課題には必ず期限を設定しましょう。報連相や締切を守るといったことをたえず意識することは重要です。</p>\n<h3 data-sourcepos=\"106:1-106:56\">\n<span id=\"1回で伝えられるとしたらそれは洗脳\" class=\"fragment\"></span><a href=\"#1%E5%9B%9E%E3%81%A7%E4%BC%9D%E3%81%88%E3%82%89%E3%82%8C%E3%82%8B%E3%81%A8%E3%81%97%E3%81%9F%E3%82%89%E3%81%9D%E3%82%8C%E3%81%AF%E6%B4%97%E8%84%B3\"><i class=\"fa fa-link\"></i></a>1回で伝えられるとしたら、それは洗脳</h3>\n<p data-sourcepos=\"108:1-110:255\">相手に伝わるように説明することはとても難しいです。なんなら伝わらないことの方が多いです。<br>\n自転車の乗り方などを思い出してもらうと分かりやすいかもしれません。よいコードの書き方など習得にトライアル＆エラーが必要なことは、一度の説明では伝わらないです。<br>\n締切がある中で会話していると温度が上がることもあるかもしれませんが、最初から「伝わらないものだ、伝わればラッキー」ぐらいに思って話をすると意外とうまくいくかもしれません。</p>\n<h3 data-sourcepos=\"112:1-112:30\">\n<span id=\"aiにはできない観察\" class=\"fragment\"></span><a href=\"#ai%E3%81%AB%E3%81%AF%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E8%A6%B3%E5%AF%9F\"><i class=\"fa fa-link\"></i></a>AIにはできない観察</h3>\n<p data-sourcepos=\"114:1-117:84\">同じ様な質問を何度もされると思ったら、「なぜなぜ分析」を相手ではなく自分の脳内でやってみましょう。<br>\n「なぜ、その質問をしてくるのか？」を考えると、<strong>観察の解像度を上げる</strong>ことができ、実はもっと別の課題が必要かもしれないなど気づきがあるかもしれません。<br>\n相手をよく観察して、適切な課題を導き出すことは今のところはAIにはできないような気がしています。<br>\n効率的な努力をしてもらえるようにうながすことが大事です。</p>\n<h3 data-sourcepos=\"119:1-119:19\">\n<span id=\"北風と太陽\" class=\"fragment\"></span><a href=\"#%E5%8C%97%E9%A2%A8%E3%81%A8%E5%A4%AA%E9%99%BD\"><i class=\"fa fa-link\"></i></a>北風と太陽</h3>\n<p data-sourcepos=\"121:1-123:135\">ITは現役でいる間は勉強をし続けなければいけない厳しい職業です。<br>\nそれゆえ厳しさは絶対的に必要ですが、北風の様に接っすると色々問題になります。<br>\n心理的安全性を確保すべく、とにかく話をよく聴いて太陽の様に接してみるといいかもしれません。</p>\n<p data-sourcepos=\"125:1-125:111\">成功するプロジェクトのメンバーはいつもニコニコしていないといけないのです。</p>\n<h2 data-sourcepos=\"127:1-127:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"129:1-130:122\">プログラムは、一人で学習することができ学んだ分だけのスキルが身につきます。<br>\nこの様な性質のものは、一人で夜も寝ないで黙々と学習を続けるAIには勝てないでしょう。</p>\n<p data-sourcepos=\"132:1-133:140\">一方、メンタリングは、人と関わらないと学ぶことはできません。また、学んだ分だけのスキルは身につくけれども、相手によってよりよい選択肢が変わってくるため、スキルが身についたと実感し辛いです。<br>\nこの様な性質のものは、現在の「質問に答える」形式のAIにはフォローできない業務と言えるでしょう。</p>\n<p data-sourcepos=\"135:1-135:312\">また、メンタリングは、対話や相手のことを慮ることをベースに色々な施策を実施する行為であるため、設計や要件定義等、相手の考えていることを感じ取ったり共通のゴールを目指したりする能力が必要な業務でも役に立ちます。</p>\n<p data-sourcepos=\"137:1-137:234\">つまりは「よきメンターでいること」は難しいことですが、本人のキャリア形成や、組織および業界を維持するために必要なことなので取り組んでみてはいかがでしょうか？</p>\n<h2 data-sourcepos=\"139:1-139:15\">\n<span id=\"おまけ０\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%90\"><i class=\"fa fa-link\"></i></a>おまけ０</h2>\n<p data-sourcepos=\"141:1-141:50\"><iframe id=\"qiita-embed-content__a823125ed30fda019c10c76a9aa3dc62\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a823125ed30fda019c10c76a9aa3dc62\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F75d98759609820595bc6\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"143:1-143:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"145:1-145:50\"><iframe id=\"qiita-embed-content__2d79cf8a1f414f17eeea914127c7daff\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2d79cf8a1f414f17eeea914127c7daff\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"147:1-147:50\"><iframe id=\"qiita-embed-content__b343c3670f2a999dc23941889b360dbc\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b343c3670f2a999dc23941889b360dbc\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"149:1-149:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"151:1-151:50\"><iframe id=\"qiita-embed-content__850e2c2e7a0daf24c68f89b858b8f598\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__850e2c2e7a0daf24c68f89b858b8f598\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"153:1-153:50\"><iframe id=\"qiita-embed-content__a280dfdeaa2026de172963c85560d7f7\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a280dfdeaa2026de172963c85560d7f7\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"155:1-155:50\"><iframe id=\"qiita-embed-content__07459f718129b60fc08f7108248872a9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__07459f718129b60fc08f7108248872a9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"157:1-157:50\"><iframe id=\"qiita-embed-content__dfe8bbbeedee800c0d881b392745222c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__dfe8bbbeedee800c0d881b392745222c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"159:1-159:48\">\n<span id=\"おまけ３は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ３（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"161:1-161:50\"><iframe id=\"qiita-embed-content__68ca4a59da09f253fc69eab576e6b713\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__68ca4a59da09f253fc69eab576e6b713\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"163:1-163:50\"><iframe id=\"qiita-embed-content__afd43597ea9f74bd04e0cc34135a7bb9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__afd43597ea9f74bd04e0cc34135a7bb9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb4e038f5e91895aae163\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"165:1-165:50\"><iframe id=\"qiita-embed-content__efafb2106d6c7a0585cd18e18f7e17b5\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__efafb2106d6c7a0585cd18e18f7e17b5\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"167:1-167:46\">\n<span id=\"おまけ４営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"169:1-169:50\"><iframe id=\"qiita-embed-content__80ed89387e13b284841101cbd27149dd\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__80ed89387e13b284841101cbd27149dd\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"171:1-171:50\"><iframe id=\"qiita-embed-content__42f73da47b12218c7929e0793b07418e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__42f73da47b12218c7929e0793b07418e\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"173:1-173:66\">\n<span id=\"おまけ５エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ５（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"175:1-176:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"178:1-178:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"180:7-180:162\">会社に無断で一週間程ドラクエ休暇を取ったけど、休暇明けに拍手で迎えられたスタープログラマーとかいました。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"181:7-181:175\">寝ないで仕事をすれば簡単に 1.0 を 2.0 にすることもできるかもしれませんが、それは長くは続かないのでオススメしません。 <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## なぜメンターにならないといけないの！？\n\nQiitaを読んでるみなさんおはこんばんわ。\nQiitaを読んでいるということはITのお仕事をされている方なのかなと思いますが、なぜITのお仕事を選ばれたのでしょうか？\n\n**「プログラムが好きだから！」**\nいいですね、ワクワクしますよね！ちょっといい感じのプログラムを書いて「オレ最高！」とかパソコンに向かって独り言を言っていたいですよね。\n\n**「給料がいいから！」**\nストレートですね！他の業種よりはいいみたいですねが、実際のところは諸説あるみたいですね？\n\n**「リモートワーク！リモートワーク！」**\nそうですよね！面倒な通勤から解放されたいですよね！家の作業環境を整えるとモチベーション上がったりしますね。\n\n…さて。\n\nおそらくですが **「人が大好きで後輩の面倒を熱心に見たくてメンターになりたいから！」** という理由でIT業界を志望された方はあんまりいないと思いますがいかがでしょうか？\n少なくともわたしは違いましたし、プログラムが好きで一日中プログラム書いてられるなんて素晴らしい仕事だなと妄想で胸を膨らませていました。\n\n…が、現実はそうではありませんでした。\n \n業務で必要なプログラムを書くために勉強をする傍ら、企画やらPMやらの仕事もしながら新人の面倒も見なければいけませんでした。自分の成長だって手一杯で忙しいのに、人の面倒なんか見ている余裕なんかあるかいな、と思ったこともあったりしました。\n\nそれでも、AIに取って代わられにくい超重要業務ではないかと最近は思えていますし、やらないといけないことだと思うので、そんな話をしようと思います。\n\n## プロジェクトと柿の種\n\n柿の種、おいしいですよね。\nおやつで出された柿の種を食べ終わってしまい、袋の中の柿の種を１つ２つくすねて食べた経験はあるでしょうか？１つ２つぐらいなら食べてもバレないかなと。実際１つ２つならバレないんですが、１つ２つを繰り返していると、取り返しが付かないぐらい減ってしまって大変なことになるんですよね。\n\n突然なんの話かというと、プロジェクトの人員のたとえ話でした。\n\n- 予算が潤沢な昭和のプロジェクト\nなんとなく１人２人いなくなっても大丈夫そうに見えますね？\n![project1.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/342e3580-abd4-0fa7-23cd-2c7621a9f6e8.png)\n\n- 予算が少し削られた平成のプロジェクト\n予算を削られてプロジェクトの縮小を余儀なくされました。そこでリーダーを引っこ抜いてチームを割って、２案件目を取りに行くことにしました。\n![project2.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/81310748-9c50-ce70-8513-462e0759fb5d.png)\n\n- 予算がとても削られた令和のプロジェクト\n人月商売のSESでは、人数がいればモノができると信じられています。いや、信じるしかないのでしょう。\n![project3.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/0d04b2a7-f9d6-b989-72e1-d6c085f1e584.png)\n\nこの変化が緩やかにしかし確実に行われていったのでした。\n\nお母さんは、柿の種の袋の中身に違和感を感じるも放置していたら、子どもたちを怒鳴り散らす以外の選択肢がない程度に柿の種が減っていたという状況です。怖いですね。\n\n## 人月の神話とかスタープログラマーとか\n\nさて、先程のプロジェクトの登場人物に戦闘力を記入してみましょう。\n\n- 戦闘力 3人月のリーダーと、1.2人月のサブリーダーと 0.2 ~ 0.8 人月のメンバー\n![戦闘力.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7abf96b9-30e4-1e95-82bf-45fc28d4ae33.png)\n\nSESは人月商売なので、戦闘力が一人あたり1.0ないといけませんが「未経験新人歓迎」などと求人を行っていると、いきなり1.0の戦闘力を揃えられることは考えにくいです。\n\nそこで戦闘力3.0のようなリーダーの下に戦闘力1.2のサブリーサーを2人つけて8人で8人月となるようにチームを編成して帳尻を合わせることにしていたのです。\n\n昔は技術の進歩が遅く一度覚えた技術が長く使えたため、本気を出せば3人月ぐらいのアウトプットを出せる **スタープログラマー** [^1]が数多くいたと感じています。また、プロジェクトの規模も大きく期間も長かったため、少々ボヤ騒ぎになっても、スタープログラマーが本気を出せば取り戻せるというスタイルが横行していたようにも思えます。\n\nこのスタープログラマーが大活躍するスタイルは一見華やかですが決定的な問題をはらんでいました。\n\n**スタープログラマーに仕事が集中し、チームが育たないという問題です。**\n\n![スタープログラマー.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/4249a63d-773d-be86-777d-704cb9684aa8.png)\n\nチームが育たないと、プロジェクトの規模や期間が縮小した時に、対応できなくなります。\n不景気においてプロジェクトの規模や期間の縮小は免れません。また、スタープログラマーもいい年になって定年を迎えたり技術の刷新によってスター性が失われることもあるでしょう。\n\nより条件の厳しい案件に対応していくには、チーム全体を成長させることが必須であり、**チームを抜けるためには人を一人以上は育てなければいけないという、鉄の掟が暗黙的に存在していたのです。**\n\nメンターとして若手を育成していくことで、不条理に誰かに仕事を集中させずに、持続可能な組織に近づけるかもしれませんし、チームや組織を強化していくことで終身雇用への漠然とした不安を解消できるかもしれません。\n\n## チーム運営とよきメンター？\n\n以下、チーム運営で留意している点を記載します。\n\n### 戦闘力 1.0 を意識してタスクを決める\n\n「新人だから」「未経験だから」という理由で与えるタスクを絞らない方がよさそうです。\nプロジェクト内で必要な作業を、「１人月の戦闘力であればこれぐらいの期間でできてほしい」という説明をして、それに対して何ができて何ができないかを会話しながら切り出して決めて行くのがよいでしょう。\n\n### 戦闘力 0.2 を 0.8 にしよう\n\n戦闘力 0.2 を 0.8 にする方が、1.0 を 1.6 にするより効率的です。[^2]\n\nSESでは毎回チーム構成はガチャで決まります。小さなチームで最初にすべきことは、各メンバーの戦闘力の把握です。全員が戦闘力1.0を超えるSSRばかりのデッキはガチャの排出率的にもコスト的にも組めないはずです。\nコストも戦闘力も低いメンバーを入れて、案件が終わるまでにそのメンバーにいかに経験を積ませて戦闘力を上げるかが持続可能な組織を作る上では重要です。\n戦闘力が高くコストも高いメンバーは、同じ様な製造を繰り返していると得られる経験値は減ってくるので、メンタリングのスキルやプロジェクト運営の経験値を取りに行くのがよいでしょう。\n\nオンラインゲームであれば、メンティーに敵を一撃攻撃させて後はメンターが敵を倒せば経験値が分配される、メンティーにとどめをささせてボーナス経験値を渡すなどがありますが、現実世界では目に見える形で数値化されていないので難しいところです。\n\n『Javaエンジニア』などの相場は決まっているため、単純に『Javaエンジニア』としての戦闘力を5.0に上げても売上は5倍にはならないですが、0.2 を 0.8 にしたエンジニアを５人育成できれば売上が5倍になる可能性が出てきて、それがあなたの給与に反映される可能性が出てきます。\n\n![経験値.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d4a1ef0f-ec10-5b71-9110-3c7b161d3ddb.png)\n\n### 課題とレビュー\n\n知識を一方的に伝えて「分かった？」と聞いてみて、なんとも言えない表情で「分かった」と言わせてもあまり意味がないです。\n伝えたいことを課題形式にして伝えて、その結果をレビューするようにすると伝わったかどうかを確認することができます。\n観察力や知覚力を上げたり、適切なフィードバックを行う力を上げることもできるかと思います。何より、伝わらなくてガッカリしなくてよいです。\n\nまた、課題には必ず期限を設定しましょう。報連相や締切を守るといったことをたえず意識することは重要です。\n\n### 1回で伝えられるとしたら、それは洗脳\n\n相手に伝わるように説明することはとても難しいです。なんなら伝わらないことの方が多いです。\n自転車の乗り方などを思い出してもらうと分かりやすいかもしれません。よいコードの書き方など習得にトライアル＆エラーが必要なことは、一度の説明では伝わらないです。\n締切がある中で会話していると温度が上がることもあるかもしれませんが、最初から「伝わらないものだ、伝わればラッキー」ぐらいに思って話をすると意外とうまくいくかもしれません。\n\n### AIにはできない観察\n\n同じ様な質問を何度もされると思ったら、「なぜなぜ分析」を相手ではなく自分の脳内でやってみましょう。\n「なぜ、その質問をしてくるのか？」を考えると、**観察の解像度を上げる**ことができ、実はもっと別の課題が必要かもしれないなど気づきがあるかもしれません。\n相手をよく観察して、適切な課題を導き出すことは今のところはAIにはできないような気がしています。\n効率的な努力をしてもらえるようにうながすことが大事です。\n\n### 北風と太陽\n\nITは現役でいる間は勉強をし続けなければいけない厳しい職業です。\nそれゆえ厳しさは絶対的に必要ですが、北風の様に接っすると色々問題になります。\n心理的安全性を確保すべく、とにかく話をよく聴いて太陽の様に接してみるといいかもしれません。\n\n成功するプロジェクトのメンバーはいつもニコニコしていないといけないのです。\n\n## おわりに\n\nプログラムは、一人で学習することができ学んだ分だけのスキルが身につきます。\nこの様な性質のものは、一人で夜も寝ないで黙々と学習を続けるAIには勝てないでしょう。\n\n一方、メンタリングは、人と関わらないと学ぶことはできません。また、学んだ分だけのスキルは身につくけれども、相手によってよりよい選択肢が変わってくるため、スキルが身についたと実感し辛いです。\nこの様な性質のものは、現在の「質問に答える」形式のAIにはフォローできない業務と言えるでしょう。\n\nまた、メンタリングは、対話や相手のことを慮ることをベースに色々な施策を実施する行為であるため、設計や要件定義等、相手の考えていることを感じ取ったり共通のゴールを目指したりする能力が必要な業務でも役に立ちます。\n\nつまりは「よきメンターでいること」は難しいことですが、本人のキャリア形成や、組織および業界を維持するために必要なことなので取り組んでみてはいかがでしょうか？\n\n## おまけ０\n\nhttps://qiita.com/kaku3/items/75d98759609820595bc6\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/b4e038f5e91895aae163\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\n## おまけ４（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ５（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n[^1]: 会社に無断で一週間程ドラクエ休暇を取ったけど、休暇明けに拍手で迎えられたスタープログラマーとかいました。\n[^2]: 寝ないで仕事をすれば簡単に 1.0 を 2.0 にすることもできるかもしれませんが、それは長くは続かないのでオススメしません。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-06-04T12:11:54+09:00",
    "group": null,
    "id": "34b40446337a59213a75",
    "likes_count": 280,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 226,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人教育",
        "versions": []
      },
      {
        "name": "コミュニケーション",
        "versions": []
      },
      {
        "name": "チームビルディング",
        "versions": []
      }
    ],
    "title": "よきメンターでいることは難しい",
    "updated_at": "2023-06-17T23:53:41+09:00",
    "url": "https://qiita.com/kaku3/items/34b40446337a59213a75",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 46815,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:51\">\n<span id=\"業界の構造的に不足するエンジニア\" class=\"fragment\"></span><a href=\"#%E6%A5%AD%E7%95%8C%E3%81%AE%E6%A7%8B%E9%80%A0%E7%9A%84%E3%81%AB%E4%B8%8D%E8%B6%B3%E3%81%99%E3%82%8B%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2\"><i class=\"fa fa-link\"></i></a>業界の構造的に不足するエンジニア</h2>\n<p data-sourcepos=\"3:1-4:165\">『2030年にIT人材が最大79万人不足する』とのレポートが出ています。<br>\nこれを回避するためには『未経験エンジニア』を積極的に採用して『一人前エンジニア』に育てていかないといけません。</p>\n<p data-sourcepos=\"6:1-6:319\">ところが、SESで人月商売では『パイセン１人月』、『未経験エンジニア１人月』といった <strong>人単位の契約</strong> となっており、<strong>パイセン側も自分の仕事をするので精一杯で未経験エンジニアを育成する余裕がない</strong>ということが発生します。</p>\n<p data-sourcepos=\"8:1-8:302\">昔から銀の弾丸の様に語られがちな OJT(On the Job Training) という案件をやりながら訓練するという方法は、そういった問題について考慮がなされておらず、以下の式で表される変数の多いガチャとなっていると言えるでしょう。</p>\n<ul data-sourcepos=\"10:1-11:0\">\n<li data-sourcepos=\"10:1-11:0\"><strong>OJTでの成長 = 本人の素養 x メンター x 案件</strong></li>\n</ul>\n<p data-sourcepos=\"12:1-13:141\">パイセンのパイセンに色々教えてもらって育ったメンターパイセンは、下の人に色々教えるかもしれませんし、その逆もあるかもしれません。また、そもそも手順書通りやるだけの案件に配属された場合は、教育や育成といった概念が存在しないかもしれません。<br>\n当然本人の素養がない場合は、メンターや案件がいくらよくても成長しないという結果にもなりえます。</p>\n<p data-sourcepos=\"15:1-15:249\">そんな中で、忙しそうにしているパイセンの顔色とタイミングを伺い、なんとか質問をして案件の課題を解決しつつ自分も成長していくというのには限界があるように感じていました。</p>\n<p data-sourcepos=\"17:1-17:52\">…そんな最中、ChatGPTが登場しました。</p>\n<h2 data-sourcepos=\"19:1-19:35\">\n<span id=\"最強のメンター-chatgpt\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%BC%B7%E3%81%AE%E3%83%A1%E3%83%B3%E3%82%BF%E3%83%BC-chatgpt\"><i class=\"fa fa-link\"></i></a>最強のメンター ChatGPT？</h2>\n<p data-sourcepos=\"21:1-21:73\">『<strong>いつでも聞けて、何でも怒らずに答えてくれる</strong>』</p>\n<p data-sourcepos=\"23:1-23:249\">人類が、ない時間を削って『アンガーマネジメント』の本など読んで、なんとかして怒らない方法を身につけている間に、全く怒らない何でも答えてくれる最強の先生が登場しました。</p>\n<p data-sourcepos=\"25:1-26:265\">たまに（頻繁に？）嘘をつきますが、人間のパイセンも何でも答えられるかというとそうでもないということを考えると、充分よい先生であると言えるでしょう。<br>\n知識をひけらかしたり変なマウントを取ったりせずに、質問のレベルに合わせて回答のレベルを調整して簡潔に答えてくれるのもポイントが高いと言えるでしょう。<strong>心理的安全性マックス</strong>です。</p>\n<p data-sourcepos=\"28:1-28:255\">若手を観測していたところ、パイセンに質問することなく知識を効率的に身につけているようにも見えたので、これは現場の教育などの考え方を大きく変える可能性があるなと感じました。</p>\n<h2 data-sourcepos=\"30:1-30:57\">\n<span id=\"コミュニケーションスキルが低下する\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%9F%E3%83%A5%E3%83%8B%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%B9%E3%82%AD%E3%83%AB%E3%81%8C%E4%BD%8E%E4%B8%8B%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>コミュニケーションスキルが低下する？</h2>\n<p data-sourcepos=\"32:1-32:129\">深刻なメンター不足問題が解決するかに思えたのですが、不意に次の問題が頭をよぎりました。</p>\n<p data-sourcepos=\"34:1-34:60\">コミュニケーションスキルの低下問題です。</p>\n<p data-sourcepos=\"36:1-36:100\">人間には「<strong>使わないスキルは衰える</strong>」という恐ろしい性質があります。</p>\n<p data-sourcepos=\"38:1-38:232\">開発工程の作業など、自分がスキルを身につけられれば後は時間をかければ一人で解決できる課題については、ChatGPT先生は最高に優秀なメンターとなってくれるでしょう。</p>\n<p data-sourcepos=\"40:1-40:290\">ところが、パイセンに些末な質問はしなくてよくなるかもしれませんが、<strong>要件や仕様</strong> などは確認する必要がでてきますし、経験年数が上がって立場も上がればお客様に直接質問する機会もでてくることでしょう。</p>\n<p data-sourcepos=\"42:1-42:161\">この時に、<strong>人間は全く汲み取ってくれず、コミュニケーションが成立しない</strong> という絶望を経験するかもしれません。</p>\n<p data-sourcepos=\"44:1-44:279\">ChatGPT先生としか会話をしないことにより無自覚のうちに「<strong>相手のことを慮る能力</strong>」や「<strong>整理して説明する能力</strong>」などを使う機会がなくなり、それらの能力が衰えていく可能性があるように思えました。</p>\n<h2 data-sourcepos=\"46:1-46:60\">\n<span id=\"上流工程人材不足に拍車をかけるのでは\" class=\"fragment\"></span><a href=\"#%E4%B8%8A%E6%B5%81%E5%B7%A5%E7%A8%8B%E4%BA%BA%E6%9D%90%E4%B8%8D%E8%B6%B3%E3%81%AB%E6%8B%8D%E8%BB%8A%E3%82%92%E3%81%8B%E3%81%91%E3%82%8B%E3%81%AE%E3%81%A7%E3%81%AF\"><i class=\"fa fa-link\"></i></a>上流工程人材不足に拍車をかけるのでは？</h2>\n<p data-sourcepos=\"48:1-48:205\">要件定義や外部設計の難しさは、<strong>多くの利害が異なる関係者の意見を集めて、できるだけ多くの人が納得するように調整すること</strong>にあると思います。</p>\n<p data-sourcepos=\"50:1-50:283\">ChatGPT先生の登場によって、短期的には、目先の開発力を維持することはできるかもしれないけれども、長期的に見た場合に、要件定義や外部設計を行う人材の確保が一層難しくなっていくようにも思えました。</p>\n<p data-sourcepos=\"52:1-52:245\">その場合、要件が定義できず外部設計もできなくなり、開発案件が減り、「IT人材」は不足しているけれども、開発者が余っているという不思議な状況になることも考えられました。</p>\n<h2 data-sourcepos=\"54:1-54:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"56:1-57:102\">ChatGPT先生の登場により、深刻なメンター不足問題が解決する可能性が垣間見えました。<br>\nただ、その背後にはより難しい問題が見え隠れしている様にも思えました。</p>\n<p data-sourcepos=\"59:1-59:85\">とは言え、ChatGPT先生をあえて使わない意味はないと思います。</p>\n<p data-sourcepos=\"61:1-61:468\">われわれが作るソフトウェアは、<strong>AIではなく人間を幸せにするためのモノ</strong>であるはずなので、目の前のパイセンや同僚やお客様とコミュニケーションを取って、自分の作るソフトウェアの素晴らしさをきちんと伝えたり、お客様の想いをきちんと受け止めたりすることを忘れずに、用法・用量を守って利用していくのが良いのかなと感じました。</p>\n<h2 data-sourcepos=\"63:1-63:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"65:1-65:50\"><iframe id=\"qiita-embed-content__6e310043405f0d5a7e1099ed2fcab238\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6e310043405f0d5a7e1099ed2fcab238\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"67:1-67:50\"><iframe id=\"qiita-embed-content__a674d5f25802fefae7a544066f2c0096\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a674d5f25802fefae7a544066f2c0096\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"69:1-69:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"71:1-71:50\"><iframe id=\"qiita-embed-content__82ea716dbbab6120834c52caf40a9a85\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__82ea716dbbab6120834c52caf40a9a85\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"73:1-73:50\"><iframe id=\"qiita-embed-content__3e873735d254040bf04138aacb778930\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__3e873735d254040bf04138aacb778930\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"75:1-75:50\"><iframe id=\"qiita-embed-content__7ec8349c77622bd5b7e2c90056b03f38\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__7ec8349c77622bd5b7e2c90056b03f38\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"77:1-77:50\"><iframe id=\"qiita-embed-content__ccbeeea2f1abdf1e715195f17b75933c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ccbeeea2f1abdf1e715195f17b75933c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"79:1-79:48\">\n<span id=\"おまけ３は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ３（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"81:1-81:50\"><iframe id=\"qiita-embed-content__1aaf49e2b2bd8e963de3952904d309b6\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1aaf49e2b2bd8e963de3952904d309b6\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"83:1-83:50\"><iframe id=\"qiita-embed-content__225002bdf5b13e31762a1ee8c78396d1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__225002bdf5b13e31762a1ee8c78396d1\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb4e038f5e91895aae163\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"85:1-85:50\"><iframe id=\"qiita-embed-content__ba4447b2aa6a72542b74c5662c00bfca\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ba4447b2aa6a72542b74c5662c00bfca\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"87:1-87:50\"><iframe id=\"qiita-embed-content__e2aea1e7db0ff0579961b46be9ea56eb\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e2aea1e7db0ff0579961b46be9ea56eb\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"89:1-89:46\">\n<span id=\"おまけ４営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"91:1-91:50\"><iframe id=\"qiita-embed-content__4ce800a93e5bdf5a92db88019e2f9432\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__4ce800a93e5bdf5a92db88019e2f9432\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"93:1-93:50\"><iframe id=\"qiita-embed-content__33e3532b7286a03818c7cb481d55d818\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__33e3532b7286a03818c7cb481d55d818\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"95:1-95:66\">\n<span id=\"おまけ５エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ５（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"97:1-98:30\">2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"100:1-100:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## 業界の構造的に不足するエンジニア\n\n『2030年にIT人材が最大79万人不足する』とのレポートが出ています。\nこれを回避するためには『未経験エンジニア』を積極的に採用して『一人前エンジニア』に育てていかないといけません。\n\nところが、SESで人月商売では『パイセン１人月』、『未経験エンジニア１人月』といった **人単位の契約** となっており、**パイセン側も自分の仕事をするので精一杯で未経験エンジニアを育成する余裕がない**ということが発生します。\n\n昔から銀の弾丸の様に語られがちな OJT(On the Job Training) という案件をやりながら訓練するという方法は、そういった問題について考慮がなされておらず、以下の式で表される変数の多いガチャとなっていると言えるでしょう。\n\n- **OJTでの成長 = 本人の素養 x メンター x 案件**\n\nパイセンのパイセンに色々教えてもらって育ったメンターパイセンは、下の人に色々教えるかもしれませんし、その逆もあるかもしれません。また、そもそも手順書通りやるだけの案件に配属された場合は、教育や育成といった概念が存在しないかもしれません。\n当然本人の素養がない場合は、メンターや案件がいくらよくても成長しないという結果にもなりえます。\n\nそんな中で、忙しそうにしているパイセンの顔色とタイミングを伺い、なんとか質問をして案件の課題を解決しつつ自分も成長していくというのには限界があるように感じていました。\n\n…そんな最中、ChatGPTが登場しました。\n\n## 最強のメンター ChatGPT？\n\n『**いつでも聞けて、何でも怒らずに答えてくれる**』\n\n人類が、ない時間を削って『アンガーマネジメント』の本など読んで、なんとかして怒らない方法を身につけている間に、全く怒らない何でも答えてくれる最強の先生が登場しました。\n\nたまに（頻繁に？）嘘をつきますが、人間のパイセンも何でも答えられるかというとそうでもないということを考えると、充分よい先生であると言えるでしょう。\n知識をひけらかしたり変なマウントを取ったりせずに、質問のレベルに合わせて回答のレベルを調整して簡潔に答えてくれるのもポイントが高いと言えるでしょう。**心理的安全性マックス**です。\n\n若手を観測していたところ、パイセンに質問することなく知識を効率的に身につけているようにも見えたので、これは現場の教育などの考え方を大きく変える可能性があるなと感じました。\n\n## コミュニケーションスキルが低下する？\n\n深刻なメンター不足問題が解決するかに思えたのですが、不意に次の問題が頭をよぎりました。\n\nコミュニケーションスキルの低下問題です。\n\n人間には「**使わないスキルは衰える**」という恐ろしい性質があります。\n\n開発工程の作業など、自分がスキルを身につけられれば後は時間をかければ一人で解決できる課題については、ChatGPT先生は最高に優秀なメンターとなってくれるでしょう。\n\nところが、パイセンに些末な質問はしなくてよくなるかもしれませんが、**要件や仕様** などは確認する必要がでてきますし、経験年数が上がって立場も上がればお客様に直接質問する機会もでてくることでしょう。\n\nこの時に、**人間は全く汲み取ってくれず、コミュニケーションが成立しない** という絶望を経験するかもしれません。\n\nChatGPT先生としか会話をしないことにより無自覚のうちに「**相手のことを慮る能力**」や「**整理して説明する能力**」などを使う機会がなくなり、それらの能力が衰えていく可能性があるように思えました。\n\n## 上流工程人材不足に拍車をかけるのでは？\n\n要件定義や外部設計の難しさは、**多くの利害が異なる関係者の意見を集めて、できるだけ多くの人が納得するように調整すること**にあると思います。\n\nChatGPT先生の登場によって、短期的には、目先の開発力を維持することはできるかもしれないけれども、長期的に見た場合に、要件定義や外部設計を行う人材の確保が一層難しくなっていくようにも思えました。\n\nその場合、要件が定義できず外部設計もできなくなり、開発案件が減り、「IT人材」は不足しているけれども、開発者が余っているという不思議な状況になることも考えられました。\n\n## おわりに\n\nChatGPT先生の登場により、深刻なメンター不足問題が解決する可能性が垣間見えました。\nただ、その背後にはより難しい問題が見え隠れしている様にも思えました。\n\nとは言え、ChatGPT先生をあえて使わない意味はないと思います。\n\nわれわれが作るソフトウェアは、**AIではなく人間を幸せにするためのモノ**であるはずなので、目の前のパイセンや同僚やお客様とコミュニケーションを取って、自分の作るソフトウェアの素晴らしさをきちんと伝えたり、お客様の想いをきちんと受け止めたりすることを忘れずに、用法・用量を守って利用していくのが良いのかなと感じました。\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/b4e038f5e91895aae163\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\n## おまけ４（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n## おまけ５（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するとのことで、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 3,
    "created_at": "2023-05-20T17:29:21+09:00",
    "group": null,
    "id": "9763f547d497e6f02caf",
    "likes_count": 68,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 35,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      },
      {
        "name": "ChatGPT",
        "versions": []
      }
    ],
    "title": "ChatGPTはエンジニア不足問題を解消する銀の弾丸か？",
    "updated_at": "2023-06-10T15:20:23+09:00",
    "url": "https://qiita.com/kaku3/items/9763f547d497e6f02caf",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 24832,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:168\">ソフトウェア試験を行っている皆さんとソフトウェア開発を行っている皆さんこんにちは。<br>\n先日、ソフトウェア試験を行っているメンバーと障害票について議論になったのでちょっと整理をしておきたいと思います。</p>\n<h2 data-sourcepos=\"7:1-7:24\">\n<span id=\"障害票の書き方\" class=\"fragment\"></span><a href=\"#%E9%9A%9C%E5%AE%B3%E7%A5%A8%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9\"><i class=\"fa fa-link\"></i></a>障害票の書き方</h2>\n<p data-sourcepos=\"9:1-9:67\">公平を期するためにChatGPT先生に聞いておきます。</p>\n<ul data-sourcepos=\"11:1-11:17\">\n<li data-sourcepos=\"11:1-11:17\">障害票とは</li>\n</ul>\n<blockquote data-sourcepos=\"12:1-12:335\">\n<p data-sourcepos=\"12:3-12:335\">ソフトウェアの障害票とは、ソフトウェアが予期せぬ不具合を引き起こした場合に、その問題を報告するための文書です。一般的には、ソフトウェア開発者やサポート担当者が障害を解決するために必要な情報を提供することを目的としています。</p>\n</blockquote>\n<ul data-sourcepos=\"14:1-14:23\">\n<li data-sourcepos=\"14:1-14:23\">障害票の書き方</li>\n</ul>\n<blockquote data-sourcepos=\"15:1-29:287\">\n<p data-sourcepos=\"15:3-15:233\">ソフトウェアの障害票は、ソフトウェアが意図しない動作をした場合に、その問題を報告するための文書です。以下は、一般的なソフトウェア障害票の書き方の手順です。</p>\n<ol data-sourcepos=\"17:3-28:1\">\n<li data-sourcepos=\"17:3-18:1\">\n<p data-sourcepos=\"17:6-17:280\">障害の特定: 障害が発生した時期、頻度、場所、および影響などを特定します。具体的には、どの操作を実行したときに問題が発生したのか、エラーメッセージが表示されたかどうか、などを確認します。</p>\n</li>\n<li data-sourcepos=\"19:3-20:1\">\n<p data-sourcepos=\"19:6-19:253\">現象の記述: 障害の具体的な現象を詳細に記述します。具体的には、どのようなエラーメッセージが表示されたのか、プログラムの挙動に何か異常があったか、などを詳しく書きます。</p>\n</li>\n<li data-sourcepos=\"21:3-22:1\">\n<p data-sourcepos=\"21:6-21:181\">再現性の確認: 障害が再現可能かどうかを確認します。再現可能であれば、障害発生時の操作手順や環境などを詳細に記述します。</p>\n</li>\n<li data-sourcepos=\"23:3-24:1\">\n<p data-sourcepos=\"23:6-23:214\">原因の推測: 障害の原因を推測し、可能な原因を列挙します。具体的には、プログラムのバグ、環境の問題、ネットワークのトラブルなどが考えられます。</p>\n</li>\n<li data-sourcepos=\"25:3-26:1\">\n<p data-sourcepos=\"25:6-25:187\">対策の提案: 障害の解決策を提案します。具体的には、修正プログラムの開発、システムの再起動、データの復旧などが考えられます。</p>\n</li>\n<li data-sourcepos=\"27:3-28:1\">\n<p data-sourcepos=\"27:6-27:130\">付録: 障害発生時のログやスクリーンショットなど、関連する情報を付録として添付します。</p>\n</li>\n</ol>\n<p data-sourcepos=\"29:3-29:287\">以上が、一般的なソフトウェア障害票の書き方の手順です。障害票を作成する際は、できるだけ詳細に記述することが重要です。これにより、障害の再現性が高まり、解決策を見つけるための情報が得られます。</p>\n</blockquote>\n<p data-sourcepos=\"31:1-31:90\">障害票の書き方について、およその原理・原則は理解できますね。</p>\n<p data-sourcepos=\"33:1-34:220\">ただ、1.の「障害の特定」という用語が内容に対して難易度が高いように見えました。<br>\n本当に「障害の特定」まで行うとすると、開発の知識が必要になると思いますので、「障害の特定」は行わず以下3点を端的に伝える程度がよさそうに思えました。</p>\n<ul data-sourcepos=\"36:1-39:0\">\n<li data-sourcepos=\"36:1-36:11\">期待値</li>\n<li data-sourcepos=\"37:1-37:52\">結果(期待値とどこが異なっていたか)</li>\n<li data-sourcepos=\"38:1-39:0\">手順</li>\n</ul>\n<p data-sourcepos=\"40:1-40:468\">例えば、「自動販売機に120円入れてオレンジジュースのボタンを押す」という手順に対して、「オレンジジュースが出てくる」という期待値があった時に、「グレープジュースが出てきた」という結果になった時の障害票には、「オレンジジュースが出ずにグレープジュースが出てきた」と事実を端的に伝えてもらえれば開発者は修正を行えます。</p>\n<p data-sourcepos=\"42:1-43:189\">障害を特定しようと「グレープジュースが出てくる」手順の調査を行ったり、それを障害票に記載することはしなくても大丈夫です。<br>\nソースを読んで調査したのでなければ <strong>「たまたま同じ結果が出る手順」</strong> でしかないし、それは試験担当者がする作業ではないからです。</p>\n<p data-sourcepos=\"45:1-45:277\">ただし、100回に1回ぐらい再現するといった障害の場合には「グレープジュースが出てくる」手順の調査がもう少し必要になってきます。『再現手順』に何か条件が不足していることが考えられるからです。</p>\n<p data-sourcepos=\"47:1-47:180\">このあたりの線引は経験を積まないと分かりづらいところかもしれないので、手を動かす前に質問するようにするとよいと思います。</p>\n<h2 data-sourcepos=\"50:1-50:78\">\n<span id=\"開発の知識がなくてもいい感じの障害票を書ける\" class=\"fragment\"></span><a href=\"#%E9%96%8B%E7%99%BA%E3%81%AE%E7%9F%A5%E8%AD%98%E3%81%8C%E3%81%AA%E3%81%8F%E3%81%A6%E3%82%82%E3%81%84%E3%81%84%E6%84%9F%E3%81%98%E3%81%AE%E9%9A%9C%E5%AE%B3%E7%A5%A8%E3%82%92%E6%9B%B8%E3%81%91%E3%82%8B\"><i class=\"fa fa-link\"></i></a>開発の知識がなくても「いい感じ」の障害票を書ける？</h2>\n<p data-sourcepos=\"52:1-52:36\">追加で質問をしてみます。</p>\n<ul data-sourcepos=\"54:1-55:0\">\n<li data-sourcepos=\"54:1-55:0\">開発の知識がなくても「いい感じ」の障害票を書ける？</li>\n</ul>\n<blockquote data-sourcepos=\"56:1-70:323\">\n<p data-sourcepos=\"56:3-56:257\">開発の知識がなくても、障害票を書くことは可能です。ただし、障害が発生した原因や解決策についての深い知識がない場合、より詳細で的確な障害票を書くことが難しいかもしれません。</p>\n<p data-sourcepos=\"58:3-58:110\">以下は、開発の知識がなくても、より良い障害票を書くためのアドバイスです。</p>\n<ol data-sourcepos=\"60:3-69:1\">\n<li data-sourcepos=\"60:3-61:1\">\n<p data-sourcepos=\"60:6-60:250\">障害の発生状況を詳しく記述する: 障害が発生した状況について、詳しく記述することが重要です。具体的には、障害が発生した時期、頻度、影響範囲、操作手順などを記述します。</p>\n</li>\n<li data-sourcepos=\"62:3-63:1\">\n<p data-sourcepos=\"62:6-62:283\">障害の現象を詳しく記述する: 障害が引き起こした現象について、詳しく記述することが重要です。具体的には、エラーメッセージの内容、プログラムの挙動に何か異常があったかどうかなどを記述します。</p>\n</li>\n<li data-sourcepos=\"64:3-65:1\">\n<p data-sourcepos=\"64:6-64:235\">障害を再現する手順を詳しく記述する: 障害を再現する手順を詳しく記述することが重要です。再現可能な障害であれば、操作手順や環境をできるだけ正確に記述します。</p>\n</li>\n<li data-sourcepos=\"66:3-67:1\">\n<p data-sourcepos=\"66:6-66:225\">関連する情報を提供する: 障害が発生した環境や、使用しているソフトウェアのバージョン、OSのバージョン、ハードウェアなどの情報を提供することが重要です。</p>\n</li>\n<li data-sourcepos=\"68:3-69:1\">\n<p data-sourcepos=\"68:6-68:217\">ログやスクリーンショットなどの情報を提供する: 障害が発生した時に取得できたログやスクリーンショットなど、関連する情報を提供することが重要です。</p>\n</li>\n</ol>\n<p data-sourcepos=\"70:3-70:323\">以上のように、開発の知識がなくても、より詳細で的確な障害票を書くことができます。ただし、障害の原因や解決策についての深い知識がない場合は、開発者やサポート担当者による追加の情報収集や解析が必要になることがあります。</p>\n</blockquote>\n<p data-sourcepos=\"72:1-74:96\">開発の知識がなくても、アドバイスに従って実践していけばカイゼンはできそうですね。<br>\nただ、具体的な質問をしないと一般的な回答しか得られなそうですね。<br>\n具体的に問題を抱えている方は是非でGPT先生に質問してみてください。</p>\n<h2 data-sourcepos=\"77:1-77:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"79:1-79:323\">開発者と試験担当者で円滑にコミュニケーションが取れる障害票は、<strong>「詳しい障害票」</strong> ではなく <strong>「開発者が障害を直しやすく、試験担当者が修正確認がしやすい障害票」</strong> です。読む相手が仕事をしやすくなるのかどうかが大事です。</p>\n<p data-sourcepos=\"81:1-82:159\">仮に障害票に試験項目書へのリンクと試験番号しか書いてなくても、それで開発者が抜け漏れなく障害を直せて修正確認も行え、チーム全体の工数が下がるのであれば、それはよくできた障害票と言えるでしょう。<br>\n逆にどんなに詳しく書いてあっても、開発者が修正ができないのであれば、それはよくない障害票と言えるでしょう。</p>\n<p data-sourcepos=\"84:1-85:267\">障害票の記載が過剰な場合、コスト面で確実に悪い影響があります。ボディブローのようにじわじわダメージを与えます。それにも関わらず、それをわざわざ指摘する開発者はいません。指摘するメリットが開発者本人としては薄い上に関係性に悪い影響が出るかもしれないというリスクしかないからです。<br>\n一方で障害票の記載が不足している場合は開発者は聞くしかありません。あまりにも記載が少ない場合にはキレられるリスクはありますがお互いにとって最適な記載量に近づける可能性があります。</p>\n<p data-sourcepos=\"87:1-88:120\">具体的にどのような障害票がよいのかはチームによって異なると思います。<br>\n本記事が、皆さんのチームにおいてよりよい障害票ライフを送る一助になれば幸いです。</p>\n<h2 data-sourcepos=\"91:1-91:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"93:1-93:50\"><iframe id=\"qiita-embed-content__1f33574625af9fd989d64dd2f7a70a27\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1f33574625af9fd989d64dd2f7a70a27\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"95:1-95:50\"><iframe id=\"qiita-embed-content__ca232272dc88365425b264c964215481\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ca232272dc88365425b264c964215481\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"98:1-98:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"100:1-100:50\"><iframe id=\"qiita-embed-content__dcb3b11a59d1a769ccc925d2768718a2\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__dcb3b11a59d1a769ccc925d2768718a2\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"102:1-102:50\"><iframe id=\"qiita-embed-content__7d747739cf1a0401e13d94128f9b6211\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__7d747739cf1a0401e13d94128f9b6211\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"104:1-104:50\"><iframe id=\"qiita-embed-content__049b74f1d6acbcd95ce9d9feeb8baf35\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__049b74f1d6acbcd95ce9d9feeb8baf35\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"106:1-106:50\"><iframe id=\"qiita-embed-content__cc979a57e5aea5251bb5f4926df2a485\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__cc979a57e5aea5251bb5f4926df2a485\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"108:1-108:50\"><iframe id=\"qiita-embed-content__b3a1f0fa7a84b9aac3ef9ae5fd13ead2\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b3a1f0fa7a84b9aac3ef9ae5fd13ead2\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"110:1-110:46\">\n<span id=\"おまけ３営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ３（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"112:1-112:50\"><iframe id=\"qiita-embed-content__50498917827511af67ddbe3d31233e76\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__50498917827511af67ddbe3d31233e76\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"114:1-114:50\"><iframe id=\"qiita-embed-content__65fe9729b44415b304b99fa75fb44e92\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__65fe9729b44415b304b99fa75fb44e92\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"117:1-117:45\">\n<span id=\"おまけ４パイセン向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%83%91%E3%82%A4%E3%82%BB%E3%83%B3%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ４（パイセン向け記事）</h2>\n<p data-sourcepos=\"119:1-119:50\"><iframe id=\"qiita-embed-content__e0cca32e390d91a42d73a34f5b41eff4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e0cca32e390d91a42d73a34f5b41eff4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fcafccb1ee631d9f61190\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"122:1-122:66\">\n<span id=\"おまけ５エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ５（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"124:1-125:30\">2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"127:1-127:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\nソフトウェア試験を行っている皆さんとソフトウェア開発を行っている皆さんこんにちは。\n先日、ソフトウェア試験を行っているメンバーと障害票について議論になったのでちょっと整理をしておきたいと思います。\n\n\n## 障害票の書き方\n\n公平を期するためにChatGPT先生に聞いておきます。\n\n- 障害票とは\n> ソフトウェアの障害票とは、ソフトウェアが予期せぬ不具合を引き起こした場合に、その問題を報告するための文書です。一般的には、ソフトウェア開発者やサポート担当者が障害を解決するために必要な情報を提供することを目的としています。\n\n- 障害票の書き方\n> ソフトウェアの障害票は、ソフトウェアが意図しない動作をした場合に、その問題を報告するための文書です。以下は、一般的なソフトウェア障害票の書き方の手順です。\n>\n> 1. 障害の特定: 障害が発生した時期、頻度、場所、および影響などを特定します。具体的には、どの操作を実行したときに問題が発生したのか、エラーメッセージが表示されたかどうか、などを確認します。\n>\n> 2. 現象の記述: 障害の具体的な現象を詳細に記述します。具体的には、どのようなエラーメッセージが表示されたのか、プログラムの挙動に何か異常があったか、などを詳しく書きます。\n>\n> 3. 再現性の確認: 障害が再現可能かどうかを確認します。再現可能であれば、障害発生時の操作手順や環境などを詳細に記述します。\n>\n> 4. 原因の推測: 障害の原因を推測し、可能な原因を列挙します。具体的には、プログラムのバグ、環境の問題、ネットワークのトラブルなどが考えられます。\n>\n> 5. 対策の提案: 障害の解決策を提案します。具体的には、修正プログラムの開発、システムの再起動、データの復旧などが考えられます。\n>\n> 6. 付録: 障害発生時のログやスクリーンショットなど、関連する情報を付録として添付します。\n>\n> 以上が、一般的なソフトウェア障害票の書き方の手順です。障害票を作成する際は、できるだけ詳細に記述することが重要です。これにより、障害の再現性が高まり、解決策を見つけるための情報が得られます。\n\n障害票の書き方について、およその原理・原則は理解できますね。\n\nただ、1.の「障害の特定」という用語が内容に対して難易度が高いように見えました。\n本当に「障害の特定」まで行うとすると、開発の知識が必要になると思いますので、「障害の特定」は行わず以下3点を端的に伝える程度がよさそうに思えました。\n\n- 期待値\n- 結果(期待値とどこが異なっていたか)\n- 手順\n\n例えば、「自動販売機に120円入れてオレンジジュースのボタンを押す」という手順に対して、「オレンジジュースが出てくる」という期待値があった時に、「グレープジュースが出てきた」という結果になった時の障害票には、「オレンジジュースが出ずにグレープジュースが出てきた」と事実を端的に伝えてもらえれば開発者は修正を行えます。\n\n障害を特定しようと「グレープジュースが出てくる」手順の調査を行ったり、それを障害票に記載することはしなくても大丈夫です。\nソースを読んで調査したのでなければ **「たまたま同じ結果が出る手順」** でしかないし、それは試験担当者がする作業ではないからです。\n\nただし、100回に1回ぐらい再現するといった障害の場合には「グレープジュースが出てくる」手順の調査がもう少し必要になってきます。『再現手順』に何か条件が不足していることが考えられるからです。\n\nこのあたりの線引は経験を積まないと分かりづらいところかもしれないので、手を動かす前に質問するようにするとよいと思います。\n\n\n## 開発の知識がなくても「いい感じ」の障害票を書ける？\n\n追加で質問をしてみます。\n\n- 開発の知識がなくても「いい感じ」の障害票を書ける？\n\n> 開発の知識がなくても、障害票を書くことは可能です。ただし、障害が発生した原因や解決策についての深い知識がない場合、より詳細で的確な障害票を書くことが難しいかもしれません。\n>\n> 以下は、開発の知識がなくても、より良い障害票を書くためのアドバイスです。\n>\n> 1. 障害の発生状況を詳しく記述する: 障害が発生した状況について、詳しく記述することが重要です。具体的には、障害が発生した時期、頻度、影響範囲、操作手順などを記述します。\n>\n> 2. 障害の現象を詳しく記述する: 障害が引き起こした現象について、詳しく記述することが重要です。具体的には、エラーメッセージの内容、プログラムの挙動に何か異常があったかどうかなどを記述します。\n>\n> 3. 障害を再現する手順を詳しく記述する: 障害を再現する手順を詳しく記述することが重要です。再現可能な障害であれば、操作手順や環境をできるだけ正確に記述します。\n>\n> 4. 関連する情報を提供する: 障害が発生した環境や、使用しているソフトウェアのバージョン、OSのバージョン、ハードウェアなどの情報を提供することが重要です。\n>\n> 5. ログやスクリーンショットなどの情報を提供する: 障害が発生した時に取得できたログやスクリーンショットなど、関連する情報を提供することが重要です。\n>\n> 以上のように、開発の知識がなくても、より詳細で的確な障害票を書くことができます。ただし、障害の原因や解決策についての深い知識がない場合は、開発者やサポート担当者による追加の情報収集や解析が必要になることがあります。\n\n開発の知識がなくても、アドバイスに従って実践していけばカイゼンはできそうですね。\nただ、具体的な質問をしないと一般的な回答しか得られなそうですね。\n具体的に問題を抱えている方は是非でGPT先生に質問してみてください。\n\n\n## おわりに\n\n開発者と試験担当者で円滑にコミュニケーションが取れる障害票は、**「詳しい障害票」** ではなく **「開発者が障害を直しやすく、試験担当者が修正確認がしやすい障害票」** です。読む相手が仕事をしやすくなるのかどうかが大事です。\n\n仮に障害票に試験項目書へのリンクと試験番号しか書いてなくても、それで開発者が抜け漏れなく障害を直せて修正確認も行え、チーム全体の工数が下がるのであれば、それはよくできた障害票と言えるでしょう。\n逆にどんなに詳しく書いてあっても、開発者が修正ができないのであれば、それはよくない障害票と言えるでしょう。\n\n障害票の記載が過剰な場合、コスト面で確実に悪い影響があります。ボディブローのようにじわじわダメージを与えます。それにも関わらず、それをわざわざ指摘する開発者はいません。指摘するメリットが開発者本人としては薄い上に関係性に悪い影響が出るかもしれないというリスクしかないからです。\n一方で障害票の記載が不足している場合は開発者は聞くしかありません。あまりにも記載が少ない場合にはキレられるリスクはありますがお互いにとって最適な記載量に近づける可能性があります。\n\n具体的にどのような障害票がよいのかはチームによって異なると思います。\n本記事が、皆さんのチームにおいてよりよい障害票ライフを送る一助になれば幸いです。\n\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n\n## おまけ４（パイセン向け記事）\n\nhttps://qiita.com/kaku3/items/cafccb1ee631d9f61190\n\n\n## おまけ５（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-05-13T17:45:02+09:00",
    "group": null,
    "id": "5b11d2e1aace73c36340",
    "likes_count": 26,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 23,
    "tags": [
      {
        "name": "テスト",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      }
    ],
    "title": "いい感じの障害票を書くのは難しい",
    "updated_at": "2023-05-13T17:45:02+09:00",
    "url": "https://qiita.com/kaku3/items/5b11d2e1aace73c36340",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 16867,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:451\">開発者として経験を積んで、<strong>「人に頼むよりも自分でする方が早いから」</strong> という考えに固執し、<strong>「人に頼まず自分でやってしまう」</strong> という壁にぶつかることがあるかもしれません。リーダーに昇格した直後などは、自分で仕事をした経験はあるけれど、人に頼んだ経験がないなどの理由でそのような選択をするかもしれません。</p>\n<p data-sourcepos=\"5:1-5:260\">頼んだ相手が自分よりも大きな見積もりを出してしまうことがあります。その場合、自分に多くの作業を割り振ってしまい、<strong>「自分だけが忙しくなる状況」</strong> に陥ってしまうこともあります。</p>\n<p data-sourcepos=\"7:1-7:136\">そこで今回は、簡単に読めてこういった状況を避けるのに役に立つ本を3冊程紹介したいと思います。</p>\n<h2 data-sourcepos=\"10:1-10:66\">\n<span id=\"最強のエンジニアになるための話し方の教科書\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%BC%B7%E3%81%AE%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E8%A9%B1%E3%81%97%E6%96%B9%E3%81%AE%E6%95%99%E7%A7%91%E6%9B%B8\"><i class=\"fa fa-link\"></i></a>最強のエンジニアになるための話し方の教科書</h2>\n<blockquote data-sourcepos=\"11:1-11:68\">\n<p data-sourcepos=\"11:3-11:68\">技術力(200%) x 伝える力(0) = 真のパフォーマンス(0)</p>\n</blockquote>\n<p data-sourcepos=\"13:1-13:74\">(出典：最強のエンジニアになるための話し方の教科書)</p>\n<p data-sourcepos=\"15:1-15:195\">どんなに技術力があってもちゃんと伝えないとダメなんだなぁということが茶番形式（？）で書かれていて読み物としてもおもしろい本でした。</p>\n<p data-sourcepos=\"17:1-17:346\"><a href=\"https://www.amazon.co.jp/%E6%9C%80%E5%BC%B7%E3%81%AE%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E8%A9%B1%E3%81%97%E6%96%B9%E3%81%AE%E6%95%99%E7%A7%91%E6%9B%B8-%E4%BA%80%E5%B1%B1-%E9%9B%85%E5%8F%B8/dp/483780487X\" rel=\"nofollow noopener\" target=\"_blank\">⇒ amazon : 最強のエンジニアになるための話し方の教科書</a></p>\n<h2 data-sourcepos=\"20:1-20:52\">\n<span id=\"なぜあなたの話はつまらないのか\" class=\"fragment\"></span><a href=\"#%E3%81%AA%E3%81%9C%E3%81%82%E3%81%AA%E3%81%9F%E3%81%AE%E8%A9%B1%E3%81%AF%E3%81%A4%E3%81%BE%E3%82%89%E3%81%AA%E3%81%84%E3%81%AE%E3%81%8B\"><i class=\"fa fa-link\"></i></a>なぜ、あなたの話はつまらないのか?</h2>\n<p data-sourcepos=\"22:1-22:246\">基本的な会話の構造をとてもロジカルに説明しており、面白い話ができるようになるというよりは、日常のコミュニケーションが円滑にできるようになるのに使える印象の本でした。</p>\n<p data-sourcepos=\"24:1-24:230\">IT業界では、プログラムを書く以外にも、よきパイセンとして新人と会話できたり適切に若者を導く能力も要求されたりするので読んでおいても損はないかと思いました。</p>\n<p data-sourcepos=\"26:1-26:296\"><a href=\"https://www.amazon.co.jp/%E3%81%AA%E3%81%9C%E3%80%81%E3%81%82%E3%81%AA%E3%81%9F%E3%81%AE%E8%A9%B1%E3%81%AF%E3%81%A4%E3%81%BE%E3%82%89%E3%81%AA%E3%81%84%E3%81%AE%E3%81%8B-%E7%BE%8E%E6%BF%83%E9%83%A8-%E9%81%94%E5%AE%8F/dp/4860636740\" rel=\"nofollow noopener\" target=\"_blank\">⇒ amazon : なぜ、あなたの話はつまらないのか?</a></p>\n<h2 data-sourcepos=\"29:1-29:89\">\n<span id=\"伝わる-文章力が身につく本-基礎からわかる伝わるシリーズ\" class=\"fragment\"></span><a href=\"#%E4%BC%9D%E3%82%8F%E3%82%8B-%E6%96%87%E7%AB%A0%E5%8A%9B%E3%81%8C%E8%BA%AB%E3%81%AB%E3%81%A4%E3%81%8F%E6%9C%AC-%E5%9F%BA%E7%A4%8E%E3%81%8B%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E4%BC%9D%E3%82%8F%E3%82%8B%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>伝わる! 文章力が身につく本 (基礎からわかる\"伝わる!\"シリーズ)</h2>\n<p data-sourcepos=\"31:1-31:236\">80のコツが、それぞれ悪い例→改善例を含む見開き１ページの解説となっていて辞書的に利用できそうな本でした。文章の構成については基本的な考え方が示されていました。</p>\n<p data-sourcepos=\"33:1-33:174\">基本をきちんと学んで丁寧に実践していくのが上達の近道だと思うので、一度は目を通しておいてもよさそうな本に思えました。</p>\n<p data-sourcepos=\"35:1-35:416\"><a href=\"https://www.amazon.co.jp/%E4%BC%9D%E3%82%8F%E3%82%8B-%E6%96%87%E7%AB%A0%E5%8A%9B%E3%81%8C%E8%BA%AB%E3%81%AB%E3%81%A4%E3%81%8F%E6%9C%AC-%E5%9F%BA%E7%A4%8E%E3%81%8B%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E2%80%9C%E4%BC%9D%E3%82%8F%E3%82%8B-%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-%E5%B0%8F%E7%AC%A0%E5%8E%9F/dp/4471191160\" rel=\"nofollow noopener\" target=\"_blank\">⇒ amazon : 伝わる! 文章力が身につく本 (基礎からわかる\"伝わる!\"シリーズ)</a></p>\n<h2 data-sourcepos=\"38:1-38:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"40:1-40:336\">本の内容を総じて見ると、共通して言えることは <strong>「聞き手や読み手のことを考える」</strong> ということでした。プログラムだけを書いている場合、その経験を積むことが難しいと思われるので、何らかの方法でその経験を積む必要があると感じました。</p>\n<p data-sourcepos=\"42:1-42:414\">また、設計書については、過去の設計書を参考に書くことが多いですが、完成した設計書を見ても、「なぜそのような書き方になったのか」を読み取ることは難しいです。そのため、「伝わる！文章力が身につく本」を先に読んでから設計書を書いてもらうことで、教育コストが下げられる様に思えました。</p>\n<p data-sourcepos=\"44:1-44:105\">少し俯瞰した目線で業務を見てカイゼンするきっかけなどになれば幸いです。</p>\n<h2 data-sourcepos=\"47:1-47:15\">\n<span id=\"おまけ０\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%90\"><i class=\"fa fa-link\"></i></a>おまけ０</h2>\n<p data-sourcepos=\"49:1-49:50\"><iframe id=\"qiita-embed-content__5b63d40c0b4ff607264216ba5e72c4f6\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__5b63d40c0b4ff607264216ba5e72c4f6\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F9763f547d497e6f02caf\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"51:1-51:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"53:1-53:50\"><iframe id=\"qiita-embed-content__cc592dbffe9ee80551888a08a81564d8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__cc592dbffe9ee80551888a08a81564d8\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"55:1-55:50\"><iframe id=\"qiita-embed-content__2b9ad4f2819cfca037bd0c44582350c9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2b9ad4f2819cfca037bd0c44582350c9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"58:1-58:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"60:1-60:50\"><iframe id=\"qiita-embed-content__51f99793997ebc214a02c12c2e76d5fb\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__51f99793997ebc214a02c12c2e76d5fb\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"62:1-62:50\"><iframe id=\"qiita-embed-content__3453d4778337692698bb3d1b6d66161c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__3453d4778337692698bb3d1b6d66161c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"64:1-64:50\"><iframe id=\"qiita-embed-content__951c0de3aa878bc3df5dbe61716c30cb\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__951c0de3aa878bc3df5dbe61716c30cb\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"66:1-66:50\"><iframe id=\"qiita-embed-content__7f383112c80425e9f17ca308617736d9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__7f383112c80425e9f17ca308617736d9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"68:1-68:48\">\n<span id=\"おまけ３は難しいシリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ３（...は難しいシリーズ）</h2>\n<p data-sourcepos=\"70:1-70:50\"><iframe id=\"qiita-embed-content__87155bf270df5321826bba63323259e4\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__87155bf270df5321826bba63323259e4\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"72:1-72:50\"><iframe id=\"qiita-embed-content__a7903f6672ce81776bb21b93d3e7484b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a7903f6672ce81776bb21b93d3e7484b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F5b11d2e1aace73c36340\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"74:1-74:50\"><iframe id=\"qiita-embed-content__ee161610b6c9003dd68079d59d2cd2fb\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ee161610b6c9003dd68079d59d2cd2fb\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F34b40446337a59213a75\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"76:1-76:46\">\n<span id=\"おまけ４営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ４（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"78:1-78:50\"><iframe id=\"qiita-embed-content__7c860dc74dc8cd50b671051f421ab183\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__7c860dc74dc8cd50b671051f421ab183\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"80:1-80:50\"><iframe id=\"qiita-embed-content__ff7d00567f359650daad4051c0b9cbee\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ff7d00567f359650daad4051c0b9cbee\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"83:1-83:66\">\n<span id=\"おまけ５エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%95%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ５（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"85:1-86:30\">2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"88:1-88:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\n開発者として経験を積んで、**「人に頼むよりも自分でする方が早いから」** という考えに固執し、**「人に頼まず自分でやってしまう」** という壁にぶつかることがあるかもしれません。リーダーに昇格した直後などは、自分で仕事をした経験はあるけれど、人に頼んだ経験がないなどの理由でそのような選択をするかもしれません。\n\n頼んだ相手が自分よりも大きな見積もりを出してしまうことがあります。その場合、自分に多くの作業を割り振ってしまい、**「自分だけが忙しくなる状況」** に陥ってしまうこともあります。\n\nそこで今回は、簡単に読めてこういった状況を避けるのに役に立つ本を3冊程紹介したいと思います。\n\n\n## 最強のエンジニアになるための話し方の教科書\n> 技術力(200%) x 伝える力(0) = 真のパフォーマンス(0)\n\n(出典：最強のエンジニアになるための話し方の教科書)\n\nどんなに技術力があってもちゃんと伝えないとダメなんだなぁということが茶番形式（？）で書かれていて読み物としてもおもしろい本でした。\n\n[⇒ amazon : 最強のエンジニアになるための話し方の教科書](https://www.amazon.co.jp/%E6%9C%80%E5%BC%B7%E3%81%AE%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E8%A9%B1%E3%81%97%E6%96%B9%E3%81%AE%E6%95%99%E7%A7%91%E6%9B%B8-%E4%BA%80%E5%B1%B1-%E9%9B%85%E5%8F%B8/dp/483780487X)\n\n\n## なぜ、あなたの話はつまらないのか?\n\n基本的な会話の構造をとてもロジカルに説明しており、面白い話ができるようになるというよりは、日常のコミュニケーションが円滑にできるようになるのに使える印象の本でした。\n\nIT業界では、プログラムを書く以外にも、よきパイセンとして新人と会話できたり適切に若者を導く能力も要求されたりするので読んでおいても損はないかと思いました。\n\n[⇒ amazon : なぜ、あなたの話はつまらないのか?](https://www.amazon.co.jp/%E3%81%AA%E3%81%9C%E3%80%81%E3%81%82%E3%81%AA%E3%81%9F%E3%81%AE%E8%A9%B1%E3%81%AF%E3%81%A4%E3%81%BE%E3%82%89%E3%81%AA%E3%81%84%E3%81%AE%E3%81%8B-%E7%BE%8E%E6%BF%83%E9%83%A8-%E9%81%94%E5%AE%8F/dp/4860636740)\n\n\n## 伝わる! 文章力が身につく本 (基礎からわかる\"伝わる!\"シリーズ)\n\n80のコツが、それぞれ悪い例→改善例を含む見開き１ページの解説となっていて辞書的に利用できそうな本でした。文章の構成については基本的な考え方が示されていました。\n\n基本をきちんと学んで丁寧に実践していくのが上達の近道だと思うので、一度は目を通しておいてもよさそうな本に思えました。\n\n[⇒ amazon : 伝わる! 文章力が身につく本 (基礎からわかる\"伝わる!\"シリーズ)](https://www.amazon.co.jp/%E4%BC%9D%E3%82%8F%E3%82%8B-%E6%96%87%E7%AB%A0%E5%8A%9B%E3%81%8C%E8%BA%AB%E3%81%AB%E3%81%A4%E3%81%8F%E6%9C%AC-%E5%9F%BA%E7%A4%8E%E3%81%8B%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E2%80%9C%E4%BC%9D%E3%82%8F%E3%82%8B-%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-%E5%B0%8F%E7%AC%A0%E5%8E%9F/dp/4471191160)\n\n\n## おわりに\n\n本の内容を総じて見ると、共通して言えることは **「聞き手や読み手のことを考える」** ということでした。プログラムだけを書いている場合、その経験を積むことが難しいと思われるので、何らかの方法でその経験を積む必要があると感じました。\n\nまた、設計書については、過去の設計書を参考に書くことが多いですが、完成した設計書を見ても、「なぜそのような書き方になったのか」を読み取ることは難しいです。そのため、「伝わる！文章力が身につく本」を先に読んでから設計書を書いてもらうことで、教育コストが下げられる様に思えました。\n\n少し俯瞰した目線で業務を見てカイゼンするきっかけなどになれば幸いです。\n\n\n## おまけ０\n\nhttps://qiita.com/kaku3/items/9763f547d497e6f02caf\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（...は難しいシリーズ）\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/5b11d2e1aace73c36340\n\nhttps://qiita.com/kaku3/items/34b40446337a59213a75\n\n## おまけ４（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n\n## おまけ５（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-05-05T16:48:29+09:00",
    "group": null,
    "id": "cafccb1ee631d9f61190",
    "likes_count": 379,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 434,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "書籍",
        "versions": []
      },
      {
        "name": "コミュニケーション",
        "versions": []
      }
    ],
    "title": "人に仕事を振れないパイセン向け：３時間で読めて一生使える本３選",
    "updated_at": "2023-06-04T12:20:20+09:00",
    "url": "https://qiita.com/kaku3/items/cafccb1ee631d9f61190",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 71615,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:36\">\n<span id=\"学習のモチベーション\" class=\"fragment\"></span><a href=\"#%E5%AD%A6%E7%BF%92%E3%81%AE%E3%83%A2%E3%83%81%E3%83%99%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\"><i class=\"fa fa-link\"></i></a>学習のモチベーション？</h2>\n<p data-sourcepos=\"3:1-4:251\">職業エンジニアの皆様こんにちは。<br>\n休日や業後などの自分の時間はいかがお過ごしでしょうか？Qiitaを見ている諸兄におきましては自分の時間でもドーパミンをダラダラ垂れ流しつつガンガン勉強しておりますでしょうか。</p>\n<p data-sourcepos=\"6:1-6:443\">「ITエンジニア」という職業は専門職であり、その専門性により市場優位性を保つ職種ですが、日中の業務だけでは専門性を維持することは不可能です。なぜなら、日中の業務では「今ある自分のスキルを時間で切り売りして換金」することになりますが、その傍らで新しい技術がバカスカ生み出されている様な業界だからです。</p>\n<p data-sourcepos=\"8:1-8:258\">ただ、新しい技術自体に価値があるわけではなく、その技術を利用して開発された製品などが生み出す価値に価値があるので、必ずしも無限に新しい技術を習得する必要はないとも言えます。</p>\n<p data-sourcepos=\"10:1-10:201\">そのような状況で、自分の時間でプログラムを学習するモチベーションを保つのはなかなか難しいなと思いましたのでGPT先生に質問をしてみました。</p>\n<p data-sourcepos=\"12:1-12:119\"><a href=\"https://camo.qiitausercontent.com/9d201d6ff20d3240f2c3ab7998b43f0123ea54e8/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f32363039383039322d323264372d663863642d356237342d3364373838373965343462372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F26098092-22d7-f8cd-5b74-3d78879e44b7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b320fd83e5f6180339f0ad9a311ebedd\" alt=\"gpt.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/26098092-22d7-f8cd-5b74-3d78879e44b7.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F26098092-22d7-f8cd-5b74-3d78879e44b7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=74ff5df36d04cc481c35072e7747bfb5 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"15:1-15:242\">いかがでしょうか？上記 1-5 いずれかに当てはまったあなたは今すぐこの記事を閉じて学習をはじめるとよいですし、当てはまらなかったあなたは、以下考察編にお進みください。</p>\n<h2 data-sourcepos=\"18:1-18:48\">\n<span id=\"マズロー欲求５段階説から考える\" class=\"fragment\"></span><a href=\"#%E3%83%9E%E3%82%BA%E3%83%AD%E3%83%BC%E6%AC%B2%E6%B1%82%EF%BC%95%E6%AE%B5%E9%9A%8E%E8%AA%AC%E3%81%8B%E3%82%89%E8%80%83%E3%81%88%E3%82%8B\"><i class=\"fa fa-link\"></i></a>マズロー欲求５段階説から考える</h2>\n<p data-sourcepos=\"20:1-20:108\">ということでまずはみんな大好きマズロー欲求５段階説から考えてみましょう。</p>\n<p data-sourcepos=\"22:1-22:135\"><a href=\"https://camo.qiitausercontent.com/da649428173a5e3d59f100799fe3403f28e9aa01/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f65386365666366332d623038312d633931332d623033652d3836613163663865393263302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe8cefcf3-b081-c913-b03e-86a1cf8e92c0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=6c705a5e6116fe4b91047fbd12a92af3\" alt=\"マズロー.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e8cefcf3-b081-c913-b03e-86a1cf8e92c0.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe8cefcf3-b081-c913-b03e-86a1cf8e92c0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=479564c4701828f49cd301eded5abdef 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"25:1-25:510\">Qiita に寄稿されているような方は、「自己実現欲求」や「承認欲求」などをモチベーションの源泉として活動していると推察できるかと思ったのですが、わたし自身は、将来への漠然とした不安に対して『モノを整理して書いて伝える能力がないと困るかな』という感覚で寄稿しているので「困ってない自分になっていたいという自己実現欲求」に基づいて行動していそうです。</p>\n<p data-sourcepos=\"27:1-27:478\">『スクールに入って一定のカリキュラムをこなせば、リモートワークの高単価案件をゲットできる』という触れ込みを行動指針とした方の場合、スクールを卒業して何らかのIT企業に入ることで「社会的欲求」が満たされ、それ以上の欲求は発生しない可能性が高いと考えられます。『IT業界は給料がいい』と思って就職したケースの場合も同様でしょう。</p>\n<h2 data-sourcepos=\"30:1-30:42\">\n<span id=\"欠乏欲求と成長欲求\" class=\"fragment\"></span><a href=\"#%E6%AC%A0%E4%B9%8F%E6%AC%B2%E6%B1%82%E3%81%A8%E6%88%90%E9%95%B7%E6%AC%B2%E6%B1%82\"><i class=\"fa fa-link\"></i></a>「欠乏欲求」と「成長欲求」</h2>\n<p data-sourcepos=\"32:1-32:75\">ここで、欲求の種類についても確認しておきましょう。</p>\n<p data-sourcepos=\"34:1-34:75\">欲求には２種類あり、それぞれ以下の通りとなります。</p>\n<ul data-sourcepos=\"36:1-40:0\">\n<li data-sourcepos=\"36:1-37:60\">「欠乏欲求」（マイナスをゼロに）<br>\n不足しているものを満たしたいという欲求。</li>\n<li data-sourcepos=\"38:1-40:0\">「成長欲求」（ゼロからプラスに）<br>\n自分を成長させたいという欲求。</li>\n</ul>\n<p data-sourcepos=\"41:1-41:276\">プログラムを好きで勉強している方は、おそらく「成長欲求」である「自己実現欲求」を持っており、日常業務が手一杯の方は、「社会的欲求」や「安全欲求」が満たされていないと考えられるでしょう。</p>\n<p data-sourcepos=\"43:1-43:210\">まずは、自分や成長を促すべき他者がどのような状況で、どのような欲求を持っているのかを分析し、適切な課題を設定することが重要と言えるでしょう。</p>\n<h2 data-sourcepos=\"46:1-46:24\">\n<span id=\"内発的動機づけ\" class=\"fragment\"></span><a href=\"#%E5%86%85%E7%99%BA%E7%9A%84%E5%8B%95%E6%A9%9F%E3%81%A5%E3%81%91\"><i class=\"fa fa-link\"></i></a>内発的動機づけ</h2>\n<p data-sourcepos=\"48:1-48:309\">「欠乏欲求」にせよ「成長欲求」にせよ、自らの時間で学習を行うためには「内発的動機」、すなわち自ら取り組みたいと思う気持ちが必要となるので、どちらの欲求をモチベーションの源泉にできるのか考える必要があります。</p>\n<p data-sourcepos=\"50:1-51:259\">ここで、 <strong>『高次の欲求は、低次の欲求が満たされないと発生しない』</strong> という重要な法則があります。<br>\n『組織に所属することはできたが日常業務が手一杯』といった場合、「社会的欲求」や「安全欲求」が微妙に満たされていない状態となり、「自己実現欲求」は発生しないことになります。<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup></p>\n<p data-sourcepos=\"53:1-53:387\">そのような方に対しては「便利で役に立つものを作ろう」と提案し「承認欲求」を満たすことを促すよりも、「日常業務を無事にこなせるようにするスキルが身につくための勉強をしよう」と提案し「欠乏欲求」を満たすことを促す方が内発的動機づけにつながると考えられるでしょう。</p>\n<p data-sourcepos=\"55:1-55:315\">また、少しの努力で少しの欠乏が満たされる提案をするのも大事です。欠乏を満たす行為は基本的には苦痛を伴う可能性が高いからです。定期的に欠乏が満たされた達成感が提供されないと努力を継続することは難しくなるでしょう。</p>\n<h2 data-sourcepos=\"58:1-58:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"60:1-62:297\">学習のモチベーションについて、マズロー説から考察してみました。<br>\n「自己実現欲求」や「承認欲求」を持てている方は、ITエンジニアとしてドーパミンをダラダラ垂れ流しつつガンガン努力を継続できるのかと思えました。<br>\nそうでない方は、目先のやるべきことをとにかく細かく分解してひとつひとつ完了させて少しずつ満たせていない何かを埋めて、今いる社会集団で「社会的欲求」を満たせるようになっていくのが良さそうに思えました。</p>\n<h2 data-sourcepos=\"65:1-65:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"67:1-67:50\"><iframe id=\"qiita-embed-content__97e231e7460179c55d395ad740d17145\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__97e231e7460179c55d395ad740d17145\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"69:1-69:50\"><iframe id=\"qiita-embed-content__da84a90c680eb1cff2986cc553c94ff5\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__da84a90c680eb1cff2986cc553c94ff5\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"72:1-72:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"74:1-74:50\"><iframe id=\"qiita-embed-content__1a62e119d97f4325944acf176fa05e3b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1a62e119d97f4325944acf176fa05e3b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"76:1-76:50\"><iframe id=\"qiita-embed-content__ae63113de2dc8367b9315bda9902c706\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ae63113de2dc8367b9315bda9902c706\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"78:1-78:50\"><iframe id=\"qiita-embed-content__a21b156bed481e912b6c204bf006fbd2\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a21b156bed481e912b6c204bf006fbd2\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"80:1-80:50\"><iframe id=\"qiita-embed-content__f782281473ca39945ede08f75c45ad25\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f782281473ca39945ede08f75c45ad25\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"82:1-82:50\"><iframe id=\"qiita-embed-content__459ae037bd311a9f716fea5b20a41a9d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__459ae037bd311a9f716fea5b20a41a9d\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"84:1-84:46\">\n<span id=\"おまけ３営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ３（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"86:1-86:50\"><iframe id=\"qiita-embed-content__6ad52a7d0d5f46e4ca37c7200f5da38a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6ad52a7d0d5f46e4ca37c7200f5da38a\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"88:1-88:50\"><iframe id=\"qiita-embed-content__60bca4385ca89e012913e3445d6528cc\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__60bca4385ca89e012913e3445d6528cc\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"91:1-91:66\">\n<span id=\"おまけ４エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ４（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"93:1-94:30\">2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"96:1-96:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"98:7-98:141\">「自己実現欲求」や「承認欲求」だけが飛び抜けている方もいるようですがここでは考察しません。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## 学習のモチベーション？\n\n職業エンジニアの皆様こんにちは。\n休日や業後などの自分の時間はいかがお過ごしでしょうか？Qiitaを見ている諸兄におきましては自分の時間でもドーパミンをダラダラ垂れ流しつつガンガン勉強しておりますでしょうか。\n\n「ITエンジニア」という職業は専門職であり、その専門性により市場優位性を保つ職種ですが、日中の業務だけでは専門性を維持することは不可能です。なぜなら、日中の業務では「今ある自分のスキルを時間で切り売りして換金」することになりますが、その傍らで新しい技術がバカスカ生み出されている様な業界だからです。\n\nただ、新しい技術自体に価値があるわけではなく、その技術を利用して開発された製品などが生み出す価値に価値があるので、必ずしも無限に新しい技術を習得する必要はないとも言えます。\n\nそのような状況で、自分の時間でプログラムを学習するモチベーションを保つのはなかなか難しいなと思いましたのでGPT先生に質問をしてみました。\n\n![gpt.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/26098092-22d7-f8cd-5b74-3d78879e44b7.png)\n\n\nいかがでしょうか？上記 1-5 いずれかに当てはまったあなたは今すぐこの記事を閉じて学習をはじめるとよいですし、当てはまらなかったあなたは、以下考察編にお進みください。\n\n\n## マズロー欲求５段階説から考える\n\nということでまずはみんな大好きマズロー欲求５段階説から考えてみましょう。\n\n![マズロー.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e8cefcf3-b081-c913-b03e-86a1cf8e92c0.png)\n\n\nQiita に寄稿されているような方は、「自己実現欲求」や「承認欲求」などをモチベーションの源泉として活動していると推察できるかと思ったのですが、わたし自身は、将来への漠然とした不安に対して『モノを整理して書いて伝える能力がないと困るかな』という感覚で寄稿しているので「困ってない自分になっていたいという自己実現欲求」に基づいて行動していそうです。\n\n『スクールに入って一定のカリキュラムをこなせば、リモートワークの高単価案件をゲットできる』という触れ込みを行動指針とした方の場合、スクールを卒業して何らかのIT企業に入ることで「社会的欲求」が満たされ、それ以上の欲求は発生しない可能性が高いと考えられます。『IT業界は給料がいい』と思って就職したケースの場合も同様でしょう。\n\n\n## 「欠乏欲求」と「成長欲求」\n\nここで、欲求の種類についても確認しておきましょう。\n\n欲求には２種類あり、それぞれ以下の通りとなります。\n\n- 「欠乏欲求」（マイナスをゼロに）\n不足しているものを満たしたいという欲求。\n- 「成長欲求」（ゼロからプラスに）\n自分を成長させたいという欲求。\n\nプログラムを好きで勉強している方は、おそらく「成長欲求」である「自己実現欲求」を持っており、日常業務が手一杯の方は、「社会的欲求」や「安全欲求」が満たされていないと考えられるでしょう。\n\nまずは、自分や成長を促すべき他者がどのような状況で、どのような欲求を持っているのかを分析し、適切な課題を設定することが重要と言えるでしょう。\n\n\n## 内発的動機づけ\n\n「欠乏欲求」にせよ「成長欲求」にせよ、自らの時間で学習を行うためには「内発的動機」、すなわち自ら取り組みたいと思う気持ちが必要となるので、どちらの欲求をモチベーションの源泉にできるのか考える必要があります。\n\nここで、 **『高次の欲求は、低次の欲求が満たされないと発生しない』** という重要な法則があります。\n『組織に所属することはできたが日常業務が手一杯』といった場合、「社会的欲求」や「安全欲求」が微妙に満たされていない状態となり、「自己実現欲求」は発生しないことになります。[^1]\n\nそのような方に対しては「便利で役に立つものを作ろう」と提案し「承認欲求」を満たすことを促すよりも、「日常業務を無事にこなせるようにするスキルが身につくための勉強をしよう」と提案し「欠乏欲求」を満たすことを促す方が内発的動機づけにつながると考えられるでしょう。\n\nまた、少しの努力で少しの欠乏が満たされる提案をするのも大事です。欠乏を満たす行為は基本的には苦痛を伴う可能性が高いからです。定期的に欠乏が満たされた達成感が提供されないと努力を継続することは難しくなるでしょう。\n\n\n## おわりに\n\n学習のモチベーションについて、マズロー説から考察してみました。\n「自己実現欲求」や「承認欲求」を持てている方は、ITエンジニアとしてドーパミンをダラダラ垂れ流しつつガンガン努力を継続できるのかと思えました。\nそうでない方は、目先のやるべきことをとにかく細かく分解してひとつひとつ完了させて少しずつ満たせていない何かを埋めて、今いる社会集団で「社会的欲求」を満たせるようになっていくのが良さそうに思えました。\n\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\n## おまけ３（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n\n## おまけ４（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n[^1]: 「自己実現欲求」や「承認欲求」だけが飛び抜けている方もいるようですがここでは考察しません。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-04-22T17:02:19+09:00",
    "group": null,
    "id": "9ef5ad3a4df0d7be9c32",
    "likes_count": 5,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 4,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人教育",
        "versions": []
      },
      {
        "name": "新人プログラマ応援_記事投稿キャンペーン",
        "versions": []
      }
    ],
    "title": "学習のモチベーションの上げ方は人によって違う",
    "updated_at": "2023-04-24T19:55:05+09:00",
    "url": "https://qiita.com/kaku3/items/9ef5ad3a4df0d7be9c32",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2879,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:357\">「バグコード教育メソッド」は、本記事を書くまでは名前もなかった教育メソッドです。<br>\n個人的に長いこと愛用している、実践的で教育効果の高い（と思っている）教育メソッドですが、メンターをやっているメンバーとの会話で「言語化されていないと分からない」と意見を頂きましたので、メソッド名をつけてこちらで言語化しておこうと思います。</p>\n<h2 data-sourcepos=\"7:1-7:42\">\n<span id=\"バグコード教育メソッドとは\" class=\"fragment\"></span><a href=\"#%E3%83%90%E3%82%B0%E3%82%B3%E3%83%BC%E3%83%89%E6%95%99%E8%82%B2%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>バグコード教育メソッドとは</h2>\n<p data-sourcepos=\"9:1-9:36\">やり方はとても簡単です。</p>\n<p data-sourcepos=\"11:1-11:172\">『まぁまぁに動くけど<strong>バグが埋め込んであって微妙に動かない</strong>プログラム』を新人に渡して動くようにしてもらうだけです。</p>\n<p data-sourcepos=\"13:1-13:295\">OJTでやる場合は、メンターが勢いよくコードを書いて自分で<strong>デバッグしていないまま</strong>渡す感じでしょうか。流石にまったくデバッグしないで渡すと詰むので、まぁまぁ動く状態になったものを渡すのがよいでしょう。</p>\n<p data-sourcepos=\"15:1-15:429\">ひどいと思うかもしれませんが、自分がデバッグで手一杯になってしまうと、新人には「いい感じに試験項目を作ってみてて」と雑な指示しか出せない上に、質問対応に追われるものの、結局最後に全部自分で作り直すみたいなことをやることを考えると、プロジェクト全体としては効率的な施策ではないでしょうか？</p>\n<p data-sourcepos=\"17:1-17:232\">また「メンター側が予測できる程度のバグしか埋まってないコード<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup>」であれば、質問対応もさほど手間はかからず教育効果の高いフィードバックを返すことも可能です。</p>\n<p data-sourcepos=\"19:1-19:378\">さらに、デバッグをまずやらせることで、どのようなところで障害が発生しやすいか？といった試験時に役に立つ感覚を養う事ができ、ついでにコードリーディングのスキルが上がったり、デバッガの使い方を覚えたり障害票の書き方を覚えたりといいことづくめのメソッドです。</p>\n<p data-sourcepos=\"21:1-21:96\">以下、バグコード教育メソッドで身につくスキルについて記載します。</p>\n<h3 data-sourcepos=\"24:1-24:31\">\n<span id=\"コードリーディング\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%BC%E3%83%89%E3%83%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0\"><i class=\"fa fa-link\"></i></a>コードリーディング</h3>\n<p data-sourcepos=\"26:1-26:324\">コードを書けるようになる近道は大量のコードを読むことです。ただし、漫然と読んでもダメです。国語よろしく作者の想いや設計思想を想像したり自分ならどう書くかを考えながら読んだり、なんらかの観点を持って読む必要があります。</p>\n<p data-sourcepos=\"28:1-28:168\">バグコード教育メソッドでは <strong>「動かないところを特定して、動くように修正する」</strong> という明確な観点を提供しています。</p>\n<p data-sourcepos=\"30:1-30:143\"><strong>『プログラムを勉強したいが何から書いていいか分からない』</strong> という方のモヤモヤもすっ飛びますね。</p>\n<p data-sourcepos=\"32:1-35:103\">動かないところを特定する過程で、他人が書いたさっぱり意図の分からないコードを読み始めることになります。<br>\n端から全部読むのは大変だから、仕方なく英語のエラーメッセージを読むことを覚えることになるでしょう。<br>\n新人がエラーメッセージを読まないのは「読む必要性」を理解していないからです。目先の課題の解決のためにエラーメッセージを読んだ方がよいことを体験してもらいましょう。<br>\n自分で読めないなら、ChatGPT先生に読んでもらってもまぁよしとしましょう。</p>\n<h3 data-sourcepos=\"38:1-38:22\">\n<span id=\"print-デバッグ\" class=\"fragment\"></span><a href=\"#print-%E3%83%87%E3%83%90%E3%83%83%E3%82%B0\"><i class=\"fa fa-link\"></i></a>print デバッグ</h3>\n<p data-sourcepos=\"40:1-40:185\">動かない場所付近に print 文や console.log などのログを埋め込んで、どこまで動いたかを確認する原始的な昭和からの伝統技能（？）です。</p>\n<p data-sourcepos=\"42:1-42:269\">根気強く続けていれば「どの行で動かなくなってるか」までは特定できる反面、およそあたりがついていないと 大量の print 文を埋めこむことになったり、消し忘れが出たりするので注意が必要です。</p>\n<h3 data-sourcepos=\"45:1-45:16\">\n<span id=\"デバッガ\" class=\"fragment\"></span><a href=\"#%E3%83%87%E3%83%90%E3%83%83%E3%82%AC\"><i class=\"fa fa-link\"></i></a>デバッガ</h3>\n<p data-sourcepos=\"47:1-47:208\">令和の世の中ではIDEが発達していてデバッガという便利ツールがあります。また、chrome などのブラウザにでさえデバッガ（開発者ツール）がついてます。</p>\n<p data-sourcepos=\"49:1-49:252\">およそ動かなそうな場所にブレークポイント（プログラムを一時停止させる場所）を設置し、そこから１行ずつステップ実行をすることで簡単に動かない場所を特定することができます。</p>\n<p data-sourcepos=\"51:1-51:198\">また、プログラムを一時停止した時の変数の値を見たり加工したりできるので、どの様に修正すれば動くようになるかを考えるのに役に立ちます。</p>\n<h3 data-sourcepos=\"54:1-54:43\">\n<span id=\"報連相のタイミング障害票\" class=\"fragment\"></span><a href=\"#%E5%A0%B1%E9%80%A3%E7%9B%B8%E3%81%AE%E3%82%BF%E3%82%A4%E3%83%9F%E3%83%B3%E3%82%B0%E9%9A%9C%E5%AE%B3%E7%A5%A8\"><i class=\"fa fa-link\"></i></a>報連相のタイミング・障害票</h3>\n<p data-sourcepos=\"56:1-56:327\">メンター側から見ると、自分でデバッグする場合の手順や見積もりを基準に、『適切に報連相が行われて課題解決に向けて進んでいるか』を考察することができます。自分の考えと相違がある場合は会話をして差異を埋めるのがよいでしょう。</p>\n<p data-sourcepos=\"58:1-59:264\">また、うまく動いていない場所の特定ができたら障害票を書くことになります。<br>\n開発をやっていない人の書く障害票は開発者に優しくない傾向があるようですが、どのような障害票を書いたらコミュニケーションコストが最小になるかも会話しながら進めるのがよいでしょう。</p>\n<p data-sourcepos=\"61:1-61:423\">ここで学ぶべき最高に重要なスキルは『障害発生時に、にこやかに切り分けをして問題解決をする』というスキルです。障害が発生すると殺伐とすることがありますが、このメソッドで発生するバグはすべて織り込み済みなので殺伐とするところはありません。萎縮せずにバンバン笑顔で報連相していきましょう。</p>\n<h2 data-sourcepos=\"64:1-64:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"66:1-66:213\">職業エンジニアは、ゼロからスクラッチする案件よりも、何らかの案件に途中から参画したり、改修や保守案件にアサインされるケースの方が多いでしょう。</p>\n<p data-sourcepos=\"68:1-68:255\">とした場合『他人の書いた意味の分からないコードを読んで理解して、それに対して必要な改修を加える』という作業は職業エンジニア生涯でずっと使える重要なスキルと言えるでしょう。</p>\n<p data-sourcepos=\"70:1-70:165\">『バグコード教育メソッド』では、そのような極めて実践的で息の長いスキルを身につけることができると考えています。</p>\n<p data-sourcepos=\"72:1-72:279\">メンターを担当されている皆様におきましても、アウトプットを出さなければならない中で新人の教育も行わなければいけないといった難しい状況にあるかと思いますが、この記事が一助になれば幸いです。</p>\n<h2 data-sourcepos=\"75:1-75:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"77:1-77:50\"><iframe id=\"qiita-embed-content__63b2ce29a8f69eed04d4a22746e87819\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__63b2ce29a8f69eed04d4a22746e87819\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"79:1-79:50\"><iframe id=\"qiita-embed-content__f6586d19164e40fa085eddd94623594d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f6586d19164e40fa085eddd94623594d\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"82:1-82:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"84:1-84:50\"><iframe id=\"qiita-embed-content__d30a66b2e0a81c5b31b30917ee7bba32\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__d30a66b2e0a81c5b31b30917ee7bba32\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"86:1-86:50\"><iframe id=\"qiita-embed-content__e6e2fd5b8a6def41b1339542cc6af2b6\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e6e2fd5b8a6def41b1339542cc6af2b6\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"88:1-88:50\"><iframe id=\"qiita-embed-content__77705a8e6721d5cbbcb34f1b10e83a29\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__77705a8e6721d5cbbcb34f1b10e83a29\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"90:1-90:50\"><iframe id=\"qiita-embed-content__73b14d73c7873794bd7b568c51d7f481\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__73b14d73c7873794bd7b568c51d7f481\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"92:1-92:50\"><iframe id=\"qiita-embed-content__65d3a76c2aaaa50a072eb5351e181b0e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__65d3a76c2aaaa50a072eb5351e181b0e\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F9ef5ad3a4df0d7be9c32\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"94:1-94:46\">\n<span id=\"おまけ３営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ３（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"96:1-96:50\"><iframe id=\"qiita-embed-content__1c04baa748607c7af35f35fc664b1875\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1c04baa748607c7af35f35fc664b1875\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"98:1-98:50\"><iframe id=\"qiita-embed-content__5c67178e3d6d0071c2a142e8865dd9e9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__5c67178e3d6d0071c2a142e8865dd9e9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"101:1-101:66\">\n<span id=\"おまけ４エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ４（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"103:1-104:30\">2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"106:1-106:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"109:7-109:96\">たまに予測できないバグも埋まってますが動揺してはいけません。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\n「バグコード教育メソッド」は、本記事を書くまでは名前もなかった教育メソッドです。\n個人的に長いこと愛用している、実践的で教育効果の高い（と思っている）教育メソッドですが、メンターをやっているメンバーとの会話で「言語化されていないと分からない」と意見を頂きましたので、メソッド名をつけてこちらで言語化しておこうと思います。\n\n\n## バグコード教育メソッドとは\n\nやり方はとても簡単です。\n\n『まぁまぁに動くけど**バグが埋め込んであって微妙に動かない**プログラム』を新人に渡して動くようにしてもらうだけです。\n\nOJTでやる場合は、メンターが勢いよくコードを書いて自分で**デバッグしていないまま**渡す感じでしょうか。流石にまったくデバッグしないで渡すと詰むので、まぁまぁ動く状態になったものを渡すのがよいでしょう。\n\nひどいと思うかもしれませんが、自分がデバッグで手一杯になってしまうと、新人には「いい感じに試験項目を作ってみてて」と雑な指示しか出せない上に、質問対応に追われるものの、結局最後に全部自分で作り直すみたいなことをやることを考えると、プロジェクト全体としては効率的な施策ではないでしょうか？\n\nまた「メンター側が予測できる程度のバグしか埋まってないコード[^1]」であれば、質問対応もさほど手間はかからず教育効果の高いフィードバックを返すことも可能です。\n\nさらに、デバッグをまずやらせることで、どのようなところで障害が発生しやすいか？といった試験時に役に立つ感覚を養う事ができ、ついでにコードリーディングのスキルが上がったり、デバッガの使い方を覚えたり障害票の書き方を覚えたりといいことづくめのメソッドです。\n\n以下、バグコード教育メソッドで身につくスキルについて記載します。\n\n\n### コードリーディング\n\nコードを書けるようになる近道は大量のコードを読むことです。ただし、漫然と読んでもダメです。国語よろしく作者の想いや設計思想を想像したり自分ならどう書くかを考えながら読んだり、なんらかの観点を持って読む必要があります。\n\nバグコード教育メソッドでは **「動かないところを特定して、動くように修正する」** という明確な観点を提供しています。\n\n**『プログラムを勉強したいが何から書いていいか分からない』** という方のモヤモヤもすっ飛びますね。\n\n動かないところを特定する過程で、他人が書いたさっぱり意図の分からないコードを読み始めることになります。\n端から全部読むのは大変だから、仕方なく英語のエラーメッセージを読むことを覚えることになるでしょう。\n新人がエラーメッセージを読まないのは「読む必要性」を理解していないからです。目先の課題の解決のためにエラーメッセージを読んだ方がよいことを体験してもらいましょう。\n自分で読めないなら、ChatGPT先生に読んでもらってもまぁよしとしましょう。\n\n\n### print デバッグ\n\n動かない場所付近に print 文や console.log などのログを埋め込んで、どこまで動いたかを確認する原始的な昭和からの伝統技能（？）です。\n\n根気強く続けていれば「どの行で動かなくなってるか」までは特定できる反面、およそあたりがついていないと 大量の print 文を埋めこむことになったり、消し忘れが出たりするので注意が必要です。\n\n\n### デバッガ\n\n令和の世の中ではIDEが発達していてデバッガという便利ツールがあります。また、chrome などのブラウザにでさえデバッガ（開発者ツール）がついてます。\n\nおよそ動かなそうな場所にブレークポイント（プログラムを一時停止させる場所）を設置し、そこから１行ずつステップ実行をすることで簡単に動かない場所を特定することができます。\n\nまた、プログラムを一時停止した時の変数の値を見たり加工したりできるので、どの様に修正すれば動くようになるかを考えるのに役に立ちます。\n\n\n### 報連相のタイミング・障害票\n\nメンター側から見ると、自分でデバッグする場合の手順や見積もりを基準に、『適切に報連相が行われて課題解決に向けて進んでいるか』を考察することができます。自分の考えと相違がある場合は会話をして差異を埋めるのがよいでしょう。\n\nまた、うまく動いていない場所の特定ができたら障害票を書くことになります。\n開発をやっていない人の書く障害票は開発者に優しくない傾向があるようですが、どのような障害票を書いたらコミュニケーションコストが最小になるかも会話しながら進めるのがよいでしょう。\n\nここで学ぶべき最高に重要なスキルは『障害発生時に、にこやかに切り分けをして問題解決をする』というスキルです。障害が発生すると殺伐とすることがありますが、このメソッドで発生するバグはすべて織り込み済みなので殺伐とするところはありません。萎縮せずにバンバン笑顔で報連相していきましょう。\n\n\n## おわりに\n\n職業エンジニアは、ゼロからスクラッチする案件よりも、何らかの案件に途中から参画したり、改修や保守案件にアサインされるケースの方が多いでしょう。\n\nとした場合『他人の書いた意味の分からないコードを読んで理解して、それに対して必要な改修を加える』という作業は職業エンジニア生涯でずっと使える重要なスキルと言えるでしょう。\n\n『バグコード教育メソッド』では、そのような極めて実践的で息の長いスキルを身につけることができると考えています。\n\nメンターを担当されている皆様におきましても、アウトプットを出さなければならない中で新人の教育も行わなければいけないといった難しい状況にあるかと思いますが、この記事が一助になれば幸いです。\n\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/9ef5ad3a4df0d7be9c32\n\n## おまけ３（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n\n## おまけ４（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n\n[^1]: たまに予測できないバグも埋まってますが動揺してはいけません。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-04-22T14:32:54+09:00",
    "group": null,
    "id": "b1c94328f273c750286b",
    "likes_count": 29,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 19,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人教育",
        "versions": []
      },
      {
        "name": "新人プログラマ応援_記事投稿キャンペーン",
        "versions": []
      }
    ],
    "title": "異次元の教育効率なバグコード教育メソッド",
    "updated_at": "2023-04-24T19:55:29+09:00",
    "url": "https://qiita.com/kaku3/items/b1c94328f273c750286b",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 5571,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:36\">\n<span id=\"深イイ話覚えている\" class=\"fragment\"></span><a href=\"#%E6%B7%B1%E3%82%A4%E3%82%A4%E8%A9%B1%E8%A6%9A%E3%81%88%E3%81%A6%E3%81%84%E3%82%8B\"><i class=\"fa fa-link\"></i></a>深イイ話、覚えている？</h2>\n<p data-sourcepos=\"3:1-3:87\">新人プログラマーの皆様、先輩プログラマーの皆様こんにちは。</p>\n<p data-sourcepos=\"5:1-5:270\">入社式や所属部署のオリエンテーションで、「新人の心構え」だったり、今後エンジニアとしてやっていく上で大事なことだったりといった深イイ話は聞きましたか？あるいは深イイ話をしましたか？</p>\n<p data-sourcepos=\"7:1-7:378\">わたしは、去年の今頃に <strong>「日本語」と「セルフマネジメント」を頑張れ</strong> と割とシンプルな深イイ話をしたつもりだったのですが、一年経って何か覚えているかと聞いてみたところ <strong>何も覚えていない</strong> という忌憚のない返事を頂きましたので少し考察してみることにしました。</p>\n<h2 data-sourcepos=\"10:1-10:51\">\n<span id=\"そもそも深イイ話じゃなかった説\" class=\"fragment\"></span><a href=\"#%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82%E6%B7%B1%E3%82%A4%E3%82%A4%E8%A9%B1%E3%81%98%E3%82%83%E3%81%AA%E3%81%8B%E3%81%A3%E3%81%9F%E8%AA%AC\"><i class=\"fa fa-link\"></i></a>そもそも深イイ話じゃなかった説？</h2>\n<p data-sourcepos=\"12:1-12:134\"><a href=\"https://camo.qiitausercontent.com/bdff57bc6fe619b3dcf14f033c18abe148d0342d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38313233643862302d623464302d643430302d626433652d6164383333353166386539302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8123d8b0-b4d0-d400-bd3e-ad83351f8e90.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f5a97accc960ee4ab63bb3dfa2e8d0fc\" alt=\"感覚的不一致.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8123d8b0-b4d0-d400-bd3e-ad83351f8e90.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8123d8b0-b4d0-d400-bd3e-ad83351f8e90.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c9f88aa854a1c003f47bc08c461b20cb 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"14:1-14:78\">なるほど。コミュニケーションが成立してないのですね。</p>\n<p data-sourcepos=\"16:1-16:313\">例えば、<strong>話す側が 「新人の心構え」という新人が身につけて当然の話しをしたのだから伝わって当然</strong> という感覚で話をしたり、<strong>聞く側に前提となる知識などがない</strong>という時には高確率で「感覚的不一致」が発生しそうですね。</p>\n<p data-sourcepos=\"18:1-18:402\">多人数に対して深イイ（と思っている）話をする場合、校長先生の朝礼と同じで、話す相手によって話の内容をカスタマイズできなくて一般的な聞く側の関心から遠い話になりがちだから難易度が高いけれども、トピックの選び方や話し方などでは工夫できるかな・・・？というところでしょうか。</p>\n<p data-sourcepos=\"20:1-20:292\">一方で個別に会話したことは記憶してもらえていたという話も聞けたので、1 on 1 で伝える場合は前段で軽い会話を挟んで興味を引いたりその会話によって伝える内容をカスタマイズするなどは効果があるようでした。</p>\n<h2 data-sourcepos=\"23:1-23:47\">\n<span id=\"情報過負荷information-overload説\" class=\"fragment\"></span><a href=\"#%E6%83%85%E5%A0%B1%E9%81%8E%E8%B2%A0%E8%8D%B7information-overload%E8%AA%AC\"><i class=\"fa fa-link\"></i></a>情報過負荷（Information overload）説</h2>\n<blockquote data-sourcepos=\"25:1-25:482\">\n<p data-sourcepos=\"25:3-25:482\">情報過負荷とは、人が処理できる情報量を超える情報が与えられたときに、情報を適切に処理することができなくなる現象です。新しい環境に適応し、多くの情報を同時に処理する必要がある場合、情報過負荷が発生する可能性があります。この場合、先輩からの大切な話を聞いているつもりでも、情報が過剰であるために記憶に残らないことがあります。</p>\n</blockquote>\n<p data-sourcepos=\"27:1-27:306\">なるほど。話した側は「いい話」をしたんだから「伝わった」でしょうと感じたけれども、聞いた側は右から左に通り過ぎてて「はぁ？なんで覚えてないの？」みたいな悲しい事故はこういうメカニズムで起きていたのですね。</p>\n<p data-sourcepos=\"29:1-29:228\">話す側は、「ちゃんと聞いてるの？」「聞く気あるの？」と問い詰める前に、聞く側の状況を今一度ヒアリングして整理するとこの状況は回避できるかもしれませんね。</p>\n<h2 data-sourcepos=\"32:1-32:39\">\n<span id=\"情報忘却と忘却曲線問題説\" class=\"fragment\"></span><a href=\"#%E6%83%85%E5%A0%B1%E5%BF%98%E5%8D%B4%E3%81%A8%E5%BF%98%E5%8D%B4%E6%9B%B2%E7%B7%9A%E5%95%8F%E9%A1%8C%E8%AA%AC\"><i class=\"fa fa-link\"></i></a>情報忘却と忘却曲線問題説</h2>\n<p data-sourcepos=\"34:1-34:162\">様々な阻害要因を乗り越えて伝わったとしても、人間の脳は「忘れてしまうように出来ている」という問題があります。</p>\n<blockquote data-sourcepos=\"36:1-36:416\">\n<p data-sourcepos=\"36:3-36:416\">情報忘却とは、記憶の一部または全部を失うことを指します。情報忘却は、私たちが情報を受け取ったときに起こり、情報を維持するために積極的な努力が必要です。記憶を維持するためには、情報を何度も繰り返し復習することが効果的であり、メモを取ったり、要点をまとめたりすることも役立ちます。</p>\n</blockquote>\n<p data-sourcepos=\"38:1-38:240\">興味が無いことはもちろん、興味があることですらも反復しない限りは忘れてしまうという話ですね。次々新しい技術が出てくるのを覚えないといけないのに、困ったものです。</p>\n<p data-sourcepos=\"40:1-40:135\"><a href=\"https://camo.qiitausercontent.com/374051201724602827229cf527c6c0765c36cef2/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f35383566666165662d363331622d623731332d623133332d6566353463376138623966652e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F585ffaef-631b-b713-b133-ef54c7a8b9fe.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=dfbaf661e269aa2779ee5b0860888f97\" alt=\"忘却曲線.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/585ffaef-631b-b713-b133-ef54c7a8b9fe.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F585ffaef-631b-b713-b133-ef54c7a8b9fe.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=80db4fe7816869f11bca39b292ecdaec 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"42:1-42:282\">なるほど。復習をしなければ１日後にはおよそ66%の内容を忘れてしまうように人間はできていて、わたしが「深イイ話」と思って話した話も一年後には忘れられてしまう方が普通なのですね。悲しいけれども。</p>\n<h2 data-sourcepos=\"45:1-45:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"47:1-47:339\">本文からは読み取れないと思いますが、「深イイ話」を覚えていてほしいという話ではなくて、IT業界というところで４０年なり４５年なり生存していくのはとても大変だから、自分なりに<strong>自分に合った生存戦略を見つけて欲しいな</strong>という話でした。</p>\n<p data-sourcepos=\"49:1-49:344\">配属、案件、先輩ガチャに加えてAIの登場といった不確定要素がある中で、どうしたら安定して『エンジニア』としての市場価値を出し続けられるのか。頭の片隅においておいてもらえるとよりよい『エンジニア』ライフを送れるのではないかと思います。</p>\n<p data-sourcepos=\"51:1-51:114\">ついでに、冒頭の深イイ話(?)が１年後の皆様の何かのお役に立てていたら幸いです。</p>\n<blockquote data-sourcepos=\"53:1-53:127\">\n<p data-sourcepos=\"53:3-53:127\"><strong>「日本語」と「セルフマネジメント」を頑張れ</strong> と割とシンプルな深イイ話をしたつもり。</p>\n</blockquote>\n<h2 data-sourcepos=\"56:1-56:54\">\n<span id=\"おまけ１新卒エンジニア向け手紙\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%91%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E6%89%8B%E7%B4%99\"><i class=\"fa fa-link\"></i></a>おまけ１（新卒エンジニア向け手紙）</h2>\n<p data-sourcepos=\"58:1-58:50\"><iframe id=\"qiita-embed-content__2e0ef70248439afff229826b9f5ba3ce\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2e0ef70248439afff229826b9f5ba3ce\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"60:1-60:50\"><iframe id=\"qiita-embed-content__23f8df0d964ae76ce900e73ceaa80aaa\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__23f8df0d964ae76ce900e73ceaa80aaa\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"63:1-63:54\">\n<span id=\"おまけ２新卒エンジニア向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%92%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ２（新卒エンジニア向け記事）</h2>\n<p data-sourcepos=\"65:1-65:50\"><iframe id=\"qiita-embed-content__1dbc340546e41a56f6ac24389ff85836\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1dbc340546e41a56f6ac24389ff85836\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"67:1-67:50\"><iframe id=\"qiita-embed-content__b6cdb1fe4dcf0054e987226a7d723122\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b6cdb1fe4dcf0054e987226a7d723122\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"69:1-69:50\"><iframe id=\"qiita-embed-content__851d335aa7e450cc2c96d41319e21aae\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__851d335aa7e450cc2c96d41319e21aae\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"71:1-71:50\"><iframe id=\"qiita-embed-content__4398c3c61fb3a2328de072b3ea7bd0d1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__4398c3c61fb3a2328de072b3ea7bd0d1\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"74:1-74:46\">\n<span id=\"おまけ３営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%93%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ３（営業A短編シリーズ）</h2>\n<p data-sourcepos=\"76:1-76:50\"><iframe id=\"qiita-embed-content__cec27a0e39e7970240129d7012131053\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__cec27a0e39e7970240129d7012131053\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"78:1-78:50\"><iframe id=\"qiita-embed-content__40d6bb6a9945037ffd12d21696f6ac03\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__40d6bb6a9945037ffd12d21696f6ac03\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"81:1-81:66\">\n<span id=\"おまけ４エンジニアのためのお仕事問題集\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%94%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%81%8A%E4%BB%95%E4%BA%8B%E5%95%8F%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>おまけ４（エンジニアのためのお仕事問題集）</h2>\n<p data-sourcepos=\"83:1-84:30\">2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"86:1-86:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## 深イイ話、覚えている？\n\n新人プログラマーの皆様、先輩プログラマーの皆様こんにちは。\n\n入社式や所属部署のオリエンテーションで、「新人の心構え」だったり、今後エンジニアとしてやっていく上で大事なことだったりといった深イイ話は聞きましたか？あるいは深イイ話をしましたか？\n\nわたしは、去年の今頃に **「日本語」と「セルフマネジメント」を頑張れ** と割とシンプルな深イイ話をしたつもりだったのですが、一年経って何か覚えているかと聞いてみたところ **何も覚えていない** という忌憚のない返事を頂きましたので少し考察してみることにしました。\n\n\n## そもそも深イイ話じゃなかった説？\n\n![感覚的不一致.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8123d8b0-b4d0-d400-bd3e-ad83351f8e90.png)\n\nなるほど。コミュニケーションが成立してないのですね。\n\n例えば、**話す側が 「新人の心構え」という新人が身につけて当然の話しをしたのだから伝わって当然** という感覚で話をしたり、**聞く側に前提となる知識などがない**という時には高確率で「感覚的不一致」が発生しそうですね。\n\n多人数に対して深イイ（と思っている）話をする場合、校長先生の朝礼と同じで、話す相手によって話の内容をカスタマイズできなくて一般的な聞く側の関心から遠い話になりがちだから難易度が高いけれども、トピックの選び方や話し方などでは工夫できるかな・・・？というところでしょうか。\n\n一方で個別に会話したことは記憶してもらえていたという話も聞けたので、1 on 1 で伝える場合は前段で軽い会話を挟んで興味を引いたりその会話によって伝える内容をカスタマイズするなどは効果があるようでした。\n\n\n## 情報過負荷（Information overload）説\n\n> 情報過負荷とは、人が処理できる情報量を超える情報が与えられたときに、情報を適切に処理することができなくなる現象です。新しい環境に適応し、多くの情報を同時に処理する必要がある場合、情報過負荷が発生する可能性があります。この場合、先輩からの大切な話を聞いているつもりでも、情報が過剰であるために記憶に残らないことがあります。\n\nなるほど。話した側は「いい話」をしたんだから「伝わった」でしょうと感じたけれども、聞いた側は右から左に通り過ぎてて「はぁ？なんで覚えてないの？」みたいな悲しい事故はこういうメカニズムで起きていたのですね。\n\n話す側は、「ちゃんと聞いてるの？」「聞く気あるの？」と問い詰める前に、聞く側の状況を今一度ヒアリングして整理するとこの状況は回避できるかもしれませんね。\n\n\n## 情報忘却と忘却曲線問題説\n\n様々な阻害要因を乗り越えて伝わったとしても、人間の脳は「忘れてしまうように出来ている」という問題があります。\n\n> 情報忘却とは、記憶の一部または全部を失うことを指します。情報忘却は、私たちが情報を受け取ったときに起こり、情報を維持するために積極的な努力が必要です。記憶を維持するためには、情報を何度も繰り返し復習することが効果的であり、メモを取ったり、要点をまとめたりすることも役立ちます。\n\n興味が無いことはもちろん、興味があることですらも反復しない限りは忘れてしまうという話ですね。次々新しい技術が出てくるのを覚えないといけないのに、困ったものです。\n\n![忘却曲線.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/585ffaef-631b-b713-b133-ef54c7a8b9fe.png)\n\nなるほど。復習をしなければ１日後にはおよそ66%の内容を忘れてしまうように人間はできていて、わたしが「深イイ話」と思って話した話も一年後には忘れられてしまう方が普通なのですね。悲しいけれども。\n\n\n## おわりに\n\n本文からは読み取れないと思いますが、「深イイ話」を覚えていてほしいという話ではなくて、IT業界というところで４０年なり４５年なり生存していくのはとても大変だから、自分なりに**自分に合った生存戦略を見つけて欲しいな**という話でした。\n\n配属、案件、先輩ガチャに加えてAIの登場といった不確定要素がある中で、どうしたら安定して『エンジニア』としての市場価値を出し続けられるのか。頭の片隅においておいてもらえるとよりよい『エンジニア』ライフを送れるのではないかと思います。\n\nついでに、冒頭の深イイ話(?)が１年後の皆様の何かのお役に立てていたら幸いです。\n\n> **「日本語」と「セルフマネジメント」を頑張れ** と割とシンプルな深イイ話をしたつもり。\n\n\n## おまけ１（新卒エンジニア向け手紙）\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n\n## おまけ２（新卒エンジニア向け記事）\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\n\n## おまけ３（営業A短編シリーズ）\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n\n## おまけ４（エンジニアのためのお仕事問題集）\n\n2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-04-01T15:31:46+09:00",
    "group": null,
    "id": "afc8b7097ba4473896e4",
    "likes_count": 19,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 11,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      },
      {
        "name": "新人エンジニア",
        "versions": []
      },
      {
        "name": "新人プログラマ応援_記事投稿キャンペーン",
        "versions": []
      }
    ],
    "title": "翌日には6割以上忘れられている深イイ話",
    "updated_at": "2023-04-01T15:31:46+09:00",
    "url": "https://qiita.com/kaku3/items/afc8b7097ba4473896e4",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 9406,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:90\">新卒だった数十年前の自分に宛てて書いた手紙はもう届いたかな？</p>\n<p data-sourcepos=\"5:1-5:50\"><iframe id=\"qiita-embed-content__94c2ed6b86ab3c79602ce38e1f8e7de8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__94c2ed6b86ab3c79602ce38e1f8e7de8\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F2c8d4d783be7ce4fc9ea\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"7:1-7:351\">前回の手紙では、君が驚かないように最初に君が就職した会社での話ばかりを書いたけれども、君はゲームが大好きで、面白いゲームをつくって暮らしていきたいと思っていたから、今回は君の人生に大きな影響を与えることになるゲーム屋での話しを書くよ。</p>\n<p data-sourcepos=\"9:1-9:185\">※ゲーム屋を辞めて普通のIT屋になってからも役に立ってる内容でまとめました。ゲーム業界じゃない方にもお役に立てれば嬉しいです。</p>\n<h2 data-sourcepos=\"12:1-12:48\">\n<span id=\"面白いゲームをつくる５カ年計画\" class=\"fragment\"></span><a href=\"#%E9%9D%A2%E7%99%BD%E3%81%84%E3%82%B2%E3%83%BC%E3%83%A0%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B%EF%BC%95%E3%82%AB%E5%B9%B4%E8%A8%88%E7%94%BB\"><i class=\"fa fa-link\"></i></a>面白いゲームをつくる５カ年計画</h2>\n<p data-sourcepos=\"14:1-16:264\">これはまだ大学生の頃の話だから君もよく覚えていると思うけれども。<br>\n謎のネットビジネスをやってるっぽいペプシマンと名乗るおにーさんからの電話を受けて、なんだか面白い人だなと思って話を聞きに行ったよね。<br>\nどんな流れだったかは詳しく思い出せないけれども「面白いゲームがつくりたいんだ」みたいなことを言ったら、「それにはまずを計画を立てないとダメだ」と言われて計画を立ててくれたよね。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"18:1-23:3\"><div class=\"highlight\"><pre><code>1年目        ：とにかく遊ぶ\n2年目        ：とにかく考える\n3年目 - 4年目：とにかく作る\n5年目        ：とにかく売る\n</code></pre></div></div>\n<p data-sourcepos=\"25:1-25:54\">当時の君には衝撃的な計画だったよね。</p>\n<p data-sourcepos=\"27:1-27:219\">まだ学生だった君には「売る」という概念がまったくなくて、とにかく面白いものを作れば売れると思ってたよね。ビジネス用語で言うとプロダクトアウトだね。</p>\n<p data-sourcepos=\"29:1-30:237\">君は、この後「市場を無視して感性100%で作った物」で儲けるのは難しいことを、数え切れない程のフリーアプリを作って学んでいくことになるんだけれども、できたらこの手紙からも学んでほしいかな。<br>\nあ。自分の感性は必須だから誤解しないでね。感性が不要でマーケットインで物を作れば100%物が売れるとすると、AIに企画を立てさせればよいということになってしまうよね？</p>\n<p data-sourcepos=\"32:1-32:111\">この計画にはもう一つすごいところがあったよね。そう、「とにかく遊ぶ」だよ。</p>\n<p data-sourcepos=\"34:1-34:438\">インプットの必要性を端的に伝えているんだよね。しかも実現可能な方法で。壮大で退屈な５カ年計画だったら全く着手する気にならないけど、この計画ならまずは最初の１年目には取り組もうってなるよね。１年目の計画を達成する頃には「コンコルド効果」が発生してやめるにやめられなくなっているのも秀逸だったね。</p>\n<p data-sourcepos=\"36:1-36:507\">この計画は実際は５年ではなくて全く想像もしない形で達成されることになるのだけど、大事なのはインプットを続けることだと思っているよ。１年目はインプットの仕方を学ぶ時期。インプットの量と質はアウトプットに直結するし、量を集めるには絶対的に時間が必要だから。ゲーム以外のいろいろなこともやっておいた方がアイデアを考える時に幅が出ていいと思うよ。</p>\n<h2 data-sourcepos=\"38:1-38:27\">\n<span id=\"人を動かす企画\" class=\"fragment\"></span><a href=\"#%E4%BA%BA%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99%E4%BC%81%E7%94%BB\"><i class=\"fa fa-link\"></i></a>人を動かす企画？</h2>\n<p data-sourcepos=\"40:1-40:168\">ゲームのプログラムは書けないから、企画で入ろうとか、数学が苦手だから文系に行くみたいな理由で企画で入るんだけど。</p>\n<p data-sourcepos=\"42:1-42:525\">企画を考えてプログラマーのとこに行くと「こんなんじゃ作れませんよね？」って取り合ってもらえなくて。今なら「心理的安全性のない組織」の一言で片付けられそうだけど、みんな自分のゲームが作りたくて色々勉強したのに、よく分からないシロートのフワっとした企画を持ってこられてもそれは困るっていう話なんだよね。俺の企画サイコーなのになんでやって凹まないようにね。</p>\n<p data-sourcepos=\"44:1-44:222\">売れることとか、面白いことをきちんと証明するか、それができないのであれば、きちんと作れるところまで落とし込む外部設計をしないと人は動かせないんだよ。</p>\n<h2 data-sourcepos=\"47:1-47:48\">\n<span id=\"外部設計はプログラムより難しい\" class=\"fragment\"></span><a href=\"#%E5%A4%96%E9%83%A8%E8%A8%AD%E8%A8%88%E3%81%AF%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%82%88%E3%82%8A%E9%9B%A3%E3%81%97%E3%81%84\"><i class=\"fa fa-link\"></i></a>外部設計はプログラムより難しい</h2>\n<p data-sourcepos=\"49:1-51:347\">そんなこんなで、プログラムできないと仕事にならないからプログラムも覚えることになるんだけど。<br>\n「人に説明するより自分で書く方が早い」って思うようになって、自分で仕事を抱え込んでいたね。<br>\nこれは、自分のプログラング力が高くなったからではなくて、文章で誤解なく他人に伝えることが難しいからなんだよね。企画者の思いも開発者の考えもきちんと理解して書き出さないとダメ。AIに正しくインプットできる人は未来でも必要になると思うよ。</p>\n<h2 data-sourcepos=\"54:1-54:21\">\n<span id=\"出会いと体験\" class=\"fragment\"></span><a href=\"#%E5%87%BA%E4%BC%9A%E3%81%84%E3%81%A8%E4%BD%93%E9%A8%93\"><i class=\"fa fa-link\"></i></a>出会いと体験</h2>\n<p data-sourcepos=\"56:1-57:396\">君は、ゲーム屋に転職した後で割りと有名なゲームを作っていた師匠と出会うことになるんだけれども、その人がとにかく豪快な人で。<br>\n途中から別の会社に就職されたんだけれども君の会社とも謎契約をしてて。夜に君の会社にやってきては色々なプログラムを教えてくれて、その足で深夜でもやってるゲーセンに行って当時流行していたDDR（ダンスのゲーム）や鉄拳とかをやって会社に泊まるみたいな生活をしたんだけれども。</p>\n<p data-sourcepos=\"59:1-59:384\">君は、どちらかというと堅苦しくて面白みがない人間だったからプログラム教えてくれるだけでいいとか思ったり思わなかったりしてたけど、こういう人達との出会いが君を少しずつ変えていくからね。その時の自分の価値観で理解できない人との出会いや体験は大切にしてほしいな。</p>\n<p data-sourcepos=\"61:1-61:330\">誤解してほしくないのは「社員が帰属意識を持たない」という問題に当たった時に、ピザパーティをするのではなく深夜のゲーセンに連れて行けという話ではなくて、言葉ではなく心で理解するためには体験が必要なのでは？という話だからね。</p>\n<h2 data-sourcepos=\"63:1-63:27\">\n<span id=\"ダイバーシティ\" class=\"fragment\"></span><a href=\"#%E3%83%80%E3%82%A4%E3%83%90%E3%83%BC%E3%82%B7%E3%83%86%E3%82%A3\"><i class=\"fa fa-link\"></i></a>ダイバーシティ？</h2>\n<p data-sourcepos=\"65:1-65:195\">プロジェクトのゴールは、プロジェクトに参加しているメンバー全員同じだけれども、企画とデザイナーとプログラマーのゴールは違うんだよ。</p>\n<p data-sourcepos=\"67:1-67:138\">このゴールが違う人と一緒に仕事がすることは製品開発において重要な視点を学ぶのに役立つからね。</p>\n<p data-sourcepos=\"69:1-69:198\">たとえば、デザイナーはゲームに組み込む絵素材を作るのがゴールだし、プログラマはその素材を受け取ってゲームに組み込むのがゴールだよね。</p>\n<p data-sourcepos=\"71:1-71:492\">絵素材を作る仕事では、ルールが明確に定義されていなければ、プログラマがゲームに組み込みやすいファイル名をつけるのは仕事に含まれないよね。プログラムで使える半角英数字で分かりやすいファイル名をつけるのが「常識」とか思ってはいけないんだよ。自分の「常識」やプログラマの「常識」を他の職種の人に押し付けると摩擦が起きるから注意してね。</p>\n<h2 data-sourcepos=\"74:1-74:54\">\n<span id=\"せっかく作ったのに使われないツール\" class=\"fragment\"></span><a href=\"#%E3%81%9B%E3%81%A3%E3%81%8B%E3%81%8F%E4%BD%9C%E3%81%A3%E3%81%9F%E3%81%AE%E3%81%AB%E4%BD%BF%E3%82%8F%E3%82%8C%E3%81%AA%E3%81%84%E3%83%84%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>せっかく作ったのに使われないツール</h2>\n<p data-sourcepos=\"76:1-77:126\">ツールを色々作成したけれども使ってもらえないことも多くあったね。<br>\n後から考えると「相手としてはツールを使うという仕事が一つ増える」からだったのかなと。</p>\n<p data-sourcepos=\"79:1-79:597\">多くの人間は「なんだか分からない新しいことを覚える」のが嫌いで、できるだけ余計な仕事を増やしたくないと思うんだよね。デザイナーはフォトショップやイラストレータといったデザイン作業で必要なツールの使い方を覚えた上で、自分のスキルをそのツール上で発揮しているのだから、名もなき君が作った、そのプロジェクトでしか使えない謎のツールの使い方を覚えることにはモチベーションが上がらないのも不思議じゃないよね？</p>\n<p data-sourcepos=\"81:1-81:276\">そのツールを利用して素材受け渡しのコミュニケーションコストが下がったり、自分以外の誰かの作業が効率化されることが、ゲームを完成させるために必要な作業として認知されなかったのかと思うよ。</p>\n<p data-sourcepos=\"83:1-83:279\">あと、圧倒的に必要なのは「簡単に使える」ツールであることだね。「プログラマー」の簡単ではなくて、「使う人」にとっての簡単。それであれば、多くの人はあまり疑問を感じずに使ってくれるからね。</p>\n<p data-sourcepos=\"85:1-85:186\">せっかくすげー苦労して作ったのに「なんで使わないんだ」とふてくされずに、状況を観察・整理して相手のことを慮ることが大事だよ。</p>\n<h2 data-sourcepos=\"88:1-88:41\">\n<span id=\"pmプレイングマネージャ\" class=\"fragment\"></span><a href=\"#pm%E3%83%97%E3%83%AC%E3%82%A4%E3%83%B3%E3%82%B0%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%A3\"><i class=\"fa fa-link\"></i></a>PM（プレイングマネージャ）</h2>\n<p data-sourcepos=\"90:1-91:403\">就職したのは小さなゲーム屋だったから、20代の頃に割りと大きなプロジェクトでプログラマーをやる傍らPMをやらされて、嫌で嫌でしょうがない思いをすることになるんだけれども。<br>\n炎上して何度もスケジュール引き直したり、見えないお友達のXさんをWBSに書いてみたりなかなか悲惨だったけれども、しばらくした後に「やらなきゃいけないこと」を「やりたいこと」と思う様にすると楽になるというライフハックを発明して、前向きに仕事に取り組める様になるから安心してね。</p>\n<p data-sourcepos=\"93:1-93:288\">年を取ったらやらなきゃいけない仕事だけれどもいきなり出来るようになる仕事ではないし、年を取ってから派手につらい思いもしたくないと思うから、チャンスがあるなら若いうちからやった方がいいと思うよ。</p>\n<h2 data-sourcepos=\"96:1-96:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"98:1-98:246\">令和的にはブラックな話もあるのかなと思いつつ、意外と人生は長いので色々なことに興味を持って前向きにとらえて若い時から有意義な日々を送って頂けたらいいなと思いました。</p>\n<h2 data-sourcepos=\"101:1-101:13\">\n<span id=\"おまけ1\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%911\"><i class=\"fa fa-link\"></i></a>おまけ1</h2>\n<p data-sourcepos=\"103:1-103:50\"><iframe id=\"qiita-embed-content__6b6112ee5ce0f69412db893814ccd16d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6b6112ee5ce0f69412db893814ccd16d\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"106:1-106:25\">営業A短編シリーズ</p>\n<p data-sourcepos=\"108:1-108:50\"><iframe id=\"qiita-embed-content__6d98ab63b4e6425d5d15e155d99315a1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__6d98ab63b4e6425d5d15e155d99315a1\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"110:1-110:50\"><iframe id=\"qiita-embed-content__2150ce0f64396c5636bd7955c9166e23\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2150ce0f64396c5636bd7955c9166e23\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"113:1-113:13\">\n<span id=\"おまけ2\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%912\"><i class=\"fa fa-link\"></i></a>おまけ2</h2>\n<p data-sourcepos=\"115:1-116:30\">2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"118:1-118:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\n新卒だった数十年前の自分に宛てて書いた手紙はもう届いたかな？\n\nhttps://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea\n\n前回の手紙では、君が驚かないように最初に君が就職した会社での話ばかりを書いたけれども、君はゲームが大好きで、面白いゲームをつくって暮らしていきたいと思っていたから、今回は君の人生に大きな影響を与えることになるゲーム屋での話しを書くよ。\n\n※ゲーム屋を辞めて普通のIT屋になってからも役に立ってる内容でまとめました。ゲーム業界じゃない方にもお役に立てれば嬉しいです。\n\n\n## 面白いゲームをつくる５カ年計画\n\nこれはまだ大学生の頃の話だから君もよく覚えていると思うけれども。\n謎のネットビジネスをやってるっぽいペプシマンと名乗るおにーさんからの電話を受けて、なんだか面白い人だなと思って話を聞きに行ったよね。\nどんな流れだったかは詳しく思い出せないけれども「面白いゲームがつくりたいんだ」みたいなことを言ったら、「それにはまずを計画を立てないとダメだ」と言われて計画を立ててくれたよね。\n\n```\n1年目        ：とにかく遊ぶ\n2年目        ：とにかく考える\n3年目 - 4年目：とにかく作る\n5年目        ：とにかく売る\n```\n\n当時の君には衝撃的な計画だったよね。\n\nまだ学生だった君には「売る」という概念がまったくなくて、とにかく面白いものを作れば売れると思ってたよね。ビジネス用語で言うとプロダクトアウトだね。\n\n君は、この後「市場を無視して感性100%で作った物」で儲けるのは難しいことを、数え切れない程のフリーアプリを作って学んでいくことになるんだけれども、できたらこの手紙からも学んでほしいかな。\nあ。自分の感性は必須だから誤解しないでね。感性が不要でマーケットインで物を作れば100%物が売れるとすると、AIに企画を立てさせればよいということになってしまうよね？\n\nこの計画にはもう一つすごいところがあったよね。そう、「とにかく遊ぶ」だよ。\n\nインプットの必要性を端的に伝えているんだよね。しかも実現可能な方法で。壮大で退屈な５カ年計画だったら全く着手する気にならないけど、この計画ならまずは最初の１年目には取り組もうってなるよね。１年目の計画を達成する頃には「コンコルド効果」が発生してやめるにやめられなくなっているのも秀逸だったね。\n\nこの計画は実際は５年ではなくて全く想像もしない形で達成されることになるのだけど、大事なのはインプットを続けることだと思っているよ。１年目はインプットの仕方を学ぶ時期。インプットの量と質はアウトプットに直結するし、量を集めるには絶対的に時間が必要だから。ゲーム以外のいろいろなこともやっておいた方がアイデアを考える時に幅が出ていいと思うよ。\n\n## 人を動かす企画？\n\nゲームのプログラムは書けないから、企画で入ろうとか、数学が苦手だから文系に行くみたいな理由で企画で入るんだけど。\n\n企画を考えてプログラマーのとこに行くと「こんなんじゃ作れませんよね？」って取り合ってもらえなくて。今なら「心理的安全性のない組織」の一言で片付けられそうだけど、みんな自分のゲームが作りたくて色々勉強したのに、よく分からないシロートのフワっとした企画を持ってこられてもそれは困るっていう話なんだよね。俺の企画サイコーなのになんでやって凹まないようにね。\n\n売れることとか、面白いことをきちんと証明するか、それができないのであれば、きちんと作れるところまで落とし込む外部設計をしないと人は動かせないんだよ。\n\n\n## 外部設計はプログラムより難しい\n\nそんなこんなで、プログラムできないと仕事にならないからプログラムも覚えることになるんだけど。\n「人に説明するより自分で書く方が早い」って思うようになって、自分で仕事を抱え込んでいたね。\nこれは、自分のプログラング力が高くなったからではなくて、文章で誤解なく他人に伝えることが難しいからなんだよね。企画者の思いも開発者の考えもきちんと理解して書き出さないとダメ。AIに正しくインプットできる人は未来でも必要になると思うよ。\n\n\n## 出会いと体験\n\n君は、ゲーム屋に転職した後で割りと有名なゲームを作っていた師匠と出会うことになるんだけれども、その人がとにかく豪快な人で。\n途中から別の会社に就職されたんだけれども君の会社とも謎契約をしてて。夜に君の会社にやってきては色々なプログラムを教えてくれて、その足で深夜でもやってるゲーセンに行って当時流行していたDDR（ダンスのゲーム）や鉄拳とかをやって会社に泊まるみたいな生活をしたんだけれども。\n\n君は、どちらかというと堅苦しくて面白みがない人間だったからプログラム教えてくれるだけでいいとか思ったり思わなかったりしてたけど、こういう人達との出会いが君を少しずつ変えていくからね。その時の自分の価値観で理解できない人との出会いや体験は大切にしてほしいな。\n\n誤解してほしくないのは「社員が帰属意識を持たない」という問題に当たった時に、ピザパーティをするのではなく深夜のゲーセンに連れて行けという話ではなくて、言葉ではなく心で理解するためには体験が必要なのでは？という話だからね。\n\n## ダイバーシティ？\n\nプロジェクトのゴールは、プロジェクトに参加しているメンバー全員同じだけれども、企画とデザイナーとプログラマーのゴールは違うんだよ。\n\nこのゴールが違う人と一緒に仕事がすることは製品開発において重要な視点を学ぶのに役立つからね。\n\nたとえば、デザイナーはゲームに組み込む絵素材を作るのがゴールだし、プログラマはその素材を受け取ってゲームに組み込むのがゴールだよね。\n\n絵素材を作る仕事では、ルールが明確に定義されていなければ、プログラマがゲームに組み込みやすいファイル名をつけるのは仕事に含まれないよね。プログラムで使える半角英数字で分かりやすいファイル名をつけるのが「常識」とか思ってはいけないんだよ。自分の「常識」やプログラマの「常識」を他の職種の人に押し付けると摩擦が起きるから注意してね。\n\n\n## せっかく作ったのに使われないツール\n\nツールを色々作成したけれども使ってもらえないことも多くあったね。\n後から考えると「相手としてはツールを使うという仕事が一つ増える」からだったのかなと。\n\n多くの人間は「なんだか分からない新しいことを覚える」のが嫌いで、できるだけ余計な仕事を増やしたくないと思うんだよね。デザイナーはフォトショップやイラストレータといったデザイン作業で必要なツールの使い方を覚えた上で、自分のスキルをそのツール上で発揮しているのだから、名もなき君が作った、そのプロジェクトでしか使えない謎のツールの使い方を覚えることにはモチベーションが上がらないのも不思議じゃないよね？\n\nそのツールを利用して素材受け渡しのコミュニケーションコストが下がったり、自分以外の誰かの作業が効率化されることが、ゲームを完成させるために必要な作業として認知されなかったのかと思うよ。\n\nあと、圧倒的に必要なのは「簡単に使える」ツールであることだね。「プログラマー」の簡単ではなくて、「使う人」にとっての簡単。それであれば、多くの人はあまり疑問を感じずに使ってくれるからね。\n\nせっかくすげー苦労して作ったのに「なんで使わないんだ」とふてくされずに、状況を観察・整理して相手のことを慮ることが大事だよ。\n\n\n## PM（プレイングマネージャ）\n\n就職したのは小さなゲーム屋だったから、20代の頃に割りと大きなプロジェクトでプログラマーをやる傍らPMをやらされて、嫌で嫌でしょうがない思いをすることになるんだけれども。\n炎上して何度もスケジュール引き直したり、見えないお友達のXさんをWBSに書いてみたりなかなか悲惨だったけれども、しばらくした後に「やらなきゃいけないこと」を「やりたいこと」と思う様にすると楽になるというライフハックを発明して、前向きに仕事に取り組める様になるから安心してね。\n\n年を取ったらやらなきゃいけない仕事だけれどもいきなり出来るようになる仕事ではないし、年を取ってから派手につらい思いもしたくないと思うから、チャンスがあるなら若いうちからやった方がいいと思うよ。\n\n\n## おわりに\n\n令和的にはブラックな話もあるのかなと思いつつ、意外と人生は長いので色々なことに興味を持って前向きにとらえて若い時から有意義な日々を送って頂けたらいいなと思いました。\n\n\n## おまけ1\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\n\n営業A短編シリーズ\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n\n## おまけ2\n\n2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-03-25T16:59:35+09:00",
    "group": null,
    "id": "0bf1703cb8d6f84afbc5",
    "likes_count": 29,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 14,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      },
      {
        "name": "新人エンジニア",
        "versions": []
      }
    ],
    "title": "手紙～追伸新卒エンジニアの君へ～",
    "updated_at": "2023-03-26T13:22:52+09:00",
    "url": "https://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 6289,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:161\">そろそろ新卒入社の時期なので、新卒だった数十年前の自分に宛てて手紙を書いておこうと思います。<br>\nこれからITエンジニアとしての人生を歩んでいく新卒エンジニアやメンターの方々に何かのお役に立てれば嬉しいです。</p>\n<h2 data-sourcepos=\"6:1-6:39\">\n<span id=\"拝啓新卒エンジニアの君へ\" class=\"fragment\"></span><a href=\"#%E6%8B%9D%E5%95%93%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E5%90%9B%E3%81%B8\"><i class=\"fa fa-link\"></i></a>拝啓新卒エンジニアの君へ</h2>\n<p data-sourcepos=\"8:1-9:396\">ゲームを創る仕事がしたかったけれども、普通のそれなりに大きなIT企業に就職した君へ。<br>\n就活でゲーム屋は全部落ちちゃったけど、今ではその方がよかったと思うよ。世間で名前が通っているゲーム屋はいわゆる「パブリッシャー」と呼ばれる会社なので自社で開発していないことも多いし、実際それらの会社の仕事は転職後に下請けとして後でやることになるから安心していいよ。</p>\n<h3 data-sourcepos=\"12:1-12:73\">\n<span id=\"つよいという誤解とつよさを維持することの難しさ\" class=\"fragment\"></span><a href=\"#%E3%81%A4%E3%82%88%E3%81%84%E3%81%A8%E3%81%84%E3%81%86%E8%AA%A4%E8%A7%A3%E3%81%A8%E3%81%A4%E3%82%88%E3%81%95%E3%82%92%E7%B6%AD%E6%8C%81%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8%E3%81%AE%E9%9B%A3%E3%81%97%E3%81%95\"><i class=\"fa fa-link\"></i></a>つよいという誤解とつよさを維持することの難しさ</h3>\n<p data-sourcepos=\"14:1-14:212\">それなりに大きなIT企業での仕事では、はっきりとは自覚できていないと思うけれども、エンジニアとしてキャリアを築く上で大事なことを学んでるからね。</p>\n<p data-sourcepos=\"16:1-16:405\">大学生の頃、先輩が作った場末のソフトハウスでバイトしてて終電を逃してたよね。先輩が２つのキーボードを使い分けてタバコをガンガンふかしながらプログラムを書いているのを見て、漠然とそんなエンジニアになるのかなカッケーと思ったかもしれないけれども、そんな風にはならなかったね。</p>\n<p data-sourcepos=\"18:1-18:417\">そんなキャリアを引っ提げて入社した君は、新人研修チョロいと思ってなめてたけど、現場に入っていきなり苦労してたね。当時最先端だった VC6 が全く分からなくて悔しい思いをしながら夜遅くまで勉強していたね。C++ は最高でこれさえ覚えればずっと食ってけるかなって思ったらそんなことはなかったね。</p>\n<p data-sourcepos=\"20:1-20:333\">Java が登場したけど、設定が大変だったりパフォーマンスがとても悪くて C++ の敵じゃないと思ったけど、PCの性能が向上してパフォーマンスの問題を解決してしまい Java 全盛の未来がきたからね。その未来がいつまで続くかは分からないけれども。</p>\n<p data-sourcepos=\"22:1-22:491\">アセンブラから C や C++ に移行できないエンジニアというのは結構たくさんいたよね。同様に C++ から Java に移行できないエンジニアもたくさん現れたんだよ。メモリを自分で解放できないのが気持ち悪いとかね。幸いにも君の先輩はとても素晴らしい方で時間を見つけては案件で使わないJavaを楽しそうに書いてたんだよね。知的好奇心はなくさないようにしてね。</p>\n<h3 data-sourcepos=\"25:1-25:40\">\n<span id=\"何が役に立つか分からない\" class=\"fragment\"></span><a href=\"#%E4%BD%95%E3%81%8C%E5%BD%B9%E3%81%AB%E7%AB%8B%E3%81%A4%E3%81%8B%E5%88%86%E3%81%8B%E3%82%89%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>何が役に立つか分からない</h3>\n<p data-sourcepos=\"27:1-27:620\">ゲームを作りたかった君は、大学で OpenGL（3Dグラフィックス） を学んだね。普通のIT企業に入ってしまったので全く使わないだろうと思っていたら、ショボいPCでそれなり描画性能を要求されるプロジェクトに配属されて割りと好きに色々書かせてもらったね。自分が所属する社会集団において、他人ができないことをできるということは、それだけチャンスが回ってくる可能性が高くなるということだから、好きなことを色々やっておくのがいいんだろうね。</p>\n<p data-sourcepos=\"29:1-29:248\">試験の点数を取るためだけにやっていた行列計算が3Dグラフィックスをやるのに役に立ったりして、高校生の時に使っていた教科書を会社に持っていくようになるんだから面白いよね。</p>\n<h3 data-sourcepos=\"32:1-32:34\">\n<span id=\"不毛な空中戦と仕様書\" class=\"fragment\"></span><a href=\"#%E4%B8%8D%E6%AF%9B%E3%81%AA%E7%A9%BA%E4%B8%AD%E6%88%A6%E3%81%A8%E4%BB%95%E6%A7%98%E6%9B%B8\"><i class=\"fa fa-link\"></i></a>不毛な空中戦と仕様書</h3>\n<p data-sourcepos=\"34:1-34:258\">学生の頃、趣味やバイトでプログラムを書いてた君は、ワードでの仕様書作成を新鮮な業務とは思いながらも少々無駄に感じていたよね。ソフトウェアはプログラムさえ書けば動くのだから。</p>\n<p data-sourcepos=\"36:1-36:186\">君にとってラッキーだったことは、この仕様書作成業務を新卒の時に『普通の仕事ではやるべきこと』として経験できたことだと思うよ。</p>\n<p data-sourcepos=\"38:1-38:621\">プロジェクトは様々な立場や職務や価値観の人が携わって運営されているという事実を理解するのにはずいぶん時間がかかるんだ。その後の人生で空中戦（口頭のみのやり取り）からの不毛な言った言わない論争を大量に見ることになるんだけれども、それを回避するためのヒントを手に入れてたんだよ。アウトプットされたドキュメントからは読み取れないかもしれないけれども、いろいろな人と合意を取ったり指示を出したりするのに有効な手段なんだよ。</p>\n<h3 data-sourcepos=\"41:1-41:37\">\n<span id=\"アンガーマネジメント\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%83%B3%E3%82%AC%E3%83%BC%E3%83%9E%E3%83%8D%E3%82%B8%E3%83%A1%E3%83%B3%E3%83%88\"><i class=\"fa fa-link\"></i></a>アンガーマネジメント？</h3>\n<p data-sourcepos=\"43:1-43:399\">初めてのお客様との打ち合わせで、内容が分からなすぎて寝そうになっていたよね。その時先輩に「資料整理残ってたから、そっちやっておいてよ。」と声をかけられたのを覚えている？打ち合わせ終わった後で「眠かった？（笑）」なんて聞かれて。普通だったら説教されているところだよね。</p>\n<p data-sourcepos=\"45:1-45:312\">今では当たり前の様に言われている「アンガーマネジメント」にこんな早い時期に触れることができたのだから、君は相当ラッキーだよ。書籍ではなかなか理解できない兄貴の覚悟が！「言葉」でなく「心」で理解できた！んだよ。</p>\n<h3 data-sourcepos=\"48:1-48:58\">\n<span id=\"メンターとサーヴァントリーダーシップ\" class=\"fragment\"></span><a href=\"#%E3%83%A1%E3%83%B3%E3%82%BF%E3%83%BC%E3%81%A8%E3%82%B5%E3%83%BC%E3%83%B4%E3%82%A1%E3%83%B3%E3%83%88%E3%83%AA%E3%83%BC%E3%83%80%E3%83%BC%E3%82%B7%E3%83%83%E3%83%97\"><i class=\"fa fa-link\"></i></a>メンターとサーヴァントリーダーシップ</h3>\n<p data-sourcepos=\"50:1-50:81\">そんな優しい先輩が一度だけ怖い顔をしたことがあったね。</p>\n<p data-sourcepos=\"52:1-52:351\">改修案件でスパゲティ気味のソースを引き継いでいた時に、先輩が忙しそうな時にどうしても分からないところを聞いちゃったんだよねぇ。文句一つ言わずに怖い顔してソース読んでくれてたね。お手を煩わせて申し訳ないなとかいろいろなことを思ったよね。</p>\n<p data-sourcepos=\"54:1-54:366\">元ソースを書いていたプロジェクトを離れてしまった人に電凸するのは全く申し訳ないと思わなかったけれども。後から分かることだけど、プロジェクトを離れてもなお前のプロジェクトのソースのことを覚えているってとても凄いことだから敬意を持つようにしようね。</p>\n<p data-sourcepos=\"56:1-56:213\">これも当時は言語化されてなかったんだけど「サーヴァントリーダーシップ」みたいなことができる「メンター」が先輩だったんだなあと後で分かるからね。</p>\n<h2 data-sourcepos=\"59:1-59:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"61:1-62:274\">新卒エンジニアとメンターの方に向けての実体験混じりの手紙でした。<br>\nインターネットの発達で情報が飛び交っていたり、ChatGPTの登場で世間は浮足立ってる気がしますが、自分のペースでひとつひとつ学んだりアウトプットしたりしていくのがよいのかなあと思っています。</p>\n<h2 data-sourcepos=\"65:1-65:9\">\n<span id=\"追伸\" class=\"fragment\"></span><a href=\"#%E8%BF%BD%E4%BC%B8\"><i class=\"fa fa-link\"></i></a>追伸</h2>\n<p data-sourcepos=\"67:1-67:50\"><iframe id=\"qiita-embed-content__f90f8c1860628bf29c5ce536bdd2be6c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f90f8c1860628bf29c5ce536bdd2be6c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F0bf1703cb8d6f84afbc5\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"70:1-70:34\">\n<span id=\"おまけ1--新卒向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%911--%E6%96%B0%E5%8D%92%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ1 : 新卒向け記事</h2>\n<p data-sourcepos=\"72:1-72:50\"><iframe id=\"qiita-embed-content__8e62f5465ba4f20d2c57ea59a52b794f\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__8e62f5465ba4f20d2c57ea59a52b794f\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fabe98001f74025cec422\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"74:1-74:50\"><iframe id=\"qiita-embed-content__77b99aa19258907fdd776f545eb745b6\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__77b99aa19258907fdd776f545eb745b6\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"76:1-76:50\"><iframe id=\"qiita-embed-content__b718ba1ab03e7053e00a9374e80b7d61\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b718ba1ab03e7053e00a9374e80b7d61\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Faa2f81cf1e3974b8ad3a\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"78:1-78:50\"><iframe id=\"qiita-embed-content__98fcde02f7cda1379be02e3687fb358c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__98fcde02f7cda1379be02e3687fb358c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fafc8b7097ba4473896e4\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"81:1-81:49\">\n<span id=\"おまけ2--新卒メンター向け記事\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%912--%E6%96%B0%E5%8D%92%E3%83%A1%E3%83%B3%E3%82%BF%E3%83%BC%E5%90%91%E3%81%91%E8%A8%98%E4%BA%8B\"><i class=\"fa fa-link\"></i></a>おまけ2 : 新卒・メンター向け記事</h2>\n<p data-sourcepos=\"83:1-83:50\"><iframe id=\"qiita-embed-content__a187bbcdce76dc106fa94aeb561a633b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a187bbcdce76dc106fa94aeb561a633b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fb1c94328f273c750286b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"85:1-85:50\"><iframe id=\"qiita-embed-content__f6e1f783d0714fe75d6730123176a46e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f6e1f783d0714fe75d6730123176a46e\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F9ef5ad3a4df0d7be9c32\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"88:1-88:41\">\n<span id=\"おまけ3--営業a短編シリーズ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%913--%E5%96%B6%E6%A5%ADa%E7%9F%AD%E7%B7%A8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\"><i class=\"fa fa-link\"></i></a>おまけ3 : 営業A短編シリーズ</h2>\n<p data-sourcepos=\"90:1-90:50\"><iframe id=\"qiita-embed-content__2ffd92e8ae1070069501b1449c5f8788\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__2ffd92e8ae1070069501b1449c5f8788\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"92:1-92:50\"><iframe id=\"qiita-embed-content__23540cab4616903a8dfcab4c66aec19c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__23540cab4616903a8dfcab4c66aec19c\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"95:1-95:13\">\n<span id=\"おまけ4\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%914\"><i class=\"fa fa-link\"></i></a>おまけ4</h2>\n<p data-sourcepos=\"97:1-98:30\">2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"100:1-100:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\nそろそろ新卒入社の時期なので、新卒だった数十年前の自分に宛てて手紙を書いておこうと思います。\nこれからITエンジニアとしての人生を歩んでいく新卒エンジニアやメンターの方々に何かのお役に立てれば嬉しいです。\n\n## 拝啓新卒エンジニアの君へ\n\nゲームを創る仕事がしたかったけれども、普通のそれなりに大きなIT企業に就職した君へ。\n就活でゲーム屋は全部落ちちゃったけど、今ではその方がよかったと思うよ。世間で名前が通っているゲーム屋はいわゆる「パブリッシャー」と呼ばれる会社なので自社で開発していないことも多いし、実際それらの会社の仕事は転職後に下請けとして後でやることになるから安心していいよ。\n\n\n### つよいという誤解とつよさを維持することの難しさ\n\nそれなりに大きなIT企業での仕事では、はっきりとは自覚できていないと思うけれども、エンジニアとしてキャリアを築く上で大事なことを学んでるからね。\n\n大学生の頃、先輩が作った場末のソフトハウスでバイトしてて終電を逃してたよね。先輩が２つのキーボードを使い分けてタバコをガンガンふかしながらプログラムを書いているのを見て、漠然とそんなエンジニアになるのかなカッケーと思ったかもしれないけれども、そんな風にはならなかったね。\n\nそんなキャリアを引っ提げて入社した君は、新人研修チョロいと思ってなめてたけど、現場に入っていきなり苦労してたね。当時最先端だった VC6 が全く分からなくて悔しい思いをしながら夜遅くまで勉強していたね。C++ は最高でこれさえ覚えればずっと食ってけるかなって思ったらそんなことはなかったね。\n\nJava が登場したけど、設定が大変だったりパフォーマンスがとても悪くて C++ の敵じゃないと思ったけど、PCの性能が向上してパフォーマンスの問題を解決してしまい Java 全盛の未来がきたからね。その未来がいつまで続くかは分からないけれども。\n\nアセンブラから C や C++ に移行できないエンジニアというのは結構たくさんいたよね。同様に C++ から Java に移行できないエンジニアもたくさん現れたんだよ。メモリを自分で解放できないのが気持ち悪いとかね。幸いにも君の先輩はとても素晴らしい方で時間を見つけては案件で使わないJavaを楽しそうに書いてたんだよね。知的好奇心はなくさないようにしてね。\n\n\n### 何が役に立つか分からない\n\nゲームを作りたかった君は、大学で OpenGL（3Dグラフィックス） を学んだね。普通のIT企業に入ってしまったので全く使わないだろうと思っていたら、ショボいPCでそれなり描画性能を要求されるプロジェクトに配属されて割りと好きに色々書かせてもらったね。自分が所属する社会集団において、他人ができないことをできるということは、それだけチャンスが回ってくる可能性が高くなるということだから、好きなことを色々やっておくのがいいんだろうね。\n\n試験の点数を取るためだけにやっていた行列計算が3Dグラフィックスをやるのに役に立ったりして、高校生の時に使っていた教科書を会社に持っていくようになるんだから面白いよね。\n\n\n### 不毛な空中戦と仕様書\n\n学生の頃、趣味やバイトでプログラムを書いてた君は、ワードでの仕様書作成を新鮮な業務とは思いながらも少々無駄に感じていたよね。ソフトウェアはプログラムさえ書けば動くのだから。\n\n君にとってラッキーだったことは、この仕様書作成業務を新卒の時に『普通の仕事ではやるべきこと』として経験できたことだと思うよ。\n\nプロジェクトは様々な立場や職務や価値観の人が携わって運営されているという事実を理解するのにはずいぶん時間がかかるんだ。その後の人生で空中戦（口頭のみのやり取り）からの不毛な言った言わない論争を大量に見ることになるんだけれども、それを回避するためのヒントを手に入れてたんだよ。アウトプットされたドキュメントからは読み取れないかもしれないけれども、いろいろな人と合意を取ったり指示を出したりするのに有効な手段なんだよ。\n\n\n### アンガーマネジメント？\n\n初めてのお客様との打ち合わせで、内容が分からなすぎて寝そうになっていたよね。その時先輩に「資料整理残ってたから、そっちやっておいてよ。」と声をかけられたのを覚えている？打ち合わせ終わった後で「眠かった？（笑）」なんて聞かれて。普通だったら説教されているところだよね。\n\n今では当たり前の様に言われている「アンガーマネジメント」にこんな早い時期に触れることができたのだから、君は相当ラッキーだよ。書籍ではなかなか理解できない兄貴の覚悟が！「言葉」でなく「心」で理解できた！んだよ。\n\n\n### メンターとサーヴァントリーダーシップ\n\nそんな優しい先輩が一度だけ怖い顔をしたことがあったね。\n\n改修案件でスパゲティ気味のソースを引き継いでいた時に、先輩が忙しそうな時にどうしても分からないところを聞いちゃったんだよねぇ。文句一つ言わずに怖い顔してソース読んでくれてたね。お手を煩わせて申し訳ないなとかいろいろなことを思ったよね。\n\n元ソースを書いていたプロジェクトを離れてしまった人に電凸するのは全く申し訳ないと思わなかったけれども。後から分かることだけど、プロジェクトを離れてもなお前のプロジェクトのソースのことを覚えているってとても凄いことだから敬意を持つようにしようね。\n\nこれも当時は言語化されてなかったんだけど「サーヴァントリーダーシップ」みたいなことができる「メンター」が先輩だったんだなあと後で分かるからね。\n\n\n## おわりに\n\n新卒エンジニアとメンターの方に向けての実体験混じりの手紙でした。\nインターネットの発達で情報が飛び交っていたり、ChatGPTの登場で世間は浮足立ってる気がしますが、自分のペースでひとつひとつ学んだりアウトプットしたりしていくのがよいのかなあと思っています。\n\n\n## 追伸\n\nhttps://qiita.com/kaku3/items/0bf1703cb8d6f84afbc5\n\n\n## おまけ1 : 新卒向け記事\n\nhttps://qiita.com/kaku3/items/abe98001f74025cec422\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a\n\nhttps://qiita.com/kaku3/items/afc8b7097ba4473896e4\n\n\n## おまけ2 : 新卒・メンター向け記事\n\nhttps://qiita.com/kaku3/items/b1c94328f273c750286b\n\nhttps://qiita.com/kaku3/items/9ef5ad3a4df0d7be9c32\n\n\n## おまけ3 : 営業A短編シリーズ\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n\n## おまけ4\n\n2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 1,
    "created_at": "2023-03-21T16:29:50+09:00",
    "group": null,
    "id": "2c8d4d783be7ce4fc9ea",
    "likes_count": 144,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 97,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      },
      {
        "name": "新人エンジニア",
        "versions": []
      }
    ],
    "title": "手紙～拝啓新卒エンジニアの君へ～",
    "updated_at": "2023-04-24T19:54:27+09:00",
    "url": "https://qiita.com/kaku3/items/2c8d4d783be7ce4fc9ea",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 29217,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:85\"><strong>「未経験エンジニアに一番必要なスキルはなんでしょう？」</strong></p>\n<p data-sourcepos=\"5:1-5:203\">所属する会社の規模や業務内容によっても異なりますし、色々な回答もあると思いますが、今回はITの仕事といった観点で考察してみたいと思います。</p>\n<h2 data-sourcepos=\"8:1-8:21\">\n<span id=\"業種別企業数\" class=\"fragment\"></span><a href=\"#%E6%A5%AD%E7%A8%AE%E5%88%A5%E4%BC%81%E6%A5%AD%E6%95%B0\"><i class=\"fa fa-link\"></i></a>業種別企業数</h2>\n<p data-sourcepos=\"10:1-10:56\">ITの業種別の企業数から考察してみます。</p>\n<p data-sourcepos=\"12:1-12:134\"><a href=\"https://camo.qiitausercontent.com/1ee81e789a262ffb48381c0ce8c8f9f3cbb2914c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f34396530373334642d613732352d306635352d633064372d3738393330646662303938322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F49e0734d-a725-0f55-c0d7-78930dfb0982.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=80fdbf1b73b3ea4b9553d25c02c8d9aa\" alt=\"業種別企業数.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/49e0734d-a725-0f55-c0d7-78930dfb0982.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F49e0734d-a725-0f55-c0d7-78930dfb0982.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=640e7a76bd291ec9971e541522dfdb83 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"14:1-15:269\">(出典)<br>\n<a href=\"https://www.soumu.go.jp/johotsusintokei/whitepaper/ja/r02/html/nd251650.html\" rel=\"nofollow noopener\" target=\"_blank\">総務省トップ &gt; 政策 &gt; 白書 &gt; 令和2年版 &gt; 情報サービス業 : 図表5-1-6-16　業種別企業数と売上高（アクティビティベース）</a>より抜粋、グラフ化</p>\n<p data-sourcepos=\"17:1-18:308\">「受託開発ソフトウェア業」が2位以下に2倍以上の差をつけて多いことが分かります。<br>\n加えて「未経験エンジニア」で特殊なスキルを持っていないとしたら、何を受託しているかは分からない<del>闇鍋</del> 「受託開発ソフトウェア業」に就く可能性が高そうなので、以下「受託開発ソフトウェア業」について考察します。</p>\n<h2 data-sourcepos=\"21:1-21:24\">\n<span id=\"元請け下請け\" class=\"fragment\"></span><a href=\"#%E5%85%83%E8%AB%8B%E3%81%91%E4%B8%8B%E8%AB%8B%E3%81%91\"><i class=\"fa fa-link\"></i></a>元請け、下請け</h2>\n<p data-sourcepos=\"23:1-23:54\">元請け、下請けの状況から考察します。</p>\n<p data-sourcepos=\"25:1-25:126\"><a href=\"https://camo.qiitausercontent.com/619e80c5bef35fabb82f24d9e314e6fc65b8b63a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f33643961363437662d333935372d393261372d636330662d3935303630386337323763362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F3d9a647f-3957-92a7-cc0f-950608c727c6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b5a5526f31c43cf4bb175393fa05b7c4\" alt=\"x次請け.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/3d9a647f-3957-92a7-cc0f-950608c727c6.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F3d9a647f-3957-92a7-cc0f-950608c727c6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=05ac5e4d782abb4a15dc9f3230c7bf02 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"27:1-28:139\">（出典）<br>\n<a href=\"https://www.soumu.go.jp/johotsusintokei/statistics/statistics07.html\" rel=\"nofollow noopener\" target=\"_blank\">総務省・経済産業省「2019年情報通信業基本調査」</a></p>\n<p data-sourcepos=\"30:1-30:111\">３次請け以降の会社は遠くない未来に仕事がなくなってしまうようにも見えます。</p>\n<p data-sourcepos=\"32:1-32:336\">「ウォーターフォール開発」の考え方でいけば、元請け企業が要件定義や外部設計を行い、開発を二次請けに流すので二次請け会社に入ればプログラムが書けることになりますが、このグラフからは読み取れないですし、以下の様な疑問も残ります。</p>\n<ul data-sourcepos=\"34:1-38:0\">\n<li data-sourcepos=\"34:1-34:89\">最近はウォーターフォール流行らないけど分業や責任の範囲は？</li>\n<li data-sourcepos=\"35:1-35:39\">3次請け以降の仕事って何？</li>\n<li data-sourcepos=\"36:1-38:0\"><strong>中抜きして丸投げしてない？</strong></li>\n</ul>\n<h2 data-sourcepos=\"39:1-39:15\">\n<span id=\"ict投資額\" class=\"fragment\"></span><a href=\"#ict%E6%8A%95%E8%B3%87%E9%A1%8D\"><i class=\"fa fa-link\"></i></a>ICT投資額</h2>\n<p data-sourcepos=\"41:1-41:36\">ICT投資額から考察します。</p>\n<p data-sourcepos=\"43:1-44:81\"><a href=\"https://camo.qiitausercontent.com/46db4d946b9e3d13b889d85a49f95db90563197f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f35633231623661632d616133622d303365652d616136652d3237393461326165303363362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F5c21b6ac-aa3b-03ee-aa6e-2794a2ae03c6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=fa5465766abed5ab6504808362b816d8\" alt=\"ict-日本.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/5c21b6ac-aa3b-03ee-aa6e-2794a2ae03c6.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F5c21b6ac-aa3b-03ee-aa6e-2794a2ae03c6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=3b21def0e9b59de79b97efa337450dc1 1x\" loading=\"lazy\"></a><br>\n（出典）図表1-2-2-1　日本のICT投資額の推移（名目）/ OECD Stat</p>\n<p data-sourcepos=\"46:1-47:82\"><a href=\"https://camo.qiitausercontent.com/0028c148d88dec67682d90b6f2fa460416140f03/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37393939626166372d313036392d663637662d373130382d3231623339626237643565332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7999baf7-1069-f67f-7108-21b39bb7d5e3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=7352641cff8300d4586cc60972a65f56\" alt=\"ict-米国.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7999baf7-1069-f67f-7108-21b39bb7d5e3.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7999baf7-1069-f67f-7108-21b39bb7d5e3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=e73a44e2c26bb210aa890e2a81199b50 1x\" loading=\"lazy\"></a><br>\n（出典）図表1-2-2-2　米国のICT投資額の推移（名目） / OECD Stat</p>\n<p data-sourcepos=\"49:1-49:190\">1989年からの30年間で、米国では4倍以上に増加しているのに対して、日本ではほぼ横ばいでじわじわと投資額は減っていることが分かります。</p>\n<p data-sourcepos=\"51:1-51:219\">その場合、モダンな言語でのモダンな開発案件自体が少ない中で、未経験のエンジニアがそこに参画できる確率というのは厳しい数字になることが想像できます。</p>\n<p data-sourcepos=\"53:1-53:257\">また、ICTの費用の大半は人件費です。投資額が減っているということは、昔は5人-10人でやっていた仕事を3人-5人、ひいては1人で行わなければならない状況になることも考えられるでしょう。</p>\n<p data-sourcepos=\"55:1-57:162\">ところで、このグラフからは、システムの運用維持管理費の扱いが読み取れないです。<br>\nクラウドサービスはサービスを続ける限りは固定費が発生します。また、運用維持管理にも人件費が発生します。<br>\nこれらもICT投資額に含まれいている場合、新規の開発案件はグラフの見た目以上に減少傾向にあることも考えられます。</p>\n<h2 data-sourcepos=\"60:1-60:24\">\n<span id=\"仕事のサイクル\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E4%BA%8B%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB\"><i class=\"fa fa-link\"></i></a>仕事のサイクル</h2>\n<p data-sourcepos=\"62:1-62:247\">一般的に企業は１年以内の <strong>事業年度</strong> 毎に、儲かったとか儲からなかったとかの計算をしています。その計算をする月を <strong>決算月</strong> といい、その月は3月、9月、12月が多いようです。</p>\n<p data-sourcepos=\"64:1-65:86\">この月がバラバラならいいのですが、決算月が大体同じことで「プログラマ」には困ったことが起きます。<br>\nそうです。<strong>4月は「プログラム」工程の案件が少ないのです。</strong></p>\n<p data-sourcepos=\"67:1-68:165\">決算月に来期の予算が決まって、その予算をどうやって使おうかーという話を、4月(や10月や1月)にはじめます。<br>\n継続してお付き合いのあるお客様ならもう少し前から会話を始めるかもしれませんが、大きな流れとしてはそうなります。</p>\n<p data-sourcepos=\"70:1-70:267\">ということで、4月の時点では開発案件はないし、この時点で開発案件の相談に乗る(コンサル・要件定義・外部設計)ことができないと、いつまで経っても開発案件が発生しないことが想定できます。</p>\n<p data-sourcepos=\"72:1-72:129\"><a href=\"https://camo.qiitausercontent.com/20dd361599d6a90d0fcb1df4c4feae74e6a64e94/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64656330366665382d346535612d383233612d616630352d3864666463633366343034312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdec06fe8-4e5a-823a-af05-8dfdcc3f4041.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=3f8b927ccdfa7542e1c19b2c8dc323fb\" alt=\"工程.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/dec06fe8-4e5a-823a-af05-8dfdcc3f4041.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdec06fe8-4e5a-823a-af05-8dfdcc3f4041.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=438d35eab43e5329b8c4a215ff8f9f4d 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"74:1-74:345\">また、ウォーターフォールではなくアジャイル開発の場合は、案件における「プログラミング」の作業の割合には大きな変化はない上に、アジャイル開発を行うためのスキルが必要になるため「プログラミング」能力だけでは参画が難しいと考えられます。</p>\n<p data-sourcepos=\"76:1-76:316\">未経験エンジニア目線で見ると、JavaやPython等のプログラム言語のどれを覚えるのがよいのかという話が度々話題に上がりますが、「受託」の業務の観点では、そもそも「プログラミング」以外の業務を行う確率が高いと考えられます。</p>\n<h2 data-sourcepos=\"79:1-79:12\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n<p data-sourcepos=\"81:1-83:328\">「受託開発ソフトウェア業」では、元々の業態では「ウォーターフォール」と呼ばれる開発手法で１次請けが要件定義・外部設計や交通整理を行ってくれていました。<br>\nただ、<strong>なぜか</strong>ウォーターフォールは機能しない、 <strong>顧客を巻き込んだアジャイル</strong> が必要と言われる様になりました。<br>\nアジャイル開発やスクラムは意識高い方法論が先行しがちですが、<strong>単にチームメンバー全員に高いコミュニケーション能力と要件定義～試験までを短いサイクルで実施できるスキル</strong>が求められていると考えると分かりやすいかもしれません。</p>\n<p data-sourcepos=\"85:1-85:306\">といった状況を鑑みると、長期的には <strong>「一番必要なスキルは案件に関するスキル全部」</strong> みたいな雑な結論になるのですが、未経験エンジニアとしては <strong>「日本語ライティング」</strong> から手を付けるのが効率がよいと思います。</p>\n<p data-sourcepos=\"87:1-87:8\">(参考)</p>\n<p data-sourcepos=\"89:1-89:50\"><iframe id=\"qiita-embed-content__1d8a9caa71aad01e0748b8ace9dad8cf\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1d8a9caa71aad01e0748b8ace9dad8cf\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"92:1-92:13\">\n<span id=\"おまけ1\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%911\"><i class=\"fa fa-link\"></i></a>おまけ1</h2>\n<p data-sourcepos=\"94:1-94:25\">営業A短編シリーズ</p>\n<p data-sourcepos=\"96:1-96:50\"><iframe id=\"qiita-embed-content__4ec013aa8dd82d1308cd1bef9e953cde\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__4ec013aa8dd82d1308cd1bef9e953cde\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"98:1-98:50\"><iframe id=\"qiita-embed-content__8ccce156908149de9eef7019b99eb8ba\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__8ccce156908149de9eef7019b99eb8ba\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"101:1-101:13\">\n<span id=\"おまけ2\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%912\"><i class=\"fa fa-link\"></i></a>おまけ2</h2>\n<p data-sourcepos=\"103:1-104:30\">2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"106:1-106:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## はじめに\n\n**「未経験エンジニアに一番必要なスキルはなんでしょう？」**\n\n所属する会社の規模や業務内容によっても異なりますし、色々な回答もあると思いますが、今回はITの仕事といった観点で考察してみたいと思います。\n\n\n## 業種別企業数\n\nITの業種別の企業数から考察してみます。\n\n![業種別企業数.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/49e0734d-a725-0f55-c0d7-78930dfb0982.png)\n\n(出典)\n[総務省トップ > 政策 > 白書 > 令和2年版 > 情報サービス業 : 図表5-1-6-16　業種別企業数と売上高（アクティビティベース）](https://www.soumu.go.jp/johotsusintokei/whitepaper/ja/r02/html/nd251650.html)より抜粋、グラフ化\n\n「受託開発ソフトウェア業」が2位以下に2倍以上の差をつけて多いことが分かります。\n加えて「未経験エンジニア」で特殊なスキルを持っていないとしたら、何を受託しているかは分からない~~闇鍋~~ 「受託開発ソフトウェア業」に就く可能性が高そうなので、以下「受託開発ソフトウェア業」について考察します。\n\n\n## 元請け、下請け\n\n元請け、下請けの状況から考察します。\n\n![x次請け.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/3d9a647f-3957-92a7-cc0f-950608c727c6.png)\n\n（出典）\n[総務省・経済産業省「2019年情報通信業基本調査」](https://www.soumu.go.jp/johotsusintokei/statistics/statistics07.html)\n\n３次請け以降の会社は遠くない未来に仕事がなくなってしまうようにも見えます。\n\n「ウォーターフォール開発」の考え方でいけば、元請け企業が要件定義や外部設計を行い、開発を二次請けに流すので二次請け会社に入ればプログラムが書けることになりますが、このグラフからは読み取れないですし、以下の様な疑問も残ります。\n\n- 最近はウォーターフォール流行らないけど分業や責任の範囲は？\n- 3次請け以降の仕事って何？\n- **中抜きして丸投げしてない？**\n\n\n## ICT投資額\n\nICT投資額から考察します。\n\n![ict-日本.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/5c21b6ac-aa3b-03ee-aa6e-2794a2ae03c6.png)\n（出典）図表1-2-2-1　日本のICT投資額の推移（名目）/ OECD Stat\n\n![ict-米国.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7999baf7-1069-f67f-7108-21b39bb7d5e3.png)\n（出典）図表1-2-2-2　米国のICT投資額の推移（名目） / OECD Stat\n\n1989年からの30年間で、米国では4倍以上に増加しているのに対して、日本ではほぼ横ばいでじわじわと投資額は減っていることが分かります。\n\nその場合、モダンな言語でのモダンな開発案件自体が少ない中で、未経験のエンジニアがそこに参画できる確率というのは厳しい数字になることが想像できます。\n\nまた、ICTの費用の大半は人件費です。投資額が減っているということは、昔は5人-10人でやっていた仕事を3人-5人、ひいては1人で行わなければならない状況になることも考えられるでしょう。\n\nところで、このグラフからは、システムの運用維持管理費の扱いが読み取れないです。\nクラウドサービスはサービスを続ける限りは固定費が発生します。また、運用維持管理にも人件費が発生します。\nこれらもICT投資額に含まれいている場合、新規の開発案件はグラフの見た目以上に減少傾向にあることも考えられます。\n\n\n## 仕事のサイクル\n\n一般的に企業は１年以内の **事業年度** 毎に、儲かったとか儲からなかったとかの計算をしています。その計算をする月を **決算月** といい、その月は3月、9月、12月が多いようです。\n\nこの月がバラバラならいいのですが、決算月が大体同じことで「プログラマ」には困ったことが起きます。\nそうです。**4月は「プログラム」工程の案件が少ないのです。**\n\n決算月に来期の予算が決まって、その予算をどうやって使おうかーという話を、4月(や10月や1月)にはじめます。\n継続してお付き合いのあるお客様ならもう少し前から会話を始めるかもしれませんが、大きな流れとしてはそうなります。\n\nということで、4月の時点では開発案件はないし、この時点で開発案件の相談に乗る(コンサル・要件定義・外部設計)ことができないと、いつまで経っても開発案件が発生しないことが想定できます。\n\n![工程.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/dec06fe8-4e5a-823a-af05-8dfdcc3f4041.png)\n\nまた、ウォーターフォールではなくアジャイル開発の場合は、案件における「プログラミング」の作業の割合には大きな変化はない上に、アジャイル開発を行うためのスキルが必要になるため「プログラミング」能力だけでは参画が難しいと考えられます。\n\n未経験エンジニア目線で見ると、JavaやPython等のプログラム言語のどれを覚えるのがよいのかという話が度々話題に上がりますが、「受託」の業務の観点では、そもそも「プログラミング」以外の業務を行う確率が高いと考えられます。\n\n\n## まとめ\n\n「受託開発ソフトウェア業」では、元々の業態では「ウォーターフォール」と呼ばれる開発手法で１次請けが要件定義・外部設計や交通整理を行ってくれていました。\nただ、**なぜか**ウォーターフォールは機能しない、 **顧客を巻き込んだアジャイル** が必要と言われる様になりました。\nアジャイル開発やスクラムは意識高い方法論が先行しがちですが、**単にチームメンバー全員に高いコミュニケーション能力と要件定義～試験までを短いサイクルで実施できるスキル**が求められていると考えると分かりやすいかもしれません。\n\nといった状況を鑑みると、長期的には **「一番必要なスキルは案件に関するスキル全部」** みたいな雑な結論になるのですが、未経験エンジニアとしては **「日本語ライティング」** から手を付けるのが効率がよいと思います。\n\n(参考)\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\n\n## おまけ1\n\n営業A短編シリーズ\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n\n## おまけ2\n\n2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-02-11T15:50:41+09:00",
    "group": null,
    "id": "aa2f81cf1e3974b8ad3a",
    "likes_count": 22,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 27,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      },
      {
        "name": "新人エンジニア",
        "versions": []
      }
    ],
    "title": "未経験エンジニアに一番必要なスキルは…",
    "updated_at": "2023-02-11T15:50:41+09:00",
    "url": "https://qiita.com/kaku3/items/aa2f81cf1e3974b8ad3a",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 12167,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:126\">言語の進歩は日々目覚ましいものです。<br>\n昔の常識は今の非常識かもしれないというところで例外処理論争が起きたので起稿しました。</p>\n<h2 data-sourcepos=\"7:1-7:43\">\n<span id=\"オプショナルチェーンとは\" class=\"fragment\"></span><a href=\"#%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%8A%E3%83%AB%E3%83%81%E3%82%A7%E3%83%BC%E3%83%B3%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>オプショナルチェーン(?.)とは</h2>\n<p data-sourcepos=\"9:1-9:159\">「オプショナルチェーン(?.)」<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup>は、JavaScript ES2020 で追加された、名前を知らないとググれない<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup>超便利演算子です。</p>\n<p data-sourcepos=\"11:1-11:220\">入れ子になったオブジェクトのプロパティにアクセスする時に、null や undefined が含まれているかもしれないオブジェクトが含まれている時に重宝する演算子です。</p>\n<p data-sourcepos=\"13:1-13:156\">コードを見た方が早いと思うので、オプショナルチェーンを使った場合と使わない場合のコードを以下に書きます。</p>\n<ul data-sourcepos=\"15:1-15:38\">\n<li data-sourcepos=\"15:1-15:38\">オプショナルチェーンあり</li>\n</ul>\n<div class=\"code-frame\" data-lang=\"javascript\" data-sourcepos=\"16:1-18:3\">\n<div class=\"code-lang\"><span class=\"bold\">modern.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">const</span> <span class=\"nx\">someValue</span> <span class=\"o\">=</span> <span class=\"nx\">someConfig</span><span class=\"p\">?.</span><span class=\"nx\">subConfig</span><span class=\"p\">?.</span><span class=\"nx\">subsubConfig</span><span class=\"p\">?.</span><span class=\"nx\">someValue</span><span class=\"p\">;</span>\n</code></pre></div>\n</div>\n<ul data-sourcepos=\"20:1-20:38\">\n<li data-sourcepos=\"20:1-20:38\">オプショナルチェーンなし</li>\n</ul>\n<div class=\"code-frame\" data-lang=\"javascript\" data-sourcepos=\"21:1-29:3\">\n<div class=\"code-lang\"><span class=\"bold\">legacy.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">let</span> <span class=\"nx\">someValue</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n<span class=\"kd\">const</span> <span class=\"nx\">subConfig</span> <span class=\"o\">=</span> <span class=\"nx\">someCofig</span><span class=\"p\">.</span><span class=\"nx\">subConfig</span><span class=\"p\">;</span>\n<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">subConfig</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">subConfig</span><span class=\"p\">.</span><span class=\"nx\">subsubConfig</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">someValue</span> <span class=\"o\">=</span>  <span class=\"nx\">subConfig</span><span class=\"p\">.</span><span class=\"nx\">subsubConfig</span><span class=\"p\">.</span><span class=\"nx\">someValue</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"31:1-31:108\">オプショナルチェーンを使ったコードの方が見通しがだいぶすっきりしますね！</p>\n<h2 data-sourcepos=\"34:1-34:61\">\n<span id=\"javaにはオプショナルチェーンないんだけど\" class=\"fragment\"></span><a href=\"#java%E3%81%AB%E3%81%AF%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%8A%E3%83%AB%E3%83%81%E3%82%A7%E3%83%BC%E3%83%B3%E3%81%AA%E3%81%84%E3%82%93%E3%81%A0%E3%81%91%E3%81%A9\"><i class=\"fa fa-link\"></i></a>Javaにはオプショナルチェーンないんだけど</h2>\n<p data-sourcepos=\"36:1-37:302\">われわれ職業エンジニアは、案件ごとで使う言語が変わります。<br>\njavascript を書いた後で、java を書くと「堅牢」というよりは「手数が多い」なぁと感じたりするかもしれません。javaにはオプショナルチェーンは存在しないので、上記の例であれば、通常は if文を使って書くことになります。</p>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"39:1-49:3\">\n<div class=\"code-lang\"><span class=\"bold\">legacy.java</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kt\">int</span> <span class=\"n\">someValue</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n<span class=\"nc\">SubConfig</span> <span class=\"n\">subConfig</span> <span class=\"o\">=</span> <span class=\"n\">someCofig</span><span class=\"o\">.</span><span class=\"na\">getSubConfig</span><span class=\"o\">();</span>\n<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">subConfig</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"nc\">SubsubConfig</span> <span class=\"n\">subsubConfig</span> <span class=\"o\">=</span> <span class=\"n\">subConfig</span><span class=\"o\">.</span><span class=\"na\">getSubsubConfig</span><span class=\"o\">();</span>\n    <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">subsubConfig</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">someValue</span> <span class=\"o\">=</span>  <span class=\"n\">subsubConfig</span><span class=\"o\">.</span><span class=\"na\">getSomeValue</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre></div>\n</div>\n<h2 data-sourcepos=\"52:1-52:39\">\n<span id=\"そうだ例外処理を使おう\" class=\"fragment\"></span><a href=\"#%E3%81%9D%E3%81%86%E3%81%A0%E4%BE%8B%E5%A4%96%E5%87%A6%E7%90%86%E3%82%92%E4%BD%BF%E3%81%8A%E3%81%86\"><i class=\"fa fa-link\"></i></a>そうだ、例外処理を使おう</h2>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"54:1-62:3\"><div class=\"highlight\"><pre><code><span class=\"c1\">// オプショナルチェーンのように書ける</span>\n<span class=\"kt\">int</span> <span class=\"n\">someValue</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n<span class=\"k\">try</span> <span class=\"o\">{</span>\n    <span class=\"n\">someValue</span> <span class=\"o\">=</span> <span class=\"n\">someCofig</span><span class=\"o\">.</span><span class=\"na\">getSubConfig</span><span class=\"o\">().</span><span class=\"na\">getSubsubConfig</span><span class=\"o\">().</span><span class=\"na\">getSomeValue</span><span class=\"o\">();</span>\n<span class=\"o\">}</span> <span class=\"k\">catch</span><span class=\"o\">(</span><span class=\"nc\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"c1\">// default</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n<p data-sourcepos=\"64:1-64:126\">try - catch で書けば、オプショナルチェーンのように書けて見通しがだいぶすっきりしますね！</p>\n<p data-sourcepos=\"67:1-67:344\">外部設計で <strong>『subsubConfig に設定されている someValueを取得する、取得できなかったらデフォルト値で処理を行う』</strong> と定義されているのであれば、subConfig や subsubConfig が null だった時の異常系処理は未定義ですし、設計意図にも近いコードとなるでしょう。</p>\n<p data-sourcepos=\"69:1-69:234\">また、外部設計として未定義の条件分岐をわざわざ書いて、それに対するカバレッジを担保するというのは工数を圧迫し品質の低下を招くリスクになるかもしれませんよね？</p>\n<h2 data-sourcepos=\"72:1-72:60\">\n<span id=\"ところで例外処理を気軽に使っていいの\" class=\"fragment\"></span><a href=\"#%E3%81%A8%E3%81%93%E3%82%8D%E3%81%A7%E4%BE%8B%E5%A4%96%E5%87%A6%E7%90%86%E3%82%92%E6%B0%97%E8%BB%BD%E3%81%AB%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%81%84%E3%81%AE\"><i class=\"fa fa-link\"></i></a>ところで例外処理を気軽に使っていいの？</h2>\n<p data-sourcepos=\"74:1-74:70\">例外処理とはなんぞやをWikiから引用しておきます。</p>\n<p data-sourcepos=\"76:1-76:100\">(出典 : <a href=\"https://ja.wikipedia.org/wiki/%E4%BE%8B%E5%A4%96%E5%87%A6%E7%90%86\" rel=\"nofollow noopener\" target=\"_blank\">Wiki : 例外処理</a>)</p>\n<blockquote data-sourcepos=\"78:1-93:234\">\n<p data-sourcepos=\"78:3-78:549\">例外処理（れいがいしょり、英語: exception handling）とは、IT業界で用いられる専門用語で、システムの設計で想定されておらず、ユーザー操作によって解決できない問題に対処するための処理である。例外処理の結果として問題が解決されないとシステム障害になる。システム停止やデータ破損の原因になり、ユーザーに損害を与える可能性があるため、システム開発で例外処理は重要視されている[1][2][3]。</p>\n<p data-sourcepos=\"80:3-80:167\">システムの設計で想定されておらず、継続不能や継続すると問題になる様な状態としては、次のようなものが挙げられる。</p>\n<p data-sourcepos=\"82:3-93:234\">・ハードウェアの故障<br>\n・オペレーティングシステム等、システムの設定ミス<br>\n・ライブラリの欠損<br>\n・ユーザーの入力間違い<br>\n　・数値入力を要求している場合での、英単語の入力<br>\n　・存在しないデータベースのテーブル／カラムやファイルの指定<br>\n・必要な他システムとの疎通が取れない<br>\n・許されない演算（0での除算や実数演算で解が虚数になる演算など）<br>\n・割り当てられていない記憶領域へのアクセス<br>\n　・不正な値が与えられたポインタで参照する、或いは機械語レベルで不正な値が与えられたインデックスレジスタ等を用いてメモリ参照することとなった場合<br>\n　・ページフォールト<br>\n・プログラミング言語において、何も参照していないハンドルやポインター（Nullポインタ）を参照して操作しようとした場合（例としてJavaにおけるNullPointerExceptionなど）。</p>\n</blockquote>\n<p data-sourcepos=\"95:1-95:298\">シニアエンジニアの方からすると例外処理をきちんと理解して作れという話になると思いますが、多くの人は何のポリシーも持たずにコンパイラに怒られる程度の理由で例外処理(try - catch)を使っているようにも思います。</p>\n<p data-sourcepos=\"97:1-97:227\"><strong>関数を呼び出す側が、投げつけられたよく分からない例外を責任を持って処理せよ</strong> という設計思想が、そもそも近代の大規模開発では難しいのではないでしょうか？</p>\n<p data-sourcepos=\"99:1-101:253\">プロジェクト単位でSESガチャで寄せ集められた人間全てが、発生しうる例外を全て理解して適切に処理できるでしょうか？<br>\nプロジェクトの例外処理のルールを100ページにも及ぶドキュメントで明文化すれば、それは守られるのでしょうか？<br>\n戦闘力が未知数の未経験エンジニアの受け入れもしないといけないかもしれませんし、自称、経験3年や10年のJavaエンジニアであれば全ての例外を把握して適切に処理できるのでしょうか？</p>\n<p data-sourcepos=\"103:1-103:113\">わたしは<strong>技術的には可能</strong>かもしれませんが<strong>現実的には不可能</strong>と思っています。</p>\n<h2 data-sourcepos=\"106:1-106:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"108:1-108:243\">プロジェクト内のコードに複数の思想が入り乱れると可読性が著しく下がるのは理解していますが、例外処理については、思想に一貫性を保ててるケースは少ないと感じています。</p>\n<p data-sourcepos=\"110:1-110:321\">例外処理の崇高な思想に反する記事となりましたが、１プログラマ個人ではなく、プロジェクトに視野を広げて、その思想が現実に即したものなのか、メリットやデメリットはなんなのか？などは考えてもよいのではないかと思いました。</p>\n<p data-sourcepos=\"112:1-112:121\">言葉は時代とともに変わります。思想も時代とともに変わるものではないでしょうか？<sup><a href=\"#fn-3\" id=\"fnref-3\">3</a></sup></p>\n<h2 data-sourcepos=\"115:1-115:13\">\n<span id=\"おまけ1\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%911\"><i class=\"fa fa-link\"></i></a>おまけ1</h2>\n<p data-sourcepos=\"117:1-117:25\">営業A短編シリーズ</p>\n<p data-sourcepos=\"119:1-119:50\"><iframe id=\"qiita-embed-content__7189337f6bb54e340e0152641d73e199\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__7189337f6bb54e340e0152641d73e199\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"121:1-121:50\"><iframe id=\"qiita-embed-content__df622511b3d08acb0575a5a04ef076b1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__df622511b3d08acb0575a5a04ef076b1\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"124:1-124:13\">\n<span id=\"おまけ2\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%912\"><i class=\"fa fa-link\"></i></a>おまけ2</h2>\n<p data-sourcepos=\"126:1-127:30\">2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"129:1-129:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"132:7-132:141\"><a href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Operators/Optional_chaining\" rel=\"nofollow noopener\" target=\"_blank\">MDN : オプショナルチェーン (?.)</a> <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"134:7-134:163\"><a href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Operators/Spread_syntax\" rel=\"nofollow noopener\" target=\"_blank\">スプレッド構文</a> なんかもググるの難しいですね。 <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-3\">\n<p data-sourcepos=\"136:7-136:240\">GO言語にはそもそも try - catch がない。<a href=\"https://qiita.com/Maki-Daisuke/items/80cbc26ca43cca3de4e4\" id=\"reference-b92414e4b27b4c139aa0\">参考：「例外」がないからGo言語はイケてないとかって言ってるヤツが本当にイケてない件</a> <a href=\"#fnref-3\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\n言語の進歩は日々目覚ましいものです。\n昔の常識は今の非常識かもしれないというところで例外処理論争が起きたので起稿しました。\n\n\n## オプショナルチェーン(?.)とは\n\n「オプショナルチェーン(?.)」[^1]は、JavaScript ES2020 で追加された、名前を知らないとググれない[^2]超便利演算子です。\n\n入れ子になったオブジェクトのプロパティにアクセスする時に、null や undefined が含まれているかもしれないオブジェクトが含まれている時に重宝する演算子です。\n\nコードを見た方が早いと思うので、オプショナルチェーンを使った場合と使わない場合のコードを以下に書きます。\n\n- オプショナルチェーンあり\n```modern.js\nconst someValue = someConfig?.subConfig?.subsubConfig?.someValue;\n```\n\n- オプショナルチェーンなし\n```legacy.js\nlet someValue = null;\nconst subConfig = someCofig.subConfig;\nif(subConfig) {\n    if(subConfig.subsubConfig) {\n        someValue =  subConfig.subsubConfig.someValue\n    }\n}\n```\n\nオプショナルチェーンを使ったコードの方が見通しがだいぶすっきりしますね！\n\n\n## Javaにはオプショナルチェーンないんだけど\n\nわれわれ職業エンジニアは、案件ごとで使う言語が変わります。\njavascript を書いた後で、java を書くと「堅牢」というよりは「手数が多い」なぁと感じたりするかもしれません。javaにはオプショナルチェーンは存在しないので、上記の例であれば、通常は if文を使って書くことになります。\n\n```legacy.java\nint someValue = 0;\nSubConfig subConfig = someCofig.getSubConfig();\nif(subConfig != null) {\n    SubsubConfig subsubConfig = subConfig.getSubsubConfig();\n    if(subsubConfig != null) {\n        someValue =  subsubConfig.getSomeValue();\n    }\n}\n\n```\n\n\n## そうだ、例外処理を使おう\n\n```java\n// オプショナルチェーンのように書ける\nint someValue = 0;\ntry {\n    someValue = someCofig.getSubConfig().getSubsubConfig().getSomeValue();\n} catch(Exception e) {\n    // default\n}\n```\n\ntry - catch で書けば、オプショナルチェーンのように書けて見通しがだいぶすっきりしますね！\n\n\n外部設計で **『subsubConfig に設定されている someValueを取得する、取得できなかったらデフォルト値で処理を行う』** と定義されているのであれば、subConfig や subsubConfig が null だった時の異常系処理は未定義ですし、設計意図にも近いコードとなるでしょう。\n\nまた、外部設計として未定義の条件分岐をわざわざ書いて、それに対するカバレッジを担保するというのは工数を圧迫し品質の低下を招くリスクになるかもしれませんよね？\n\n\n## ところで例外処理を気軽に使っていいの？\n\n例外処理とはなんぞやをWikiから引用しておきます。\n\n(出典 : [Wiki : 例外処理](https://ja.wikipedia.org/wiki/%E4%BE%8B%E5%A4%96%E5%87%A6%E7%90%86))\n\n> 例外処理（れいがいしょり、英語: exception handling）とは、IT業界で用いられる専門用語で、システムの設計で想定されておらず、ユーザー操作によって解決できない問題に対処するための処理である。例外処理の結果として問題が解決されないとシステム障害になる。システム停止やデータ破損の原因になり、ユーザーに損害を与える可能性があるため、システム開発で例外処理は重要視されている[1][2][3]。\n> \n> システムの設計で想定されておらず、継続不能や継続すると問題になる様な状態としては、次のようなものが挙げられる。\n>\n> ・ハードウェアの故障\n> ・オペレーティングシステム等、システムの設定ミス\n> ・ライブラリの欠損\n> ・ユーザーの入力間違い\n> 　・数値入力を要求している場合での、英単語の入力\n> 　・存在しないデータベースのテーブル／カラムやファイルの指定\n> ・必要な他システムとの疎通が取れない\n> ・許されない演算（0での除算や実数演算で解が虚数になる演算など）\n> ・割り当てられていない記憶領域へのアクセス\n> 　・不正な値が与えられたポインタで参照する、或いは機械語レベルで不正な値が与えられたインデックスレジスタ等を用いてメモリ参照することとなった場合\n> 　・ページフォールト\n> ・プログラミング言語において、何も参照していないハンドルやポインター（Nullポインタ）を参照して操作しようとした場合（例としてJavaにおけるNullPointerExceptionなど）。\n\nシニアエンジニアの方からすると例外処理をきちんと理解して作れという話になると思いますが、多くの人は何のポリシーも持たずにコンパイラに怒られる程度の理由で例外処理(try - catch)を使っているようにも思います。\n\n**関数を呼び出す側が、投げつけられたよく分からない例外を責任を持って処理せよ** という設計思想が、そもそも近代の大規模開発では難しいのではないでしょうか？\n\nプロジェクト単位でSESガチャで寄せ集められた人間全てが、発生しうる例外を全て理解して適切に処理できるでしょうか？\nプロジェクトの例外処理のルールを100ページにも及ぶドキュメントで明文化すれば、それは守られるのでしょうか？\n戦闘力が未知数の未経験エンジニアの受け入れもしないといけないかもしれませんし、自称、経験3年や10年のJavaエンジニアであれば全ての例外を把握して適切に処理できるのでしょうか？\n\nわたしは**技術的には可能**かもしれませんが**現実的には不可能**と思っています。\n\n\n## おわりに\n\nプロジェクト内のコードに複数の思想が入り乱れると可読性が著しく下がるのは理解していますが、例外処理については、思想に一貫性を保ててるケースは少ないと感じています。\n\n例外処理の崇高な思想に反する記事となりましたが、１プログラマ個人ではなく、プロジェクトに視野を広げて、その思想が現実に即したものなのか、メリットやデメリットはなんなのか？などは考えてもよいのではないかと思いました。\n\n言葉は時代とともに変わります。思想も時代とともに変わるものではないでしょうか？[^3]\n\n\n## おまけ1\n\n営業A短編シリーズ\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n\n## おまけ2\n\n2030年にIT人材が最大79万人不足するらしいので、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n\n[^1]: [MDN : オプショナルチェーン (?.)](https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Operators/Optional_chaining)\n\n[^2]: [スプレッド構文](https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Operators/Spread_syntax) なんかもググるの難しいですね。\n\n[^3]: GO言語にはそもそも try - catch がない。[参考：「例外」がないからGo言語はイケてないとかって言ってるヤツが本当にイケてない件](https://qiita.com/Maki-Daisuke/items/80cbc26ca43cca3de4e4)\n",
    "coediting": false,
    "comments_count": 2,
    "created_at": "2023-02-04T15:04:55+09:00",
    "group": null,
    "id": "d8886ffd0ce8e32dc5b9",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "Java",
        "versions": []
      },
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "例外処理",
        "versions": []
      },
      {
        "name": "OptionalChaining",
        "versions": []
      }
    ],
    "title": "外部設計から見た例外処理？とOptional",
    "updated_at": "2023-02-06T07:39:35+09:00",
    "url": "https://qiita.com/kaku3/items/d8886ffd0ce8e32dc5b9",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2314,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-3:209\">少子高齢化が問題とされはや数十年が過ぎようとしていますが、なんとなく<strong>ヤバい</strong>とは思うけれどもそれがどの程度<strong>ヤバい</strong>のかがピンとこないです。</p>\n<p data-sourcepos=\"5:1-5:199\">そこで、以前からツイッターで見かける<strong>動くグラフ</strong>を活用して、少子高齢化を可視化するグラフを描いてみようと思い立ちまして起稿しました。</p>\n<p data-sourcepos=\"7:1-7:235\">さらっと動くグラフを作るには <a href=\"https://flourish.studio/\" rel=\"nofollow noopener\" target=\"_blank\">Flourish</a> で作れるようですが、エンジニアとしてはプログラムで作るべきだろうということで Python で作ることにしました。</p>\n<p data-sourcepos=\"9:1-9:323\">ところが、Pythonが優秀すぎて<strong>関数を2つを呼べば動くグラフができてしまった</strong>のであまりプログラマ感はなかったです。ただし、データからうまくグラフに使えるデータを抽出する点ではエンジニアやコンサル感はあったかもしれません。</p>\n<h2 data-sourcepos=\"12:1-12:45\">\n<span id=\"人口ピラミッドのデータを入手\" class=\"fragment\"></span><a href=\"#%E4%BA%BA%E5%8F%A3%E3%83%94%E3%83%A9%E3%83%9F%E3%83%83%E3%83%89%E3%81%AE%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E5%85%A5%E6%89%8B\"><i class=\"fa fa-link\"></i></a>人口ピラミッドのデータを入手</h2>\n<p data-sourcepos=\"14:1-14:273\">国立社会保障・人口問題研究所<a href=\"https://www.ipss.go.jp/site-ad/TopPageData/PopPyramid2017_J.html\" rel=\"nofollow noopener\" target=\"_blank\">人口ピラミッド</a>のページを見ると、平成29年時点での 1965年からの2065年(未来予測)まで人口ピラミッドの画像があります。</p>\n<p data-sourcepos=\"16:1-18:120\"><a href=\"https://camo.qiitausercontent.com/1729e2029ef6fa969ce593f73bc22d14a022806a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36386233313437342d343033622d393964332d353665612d3663316132323361363732362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F68b31474-403b-99d3-56ea-6c1a223a6726.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ba018cfb9d0093587f03f2a7412ace99\" alt=\"1965.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/68b31474-403b-99d3-56ea-6c1a223a6726.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F68b31474-403b-99d3-56ea-6c1a223a6726.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=e4b13c6d8a6d4d26fe94050c8ad240f4 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/2395119e461685da0de18cf2283329d7909f02af/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36323730623230662d316364332d306635322d376137312d3131663231616666326135352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6270b20f-1cd3-0f52-7a71-11f21aff2a55.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b9123f24a0df907107effea2e2693dde\" alt=\"2020.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6270b20f-1cd3-0f52-7a71-11f21aff2a55.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6270b20f-1cd3-0f52-7a71-11f21aff2a55.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=cda9f2412c78a3b779467fe99df70219 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/88b8ab00c9094dec49ebffe46eb7436831af4567/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f32306666396239362d376234372d623839342d373564322d3464353835353766396437392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F20ff9b96-7b47-b894-75d2-4d58557f9d79.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=109c797a34b529b1d0efa5e32a0225de\" alt=\"2065.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/20ff9b96-7b47-b894-75d2-4d58557f9d79.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F20ff9b96-7b47-b894-75d2-4d58557f9d79.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=27f2d3806971ceaca1a6a1ff5f0b5c03 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"20:1-20:183\"><a href=\"https://www.ipss.go.jp/pp-zenkoku/j/zenkoku2017/pp_zenkoku2017.asp\" rel=\"nofollow noopener\" target=\"_blank\">出典：「日本の将来推計人口（平成29年推計）」（国立社会保障・人口問題研究所）</a></p>\n<p data-sourcepos=\"23:1-24:57\">この画像から、<strong>少子高齢化ヤバいな？</strong> と伝わったでしょうか？<br>\nわたしにはあまりピンとこなかったです。</p>\n<p data-sourcepos=\"26:1-26:243\">そこで、このサイトで公開されている人口ピラミッド画像の元になった <a href=\"https://www.ipss.go.jp/site-ad/TopPageData/pyramidDataPP29J.xls\" rel=\"nofollow noopener\" target=\"_blank\">Excel データ</a> を利用してグラフを作成することにしました。</p>\n<p data-sourcepos=\"28:1-28:299\"><strong>グラフで大事なのは、伝えたい事があって、それを伝えられるグラフ</strong>になっているかということかと思います。データから何を抽出してグラフにするかです。やり過ぎると<strong>詐欺グラフ</strong>になりますので注意が必要です。</p>\n<h2 data-sourcepos=\"31:1-31:45\">\n<span id=\"まずはそのままのグラフを描画\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%9A%E3%81%AF%E3%81%9D%E3%81%AE%E3%81%BE%E3%81%BE%E3%81%AE%E3%82%B0%E3%83%A9%E3%83%95%E3%82%92%E6%8F%8F%E7%94%BB\"><i class=\"fa fa-link\"></i></a>まずはそのままのグラフを描画</h2>\n<p data-sourcepos=\"33:1-33:226\">動くグラフの名前は「バーチャートレース」というそうです。名前を知らずググるところで若干苦労しました。ChatGPT先生ならその場で答えてくれたかもしれないです。</p>\n<p data-sourcepos=\"35:1-35:238\">グラフの名前が分かったところで、python のデータ解析の定番 <code>pandas</code> と、バーチャートレース描画用 <code>bar_chart_race</code> と、日本語化のための <code>japanize_matplotlib</code> をインストールします。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"37:1-41:3\"><div class=\"highlight\"><pre><code>pip install pandas\npip install bar_chart_race\npip install japanize_matplotlib\n</code></pre></div></div>\n<p data-sourcepos=\"43:1-44:155\">あとは以下の様なプログラムを書けば、csvデータを読み込んでグラフの描画ができます。<br>\nグラフ化する関数の引数がとても多いので行数は多いですが、<strong>呼び出す関数は2つ</strong>でよいので、本当に簡単です。</p>\n<div class=\"code-frame\" data-lang=\"python\" data-sourcepos=\"46:1-79:3\">\n<div class=\"code-lang\"><span class=\"bold\">graph.py</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\"># -*- coding: utf-8 -*-\n</span>\n<span class=\"kn\">import</span> <span class=\"n\">pandas</span> <span class=\"k\">as</span> <span class=\"n\">pd</span>\n<span class=\"kn\">import</span> <span class=\"n\">bar_chart_race</span> <span class=\"k\">as</span> <span class=\"n\">bcr</span>\n<span class=\"kn\">import</span> <span class=\"n\">japanize_matplotlib</span>\n\n<span class=\"nb\">file</span> <span class=\"o\">=</span> <span class=\"sh\">'</span><span class=\"s\">population</span><span class=\"sh\">'</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"nf\">read_csv</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"sh\">'</span><span class=\"s\">data/</span><span class=\"si\">{</span><span class=\"nb\">file</span><span class=\"si\">}</span><span class=\"s\">.csv</span><span class=\"sh\">'</span><span class=\"p\">,</span> <span class=\"n\">index_col</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">parse_dates</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"n\">bcr</span><span class=\"p\">.</span><span class=\"nf\">bar_chart_race</span><span class=\"p\">(</span>\n    <span class=\"n\">df</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">,</span> \n    <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"sh\">'</span><span class=\"s\">./data/</span><span class=\"si\">{</span><span class=\"nb\">file</span><span class=\"si\">}</span><span class=\"s\">.gif</span><span class=\"sh\">'</span><span class=\"p\">,</span> \n    <span class=\"n\">orientation</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">v</span><span class=\"sh\">'</span><span class=\"p\">,</span> \n    <span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">asc</span><span class=\"sh\">'</span><span class=\"p\">,</span>\n    <span class=\"n\">fixed_order</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span> \n    <span class=\"n\">fixed_max</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">steps_per_period</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span>\n    <span class=\"n\">period_length</span><span class=\"o\">=</span><span class=\"mi\">900</span><span class=\"p\">,</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">出典 : 国立社会保障・人口問題研究所</span><span class=\"se\">\\n</span><span class=\"s\">人口ピラミッドのデータ（1965～2065年）(単位1,000人)</span><span class=\"sh\">'</span><span class=\"p\">,</span> \n    <span class=\"n\">bar_size</span><span class=\"o\">=</span><span class=\"p\">.</span><span class=\"mi\">95</span><span class=\"p\">,</span> \n    <span class=\"n\">shared_fontdict</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> \n    <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">linear</span><span class=\"sh\">'</span><span class=\"p\">,</span> \n    <span class=\"n\">fig</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">2.5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span>\n    <span class=\"n\">writer</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> \n    <span class=\"n\">bar_kwargs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"sh\">'</span><span class=\"s\">alpha</span><span class=\"sh\">'</span><span class=\"p\">:</span> <span class=\"p\">.</span><span class=\"mi\">7</span><span class=\"p\">},</span>\n    <span class=\"n\">filter_column_colors</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">title_size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">bar_label_size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">tick_label_size</span><span class=\"o\">=</span><span class=\"mi\">5</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"81:1-81:219\">csv形式ではないと読み込めないのと、2系統(男性・女性)を扱えなかったので、ダウンロードした Excel を加工して、各年齢ごとの人口数を集計した csv にしました。</p>\n<p data-sourcepos=\"83:1-83:11\">(csv抜粋)</p>\n<div class=\"code-frame\" data-lang=\"csv\" data-sourcepos=\"84:1-89:3\"><div class=\"highlight\"><pre><code>year,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100+\n1965,1743,1659,1614,1567,1551,1568,1600,1560,1515,1607,1696,1693,1813,1927,2054,2224,2453,2423,2295,1457,1553,1890,1841,1904,1881,1730,1523,1650,1717,1744,1684,1635,1667,1649,1622,1558,1536,1502,1464,1439,1364,1255,1171,1117,1054,1117,921,948,958,978,951,966,930,925,886,866,846,808,805,678,699,663,685,665,632,588,526,523,477,448,421,381,345,324,274,275,258,221,191,151,139,122,106,88,74,59,50,39,30,23,16,12,8,6,5,2,1,1,0,0,0\n1970,1878,1863,1818,1823,1425,1768,1658,1616,1566,1551,1573,1599,1562,1520,1604,1687,1689,1793,1891,2004,2171,2386,2387,2272,1443,1546,1892,1851,1913,1887,1742,1526,1653,1715,1736,1683,1627,1657,1634,1606,1538,1494,1458,1428,1422,1343,1236,1157,1099,1043,1098,906,924,932,946,896,909,879,891,849,823,798,750,732,623,636,598,611,586,553,514,445,434,387,354,324,285,249,226,184,178,160,128,105,78,68,56,45,34,27,20,15,11,8,6,3,2,1,1,0,0\n1975,1915,2030,2065,2021,1975,1916,1885,1845,1852,1443,1796,1680,1642,1592,1574,1591,1628,1583,1537,1613,1683,1673,1790,1898,2031,2199,2420,2416,2310,1455,1580,1930,1883,1944,1913,1759,1540,1662,1721,1744,1698,1632,1659,1633,1605,1539,1512,1473,1431,1410,1332,1215,1133,1078,1027,1073,878,901,905,918,887,894,857,844,803,779,744,692,672,563,567,528,527,496,458,409,353,334,291,255,225,187,158,135,105,95,80,59,45,31,24,18,13,9,7,4,2,2,1,1,1\n</code></pre></div></div>\n<p data-sourcepos=\"91:1-92:126\">このデータをグラフ化したものは以下となります。<br>\n<a href=\"https://camo.qiitausercontent.com/bfd01cb2aa5e8739bec710e9d8ab9abdeb3854dd/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63386135346365662d396536382d643137312d313361662d6163613035613737626331332e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc8a54cef-9e68-d171-13af-aca05a77bc13.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=4e0ac54a38028837987eb341621e9b63\" alt=\"population.gif\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c8a54cef-9e68-d171-13af-aca05a77bc13.gif\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc8a54cef-9e68-d171-13af-aca05a77bc13.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=84b234f076b8a925933f9a5d2139a2e6 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"94:1-94:120\">…このままだと元々の人口ピラミッドの方が分かりやすいですね。ここからが本番です。</p>\n<h2 data-sourcepos=\"97:1-97:45\">\n<span id=\"労働人口らしきものに着目する\" class=\"fragment\"></span><a href=\"#%E5%8A%B4%E5%83%8D%E4%BA%BA%E5%8F%A3%E3%82%89%E3%81%97%E3%81%8D%E3%82%82%E3%81%AE%E3%81%AB%E7%9D%80%E7%9B%AE%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>労働人口らしきものに着目する</h2>\n<p data-sourcepos=\"99:1-99:209\">次に20歳から働きはじめて、およそ10歳毎に役割が変わり、65歳で定年すると仮定してデータを集計して csv を再作成し、グラフを作成することにしました。</p>\n<p data-sourcepos=\"101:1-101:124\"><a href=\"https://camo.qiitausercontent.com/0e3f0d743f12dc16869ac69d31135344ea1cca9a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f35333735323130302d356536382d303838332d313062612d6434303830366636636565612e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F53752100-5e68-0883-10ba-d40806f6ceea.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=570c6ad97ace0cb4678937f4a6c6a21d\" alt=\"workers1.gif\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/53752100-5e68-0883-10ba-d40806f6ceea.gif\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F53752100-5e68-0883-10ba-d40806f6ceea.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=74f7de0b6db4189550dc49830b45cd4f 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"103:1-104:160\">いかがでしょうか？<strong>高齢化社会が見えた</strong>でしょうか？<br>\nただ、<strong>数字は嘘をつかないが嘘つきは数字を使う</strong>そうなのでこのグラフは注意して見る必要があるかもしれません。</p>\n<h2 data-sourcepos=\"107:1-107:36\">\n<span id=\"生産年齢人口に着目する\" class=\"fragment\"></span><a href=\"#%E7%94%9F%E7%94%A3%E5%B9%B4%E9%BD%A2%E4%BA%BA%E5%8F%A3%E3%81%AB%E7%9D%80%E7%9B%AE%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>生産年齢人口に着目する</h2>\n<p data-sourcepos=\"109:1-109:114\"><a href=\"https://ja.wikipedia.org/wiki/%E7%94%9F%E7%94%A3%E5%B9%B4%E9%BD%A2%E4%BA%BA%E5%8F%A3\" rel=\"nofollow noopener\" target=\"_blank\">Wiki : 生産年齢人口</a></p>\n<blockquote data-sourcepos=\"111:1-111:269\">\n<p data-sourcepos=\"111:3-111:269\">生産年齢人口（せいさんねんれいじんこう、working-age population）とは、各国の国内で行われている生産活動に就いている中核の労働力となるような年齢の人口。OECDは15～64歳の人口と定義[1]している。</p>\n</blockquote>\n<p data-sourcepos=\"113:1-114:226\">国際機関の正式な定義だと上記の様になるようです。<br>\nそうです、生産年齢を10歳刻みにしてしまったら、<strong>言い知れないヤバさ</strong>は見て取れるかもしれませんが<strong>高齢化社会のヤバさ</strong>を表すグラフにはなっていないのです。</p>\n<p data-sourcepos=\"116:1-117:124\">ということで生産年齢人口をグラフにしました。<br>\n<a href=\"https://camo.qiitausercontent.com/1783aeafeb2974c717506b2433ce8dfcf5179e26/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37383762323634322d323630632d373438312d613036352d3065386537306561396136652e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F787b2642-260c-7481-a065-0e8e70ea9a6e.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=0f9542ae7b675f49e33a097753710acc\" alt=\"workers2.gif\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/787b2642-260c-7481-a065-0e8e70ea9a6e.gif\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F787b2642-260c-7481-a065-0e8e70ea9a6e.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=06134e921ba60ad1f7fccffd11c21e83 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"120:1-120:305\">こちらのグラフでは高齢者層1人を2人ぐらい、未来はもっと少ない人数で支えなければいけない、という話が見て取れるグラフになりました。こちらが来るべき未来のようです。β世界線<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup>やまた別の世界線はあるでしょうか。</p>\n<h2 data-sourcepos=\"123:1-123:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"125:1-126:90\">今回は、Python による動くグラフの描画方法と、データの着目点と詐欺グラフについて書きました。<br>\nデータの着目の仕方によっては別の未来も見えるかもしれません。</p>\n<p data-sourcepos=\"128:1-128:216\">わたし達ひとりひとりにはできる事とできない事がありますが、来るべき未来を予測し、それに向けてどう行動するのかを考えるのは大事なことだと思います。</p>\n<p data-sourcepos=\"130:1-130:297\">リスキリングなどバズワードで煽られるのは面倒くさいとか色々ありますが、グラフを見る限りでは65歳定年でもう働かない年金生活というのは難しそうなので進むしかなさそうです。逃げたら一つ、進めば二つです。<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup></p>\n<h2 data-sourcepos=\"133:1-133:12\">\n<span id=\"おまけ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91\"><i class=\"fa fa-link\"></i></a>おまけ</h2>\n<p data-sourcepos=\"135:1-136:30\">2025年にIT人材が43万人不足するらしいので、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"138:1-138:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"141:7-141:60\">シュタインズ・ゲートで観測される世界 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"142:7-142:66\">機動戦士ガンダム水星の魔女の重要なセリフ <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\n少子高齢化が問題とされはや数十年が過ぎようとしていますが、なんとなく**ヤバい**とは思うけれどもそれがどの程度**ヤバい**のかがピンとこないです。\n\nそこで、以前からツイッターで見かける**動くグラフ**を活用して、少子高齢化を可視化するグラフを描いてみようと思い立ちまして起稿しました。\n\nさらっと動くグラフを作るには [Flourish](https://flourish.studio/) で作れるようですが、エンジニアとしてはプログラムで作るべきだろうということで Python で作ることにしました。\n\nところが、Pythonが優秀すぎて**関数を2つを呼べば動くグラフができてしまった**のであまりプログラマ感はなかったです。ただし、データからうまくグラフに使えるデータを抽出する点ではエンジニアやコンサル感はあったかもしれません。\n\n\n## 人口ピラミッドのデータを入手\n\n国立社会保障・人口問題研究所[人口ピラミッド](https://www.ipss.go.jp/site-ad/TopPageData/PopPyramid2017_J.html)のページを見ると、平成29年時点での 1965年からの2065年(未来予測)まで人口ピラミッドの画像があります。\n\n![1965.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/68b31474-403b-99d3-56ea-6c1a223a6726.png)\n![2020.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6270b20f-1cd3-0f52-7a71-11f21aff2a55.png)\n![2065.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/20ff9b96-7b47-b894-75d2-4d58557f9d79.png)\n\n[出典：「日本の将来推計人口（平成29年推計）」（国立社会保障・人口問題研究所）](https://www.ipss.go.jp/pp-zenkoku/j/zenkoku2017/pp_zenkoku2017.asp)\n\n\nこの画像から、**少子高齢化ヤバいな？** と伝わったでしょうか？\nわたしにはあまりピンとこなかったです。\n\nそこで、このサイトで公開されている人口ピラミッド画像の元になった [Excel データ](https://www.ipss.go.jp/site-ad/TopPageData/pyramidDataPP29J.xls) を利用してグラフを作成することにしました。\n\n**グラフで大事なのは、伝えたい事があって、それを伝えられるグラフ**になっているかということかと思います。データから何を抽出してグラフにするかです。やり過ぎると**詐欺グラフ**になりますので注意が必要です。\n\n\n## まずはそのままのグラフを描画\n\n動くグラフの名前は「バーチャートレース」というそうです。名前を知らずググるところで若干苦労しました。ChatGPT先生ならその場で答えてくれたかもしれないです。\n\nグラフの名前が分かったところで、python のデータ解析の定番 `pandas` と、バーチャートレース描画用 `bar_chart_race` と、日本語化のための `japanize_matplotlib` をインストールします。\n\n```\npip install pandas\npip install bar_chart_race\npip install japanize_matplotlib\n```\n\nあとは以下の様なプログラムを書けば、csvデータを読み込んでグラフの描画ができます。\nグラフ化する関数の引数がとても多いので行数は多いですが、**呼び出す関数は2つ**でよいので、本当に簡単です。\n\n```graph.py\n# -*- coding: utf-8 -*-\n\nimport pandas as pd\nimport bar_chart_race as bcr\nimport japanize_matplotlib\n\nfile = 'population'\n\ndf = pd.read_csv(f'data/{file}.csv', index_col=0, parse_dates=[0])\n\nbcr.bar_chart_race(\n    df=df, \n    filename=f'./data/{file}.gif', \n    orientation='v', \n    sort='asc',\n    fixed_order=False, \n    fixed_max=True,\n    steps_per_period=15,\n    period_length=900,\n    title='出典 : 国立社会保障・人口問題研究所\\n人口ピラミッドのデータ（1965～2065年）(単位1,000人)', \n    bar_size=.95, \n    shared_fontdict=None, \n    scale='linear', \n    fig=None,\n    figsize=(2.5, 2),\n    writer=None, \n    bar_kwargs={'alpha': .7},\n    filter_column_colors=False,\n    title_size=5,\n    bar_label_size=5,\n    tick_label_size=5\n)\n```\n\ncsv形式ではないと読み込めないのと、2系統(男性・女性)を扱えなかったので、ダウンロードした Excel を加工して、各年齢ごとの人口数を集計した csv にしました。\n\n(csv抜粋)\n```csv\nyear,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100+\n1965,1743,1659,1614,1567,1551,1568,1600,1560,1515,1607,1696,1693,1813,1927,2054,2224,2453,2423,2295,1457,1553,1890,1841,1904,1881,1730,1523,1650,1717,1744,1684,1635,1667,1649,1622,1558,1536,1502,1464,1439,1364,1255,1171,1117,1054,1117,921,948,958,978,951,966,930,925,886,866,846,808,805,678,699,663,685,665,632,588,526,523,477,448,421,381,345,324,274,275,258,221,191,151,139,122,106,88,74,59,50,39,30,23,16,12,8,6,5,2,1,1,0,0,0\n1970,1878,1863,1818,1823,1425,1768,1658,1616,1566,1551,1573,1599,1562,1520,1604,1687,1689,1793,1891,2004,2171,2386,2387,2272,1443,1546,1892,1851,1913,1887,1742,1526,1653,1715,1736,1683,1627,1657,1634,1606,1538,1494,1458,1428,1422,1343,1236,1157,1099,1043,1098,906,924,932,946,896,909,879,891,849,823,798,750,732,623,636,598,611,586,553,514,445,434,387,354,324,285,249,226,184,178,160,128,105,78,68,56,45,34,27,20,15,11,8,6,3,2,1,1,0,0\n1975,1915,2030,2065,2021,1975,1916,1885,1845,1852,1443,1796,1680,1642,1592,1574,1591,1628,1583,1537,1613,1683,1673,1790,1898,2031,2199,2420,2416,2310,1455,1580,1930,1883,1944,1913,1759,1540,1662,1721,1744,1698,1632,1659,1633,1605,1539,1512,1473,1431,1410,1332,1215,1133,1078,1027,1073,878,901,905,918,887,894,857,844,803,779,744,692,672,563,567,528,527,496,458,409,353,334,291,255,225,187,158,135,105,95,80,59,45,31,24,18,13,9,7,4,2,2,1,1,1\n```\n\nこのデータをグラフ化したものは以下となります。\n![population.gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c8a54cef-9e68-d171-13af-aca05a77bc13.gif)\n\n…このままだと元々の人口ピラミッドの方が分かりやすいですね。ここからが本番です。\n\n\n## 労働人口らしきものに着目する\n\n次に20歳から働きはじめて、およそ10歳毎に役割が変わり、65歳で定年すると仮定してデータを集計して csv を再作成し、グラフを作成することにしました。\n\n![workers1.gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/53752100-5e68-0883-10ba-d40806f6ceea.gif)\n\nいかがでしょうか？**高齢化社会が見えた**でしょうか？\nただ、**数字は嘘をつかないが嘘つきは数字を使う**そうなのでこのグラフは注意して見る必要があるかもしれません。\n\n\n## 生産年齢人口に着目する\n\n[Wiki : 生産年齢人口](https://ja.wikipedia.org/wiki/%E7%94%9F%E7%94%A3%E5%B9%B4%E9%BD%A2%E4%BA%BA%E5%8F%A3) \n\n> 生産年齢人口（せいさんねんれいじんこう、working-age population）とは、各国の国内で行われている生産活動に就いている中核の労働力となるような年齢の人口。OECDは15～64歳の人口と定義[1]している。\n\n国際機関の正式な定義だと上記の様になるようです。\nそうです、生産年齢を10歳刻みにしてしまったら、**言い知れないヤバさ**は見て取れるかもしれませんが**高齢化社会のヤバさ**を表すグラフにはなっていないのです。\n\nということで生産年齢人口をグラフにしました。\n![workers2.gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/787b2642-260c-7481-a065-0e8e70ea9a6e.gif)\n\n\nこちらのグラフでは高齢者層1人を2人ぐらい、未来はもっと少ない人数で支えなければいけない、という話が見て取れるグラフになりました。こちらが来るべき未来のようです。β世界線[^1]やまた別の世界線はあるでしょうか。\n\n\n## おわりに\n\n今回は、Python による動くグラフの描画方法と、データの着目点と詐欺グラフについて書きました。\nデータの着目の仕方によっては別の未来も見えるかもしれません。\n\nわたし達ひとりひとりにはできる事とできない事がありますが、来るべき未来を予測し、それに向けてどう行動するのかを考えるのは大事なことだと思います。\n\nリスキリングなどバズワードで煽られるのは面倒くさいとか色々ありますが、グラフを見る限りでは65歳定年でもう働かない年金生活というのは難しそうなので進むしかなさそうです。逃げたら一つ、進めば二つです。[^2]\n\n\n## おまけ\n\n2025年にIT人材が43万人不足するらしいので、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n\n[^1]: シュタインズ・ゲートで観測される世界\n[^2]: 機動戦士ガンダム水星の魔女の重要なセリフ\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-01-19T22:52:44+09:00",
    "group": null,
    "id": "6133dfb01c7187dce45c",
    "likes_count": 13,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 19,
    "tags": [
      {
        "name": "Python",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "pandas",
        "versions": []
      }
    ],
    "title": "Pythonで考える少子高齢化と詐欺グラフ",
    "updated_at": "2023-01-19T22:52:44+09:00",
    "url": "https://qiita.com/kaku3/items/6133dfb01c7187dce45c",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 5729,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:96\">遅くなりましたが明けましておめでとうございます。<br>\n年も明けて一山当ててやるぜと開発に勤しんでおられますでしょうか。</p>\n<p data-sourcepos=\"6:1-6:188\">わたしは、<strong>モチベーションが一番高いであろう年始</strong>に何かをやらないと<strong>一年何もやらない</strong>かなと軽く怯えて何か作ることにしました。</p>\n<p data-sourcepos=\"8:1-8:254\">一方で、年始に考えたアイデアは<strong>謎の無敵感</strong>があるので、みんな大好き <strong>PoC（Proof of Concept：概念実証）</strong> を実施して開発継続可否を検証することにしたのでその話を書こうと思います。</p>\n<p data-sourcepos=\"10:1-11:135\">(ひとりブレストに望んだの図)<br>\n<a href=\"https://camo.qiitausercontent.com/86143abf932d26756b9f9ef513a300113c8d5a53/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f61396139366665312d353630322d333536652d393539362d6361386532656434613538332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa9a96fe1-5602-356e-9596-ca8e2ed4a583.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=a1d69e08ff1236aa81f69da67812a741\" alt=\"はじめに.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a9a96fe1-5602-356e-9596-ca8e2ed4a583.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa9a96fe1-5602-356e-9596-ca8e2ed4a583.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=0d08100487c9779dc8f7477bc2edf82e 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"13:1-13:240\">ブレストは、ガチでやるなら <a href=\"https://drive.mindmup.com/\" rel=\"nofollow noopener\" target=\"_blank\">【MindMup2】</a> の方がよいかと思いますが、今回は <a href=\"https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio\" rel=\"nofollow noopener\" target=\"_blank\">【Draw.io + VS Code】</a> で。</p>\n<ul data-sourcepos=\"14:1-18:0\">\n<li data-sourcepos=\"14:1-14:44\">ダブクリで新しいハコを出せる</li>\n<li data-sourcepos=\"15:1-15:71\">ハコの横クリックでコネクタ＋新しいハコを出せる</li>\n<li data-sourcepos=\"16:1-18:0\">drawio.png に変換すると drawio で編集もできる png になる</li>\n</ul>\n<h2 data-sourcepos=\"19:1-19:24\">\n<span id=\"家計簿的な何か\" class=\"fragment\"></span><a href=\"#%E5%AE%B6%E8%A8%88%E7%B0%BF%E7%9A%84%E3%81%AA%E4%BD%95%E3%81%8B\"><i class=\"fa fa-link\"></i></a>家計簿的な何か</h2>\n<p data-sourcepos=\"21:1-21:75\">ということで、家計簿的な何かを作ることにしました。</p>\n<p data-sourcepos=\"23:1-23:190\">今年こそはきっちり金管理するぞとか。いい感じのウェブアプリがあれば管理も捗るんじゃないの？とか。<strong>アイデアが年始っぽいですね！</strong></p>\n<p data-sourcepos=\"25:1-25:412\">家計簿だったら星の数程便利なアプリが出ているんだからそれを落とした方が手っ取り早いんじゃないの？と思う方もいると思いますが、個人的には、今までいくどとなく年が明ける毎に家計簿的なものに手を出そうと考えたり考えなかったりしましたが、続いたことはなかったという問題があります。<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup></p>\n<p data-sourcepos=\"27:1-27:61\"><strong>ではなぜそんなものをわざわざ作るのか？</strong></p>\n<p data-sourcepos=\"29:1-29:220\">自分で苦労して作ったアプリだったら、愛着ももてるし<strong>最高に快適なUI</strong>を作れたら記録を続けられるかもしれないと、<strong>年始なので</strong>そう考えることにしました。</p>\n<p data-sourcepos=\"31:1-32:153\">何が面倒くさいのか？タイピングか？だったら、レシートから読み込みができれば、入力も簡単だし、スマホでホイホイ入力して続けられるかもしれない。<strong>課題分析も完璧ですね。</strong><br>\nついでに前々から興味があった<a href=\"https://cloud.google.com/vision?hl=ja\" rel=\"nofollow noopener\" target=\"_blank\">Google Cloud Vision AI</a>のOCRも調べられるしよさそうです。</p>\n<h2 data-sourcepos=\"35:1-35:49\">\n<span id=\"pocproof-of-concept概念実証とは\" class=\"fragment\"></span><a href=\"#pocproof-of-concept%E6%A6%82%E5%BF%B5%E5%AE%9F%E8%A8%BC%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>PoC（Proof of Concept：概念実証）とは</h2>\n<p data-sourcepos=\"37:1-37:408\">アイデアを実際に利用可能なアプリケーションとするためには、要件定義やら外部設計やら色々なフェーズを経て開発をしてテストまでしないといけません。つまりは膨大な時間（＝金）がかかります。個人開発で休日にDIYするのであれば支払いは発生しませんが、有限な時間の消費は避けられません。</p>\n<p data-sourcepos=\"39:1-39:103\">つまりは、わたし達は<strong>アイデアを無限に形にすることはできない</strong>のです。</p>\n<p data-sourcepos=\"41:1-41:30\">そこでPoCの登場です。</p>\n<p data-sourcepos=\"43:1-43:376\">年始のテンションで思いついた最高のアイデアが形になった時に必ずしも最高のアプリケーションになるとは限りません。<strong>アイデアのうちキーになる部分をプロトタイプ作成などで検証し、コンセプト通り進めれば最高のアプリケーションにできるのか</strong>を判断するのがPoCです。</p>\n<p data-sourcepos=\"45:1-46:127\">(無駄にSWOT分析)<br>\n<a href=\"https://camo.qiitausercontent.com/1058e840f087d42eb38f7de9c21eb7b0205db6f0/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f34666531383837322d316536352d346264382d343462302d3861383535623761666432652e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F4fe18872-1e65-4bd8-44b0-8a855b7afd2e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=80dc33959c5224cd34525b3883028a63\" alt=\"swot.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/4fe18872-1e65-4bd8-44b0-8a855b7afd2e.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F4fe18872-1e65-4bd8-44b0-8a855b7afd2e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=22b1ef347536abbb5f7f6e086c8c9737 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"48:1-49:153\">今回ば <strong>『最高に快適なUI』</strong> が作れなければ継続利用は見込めません。また、市場としてはバキバキのレッドオーシャンで、クレカや交通マネーとも連携している超高性能アプリが基本無料で存在します。<br>\n自分で継続利用する気もなく、売れる見込みもないアプリケーションの開発を継続するのは人生の無駄遣いです。</p>\n<p data-sourcepos=\"51:1-52:225\">ここまで見るとかなり旗色が悪い案件ですが、DIY開発の傍らで <strong><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">お仕事問題集</a></strong> を作成し git にて無料公開をしてたりします。<br>\nそのため PoC の結果が開発中止となっても無に帰する事はないので、安心して作業を進められました。よろしければ <strong>git にスターをつけて</strong> 供養してやってください。</p>\n<h2 data-sourcepos=\"55:1-55:28\">\n<span id=\"poc-の意味について\" class=\"fragment\"></span><a href=\"#poc-%E3%81%AE%E6%84%8F%E5%91%B3%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>PoC の意味について</h2>\n<p data-sourcepos=\"57:1-57:82\">PoCをやる意味は<strong>損切りを早くする</strong>ことだと思っています。</p>\n<p data-sourcepos=\"59:1-59:365\">絶対にやってはいけないのは<strong>継続する意味がないと結果が出たアイデアにしがみつくこと</strong>です。<a href=\"https://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3%E3%82%B3%E3%83%AB%E3%83%89%E5%8A%B9%E6%9E%9C\" rel=\"nofollow noopener\" target=\"_blank\">コンコルド効果</a>の様なことになっては絶対にいけません。お母さんから、教わらなかった、ですか？</p>\n<p data-sourcepos=\"61:1-63:331\">とは言え、リリース日ありきのプロジェクトで PoC を実施している場合、中断の判定はものすごく難しいです。<strong>もう一度 PoC をやるつもりでスケジュールを立てること自体が難しい</strong>からです。<br>\nさらには、そこまで投入した費用、再度0からPoCを行うメンタル的な負荷と費用などを考えるとより一層難しくなることでしょう。<br>\nネガティブな結果が出た時には <strong>「無駄なことを続けないで済む、新しいことを始められる」</strong> とポジティブに受け止めて切り替えていくことが大事です。<strong>長期的に見ると、無駄だと分かって続ける方がメンタル的に多大な負荷がかかります。</strong></p>\n<h2 data-sourcepos=\"66:1-66:48\">\n<span id=\"アイデアに固執しないためには\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%82%A4%E3%83%87%E3%82%A2%E3%81%AB%E5%9B%BA%E5%9F%B7%E3%81%97%E3%81%AA%E3%81%84%E3%81%9F%E3%82%81%E3%81%AB%E3%81%AF\"><i class=\"fa fa-link\"></i></a>アイデアに固執しないためには？</h2>\n<p data-sourcepos=\"68:1-70:165\">また、人間は自分が思いついたアイデアを形にしないと、<strong>そのアイデアに脳を占拠されてしまう</strong>ためか新しいことを考えられないという性質があるようです。<br>\nこの呪縛から逃れるためには <strong>『アプリをリリースして GoogleAnalytics とにらめっこしたけど全然ダウンロードされてない辛い』</strong> といった経験を何度もするなどが近道だと思います。<br>\nいちいち形にしなくても脳内で消化して新しいことを考えられるようになっていきます。逃げたら一つ、進めば二つです。</p>\n<h2 data-sourcepos=\"73:1-73:36\">\n<span id=\"poc--レシートの読み取り\" class=\"fragment\"></span><a href=\"#poc--%E3%83%AC%E3%82%B7%E3%83%BC%E3%83%88%E3%81%AE%E8%AA%AD%E3%81%BF%E5%8F%96%E3%82%8A\"><i class=\"fa fa-link\"></i></a>PoC : レシートの読み取り</h2>\n<p data-sourcepos=\"75:1-76:284\">OCR(Optical Character Reader : 光学文字認識)を利用してレシートの読み取りを行います。<br>\n<a href=\"https://cloud.google.com/vision?hl=ja\" rel=\"nofollow noopener\" target=\"_blank\">Google Cloud Vision AI</a> を用いると、月1000回までは無料でOCR解析を利用できます。個人で利用する家計簿であれば、よほどの浪費家ではない限りは利用上限に達することはないでしょう。</p>\n<p data-sourcepos=\"78:1-79:342\">ということで、まずは <strong><a href=\"https://cloud.google.com/vision/?refresh=1&amp;tab=tab4#vision-api-\" rel=\"nofollow noopener\" target=\"_blank\">公式サイトのデモページ</a></strong> にアクセスして適当なレシートを読み込ませて結果を確認してモチベーションを上げましょう。<br>\n勘のいい子はこの時点で致命的なユーザビリティの悪さに気づきそうですが、開発者モードのわたしは気づきませんでした。ユーザーの目線と開発者の目線を絶えず使い分けられるように知覚力を上げておかないとですね。皆さんは気づいたでしょうか？</p>\n<p data-sourcepos=\"81:1-82:120\">(公式サイトのデモページ)<br>\n<a href=\"https://camo.qiitausercontent.com/ce74c2dcf28db9e256dbb9f8b464b8b6c7c9a2f8/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f39373937313131652d613635632d346132352d363263352d3334643233323838393565342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F9797111e-a65c-4a25-62c5-34d2328895e4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=936c5f361cd53c136e2880119fdc23a0\" alt=\"demo.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/9797111e-a65c-4a25-62c5-34d2328895e4.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F9797111e-a65c-4a25-62c5-34d2328895e4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=0e5c20478100b9d50973ba819e0cd02a 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"84:1-85:69\">ざっと見た感じ、nodejs で非常に簡単に使えそうだったのでPoCを継続することとしました。<br>\nちなみに以下が全コードです。とても短いですね。</p>\n<div class=\"code-frame\" data-lang=\"javascript\" data-sourcepos=\"86:1-103:3\">\n<div class=\"code-lang\"><span class=\"bold\">index.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">const</span> <span class=\"nx\">fs</span> <span class=\"o\">=</span> <span class=\"nf\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">fs</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">vision</span> <span class=\"o\">=</span> <span class=\"nf\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">@google-cloud/vision</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">client</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">vision</span><span class=\"p\">.</span><span class=\"nc\">ImageAnnotatorClient</span><span class=\"p\">();</span>\n\n<span class=\"k\">async</span> <span class=\"kd\">function</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"nx\">fileName</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"p\">[</span> <span class=\"nx\">result</span> <span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nf\">documentTextDetection</span><span class=\"p\">(</span>\n    <span class=\"nx\">fileName</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span>\n      <span class=\"dl\">'</span><span class=\"s1\">language_hints</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">ja</span><span class=\"dl\">'</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">);</span>\n  <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nf\">writeFileSync</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./receipt.json</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nf\">stringify</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">),</span> <span class=\"dl\">'</span><span class=\"s1\">utf-8</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./receipt.jpg</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"105:1-106:174\">APIキーを食わせる方式ではなくて、サービスアカウントを食わせる方式になっていたのが若干面食らいました。<br>\n進化が速い上にWebから古くなった情報が消えないので迷走しがちなので、まずは公式サイトを熟読する方がよいかもしれません。</p>\n<p data-sourcepos=\"108:1-108:226\">工夫した点は、PoCではOCR解析部とUI部を別作成にしたことくらいです。UIの改修のたびにOCR解析を行うと利用上限にあっという間に到達することが懸念されたためです。</p>\n<p data-sourcepos=\"111:1-111:336\">GCPでの設定の詳細はこちらにスクショつきでドキュメントを残しておきました。リポジトリをダウンロードして <a href=\"https://code.visualstudio.com/\" rel=\"nofollow noopener\" target=\"_blank\">VS Code</a> + <a href=\"https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced\" rel=\"nofollow noopener\" target=\"_blank\">Markdown Preview Enhanced</a> で見てください。</p>\n<ul data-sourcepos=\"113:1-115:0\">\n<li data-sourcepos=\"113:1-115:0\"><a href=\"https://github.com/kaku3/workbooks/tree/main/05_%E5%AE%B6%E8%A8%88%E7%B0%BF/10_src/00_vision_api#readme\" rel=\"nofollow noopener\" target=\"_blank\">Cloud Vision API</a></li>\n</ul>\n<h2 data-sourcepos=\"116:1-116:17\">\n<span id=\"poc--ui作成\" class=\"fragment\"></span><a href=\"#poc--ui%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>PoC : UI作成</h2>\n<p data-sourcepos=\"118:1-118:146\">技術スタックはこの辺です。今回はUIの検証を色々行いたかったので慣れているものを使うことにしました。</p>\n<ul data-sourcepos=\"120:1-124:0\">\n<li data-sourcepos=\"120:1-120:9\">Nuxt.js</li>\n<li data-sourcepos=\"121:1-121:12\">Vuetify.js</li>\n<li data-sourcepos=\"122:1-122:9\">panzoom</li>\n<li data-sourcepos=\"123:1-124:0\">svg, polygon</li>\n</ul>\n<p data-sourcepos=\"125:1-125:249\">前述の図の通り、デモには非常にきれいな認識結果が表示されていたのですが、APIで取得できるデータで同じ様な認識結果を表示するには以下の課題を解決しないといけませんでした。</p>\n<ol data-sourcepos=\"127:1-129:0\">\n<li data-sourcepos=\"127:1-127:81\">文字単位でちぎれたデータで、単語とするには結合が必要</li>\n<li data-sourcepos=\"128:1-129:0\">頂点情報が順不同のデータで、そのままでは枠線を描けない</li>\n</ol>\n<p data-sourcepos=\"130:1-132:285\">特に、<strong>枠線を描画できる様に頂点を整形する処理を何と呼ぶか分からず</strong>グーグル先生にサクッと質問ができずググり方をだいぶ試行錯誤しました。<br>\nわたしが調べたかったものは数学的には<code>与えられた集合を含む最小の凸集合</code>であり<code>凸包(Convex Hull)</code><sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup> と呼ぶそうです。<br>\n普通に生活をしていて『凸』を意味のある文脈で使う日が来るとは想像していませんでしたが、とにかく単語さえ分かればあとはなんとか調べられます。情報を上げてくださってた皆さんありがとうございます。</p>\n<p data-sourcepos=\"134:1-134:147\">以下<code>DrawingUtil.toConvexHull()</code>は、<code>[{ x: 0, y: 0 },...]</code> 形式の頂点配列を渡すと凸包の頂点配列を返却するメソッド。</p>\n<div class=\"code-frame\" data-lang=\"javascript\" data-sourcepos=\"135:1-190:3\">\n<div class=\"code-lang\"><span class=\"bold\">scripts/DrawingUtil.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"kd\">class</span> <span class=\"nc\">DrawingUtil</span> <span class=\"p\">{</span>\n\n  <span class=\"cm\">/**\n   * 凸包を求める\n   * ギフト包装法\n   * 1. 最もy座標が小さく、その中でxも最も小さいものを求めて注目点とする\n   * 2. 次の点を求めるために、注目点ほか全ての点との偏角を求めて、最も左にあるものを選ぶ.\n   * 3. 一周するまで繰り返す.\n   *\n   * @param {*} points\n   * @returns\n   */</span>\n  <span class=\"kd\">static</span> <span class=\"nf\">toConvexHull</span><span class=\"p\">(</span><span class=\"nx\">points</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">convexHullPoints</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n\n    <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">points</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&lt;</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"nx\">convexHullPoints</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">let</span> <span class=\"nx\">basePoint</span> <span class=\"o\">=</span> <span class=\"nx\">points</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">];</span>\n    <span class=\"nx\">points</span><span class=\"p\">.</span><span class=\"nf\">forEach</span><span class=\"p\">(</span><span class=\"nx\">point</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">basePoint</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">&gt;</span> <span class=\"nx\">point</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">||</span> <span class=\"p\">((</span><span class=\"nx\">basePoint</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">==</span> <span class=\"nx\">point</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">)</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nx\">basePoint</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">&gt;</span> <span class=\"nx\">point</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n        <span class=\"nx\">basePoint</span> <span class=\"o\">=</span> <span class=\"nx\">point</span><span class=\"p\">;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">});</span>\n\n    <span class=\"kd\">let</span> <span class=\"nx\">currentPoint</span> <span class=\"o\">=</span> <span class=\"nx\">basePoint</span><span class=\"p\">;</span>\n    <span class=\"k\">do</span> <span class=\"p\">{</span>\n      <span class=\"nx\">convexHullPoints</span><span class=\"p\">.</span><span class=\"nf\">push</span><span class=\"p\">(</span><span class=\"nx\">currentPoint</span><span class=\"p\">);</span>\n      <span class=\"nx\">currentPoint</span> <span class=\"o\">=</span> <span class=\"nx\">DrawingUtil</span><span class=\"p\">.</span><span class=\"nf\">nextPoint</span><span class=\"p\">(</span><span class=\"nx\">points</span><span class=\"p\">,</span> <span class=\"nx\">currentPoint</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span> <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"nx\">basePoint</span> <span class=\"o\">!=</span> <span class=\"nx\">currentPoint</span><span class=\"p\">);</span>\n    <span class=\"nx\">convexHullPoints</span><span class=\"p\">.</span><span class=\"nf\">push</span><span class=\"p\">(</span><span class=\"nx\">basePoint</span><span class=\"p\">);</span>\n\n    <span class=\"k\">return</span> <span class=\"nx\">convexHullPoints</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kd\">static</span> <span class=\"nf\">nextPoint</span><span class=\"p\">(</span><span class=\"nx\">points</span><span class=\"p\">,</span> <span class=\"nx\">p</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">nextPoint</span> <span class=\"o\">=</span> <span class=\"nx\">points</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">];</span>\n    <span class=\"k\">for </span><span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nx\">max</span> <span class=\"o\">=</span> <span class=\"nx\">points</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">max</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"kd\">let</span> <span class=\"nx\">point</span> <span class=\"o\">=</span> <span class=\"nx\">points</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">];</span>\n      <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">p</span> <span class=\"o\">==</span> <span class=\"nx\">nextPoint</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">nextPoint</span> <span class=\"o\">=</span> <span class=\"nx\">point</span><span class=\"p\">;</span>\n      <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"kd\">let</span> <span class=\"nx\">v</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"nx\">nextPoint</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"nx\">point</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"nx\">point</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"nx\">nextPoint</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">);</span>\n        <span class=\"kd\">let</span> <span class=\"nx\">ab</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"nx\">nextPoint</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"nx\">nextPoint</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"nx\">nextPoint</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"nx\">nextPoint</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">);</span>\n        <span class=\"kd\">let</span> <span class=\"nx\">ac</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"nx\">point</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"nx\">point</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"nx\">point</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"nx\">point</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">);</span>\n        <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">v</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"o\">||</span> <span class=\"p\">(</span><span class=\"nx\">v</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nf\">abs</span><span class=\"p\">(</span><span class=\"nx\">ac</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nf\">abs</span><span class=\"p\">(</span><span class=\"nx\">ab</span><span class=\"p\">)))</span> <span class=\"p\">{</span>\n          <span class=\"nx\">nextPoint</span> <span class=\"o\">=</span> <span class=\"nx\">point</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"nx\">nextPoint</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"192:1-192:238\">今にしてみると <strong>ChatGPT先生</strong>に聞けば解答してくれるような気がするのですが、それでサクッと解決できてしまうと<strong>脳の何か大事な部分が退化しそう</strong>で怖いなと思いました。</p>\n<p data-sourcepos=\"194:1-194:72\">ということで、とりあえず一次検証までは完了です。</p>\n<p data-sourcepos=\"196:1-198:74\">(PoC: UI画面)<br>\n<a href=\"https://camo.qiitausercontent.com/bb1ca99ff2472bc1c17bc1858297928d2865a9c2/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37306462623038662d356265362d366330372d613936342d6566373862636366383261332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F70dbb08f-5be6-6c07-a964-ef78bccf82a3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=7b3904179de14fea2019f1920e8b13c2\" alt=\"ss.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/70dbb08f-5be6-6c07-a964-ef78bccf82a3.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F70dbb08f-5be6-6c07-a964-ef78bccf82a3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f95b5821d655d1a759405dd0fe49045e 1x\" loading=\"lazy\"></a><br>\n※panzoom で拡縮して、黄色部分をクリックして登録予定</p>\n<ul data-sourcepos=\"200:1-202:0\">\n<li data-sourcepos=\"200:1-202:0\"><a href=\"https://github.com/kaku3/workbooks/tree/main/05_%E5%AE%B6%E8%A8%88%E7%B0%BF/10_src/01_poc_input_from_receipt_ui\" rel=\"nofollow noopener\" target=\"_blank\">ソースコード : workbooks/05_家計簿/10_src/01_poc_input_from_receipt_ui/</a></li>\n</ul>\n<h2 data-sourcepos=\"203:1-203:15\">\n<span id=\"poc--判定\" class=\"fragment\"></span><a href=\"#poc--%E5%88%A4%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>PoC : 判定</h2>\n<p data-sourcepos=\"205:1-206:216\">…一次検証のつもりでしたが、この時点でPoC終了判断をしました。開発プロジェクトとしては終了です。<br>\n技術的にもう少しやっておきたいところはあるのでソースの更新と、<a href=\"https://github.com/kaku3/workbooks/\" rel=\"nofollow noopener\" target=\"_blank\">お仕事問題集</a>用のドキュメント作成を行って終了となります。</p>\n<p data-sourcepos=\"208:1-209:174\">先週の土曜日スタートで２回目の土曜日なのですが、今週の月曜日には終了判定が出てました。<br>\n平日は一切プログラムもプロトタイプも触ってないのですが「あ、こりゃダメだな」と思うイベントが月曜日にあった感じです。</p>\n<p data-sourcepos=\"211:1-212:400\">業務プログラマが陥りがちな罠なのですが、システム開発の企画は <strong>業務全体を見ないとできません。</strong><br>\nシステム開発とは、とある業務があって、その中の一部をシステム化(今風に言うとDX化)することで人々の暮らしを豊かにしようという話です。ですので既存の業務の一部をごくごく自然に置き換えた結果、目的が達成された（今回で言えば家計簿データが蓄積された）状態になる必要があります。</p>\n<p data-sourcepos=\"214:1-215:113\">終了判定を行ったのはセブンイレブンで買い物をした直後です。<br>\nあのレシートが吐き出されてそのままゴミ箱に落ちる悪魔的UX。最高にクールです。</p>\n<p data-sourcepos=\"217:1-217:265\"><strong>あのUXを無視してわざわざレシートを引っこ抜いて持ち帰って写真を撮ってそこからレコードを抽出する心理的コスト</strong> は圧倒的に <strong>スプレッドシートにメモるコスト</strong> より大きいと感じました。</p>\n<p data-sourcepos=\"219:1-220:153\">製品のコピーとしては <strong>「スマホでレシート撮影するだけで家計簿がつけられる！」</strong> などになると思いますが、いやいやいやいや、誰がそんなもん使うんだって感じです。<br>\nきちんと考えてから手を動かせば、新年一発目からボツ企画で無駄なコストをかけないで済んだなと思いました。</p>\n<h2 data-sourcepos=\"223:1-223:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"225:1-225:583\">最近、<strong><a href=\"https://www.amazon.co.jp/%E7%94%B3%E3%81%97%E8%A8%B3%E3%81%AA%E3%81%84%E3%80%81%E5%BE%A1%E7%A4%BE%E3%82%92%E3%81%A4%E3%81%B6%E3%81%97%E3%81%9F%E3%81%AE%E3%81%AF%E7%A7%81%E3%81%A7%E3%81%99%E3%80%82-%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%BB%E3%83%95%E3%82%A7%E3%83%A9%E3%83%B3/dp/4479794336\" rel=\"nofollow noopener\" target=\"_blank\">「申し訳ない、御社をつぶしたのは私です。」</a></strong> という本を読みまして、うまくいった話よりも、失敗した話と、どのような思考の流れでそこに至ったかということの共有が大事だなと思い本稿を起稿しました。</p>\n<p data-sourcepos=\"227:1-227:178\">開発については「失敗」としていますが、OCRの要素技術やお仕事問題集は手元に残っています。逃げたら一つ、進めば二つ<sup><a href=\"#fn-3\" id=\"fnref-3\">3</a></sup>です。</p>\n<p data-sourcepos=\"229:1-229:84\">皆様もエンジニアルートを進んでアレコレ手に入れましょう。</p>\n<h2 data-sourcepos=\"232:1-232:13\">\n<span id=\"おまけ1\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%911\"><i class=\"fa fa-link\"></i></a>おまけ1</h2>\n<p data-sourcepos=\"234:1-234:25\">営業A短編シリーズ</p>\n<p data-sourcepos=\"236:1-236:50\"><iframe id=\"qiita-embed-content__36cb2d1397cc26efb4b7c0e42841baa9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__36cb2d1397cc26efb4b7c0e42841baa9\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"238:1-238:50\"><iframe id=\"qiita-embed-content__50e00fd53be5c0bb7d70d523525a45d3\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__50e00fd53be5c0bb7d70d523525a45d3\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"241:1-241:13\">\n<span id=\"おまけ2\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%912\"><i class=\"fa fa-link\"></i></a>おまけ2</h2>\n<p data-sourcepos=\"243:1-244:30\">2025年にIT人材が43万人不足するらしいので、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"246:1-246:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"249:7-249:204\">家計簿記の記録を続けられている方がいたら、よかったことやモチベーションなどをコメント欄に書いてもらえると参考にできてありがたいです。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"250:7-250:71\"><a href=\"https://ja.wikipedia.org/wiki/%E5%87%B8%E5%8C%85\" rel=\"nofollow noopener\" target=\"_blank\">Wiki : 凸包</a> <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-3\">\n<p data-sourcepos=\"251:7-251:93\"><a href=\"https://g-witch.net/\" rel=\"nofollow noopener\" target=\"_blank\">機動戦士ガンダム水星の魔女</a>の重要なセリフ。 <a href=\"#fnref-3\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\n\n遅くなりましたが明けましておめでとうございます。\n年も明けて一山当ててやるぜと開発に勤しんでおられますでしょうか。\n\nわたしは、**モチベーションが一番高いであろう年始**に何かをやらないと**一年何もやらない**かなと軽く怯えて何か作ることにしました。\n\n一方で、年始に考えたアイデアは**謎の無敵感**があるので、みんな大好き **PoC（Proof of Concept：概念実証）** を実施して開発継続可否を検証することにしたのでその話を書こうと思います。\n\n(ひとりブレストに望んだの図)\n![はじめに.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a9a96fe1-5602-356e-9596-ca8e2ed4a583.png)\n\nブレストは、ガチでやるなら [【MindMup2】](https://drive.mindmup.com/) の方がよいかと思いますが、今回は [【Draw.io + VS Code】](https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio) で。\n- ダブクリで新しいハコを出せる\n- ハコの横クリックでコネクタ＋新しいハコを出せる\n- drawio.png に変換すると drawio で編集もできる png になる\n\n\n## 家計簿的な何か\n\nということで、家計簿的な何かを作ることにしました。\n\n今年こそはきっちり金管理するぞとか。いい感じのウェブアプリがあれば管理も捗るんじゃないの？とか。**アイデアが年始っぽいですね！**\n\n家計簿だったら星の数程便利なアプリが出ているんだからそれを落とした方が手っ取り早いんじゃないの？と思う方もいると思いますが、個人的には、今までいくどとなく年が明ける毎に家計簿的なものに手を出そうと考えたり考えなかったりしましたが、続いたことはなかったという問題があります。[^1]\n\n**ではなぜそんなものをわざわざ作るのか？**\n\n自分で苦労して作ったアプリだったら、愛着ももてるし**最高に快適なUI**を作れたら記録を続けられるかもしれないと、**年始なので**そう考えることにしました。\n\n何が面倒くさいのか？タイピングか？だったら、レシートから読み込みができれば、入力も簡単だし、スマホでホイホイ入力して続けられるかもしれない。**課題分析も完璧ですね。**\nついでに前々から興味があった[Google Cloud Vision AI](https://cloud.google.com/vision?hl=ja)のOCRも調べられるしよさそうです。\n\n\n## PoC（Proof of Concept：概念実証）とは\n\nアイデアを実際に利用可能なアプリケーションとするためには、要件定義やら外部設計やら色々なフェーズを経て開発をしてテストまでしないといけません。つまりは膨大な時間（＝金）がかかります。個人開発で休日にDIYするのであれば支払いは発生しませんが、有限な時間の消費は避けられません。\n\nつまりは、わたし達は**アイデアを無限に形にすることはできない**のです。\n\nそこでPoCの登場です。\n\n年始のテンションで思いついた最高のアイデアが形になった時に必ずしも最高のアプリケーションになるとは限りません。**アイデアのうちキーになる部分をプロトタイプ作成などで検証し、コンセプト通り進めれば最高のアプリケーションにできるのか**を判断するのがPoCです。\n\n(無駄にSWOT分析)\n![swot.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/4fe18872-1e65-4bd8-44b0-8a855b7afd2e.png)\n\n今回ば **『最高に快適なUI』** が作れなければ継続利用は見込めません。また、市場としてはバキバキのレッドオーシャンで、クレカや交通マネーとも連携している超高性能アプリが基本無料で存在します。\n自分で継続利用する気もなく、売れる見込みもないアプリケーションの開発を継続するのは人生の無駄遣いです。\n\nここまで見るとかなり旗色が悪い案件ですが、DIY開発の傍らで **[お仕事問題集](https://github.com/kaku3/workbooks)** を作成し git にて無料公開をしてたりします。\nそのため PoC の結果が開発中止となっても無に帰する事はないので、安心して作業を進められました。よろしければ **git にスターをつけて** 供養してやってください。\n\n\n## PoC の意味について\n\nPoCをやる意味は**損切りを早くする**ことだと思っています。\n\n絶対にやってはいけないのは**継続する意味がないと結果が出たアイデアにしがみつくこと**です。[コンコルド効果](https://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3%E3%82%B3%E3%83%AB%E3%83%89%E5%8A%B9%E6%9E%9C)の様なことになっては絶対にいけません。お母さんから、教わらなかった、ですか？\n\nとは言え、リリース日ありきのプロジェクトで PoC を実施している場合、中断の判定はものすごく難しいです。**もう一度 PoC をやるつもりでスケジュールを立てること自体が難しい**からです。\nさらには、そこまで投入した費用、再度0からPoCを行うメンタル的な負荷と費用などを考えるとより一層難しくなることでしょう。\nネガティブな結果が出た時には **「無駄なことを続けないで済む、新しいことを始められる」** とポジティブに受け止めて切り替えていくことが大事です。**長期的に見ると、無駄だと分かって続ける方がメンタル的に多大な負荷がかかります。**\n\n\n## アイデアに固執しないためには？\n\nまた、人間は自分が思いついたアイデアを形にしないと、**そのアイデアに脳を占拠されてしまう**ためか新しいことを考えられないという性質があるようです。\nこの呪縛から逃れるためには **『アプリをリリースして GoogleAnalytics とにらめっこしたけど全然ダウンロードされてない辛い』** といった経験を何度もするなどが近道だと思います。\nいちいち形にしなくても脳内で消化して新しいことを考えられるようになっていきます。逃げたら一つ、進めば二つです。\n\n\n## PoC : レシートの読み取り\n\nOCR(Optical Character Reader : 光学文字認識)を利用してレシートの読み取りを行います。\n[Google Cloud Vision AI](https://cloud.google.com/vision?hl=ja) を用いると、月1000回までは無料でOCR解析を利用できます。個人で利用する家計簿であれば、よほどの浪費家ではない限りは利用上限に達することはないでしょう。\n\nということで、まずは **[公式サイトのデモページ](https://cloud.google.com/vision/?refresh=1&tab=tab4#vision-api-)** にアクセスして適当なレシートを読み込ませて結果を確認してモチベーションを上げましょう。\n勘のいい子はこの時点で致命的なユーザビリティの悪さに気づきそうですが、開発者モードのわたしは気づきませんでした。ユーザーの目線と開発者の目線を絶えず使い分けられるように知覚力を上げておかないとですね。皆さんは気づいたでしょうか？\n\n(公式サイトのデモページ)\n![demo.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/9797111e-a65c-4a25-62c5-34d2328895e4.png)\n\nざっと見た感じ、nodejs で非常に簡単に使えそうだったのでPoCを継続することとしました。\nちなみに以下が全コードです。とても短いですね。\n```index.js\nconst fs = require('fs');\nconst vision = require('@google-cloud/vision');\n\nconst client = new vision.ImageAnnotatorClient();\n\nasync function main(fileName) {\n  const [ result ] = await client.documentTextDetection(\n    fileName,\n    {\n      'language_hints': ['ja']\n    }\n  );\n  fs.writeFileSync('./receipt.json', JSON.stringify(result), 'utf-8');\n}\n\nmain('./receipt.jpg');\n```\n\nAPIキーを食わせる方式ではなくて、サービスアカウントを食わせる方式になっていたのが若干面食らいました。\n進化が速い上にWebから古くなった情報が消えないので迷走しがちなので、まずは公式サイトを熟読する方がよいかもしれません。\n\n工夫した点は、PoCではOCR解析部とUI部を別作成にしたことくらいです。UIの改修のたびにOCR解析を行うと利用上限にあっという間に到達することが懸念されたためです。\n\n\nGCPでの設定の詳細はこちらにスクショつきでドキュメントを残しておきました。リポジトリをダウンロードして [VS Code](https://code.visualstudio.com/) + [Markdown Preview Enhanced](https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced) で見てください。\n\n- [Cloud Vision API](https://github.com/kaku3/workbooks/tree/main/05_%E5%AE%B6%E8%A8%88%E7%B0%BF/10_src/00_vision_api#readme)\n\n\n## PoC : UI作成\n\n技術スタックはこの辺です。今回はUIの検証を色々行いたかったので慣れているものを使うことにしました。\n\n- Nuxt.js\n- Vuetify.js\n- panzoom\n- svg, polygon\n\n前述の図の通り、デモには非常にきれいな認識結果が表示されていたのですが、APIで取得できるデータで同じ様な認識結果を表示するには以下の課題を解決しないといけませんでした。\n\n1. 文字単位でちぎれたデータで、単語とするには結合が必要\n1. 頂点情報が順不同のデータで、そのままでは枠線を描けない\n\n特に、**枠線を描画できる様に頂点を整形する処理を何と呼ぶか分からず**グーグル先生にサクッと質問ができずググり方をだいぶ試行錯誤しました。\nわたしが調べたかったものは数学的には`与えられた集合を含む最小の凸集合`であり`凸包(Convex Hull)`[^2] と呼ぶそうです。\n普通に生活をしていて『凸』を意味のある文脈で使う日が来るとは想像していませんでしたが、とにかく単語さえ分かればあとはなんとか調べられます。情報を上げてくださってた皆さんありがとうございます。\n\n以下`DrawingUtil.toConvexHull()`は、`[{ x: 0, y: 0 },...]` 形式の頂点配列を渡すと凸包の頂点配列を返却するメソッド。\n```scripts/DrawingUtil.js\nexport default class DrawingUtil {\n\n  /**\n   * 凸包を求める\n   * ギフト包装法\n   * 1. 最もy座標が小さく、その中でxも最も小さいものを求めて注目点とする\n   * 2. 次の点を求めるために、注目点ほか全ての点との偏角を求めて、最も左にあるものを選ぶ.\n   * 3. 一周するまで繰り返す.\n   *\n   * @param {*} points\n   * @returns\n   */\n  static toConvexHull(points) {\n    let convexHullPoints = [];\n\n    if (points.length < 3) {\n      return convexHullPoints;\n    }\n\n    let basePoint = points[0];\n    points.forEach(point => {\n      if (basePoint.y > point.y || ((basePoint.y == point.y) && basePoint.x > point.x)) {\n        basePoint = point;\n      }\n    });\n\n    let currentPoint = basePoint;\n    do {\n      convexHullPoints.push(currentPoint);\n      currentPoint = DrawingUtil.nextPoint(points, currentPoint);\n    } while(basePoint != currentPoint);\n    convexHullPoints.push(basePoint);\n\n    return convexHullPoints;\n  }\n\n  static nextPoint(points, p) {\n    let nextPoint = points[0];\n    for (let i = 1, max = points.length; i < max; i++) {\n      let point = points[i];\n      if (p == nextPoint) {\n        nextPoint = point;\n      } else {\n        let v = (p.x - nextPoint.x) * (p.y - point.y) - (p.x - point.x) * (p.y - nextPoint.y);\n        let ab = (p.x - nextPoint.x) * (p.x - nextPoint.x) + (p.y - nextPoint.y) * (p.y - nextPoint.y);\n        let ac = (p.x - point.x) * (p.x - point.x) + (p.y - point.y) * (p.y - point.y);\n        if (v > 0 || (v == 0 && Math.abs(ac) > Math.abs(ab))) {\n          nextPoint = point;\n        }\n      }\n    }\n    return nextPoint;\n  }\n}\n```\n\n今にしてみると **ChatGPT先生**に聞けば解答してくれるような気がするのですが、それでサクッと解決できてしまうと**脳の何か大事な部分が退化しそう**で怖いなと思いました。\n\nということで、とりあえず一次検証までは完了です。\n\n(PoC: UI画面)\n![ss.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/70dbb08f-5be6-6c07-a964-ef78bccf82a3.png)\n※panzoom で拡縮して、黄色部分をクリックして登録予定\n\n- [ソースコード : workbooks/05_家計簿/10_src/01_poc_input_from_receipt_ui/](https://github.com/kaku3/workbooks/tree/main/05_%E5%AE%B6%E8%A8%88%E7%B0%BF/10_src/01_poc_input_from_receipt_ui)\n\n\n## PoC : 判定\n\n…一次検証のつもりでしたが、この時点でPoC終了判断をしました。開発プロジェクトとしては終了です。\n技術的にもう少しやっておきたいところはあるのでソースの更新と、[お仕事問題集](https://github.com/kaku3/workbooks/)用のドキュメント作成を行って終了となります。\n\n先週の土曜日スタートで２回目の土曜日なのですが、今週の月曜日には終了判定が出てました。\n平日は一切プログラムもプロトタイプも触ってないのですが「あ、こりゃダメだな」と思うイベントが月曜日にあった感じです。\n\n業務プログラマが陥りがちな罠なのですが、システム開発の企画は **業務全体を見ないとできません。**\nシステム開発とは、とある業務があって、その中の一部をシステム化(今風に言うとDX化)することで人々の暮らしを豊かにしようという話です。ですので既存の業務の一部をごくごく自然に置き換えた結果、目的が達成された（今回で言えば家計簿データが蓄積された）状態になる必要があります。\n\n終了判定を行ったのはセブンイレブンで買い物をした直後です。\nあのレシートが吐き出されてそのままゴミ箱に落ちる悪魔的UX。最高にクールです。\n\n**あのUXを無視してわざわざレシートを引っこ抜いて持ち帰って写真を撮ってそこからレコードを抽出する心理的コスト** は圧倒的に **スプレッドシートにメモるコスト** より大きいと感じました。\n\n製品のコピーとしては **「スマホでレシート撮影するだけで家計簿がつけられる！」** などになると思いますが、いやいやいやいや、誰がそんなもん使うんだって感じです。\nきちんと考えてから手を動かせば、新年一発目からボツ企画で無駄なコストをかけないで済んだなと思いました。\n\n\n## おわりに\n\n最近、**[「申し訳ない、御社をつぶしたのは私です。」](https://www.amazon.co.jp/%E7%94%B3%E3%81%97%E8%A8%B3%E3%81%AA%E3%81%84%E3%80%81%E5%BE%A1%E7%A4%BE%E3%82%92%E3%81%A4%E3%81%B6%E3%81%97%E3%81%9F%E3%81%AE%E3%81%AF%E7%A7%81%E3%81%A7%E3%81%99%E3%80%82-%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%BB%E3%83%95%E3%82%A7%E3%83%A9%E3%83%B3/dp/4479794336)** という本を読みまして、うまくいった話よりも、失敗した話と、どのような思考の流れでそこに至ったかということの共有が大事だなと思い本稿を起稿しました。\n\n開発については「失敗」としていますが、OCRの要素技術やお仕事問題集は手元に残っています。逃げたら一つ、進めば二つ[^3]です。\n\n皆様もエンジニアルートを進んでアレコレ手に入れましょう。\n\n\n## おまけ1\n\n営業A短編シリーズ\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n\n## おまけ2\n\n2025年にIT人材が43万人不足するらしいので、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n\n\n[^1]: 家計簿記の記録を続けられている方がいたら、よかったことやモチベーションなどをコメント欄に書いてもらえると参考にできてありがたいです。\n[^2]: [Wiki : 凸包](https://ja.wikipedia.org/wiki/%E5%87%B8%E5%8C%85)\n[^3]: [機動戦士ガンダム水星の魔女](https://g-witch.net/)の重要なセリフ。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2023-01-15T00:26:28+09:00",
    "group": null,
    "id": "2572d52ce31e0ec6f3d4",
    "likes_count": 30,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 19,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "OCR",
        "versions": []
      },
      {
        "name": "個人開発",
        "versions": []
      },
      {
        "name": "Vuetify",
        "versions": []
      },
      {
        "name": "Nuxt",
        "versions": []
      }
    ],
    "title": "PoCで開発を中止した話(年始編)",
    "updated_at": "2023-01-15T21:54:02+09:00",
    "url": "https://qiita.com/kaku3/items/2572d52ce31e0ec6f3d4",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 18315,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:18\">\n<span id=\"プロローグ\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%83%AD%E3%83%BC%E3%82%B0\"><i class=\"fa fa-link\"></i></a>プロローグ</h2>\n<p data-sourcepos=\"3:1-5:34\">営業A「弊社DX製品、全然問い合わせがないっすね。」<br>\n営業B「経産省のレポートでは、2025年までにDXしないと <strong>『毎年最大１２兆円の経済損失が生じる可能性』</strong> があるって言ってるんだからみんなDXするだろ？」<br>\n営業A「そっすよねぇ…」</p>\n<p data-sourcepos=\"7:1-8:196\">営業A<br>\n(…まてよ？…あのレポートが出たのって平成30年だったよな…今はもう令和になってずいぶん経つから新しいレポートが出てるんじゃないのか？)</p>\n<p data-sourcepos=\"10:1-11:82\">「これは調査する必要がありそうだな。」<br>\nそうつぶやくと営業Aはパソコンに向かってググりはじめた。</p>\n<h2 data-sourcepos=\"14:1-14:45\">\n<span id=\"デジタル競争の敗者とジレンマ\" class=\"fragment\"></span><a href=\"#%E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB%E7%AB%B6%E4%BA%89%E3%81%AE%E6%95%97%E8%80%85%E3%81%A8%E3%82%B8%E3%83%AC%E3%83%B3%E3%83%9E\"><i class=\"fa fa-link\"></i></a>デジタル競争の敗者とジレンマ</h2>\n<p data-sourcepos=\"16:1-17:76\">営業A「クソ…悪い予感が的中したか」<br>\n営業Aは経産省のレポートを眺めながらそうつぶやいた。</p>\n<p data-sourcepos=\"19:1-19:143\"><a href=\"https://camo.qiitausercontent.com/196a48e6ad2d86e7aeee2bfadddd246e33cb5cc1/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64613361333662382d306432322d383466342d326339332d6636613839626433393166662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fda3a36b8-0d22-84f4-2c93-f6a89bd391ff.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=4cbd156c64d5c5df518fd258eaf9ac68\" alt=\"デジタル競争の敗者.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/da3a36b8-0d22-84f4-2c93-f6a89bd391ff.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fda3a36b8-0d22-84f4-2c93-f6a89bd391ff.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=9d4bc77c4319bea0660777096231b381 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"21:1-21:152\">出典：<a href=\"https://www.meti.go.jp/press/2021/08/20210831005/20210831005-2.pdf\" rel=\"nofollow noopener\" target=\"_blank\">経済産業省　D Xレポート２.１（DX レポート 2 追補版）</a></p>\n<p data-sourcepos=\"23:1-23:93\">少し見ない間に『デジタル競争の敗者』にされているじゃあないか。</p>\n<p data-sourcepos=\"25:1-25:12\">しかも…</p>\n<p data-sourcepos=\"27:1-27:152\">出典：<a href=\"https://www.meti.go.jp/press/2021/08/20210831005/20210831005-2.pdf\" rel=\"nofollow noopener\" target=\"_blank\">経済産業省　D Xレポート２.１（DX レポート 2 追補版）</a></p>\n<blockquote data-sourcepos=\"29:1-35:437\">\n<ol data-sourcepos=\"29:3-35:437\">\n<li data-sourcepos=\"29:3-30:278\">危機感のジレンマ<br>\n目先の業績が好調のため変革に対する危機感がない。投資体力があるうちに変革を進めていくことが重要であるが、危機感が高まったときはすでに業績が不調であり、変革に必要な投資体力を失っている。</li>\n<li data-sourcepos=\"31:3-33:110\">人材育成のジレンマ<br>\n技術が陳腐化するスピードが速く、時間をかけて学んだとしても、習得したときには<br>\n古い技術となっている。即座に新技術を獲得できる人材は引き抜かれてしまう。</li>\n<li data-sourcepos=\"34:3-35:437\">ビジネスのジレンマ（ベンダー企業）<br>\n受託型ビジネスを現業とするベンダー企業が、ユーザー企業のデジタル変革を伴走支援する企業へと変革しようとすると、内製化への移行により受託型ビジネスと比べて売上規模が縮小する。また、ベンダー企業がユーザー企業をデジタル企業へ移行する支援を行うことにより、最終的には自分たちが不要になってしまう。</li>\n</ol>\n</blockquote>\n<p data-sourcepos=\"37:1-37:120\">「製品に問題があるのではなく、企業のあり方自体に問題があるという話だろうか…？」</p>\n<h2 data-sourcepos=\"40:1-40:26\">\n<span id=\"dxフレームワーク\" class=\"fragment\"></span><a href=\"#dx%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF\"><i class=\"fa fa-link\"></i></a>DXフレームワーク</h2>\n<p data-sourcepos=\"42:1-42:93\">「１営業のオレには、企業のあり方は <strong>ヘビィ</strong> 過ぎる課題だぜ…」</p>\n<p data-sourcepos=\"44:1-44:368\">とりあえず売り方が載ってないか最後まで目を通してみたが、ヘビィな課題に対する <strong>『変革に向けた施策』</strong> があるだけだった。営業のオレにはピンと来ない話ばかりであったが、文中の <strong>『DXフレームワーク』</strong> はしゃべれた方がハッタリがきいてよさそうだと思った。</p>\n<p data-sourcepos=\"46:1-46:139\"><a href=\"https://camo.qiitausercontent.com/dd187c287d65f5bb79f11facd699617b066c0c10/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f32343636653935392d656561312d343435612d353336652d3333643062666334373363642e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F2466e959-eea1-445a-536e-33d0bfc473cd.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=faa6bc41336dc862e87c2aca282173cb\" alt=\"DXフレームワーク.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/2466e959-eea1-445a-536e-33d0bfc473cd.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F2466e959-eea1-445a-536e-33d0bfc473cd.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=77bb65d6f503c9705f20da0fc79af190 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"48:1-48:152\">出典：<a href=\"https://www.meti.go.jp/press/2021/08/20210831005/20210831005-2.pdf\" rel=\"nofollow noopener\" target=\"_blank\">経済産業省　D Xレポート２.１（DX レポート 2 追補版）</a></p>\n<h2 data-sourcepos=\"51:1-51:25\">\n<span id=\"d-x-レポート-２2\" class=\"fragment\"></span><a href=\"#d-x-%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88-%EF%BC%922\"><i class=\"fa fa-link\"></i></a>D X レポート ２.2</h2>\n<p data-sourcepos=\"53:1-53:367\">DXレポート２.１から「DX」は気軽に営業ワードで使えない程度の闇の深さを感じたが、製品の売り方のヒントが欲しい。他にすがる物もないので現時点での最新版と思われる<a href=\"https://www.meti.go.jp/shingikai/mono_info_service/covid-19_dgc/pdf/002_05_00.pdf\" rel=\"nofollow noopener\" target=\"_blank\">D X レポート ２.2</a>も読むことにした。</p>\n<p data-sourcepos=\"56:1-56:122\">D X レポート ２.2 では、ありがたいことに最初から具体的なアクションが明示されていた。</p>\n<p data-sourcepos=\"58:1-58:146\">出典：<a href=\"https://www.meti.go.jp/shingikai/mono_info_service/covid-19_dgc/pdf/002_05_00.pdf\" rel=\"nofollow noopener\" target=\"_blank\">経済産業省　D X レポート ２.2（概要）</a></p>\n<blockquote data-sourcepos=\"60:1-66:126\">\n<p data-sourcepos=\"60:3-66:126\">「デジタル産業への変革に向けた具体的な方向性やアクションを提示」<br>\n• 具体的には、企業に向けて以下3点のアクションを提示<br>\n✓ デジタルを、省力化・効率化ではなく、収益向上にこそ活用すべきであること<br>\n✓ DX推進にあたって、経営者はビジョンや戦略だけではなく、「行動指針」を示すこと<br>\n✓ 個社単独ではDXは困難であるため、経営者自らの「価値観」を外部へ発信し、同じ価値観をもつ同志を集めて、互いに変革を推進する新たな関係を構築すること<br>\n• 上述を実現するための仕掛けとして、「デジタル産業宣言」を策定<br>\n• さらに、宣言の実効性を高めるうえで、デジタルガバナンス・コードへの組み込みを検討</p>\n</blockquote>\n<p data-sourcepos=\"68:1-69:149\">「…？<del>人類</del>一企業には早すぎたオーバーテクノロジーだというのか…？」<br>\n「『省力化・効率化ではなく』という文言は…『RPAでDXっす！』的な営業文句を封じ込めに来ているのか…？」</p>\n<h2 data-sourcepos=\"72:1-72:18\">\n<span id=\"エピローグ\" class=\"fragment\"></span><a href=\"#%E3%82%A8%E3%83%94%E3%83%AD%E3%83%BC%E3%82%B0\"><i class=\"fa fa-link\"></i></a>エピローグ</h2>\n<p data-sourcepos=\"74:1-74:149\">「モノを売るのにバズワード的に便利だと思ってたDXだが、経産省の思惑は全然別のところにあったんだな。」</p>\n<p data-sourcepos=\"76:1-76:96\">自社の製品を売るヒントは見当たらなかったが大きな気づきはあった。</p>\n<p data-sourcepos=\"78:1-79:324\">省力化・効率化を達成するだけの製品をユーザー企業に導入させるのは難しいということだ。<br>\n省力化・効率化を達成できたとして、余った「労働力」を「利益」に転換する方法を合わせて提示できないのであれば、どんなに使いやすい製品だったとしても実際に利用するユーザーには自分の墓穴を掘れとお願いするようなものだろう。</p>\n<p data-sourcepos=\"81:1-82:342\">そう考えると、ユーザー企業やユーザーに何らかの利益をもたらす製品を提案できねばならないのは理解できる。<br>\nしかし <strong>『デジタル競争の敗者』</strong> を脱するというのは <strong>『ITオリンピックで勝利』</strong> するといった類の内容にも見える。もう少し一般人にも行動に移せる分かりやすい目標を設定してくれたら不足するであろうIT人材43万人も集められるのかもしれない。</p>\n<p data-sourcepos=\"84:1-84:35\">「2025年まであと2年か…」</p>\n<p data-sourcepos=\"86:1-86:58\">そうつぶやいて営業Aはパソコンを閉じた。</p>\n<h2 data-sourcepos=\"89:1-89:13\">\n<span id=\"おまけ1\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%911\"><i class=\"fa fa-link\"></i></a>おまけ1</h2>\n<p data-sourcepos=\"91:1-91:25\">営業A短編シリーズ</p>\n<p data-sourcepos=\"93:1-93:50\"><iframe id=\"qiita-embed-content__740f228371138e9db1328b487d601b08\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__740f228371138e9db1328b487d601b08\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F03aae7b9e3c70c55f513\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"96:1-96:13\">\n<span id=\"おまけ2\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%912\"><i class=\"fa fa-link\"></i></a>おまけ2</h2>\n<p data-sourcepos=\"98:1-99:30\">2025年にIT人材が43万人不足するらしいので、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければどうぞ。</p>\n<p data-sourcepos=\"101:1-101:83\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## プロローグ\n\n営業A「弊社DX製品、全然問い合わせがないっすね。」\n営業B「経産省のレポートでは、2025年までにDXしないと **『毎年最大１２兆円の経済損失が生じる可能性』** があるって言ってるんだからみんなDXするだろ？」\n営業A「そっすよねぇ…」\n\n営業A\n(…まてよ？…あのレポートが出たのって平成30年だったよな…今はもう令和になってずいぶん経つから新しいレポートが出てるんじゃないのか？)\n\n「これは調査する必要がありそうだな。」\nそうつぶやくと営業Aはパソコンに向かってググりはじめた。\n\n\n## デジタル競争の敗者とジレンマ\n\n営業A「クソ…悪い予感が的中したか」\n営業Aは経産省のレポートを眺めながらそうつぶやいた。\n\n![デジタル競争の敗者.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/da3a36b8-0d22-84f4-2c93-f6a89bd391ff.png)\n\n出典：[経済産業省　D Xレポート２.１（DX レポート 2 追補版）](https://www.meti.go.jp/press/2021/08/20210831005/20210831005-2.pdf)\n\n少し見ない間に『デジタル競争の敗者』にされているじゃあないか。\n\nしかも…\n\n出典：[経済産業省　D Xレポート２.１（DX レポート 2 追補版）](https://www.meti.go.jp/press/2021/08/20210831005/20210831005-2.pdf)\n\n> 1. 危機感のジレンマ\n> 目先の業績が好調のため変革に対する危機感がない。投資体力があるうちに変革を進めていくことが重要であるが、危機感が高まったときはすでに業績が不調であり、変革に必要な投資体力を失っている。\n> 2. 人材育成のジレンマ\n> 技術が陳腐化するスピードが速く、時間をかけて学んだとしても、習得したときには\n> 古い技術となっている。即座に新技術を獲得できる人材は引き抜かれてしまう。\n> 3. ビジネスのジレンマ（ベンダー企業）\n> 受託型ビジネスを現業とするベンダー企業が、ユーザー企業のデジタル変革を伴走支援する企業へと変革しようとすると、内製化への移行により受託型ビジネスと比べて売上規模が縮小する。また、ベンダー企業がユーザー企業をデジタル企業へ移行する支援を行うことにより、最終的には自分たちが不要になってしまう。\n\n「製品に問題があるのではなく、企業のあり方自体に問題があるという話だろうか…？」\n\n\n## DXフレームワーク\n\n「１営業のオレには、企業のあり方は **ヘビィ** 過ぎる課題だぜ…」\n\nとりあえず売り方が載ってないか最後まで目を通してみたが、ヘビィな課題に対する **『変革に向けた施策』** があるだけだった。営業のオレにはピンと来ない話ばかりであったが、文中の **『DXフレームワーク』** はしゃべれた方がハッタリがきいてよさそうだと思った。\n\n![DXフレームワーク.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/2466e959-eea1-445a-536e-33d0bfc473cd.png)\n\n出典：[経済産業省　D Xレポート２.１（DX レポート 2 追補版）](https://www.meti.go.jp/press/2021/08/20210831005/20210831005-2.pdf)\n\n\n## D X レポート ２.2\n\nDXレポート２.１から「DX」は気軽に営業ワードで使えない程度の闇の深さを感じたが、製品の売り方のヒントが欲しい。他にすがる物もないので現時点での最新版と思われる[D X レポート ２.2](https://www.meti.go.jp/shingikai/mono_info_service/covid-19_dgc/pdf/002_05_00.pdf)も読むことにした。\n\n\nD X レポート ２.2 では、ありがたいことに最初から具体的なアクションが明示されていた。\n\n出典：[経済産業省　D X レポート ２.2（概要）](https://www.meti.go.jp/shingikai/mono_info_service/covid-19_dgc/pdf/002_05_00.pdf)\n\n> 「デジタル産業への変革に向けた具体的な方向性やアクションを提示」\n> • 具体的には、企業に向けて以下3点のアクションを提示\n> ✓ デジタルを、省力化・効率化ではなく、収益向上にこそ活用すべきであること\n> ✓ DX推進にあたって、経営者はビジョンや戦略だけではなく、「行動指針」を示すこと\n> ✓ 個社単独ではDXは困難であるため、経営者自らの「価値観」を外部へ発信し、同じ価値観をもつ同志を集めて、互いに変革を推進する新たな関係を構築すること\n> • 上述を実現するための仕掛けとして、「デジタル産業宣言」を策定\n> • さらに、宣言の実効性を高めるうえで、デジタルガバナンス・コードへの組み込みを検討\n\n「…？~~人類~~一企業には早すぎたオーバーテクノロジーだというのか…？」\n「『省力化・効率化ではなく』という文言は…『RPAでDXっす！』的な営業文句を封じ込めに来ているのか…？」\n\n\n## エピローグ\n\n「モノを売るのにバズワード的に便利だと思ってたDXだが、経産省の思惑は全然別のところにあったんだな。」\n\n自社の製品を売るヒントは見当たらなかったが大きな気づきはあった。\n\n省力化・効率化を達成するだけの製品をユーザー企業に導入させるのは難しいということだ。\n省力化・効率化を達成できたとして、余った「労働力」を「利益」に転換する方法を合わせて提示できないのであれば、どんなに使いやすい製品だったとしても実際に利用するユーザーには自分の墓穴を掘れとお願いするようなものだろう。\n\nそう考えると、ユーザー企業やユーザーに何らかの利益をもたらす製品を提案できねばならないのは理解できる。\nしかし **『デジタル競争の敗者』** を脱するというのは **『ITオリンピックで勝利』** するといった類の内容にも見える。もう少し一般人にも行動に移せる分かりやすい目標を設定してくれたら不足するであろうIT人材43万人も集められるのかもしれない。\n\n「2025年まであと2年か…」\n\nそうつぶやいて営業Aはパソコンを閉じた。\n\n\n## おまけ1\n\n営業A短編シリーズ\n\nhttps://qiita.com/kaku3/items/03aae7b9e3c70c55f513\n\n\n## おまけ2\n\n2025年にIT人材が43万人不足するらしいので、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければどうぞ。\n\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 1,
    "created_at": "2023-01-02T02:20:26+09:00",
    "group": null,
    "id": "3378ea55b1240d7360a1",
    "likes_count": 32,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 16,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "DX",
        "versions": []
      },
      {
        "name": "2025年の崖",
        "versions": []
      }
    ],
    "title": "ITホラー短編：売れないDXとDXレポート2.2",
    "updated_at": "2023-01-02T02:20:26+09:00",
    "url": "https://qiita.com/kaku3/items/3378ea55b1240d7360a1",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 12031,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:187\">本日(12/25(日))はクリスマスの休日ですが皆様いかがお過ごしでしょうか？<br>\nコロナ禍で皆で集まるのもまだまだ難しい状況かとは思いますが、年末年始の休暇に向けて<strong>多人数で遊べるゲーム</strong>がほしくないですか？</p>\n<p data-sourcepos=\"6:1-6:31\"><strong>ほしいですよね！？</strong></p>\n<p data-sourcepos=\"8:1-8:87\">そこで以下のようなキーワードでググってみることにしました。</p>\n<ul data-sourcepos=\"10:1-14:0\">\n<li data-sourcepos=\"10:1-10:78\"><a href=\"https://www.google.com/search?q=switch+4%E4%BA%BA%E3%83%97%E3%83%AC%E3%82%A4\" rel=\"nofollow noopener\" target=\"_blank\">switch 4人プレイ</a></li>\n<li data-sourcepos=\"11:1-11:76\"><a href=\"https://www.google.com/search?q=switch+%E3%83%91%E3%83%BC%E3%83%86%E3%82%A3\" rel=\"nofollow noopener\" target=\"_blank\">switch パーティ</a></li>\n<li data-sourcepos=\"12:1-12:82\"><a href=\"https://www.google.com/search?q=switch+%E5%8D%94%E5%8A%9B%E3%83%97%E3%83%AC%E3%82%A4\" rel=\"nofollow noopener\" target=\"_blank\">switch 協力プレイ</a></li>\n<li data-sourcepos=\"13:1-14:0\"><a href=\"https://www.google.com/search?q=switch+co-op\" rel=\"nofollow noopener\" target=\"_blank\">switch co-op</a></li>\n</ul>\n<p data-sourcepos=\"15:1-15:129\">が、検索結果には以下の様な課題があり、どうにも欲しいものを探すことができませんでした。</p>\n<ul data-sourcepos=\"17:1-19:0\">\n<li data-sourcepos=\"17:1-17:53\">見たことがあるゲームしか出てこない</li>\n<li data-sourcepos=\"18:1-19:0\">4人用ではないものも検索される</li>\n</ul>\n<p data-sourcepos=\"20:1-20:166\">仕方がないので初心にかえって任天堂の公式サイトを見てみるも、やはり4人用のゲームを探す方法は分かりませんでした。</p>\n<ul data-sourcepos=\"22:1-24:0\">\n<li data-sourcepos=\"22:1-24:0\"><a href=\"https://store-jp.nintendo.com/software/\" rel=\"nofollow noopener\" target=\"_blank\">My Nintendo Store</a></li>\n</ul>\n<p data-sourcepos=\"25:1-25:141\">エンジニアとしてはないものは作ればいいのでは？ということで何か作れないか考えることにしました。</p>\n<h2 data-sourcepos=\"28:1-28:27\">\n<span id=\"ゲーム一覧の取得\" class=\"fragment\"></span><a href=\"#%E3%82%B2%E3%83%BC%E3%83%A0%E4%B8%80%E8%A6%A7%E3%81%AE%E5%8F%96%E5%BE%97\"><i class=\"fa fa-link\"></i></a>ゲーム一覧の取得</h2>\n<p data-sourcepos=\"30:1-31:75\">ゲームの一覧が取得できれば、そこから4人用のゲームを探すことはできそうです。<br>\nということで、APIがないか探してみることにしました。</p>\n<ul data-sourcepos=\"33:1-34:0\">\n<li data-sourcepos=\"33:1-34:0\"><a href=\"https://www.google.com/search?q=nintendo+eshop+api\" rel=\"nofollow noopener\" target=\"_blank\">グーグル検索：nintendo eshop api</a></li>\n</ul>\n<p data-sourcepos=\"35:1-36:76\">何かいろいろヒットしますが、公式のAPIはなさそうです。<br>\nただ、xml 形式で公開しているデータはありそうでした。</p>\n<ul data-sourcepos=\"38:1-39:0\">\n<li data-sourcepos=\"38:1-39:0\"><a href=\"https://www.nintendo.co.jp/data/software/xml/switch.xml\" rel=\"nofollow noopener\" target=\"_blank\">switch ゲーム一覧(xml)</a></li>\n</ul>\n<p data-sourcepos=\"40:1-41:42\">これを見ると<strong>5872本</strong>ものゲームがリリース(予定含む)されていることが分かります。(2022/12/25時点)<br>\n宝の山にしか見えないですね！</p>\n<p data-sourcepos=\"43:1-43:100\">xml ではなく、json で取得したかったので、api を利用することにしました。</p>\n<ul data-sourcepos=\"44:1-46:0\">\n<li data-sourcepos=\"44:1-46:0\">APIでゲーム一覧取得\n<ul data-sourcepos=\"45:3-46:0\">\n<li data-sourcepos=\"45:3-46:0\"><a href=\"https://www.npmjs.com/package/nintendo-switch-eshop\" rel=\"nofollow noopener\" target=\"_blank\">nintendo-switch-eshop</a></li>\n</ul>\n</li>\n</ul>\n<div class=\"code-frame\" data-lang=\"js\" data-sourcepos=\"47:1-54:3\"><div class=\"highlight\"><pre><code><span class=\"c1\">// ゲーム一覧取得</span>\n<span class=\"k\">async</span> <span class=\"kd\">function</span> <span class=\"nf\">getGames</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">games</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nf\">getGamesJapan</span><span class=\"p\">();</span>\n  <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nf\">writeFileSync</span><span class=\"p\">(</span><span class=\"nx\">OUT_FOLDER</span> <span class=\"o\">+</span> <span class=\"dl\">'</span><span class=\"s1\">games.json</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nf\">stringify</span><span class=\"p\">(</span><span class=\"nx\">games</span><span class=\"p\">),</span> <span class=\"dl\">'</span><span class=\"s1\">utf-8</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"nx\">games</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n<h2 data-sourcepos=\"56:1-56:40\">\n<span id=\"4人用ゲームの抽出--問題編\" class=\"fragment\"></span><a href=\"#4%E4%BA%BA%E7%94%A8%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%AE%E6%8A%BD%E5%87%BA--%E5%95%8F%E9%A1%8C%E7%B7%A8\"><i class=\"fa fa-link\"></i></a>4人用ゲームの抽出 : 問題編</h2>\n<p data-sourcepos=\"58:1-59:114\">残念なことに、取得できたゲーム一覧の情報には、プレイ人数が含まれていません。<br>\n公式のAPIは存在しないため、プレイ人数をきれいな形で取得するのは難しそうです。</p>\n<p data-sourcepos=\"61:1-61:172\">タイトルは分かったので、5872回『商品をさがす』から検索して、ページをチクチク開いて確認すれば目的は達成できそうです。</p>\n<p data-sourcepos=\"63:1-63:108\">ただ、楽しい年末年始のためとはいえエンジニアがやる作業ではなさそうです。</p>\n<p data-sourcepos=\"65:1-65:39\">もはやこれまででしょうか…</p>\n<h2 data-sourcepos=\"68:1-68:41\">\n<span id=\"4人用ゲームの抽出--解決編1\" class=\"fragment\"></span><a href=\"#4%E4%BA%BA%E7%94%A8%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%AE%E6%8A%BD%E5%87%BA--%E8%A7%A3%E6%B1%BA%E7%B7%A81\"><i class=\"fa fa-link\"></i></a>4人用ゲームの抽出 : 解決編1</h2>\n<p data-sourcepos=\"70:1-70:54\">よくよく見るとという項目があります。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"71:1-73:4\"><div class=\"highlight\"><pre><code>&lt;LinkURL&gt;/titles/{何かのID}&lt;/LinkURL&gt;\n</code></pre></div></div>\n<p data-sourcepos=\"75:1-76:75\">一方、My Nintendo Store のURLは以下の様な形式です。<br>\nこのページには「プレイ人数」という項目があります。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"77:1-79:3\"><div class=\"highlight\"><pre><code>https://store-jp.nintendo.com/list/software/{何かのID}.html\n</code></pre></div></div>\n<p data-sourcepos=\"81:1-81:133\">ページをザクザク開いて、その部分を抽出できれば4人用ゲームだけ抽出することができそうです。</p>\n<ul data-sourcepos=\"83:1-86:0\">\n<li data-sourcepos=\"83:1-86:0\">APIで取得できないデータはサイトをスクレイピングして取得\n<ul data-sourcepos=\"84:3-86:0\">\n<li data-sourcepos=\"84:3-84:58\">\n<a href=\"https://www.npmjs.com/package/got\" rel=\"nofollow noopener\" target=\"_blank\">got</a> : http client</li>\n<li data-sourcepos=\"85:3-86:0\">\n<a href=\"https://www.npmjs.com/package/cheerio\" rel=\"nofollow noopener\" target=\"_blank\">cheerio</a> : html parser</li>\n</ul>\n</li>\n</ul>\n<div class=\"code-frame\" data-lang=\"js\" data-sourcepos=\"87:1-100:3\"><div class=\"highlight\"><pre><code>  <span class=\"c1\">// got で page を取得し、cheerio で解析 </span>\n  <span class=\"kd\">const</span> <span class=\"nx\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nf\">got</span><span class=\"p\">(</span><span class=\"nf\">gameUrl</span><span class=\"p\">(</span><span class=\"nx\">game</span><span class=\"p\">));</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">$</span> <span class=\"o\">=</span> <span class=\"nx\">cheerio</span><span class=\"p\">.</span><span class=\"nf\">load</span><span class=\"p\">(</span><span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// プレイ人数記載部分を解析し、key, value に格納 (ページによって記載方法が違うためとりあえず)</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">_players</span> <span class=\"o\">=</span> <span class=\"nf\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">table.productDetail--spec tr.productDetail--spec__player</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n  <span class=\"nx\">_players</span><span class=\"p\">.</span><span class=\"nf\">each</span><span class=\"p\">((</span><span class=\"nx\">i</span><span class=\"p\">,</span> <span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">players</span><span class=\"p\">.</span><span class=\"nf\">push</span><span class=\"p\">({</span>\n      <span class=\"na\">key</span><span class=\"p\">:</span> <span class=\"nf\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">th</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">e</span><span class=\"p\">).</span><span class=\"nf\">text</span><span class=\"p\">(),</span>\n      <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"nf\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">td</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">e</span><span class=\"p\">).</span><span class=\"nf\">text</span><span class=\"p\">()</span>\n    <span class=\"p\">});</span>\n  <span class=\"p\">});</span>\n</code></pre></div></div>\n<h2 data-sourcepos=\"102:1-102:41\">\n<span id=\"4人用ゲームの抽出--問題編2\" class=\"fragment\"></span><a href=\"#4%E4%BA%BA%E7%94%A8%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%AE%E6%8A%BD%E5%87%BA--%E5%95%8F%E9%A1%8C%E7%B7%A82\"><i class=\"fa fa-link\"></i></a>4人用ゲームの抽出 : 問題編2</h2>\n<p data-sourcepos=\"104:1-104:90\">驚くことに、プレイ人数にはとてもたくさんの種類がありました。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"106:1-154:3\"><div class=\"highlight\"><pre><code>1人\n2人\n1〜2人\n1〜3人\n2〜3人\n1〜4人\n2〜4人\n4人\n1〜5人\n2〜5人\n5人\n2〜6人\n1〜6人\n4〜6人\n2〜7人\n1〜8人\n2〜8人\n5〜8人\n4〜8人\n8人\n1〜9人\n2〜9人\n1〜10人\n2〜10人\n1〜12人\n2〜12人\n1〜14人\n2〜14人\n1〜15人\n4〜15人\n1〜16人\n1〜20人\n2〜20人\n1〜30人\n4〜32人\n1〜32人\n2〜35人\n1〜42人\n1〜55人\n1〜60人\n60人\n1〜64人\n1〜70人\n1〜99人\n1〜100人\n1〜200人\n1〜999人\n</code></pre></div></div>\n<h2 data-sourcepos=\"156:1-156:41\">\n<span id=\"4人用ゲームの抽出--解決編2\" class=\"fragment\"></span><a href=\"#4%E4%BA%BA%E7%94%A8%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%AE%E6%8A%BD%E5%87%BA--%E8%A7%A3%E6%B1%BA%E7%B7%A82\"><i class=\"fa fa-link\"></i></a>4人用ゲームの抽出 : 解決編2</h2>\n<p data-sourcepos=\"158:1-158:242\">厳密な4人用ではなくても4人以上で遊べればよいので、見落としなくすべてのソフトを確認したいですし、さらにはキーワードやタグなんかも指定して検索したくなってきました。</p>\n<p data-sourcepos=\"160:1-160:210\">検索結果にヒットしたゲームをすべて購入するわけにもいきません。検索結果をクリックしたら、eshop にいってそのまま詳細を見れたほうがいいでしょう。</p>\n<p data-sourcepos=\"162:1-162:71\">ということでそんな感じのUIを作ることにしました。</p>\n<p data-sourcepos=\"165:1-166:118\">(そんな感じのUI)<br>\n<a href=\"https://camo.qiitausercontent.com/1baf3ceb3ff01c8f9cb6ede9df9e385fed58a76f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38396666646535342d666430392d313765622d396136632d6638646163656237383834642e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F89ffde54-fd09-17eb-9a6c-f8daceb7884d.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=3c6cffdc690283a48f1ca22e1fe62f79\" alt=\"ss.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/89ffde54-fd09-17eb-9a6c-f8daceb7884d.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F89ffde54-fd09-17eb-9a6c-f8daceb7884d.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=cfe86268f5acf51c9cee96a3484f798d 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"168:1-169:122\">UI制作には Nuxt.js + Vuetify を利用しました。もはやローコードと言っていい程度のコード量で制作できました。<br>\n(Vue.js 単体でもよいのですが、Vuetify を使う設定が面倒だったので Nuxt.js を利用しました。)</p>\n<ul data-sourcepos=\"171:1-175:0\">\n<li data-sourcepos=\"171:1-175:0\">\n<a href=\"https://nuxtjs.org/\" rel=\"nofollow noopener\" target=\"_blank\">Nuxt.js</a>\n<ul data-sourcepos=\"172:3-175:0\">\n<li data-sourcepos=\"172:3-175:0\">\n<a href=\"https://vuetifyjs.com/ja/\" rel=\"nofollow noopener\" target=\"_blank\">Vuetify</a>\n<ul data-sourcepos=\"173:5-175:0\">\n<li data-sourcepos=\"173:5-173:69\"><a href=\"https://vuetifyjs.com/ja/components/data-tables/\" rel=\"nofollow noopener\" target=\"_blank\">Data tables</a></li>\n<li data-sourcepos=\"174:5-175:0\"><a href=\"https://vuetifyjs.com/ja/components/autocompletes/\" rel=\"nofollow noopener\" target=\"_blank\">Autocompletes</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"code-frame\" data-lang=\"vue\" data-sourcepos=\"176:1-410:3\"><div class=\"highlight\"><pre><code><span class=\"nt\">&lt;</span><span class=\"k\">template</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;div&gt;</span>\n    <span class=\"nt\">&lt;v-row&gt;</span>\n      <span class=\"nt\">&lt;v-col</span> <span class=\"na\">cols=</span><span class=\"s\">\"2\"</span> <span class=\"na\">class=</span><span class=\"s\">\"teal lighten-5\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;v-text-field</span>\n          <span class=\"na\">v-model=</span><span class=\"s\">\"searchTitle\"</span>\n          <span class=\"na\">label=</span><span class=\"s\">\"タイトル\"</span>\n          <span class=\"na\">prepend-icon=</span><span class=\"s\">\"mdi-magnify\"</span>\n          <span class=\"na\">hide-details</span>\n          <span class=\"na\">dense</span>\n        <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;v-autocomplete</span>\n          <span class=\"na\">v-model=</span><span class=\"s\">\"selectedMaker\"</span>\n          <span class=\"na\">:items=</span><span class=\"s\">\"makers\"</span>\n          <span class=\"na\">label=</span><span class=\"s\">\"メーカー\"</span>\n          <span class=\"na\">chips</span>\n          <span class=\"na\">small-chips</span>\n          <span class=\"na\">clearable</span>\n          <span class=\"na\">dense</span>\n          <span class=\"na\">class=</span><span class=\"s\">\"mt-8\"</span>\n        <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;v-autocomplete</span>\n          <span class=\"na\">v-model=</span><span class=\"s\">\"selectedCategories\"</span>\n          <span class=\"na\">:items=</span><span class=\"s\">\"categories\"</span>\n          <span class=\"na\">label=</span><span class=\"s\">\"カテゴリ\"</span>\n          <span class=\"na\">multiple</span>\n          <span class=\"na\">chips</span>\n          <span class=\"na\">small-chips</span>\n          <span class=\"na\">deletable-chips</span>\n          <span class=\"na\">clearable</span>\n          <span class=\"na\">dense</span>\n          <span class=\"na\">class=</span><span class=\"s\">\"mt-8\"</span>\n        <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;v-autocomplete</span>\n          <span class=\"na\">v-model=</span><span class=\"s\">\"selectedPlayers\"</span>\n          <span class=\"na\">:items=</span><span class=\"s\">\"players\"</span>\n          <span class=\"na\">label=</span><span class=\"s\">\"プレイ人数\"</span>\n          <span class=\"na\">multiple</span>\n          <span class=\"na\">chips</span>\n          <span class=\"na\">small-chips</span>\n          <span class=\"na\">deletable-chips</span>\n          <span class=\"na\">clearable</span>\n          <span class=\"na\">dense</span>\n          <span class=\"na\">class=</span><span class=\"s\">\"mt-8\"</span>\n        <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;v-select</span>\n          <span class=\"na\">v-model=</span><span class=\"s\">\"selectedMinPrice\"</span>\n          <span class=\"na\">:items=</span><span class=\"s\">\"PRICES\"</span>\n          <span class=\"na\">label=</span><span class=\"s\">\"価格(MIN)\"</span>\n          <span class=\"na\">clearable</span>\n          <span class=\"na\">dense</span>\n          <span class=\"na\">class=</span><span class=\"s\">\"mt-8\"</span>\n        <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;v-select</span>\n          <span class=\"na\">v-model=</span><span class=\"s\">\"selectedMaxPrice\"</span>\n          <span class=\"na\">:items=</span><span class=\"s\">\"PRICES\"</span>\n          <span class=\"na\">label=</span><span class=\"s\">\"価格(MAX)\"</span>\n          <span class=\"na\">clearable</span>\n          <span class=\"na\">dense</span>\n          <span class=\"na\">class=</span><span class=\"s\">\"mt-4\"</span>\n        <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/v-col&gt;</span>\n      <span class=\"nt\">&lt;v-col</span> <span class=\"na\">cols=</span><span class=\"s\">\"10\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;v-data-table</span>\n          <span class=\"na\">:headers=</span><span class=\"s\">\"gameHeaders\"</span>\n          <span class=\"na\">:items=</span><span class=\"s\">\"filteredGames\"</span>\n          <span class=\"na\">:footer-props=</span><span class=\"s\">\"</span>{\n            'items-per-page-options': [ 200 ]\n          }\"\n          :ites-per-page=\"200\"\n          height=\"calc(100vh - 192px)\"\n          fixed-header\n          dense\n        &gt;\n          <span class=\"nt\">&lt;template</span> <span class=\"na\">#</span><span class=\"err\">[`</span><span class=\"na\">item.TitleName</span><span class=\"err\">`</span><span class=\"na\">]=</span><span class=\"s\">\"</span>{ item }\"&gt;\n            <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"d-flex __clickable\"</span> <span class=\"err\">@</span><span class=\"na\">click=</span><span class=\"s\">\"onShowPage(item)\"</span><span class=\"nt\">&gt;</span>\n              <span class=\"nt\">&lt;v-img</span>\n                <span class=\"na\">:src=</span><span class=\"s\">\"`/images/eshop/games/$</span>{item.InitialCode}.jpg`\"\n                max-width=\"172\"\n              /&gt;\n              <span class=\"nt\">&lt;div&gt;</span>\n                <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"text-h6 pa-1\"</span><span class=\"nt\">&gt;</span>\n                  <span class=\"si\">{{</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">TitleName</span> <span class=\"si\">}}</span>\n                <span class=\"nt\">&lt;/div&gt;</span>\n                <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"mt-2\"</span><span class=\"nt\">&gt;</span>\n                  <span class=\"nt\">&lt;v-chip</span>\n                    <span class=\"na\">v-for=</span><span class=\"s\">\"(c, i) in item._categories\"</span>\n                    <span class=\"na\">:key=</span><span class=\"s\">\"i\"</span>\n                    <span class=\"na\">x-small</span>\n                    <span class=\"na\">class=</span><span class=\"s\">\"mx-1 mb-1\"</span>\n                    <span class=\"err\">@</span><span class=\"na\">click.stop=</span><span class=\"s\">\"onClickCategory(c)\"</span>\n                  <span class=\"nt\">&gt;</span>\n                    <span class=\"si\">{{</span> <span class=\"nx\">c</span> <span class=\"si\">}}</span>\n                  <span class=\"nt\">&lt;/v-chip&gt;</span>\n                <span class=\"nt\">&lt;/div&gt;</span>\n              <span class=\"nt\">&lt;/div&gt;</span>\n            <span class=\"nt\">&lt;/div&gt;</span>\n          <span class=\"nt\">&lt;/</span><span class=\"k\">template</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;</span><span class=\"k\">template</span> <span class=\"na\">#</span><span class=\"err\">[`</span><span class=\"na\">item._players</span><span class=\"err\">`</span><span class=\"na\">]=</span><span class=\"s\">\"{ item }\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;div</span>\n              <span class=\"na\">v-for=</span><span class=\"s\">\"(p, i) in item._players\"</span>\n              <span class=\"na\">:key=</span><span class=\"s\">\"i\"</span>\n              <span class=\"na\">class=</span><span class=\"s\">\"d-flex\"</span>\n            <span class=\"nt\">&gt;</span>\n              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"__players__key\"</span><span class=\"nt\">&gt;</span>\n                <span class=\"si\">{{</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">key</span> <span class=\"si\">}}</span>\n              <span class=\"nt\">&lt;/div&gt;</span>\n              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"__players__value\"</span><span class=\"nt\">&gt;</span>\n                <span class=\"si\">{{</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">value</span> <span class=\"si\">}}</span>\n              <span class=\"nt\">&lt;/div&gt;</span>\n            <span class=\"nt\">&lt;/div&gt;</span>\n          <span class=\"nt\">&lt;/</span><span class=\"k\">template</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;/v-data-table&gt;</span>\n      <span class=\"nt\">&lt;/v-col&gt;</span>\n    <span class=\"nt\">&lt;/v-row&gt;</span>\n  <span class=\"nt\">&lt;/div&gt;</span>\n<span class=\"nt\">&lt;/template&gt;</span>\n\n<span class=\"nt\">&lt;</span><span class=\"k\">script</span><span class=\"nt\">&gt;</span>\n<span class=\"k\">import</span> <span class=\"nx\">GAMES</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">~/assets/eshop/games.json</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"nx\">DETAILS</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">~/assets/eshop/index.js</span><span class=\"dl\">'</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">BASE_URL</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">https://store-jp.nintendo.com/list/software/</span><span class=\"dl\">'</span>\n\n<span class=\"c1\">// 最大プレイ人数を取得</span>\n<span class=\"kd\">function</span> <span class=\"nf\">maxPlayerCount</span> <span class=\"p\">(</span><span class=\"nx\">v</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">counts</span> <span class=\"o\">=</span> <span class=\"nx\">v</span><span class=\"p\">.</span><span class=\"nf\">replace</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">人</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">''</span><span class=\"p\">).</span><span class=\"nf\">split</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">〜</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nf\">map</span><span class=\"p\">(</span><span class=\"nx\">v</span> <span class=\"o\">=&gt;</span> <span class=\"nc\">Number</span><span class=\"p\">(</span><span class=\"nx\">v</span><span class=\"p\">)).</span><span class=\"nf\">filter</span><span class=\"p\">(</span><span class=\"nx\">v</span> <span class=\"o\">=&gt;</span> <span class=\"o\">!</span><span class=\"nf\">isNaN</span><span class=\"p\">(</span><span class=\"nx\">v</span><span class=\"p\">))</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">count</span> <span class=\"o\">=</span> <span class=\"nx\">counts</span><span class=\"p\">.</span><span class=\"nf\">reduce</span><span class=\"p\">((</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">v</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nf\">max</span><span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nc\">Number</span><span class=\"p\">(</span><span class=\"nx\">v</span><span class=\"p\">)),</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n  <span class=\"k\">return</span> <span class=\"nx\">count</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"p\">{</span>\n  <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">GameList</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">data</span><span class=\"p\">:</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">PRICES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">500</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">1000</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">1500</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">2000</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">3000</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">4000</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">5000</span><span class=\"dl\">'</span><span class=\"p\">]</span>\n\n    <span class=\"kd\">const</span> <span class=\"nx\">games</span> <span class=\"o\">=</span> <span class=\"nx\">GAMES</span>\n      <span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">((</span><span class=\"nx\">g</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"kd\">const</span> <span class=\"nx\">detail</span> <span class=\"o\">=</span> <span class=\"nx\">DETAILS</span><span class=\"p\">[</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">InitialCode</span><span class=\"p\">]</span>\n        <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">TitleName</span> <span class=\"o\">=</span> <span class=\"nc\">String</span><span class=\"p\">(</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">TitleName</span><span class=\"p\">)</span>\n        <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">_price</span> <span class=\"o\">=</span> <span class=\"nc\">Number</span><span class=\"p\">(</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">Price</span><span class=\"p\">.</span><span class=\"nf\">replace</span><span class=\"p\">(</span><span class=\"sr\">/</span><span class=\"se\">[^</span><span class=\"sr\">0-9a-z</span><span class=\"se\">]</span><span class=\"sr\">/gi</span><span class=\"p\">,</span> <span class=\"dl\">''</span><span class=\"p\">))</span>\n        <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">_categories</span> <span class=\"o\">=</span> <span class=\"nx\">detail</span><span class=\"p\">.</span><span class=\"nx\">categories</span>\n        <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">_players</span> <span class=\"o\">=</span> <span class=\"nx\">detail</span><span class=\"p\">.</span><span class=\"nx\">players</span>\n        <span class=\"k\">return</span> <span class=\"nx\">g</span>\n      <span class=\"p\">})</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">makers</span> <span class=\"o\">=</span> <span class=\"nx\">games</span><span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">(</span><span class=\"nx\">g</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">MakerName</span><span class=\"p\">).</span><span class=\"nf\">sort</span><span class=\"p\">()</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">categories</span> <span class=\"o\">=</span> <span class=\"nb\">Array</span><span class=\"p\">.</span><span class=\"k\">from</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nc\">Set</span><span class=\"p\">(</span><span class=\"nx\">games</span><span class=\"p\">.</span><span class=\"nf\">flatMap</span><span class=\"p\">(</span><span class=\"nx\">g</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">_categories</span><span class=\"p\">))).</span><span class=\"nf\">sort</span><span class=\"p\">()</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">players</span> <span class=\"o\">=</span> <span class=\"nb\">Array</span><span class=\"p\">.</span><span class=\"k\">from</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nc\">Set</span><span class=\"p\">(</span><span class=\"nx\">games</span><span class=\"p\">.</span><span class=\"nf\">flatMap</span><span class=\"p\">(</span><span class=\"nx\">g</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">_players</span><span class=\"p\">).</span><span class=\"nf\">map</span><span class=\"p\">(</span><span class=\"nx\">p</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"p\">))).</span><span class=\"nf\">sort</span><span class=\"p\">((</span><span class=\"nx\">v0</span><span class=\"p\">,</span> <span class=\"nx\">v1</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"c1\">// 最大プレイ人数順でソート</span>\n      <span class=\"k\">return</span> <span class=\"nf\">maxPlayerCount</span><span class=\"p\">(</span><span class=\"nx\">v0</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"nf\">maxPlayerCount</span><span class=\"p\">(</span><span class=\"nx\">v1</span><span class=\"p\">)</span>\n    <span class=\"p\">})</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n      <span class=\"nx\">PRICES</span><span class=\"p\">,</span>\n      <span class=\"nx\">games</span><span class=\"p\">,</span>\n      <span class=\"nx\">makers</span><span class=\"p\">,</span>\n      <span class=\"nx\">categories</span><span class=\"p\">,</span>\n      <span class=\"nx\">players</span><span class=\"p\">,</span>\n      <span class=\"na\">searchTitle</span><span class=\"p\">:</span> <span class=\"dl\">''</span><span class=\"p\">,</span>\n      <span class=\"na\">selectedMaker</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n      <span class=\"na\">selectedCategories</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n      <span class=\"na\">selectedPlayers</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n      <span class=\"na\">selectedMinPrice</span><span class=\"p\">:</span> <span class=\"dl\">''</span><span class=\"p\">,</span>\n      <span class=\"na\">selectedMaxPrice</span><span class=\"p\">:</span> <span class=\"dl\">''</span><span class=\"p\">,</span>\n      <span class=\"na\">selectedGame</span><span class=\"p\">:</span> <span class=\"kc\">null</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"na\">computed</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nf\">gameHeaders </span><span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span> <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">タイトル</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">TitleName</span><span class=\"dl\">'</span> <span class=\"p\">},</span>\n        <span class=\"p\">{</span> <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">メーカー</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">MakerName</span><span class=\"dl\">'</span> <span class=\"p\">},</span>\n        <span class=\"p\">{</span> <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">価格</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">_price</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"na\">align</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">end</span><span class=\"dl\">'</span> <span class=\"p\">},</span>\n        <span class=\"p\">{</span> <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">発売日</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SalesDate</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"na\">align</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">end</span><span class=\"dl\">'</span> <span class=\"p\">},</span>\n        <span class=\"p\">{</span> <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">プレイ人数</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">_players</span><span class=\"dl\">'</span> <span class=\"p\">}</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n    <span class=\"nf\">filteredGames </span><span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"kd\">let</span> <span class=\"nx\">games</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">games</span>\n\n      <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedMaker</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">games</span> <span class=\"o\">=</span> <span class=\"nx\">games</span><span class=\"p\">.</span><span class=\"nf\">filter</span><span class=\"p\">(</span><span class=\"nx\">g</span> <span class=\"o\">=&gt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedMaker</span> <span class=\"o\">===</span> <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">MakerName</span><span class=\"p\">)</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedCategories</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">games</span> <span class=\"o\">=</span> <span class=\"nx\">games</span><span class=\"p\">.</span><span class=\"nf\">filter</span><span class=\"p\">(</span><span class=\"nx\">g</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">_categories</span><span class=\"p\">.</span><span class=\"nf\">some</span><span class=\"p\">(</span><span class=\"nx\">c</span> <span class=\"o\">=&gt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedCategories</span><span class=\"p\">.</span><span class=\"nf\">includes</span><span class=\"p\">(</span><span class=\"nx\">c</span><span class=\"p\">)))</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedPlayers</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">games</span> <span class=\"o\">=</span> <span class=\"nx\">games</span><span class=\"p\">.</span><span class=\"nf\">filter</span><span class=\"p\">(</span><span class=\"nx\">g</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">_players</span><span class=\"p\">.</span><span class=\"nf\">some</span><span class=\"p\">(</span><span class=\"nx\">p</span> <span class=\"o\">=&gt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedPlayers</span><span class=\"p\">.</span><span class=\"nf\">includes</span><span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"p\">)))</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedMinPrice</span> <span class=\"o\">!==</span> <span class=\"dl\">''</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kd\">const</span> <span class=\"nx\">price</span> <span class=\"o\">=</span> <span class=\"nc\">Number</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedMinPrice</span><span class=\"p\">)</span>\n        <span class=\"nx\">games</span> <span class=\"o\">=</span> <span class=\"nx\">games</span><span class=\"p\">.</span><span class=\"nf\">filter</span><span class=\"p\">(</span><span class=\"nx\">g</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">_price</span> <span class=\"o\">&gt;=</span> <span class=\"nx\">price</span><span class=\"p\">)</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedMaxPrice</span> <span class=\"o\">!==</span> <span class=\"dl\">''</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kd\">const</span> <span class=\"nx\">price</span> <span class=\"o\">=</span> <span class=\"nc\">Number</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedMaxPrice</span><span class=\"p\">)</span>\n        <span class=\"nx\">games</span> <span class=\"o\">=</span> <span class=\"nx\">games</span><span class=\"p\">.</span><span class=\"nx\">filter</span><span class=\"p\">(</span><span class=\"nx\">g</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">_price</span> <span class=\"o\">&lt;=</span> <span class=\"nx\">price</span><span class=\"p\">)</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">searchTitle</span> <span class=\"o\">!==</span> <span class=\"dl\">''</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">games</span> <span class=\"o\">=</span> <span class=\"nx\">games</span><span class=\"p\">.</span><span class=\"nf\">filter</span><span class=\"p\">(</span><span class=\"nx\">g</span> <span class=\"o\">=&gt;</span> <span class=\"o\">~</span><span class=\"nx\">g</span><span class=\"p\">.</span><span class=\"nx\">TitleName</span><span class=\"p\">.</span><span class=\"nf\">indexOf</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">searchTitle</span><span class=\"p\">))</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">return</span> <span class=\"nx\">games</span>\n    <span class=\"p\">},</span>\n    <span class=\"nf\">showPageUrl </span><span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedGame</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"dl\">''</span>\n      <span class=\"p\">}</span>\n      <span class=\"k\">return</span> <span class=\"nx\">BASE_URL</span> <span class=\"o\">+</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedGame</span><span class=\"p\">.</span><span class=\"nx\">LinkURL</span><span class=\"p\">.</span><span class=\"nf\">replace</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">/titles/</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">''</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"dl\">'</span><span class=\"s1\">.html</span><span class=\"dl\">'</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"na\">methods</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nf\">onShowPage </span><span class=\"p\">(</span><span class=\"nx\">game</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedGame</span> <span class=\"o\">=</span> <span class=\"nx\">game</span>\n      <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nf\">open</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">showPageUrl</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">_blank</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n    <span class=\"p\">},</span>\n    <span class=\"nf\">onClickCategory </span><span class=\"p\">(</span><span class=\"nx\">c</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedCategories</span><span class=\"p\">.</span><span class=\"nf\">includes</span><span class=\"p\">(</span><span class=\"nx\">c</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedCategories</span><span class=\"p\">.</span><span class=\"nf\">push</span><span class=\"p\">(</span><span class=\"nx\">c</span><span class=\"p\">)</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"nt\">&lt;/</span><span class=\"k\">script</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;</span><span class=\"k\">style</span> <span class=\"na\">lang=</span><span class=\"s\">\"scss\"</span> <span class=\"na\">scoped</span><span class=\"nt\">&gt;</span>\n<span class=\"nc\">.__clickable</span> <span class=\"p\">{</span>\n  <span class=\"nl\">cursor</span><span class=\"p\">:</span> <span class=\"nb\">pointer</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"nc\">.__players__key</span> <span class=\"p\">{</span>\n  <span class=\"nl\">width</span><span class=\"p\">:</span> <span class=\"m\">144px</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"nc\">.__players__value</span> <span class=\"p\">{</span>\n  <span class=\"nl\">width</span><span class=\"p\">:</span> <span class=\"m\">60px</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"nt\">&lt;/</span><span class=\"k\">style</span><span class=\"nt\">&gt;</span>\n\n</code></pre></div></div>\n<h2 data-sourcepos=\"413:1-413:36\">\n<span id=\"サムネイル画像について\" class=\"fragment\"></span><a href=\"#%E3%82%B5%E3%83%A0%E3%83%8D%E3%82%A4%E3%83%AB%E7%94%BB%E5%83%8F%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>サムネイル画像について</h2>\n<p data-sourcepos=\"414:1-415:174\">xml に含まれている <code>ScreenshotImgURL</code> をそのまま使うことはできません。<br>\n画像への直リンクは禁止されていますし、サムネで表示するには大きすぎる画像なので、リサイズして保存することにしました。</p>\n<ul data-sourcepos=\"417:1-420:0\">\n<li data-sourcepos=\"417:1-420:0\">画像を取得してリサイズして保存\n<ul data-sourcepos=\"418:3-420:0\">\n<li data-sourcepos=\"418:3-418:62\">\n<a href=\"https://www.npmjs.com/package/axios\" rel=\"nofollow noopener\" target=\"_blank\">axios</a> : http client</li>\n<li data-sourcepos=\"419:3-420:0\">\n<a href=\"https://www.npmjs.com/package/sharp\" rel=\"nofollow noopener\" target=\"_blank\">sharp</a> : resize</li>\n</ul>\n</li>\n</ul>\n<div class=\"code-frame\" data-lang=\"js\" data-sourcepos=\"421:1-429:3\"><div class=\"highlight\"><pre><code>  <span class=\"c1\">// screen shot を取得してリサイズして保存</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">res</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">axios</span><span class=\"p\">.</span><span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"nx\">game</span><span class=\"p\">.</span><span class=\"nx\">ScreenshotImgURL</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">responseType</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">arraybuffer</span><span class=\"dl\">'</span> <span class=\"p\">});</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">thumbnail</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nf\">sharp</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nf\">resize</span><span class=\"p\">(</span><span class=\"mi\">320</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nf\">jpeg</span><span class=\"p\">()</span>\n    <span class=\"p\">.</span><span class=\"nf\">toBuffer</span><span class=\"p\">();</span>\n  <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nf\">writeFileSync</span><span class=\"p\">(</span><span class=\"nx\">file</span><span class=\"p\">,</span> <span class=\"nx\">thumbnail</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">binary</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n</code></pre></div></div>\n<h2 data-sourcepos=\"431:1-431:12\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n<p data-sourcepos=\"432:1-434:114\">とても短いコードで4人用ゲームを探せる様になりました。<br>\n個人で利用できればと思いましたが、他の方にも需要あるかと思い本稿を起稿しました。<br>\n年末年始のゲームライフ・プログラミングライフの充実の一助となれれば幸いです。</p>\n<p data-sourcepos=\"436:1-437:138\">また、switch は素晴らしいインディーズゲームがたくさん出ているプラットフォームだと思います。<br>\nこれらのゲームが人目に触れず埋もれるのはもったいないので色々見てもらえたらいいなと思います。</p>\n<h2 data-sourcepos=\"439:1-439:12\">\n<span id=\"おまけ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91\"><i class=\"fa fa-link\"></i></a>おまけ</h2>\n<p data-sourcepos=\"440:1-442:96\">また、本稿のプログラムは github にプログラム学習リソースとして公開しています。<br>\nよろしければ合わせてご参照ください。<br>\n※本稿のプログラムは、あくまで個人で楽しむ範囲でご利用ください。</p>\n<p data-sourcepos=\"444:1-444:127\"><a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">SESビジネスプログラマのためのプログラミング練習帳</a>/03_switch_eshop</p>\n",
    "body": "## はじめに\n\n本日(12/25(日))はクリスマスの休日ですが皆様いかがお過ごしでしょうか？\nコロナ禍で皆で集まるのもまだまだ難しい状況かとは思いますが、年末年始の休暇に向けて**多人数で遊べるゲーム**がほしくないですか？\n\n**ほしいですよね！？**\n\nそこで以下のようなキーワードでググってみることにしました。\n\n- [switch 4人プレイ](https://www.google.com/search?q=switch+4人プレイ)\n- [switch パーティ](https://www.google.com/search?q=switch+パーティ)\n- [switch 協力プレイ](https://www.google.com/search?q=switch+協力プレイ)\n- [switch co-op](https://www.google.com/search?q=switch+co-op)\n\nが、検索結果には以下の様な課題があり、どうにも欲しいものを探すことができませんでした。\n\n- 見たことがあるゲームしか出てこない\n- 4人用ではないものも検索される\n\n仕方がないので初心にかえって任天堂の公式サイトを見てみるも、やはり4人用のゲームを探す方法は分かりませんでした。\n\n- [My Nintendo Store](https://store-jp.nintendo.com/software/)\n\n\nエンジニアとしてはないものは作ればいいのでは？ということで何か作れないか考えることにしました。\n\n\n## ゲーム一覧の取得\n\nゲームの一覧が取得できれば、そこから4人用のゲームを探すことはできそうです。\nということで、APIがないか探してみることにしました。\n\n- [グーグル検索：nintendo eshop api](https://www.google.com/search?q=nintendo+eshop+api)\n\n何かいろいろヒットしますが、公式のAPIはなさそうです。\nただ、xml 形式で公開しているデータはありそうでした。\n\n- [switch ゲーム一覧(xml)](https://www.nintendo.co.jp/data/software/xml/switch.xml)\n\nこれを見ると**5872本**ものゲームがリリース(予定含む)されていることが分かります。(2022/12/25時点)\n宝の山にしか見えないですね！\n\nxml ではなく、json で取得したかったので、api を利用することにしました。\n- APIでゲーム一覧取得\n  - [nintendo-switch-eshop](https://www.npmjs.com/package/nintendo-switch-eshop)\n\n```js\n// ゲーム一覧取得\nasync function getGames() {\n  const games = await getGamesJapan();\n  fs.writeFileSync(OUT_FOLDER + 'games.json', JSON.stringify(games), 'utf-8');\n  return games;\n}\n```\n\n## 4人用ゲームの抽出 : 問題編\n\n残念なことに、取得できたゲーム一覧の情報には、プレイ人数が含まれていません。\n公式のAPIは存在しないため、プレイ人数をきれいな形で取得するのは難しそうです。\n\nタイトルは分かったので、5872回『商品をさがす』から検索して、ページをチクチク開いて確認すれば目的は達成できそうです。\n\nただ、楽しい年末年始のためとはいえエンジニアがやる作業ではなさそうです。\n\nもはやこれまででしょうか…\n\n\n## 4人用ゲームの抽出 : 解決編1\n\nよくよく見るとという項目があります。\n```\n<LinkURL>/titles/{何かのID}</LinkURL>\n````\n\n一方、My Nintendo Store のURLは以下の様な形式です。\nこのページには「プレイ人数」という項目があります。\n```\nhttps://store-jp.nintendo.com/list/software/{何かのID}.html\n```\n\nページをザクザク開いて、その部分を抽出できれば4人用ゲームだけ抽出することができそうです。\n\n- APIで取得できないデータはサイトをスクレイピングして取得\n  - [got](https://www.npmjs.com/package/got) : http client\n  - [cheerio](https://www.npmjs.com/package/cheerio) : html parser\n\n```js\n  // got で page を取得し、cheerio で解析 \n  const response = await got(gameUrl(game));\n  const $ = cheerio.load(response.body);\n\n  // プレイ人数記載部分を解析し、key, value に格納 (ページによって記載方法が違うためとりあえず)\n  const _players = $('table.productDetail--spec tr.productDetail--spec__player')\n  _players.each((i, e) => {\n    players.push({\n      key: $('th', e).text(),\n      value: $('td', e).text()\n    });\n  });\n```\n\n## 4人用ゲームの抽出 : 問題編2\n\n驚くことに、プレイ人数にはとてもたくさんの種類がありました。\n\n```\n1人\n2人\n1〜2人\n1〜3人\n2〜3人\n1〜4人\n2〜4人\n4人\n1〜5人\n2〜5人\n5人\n2〜6人\n1〜6人\n4〜6人\n2〜7人\n1〜8人\n2〜8人\n5〜8人\n4〜8人\n8人\n1〜9人\n2〜9人\n1〜10人\n2〜10人\n1〜12人\n2〜12人\n1〜14人\n2〜14人\n1〜15人\n4〜15人\n1〜16人\n1〜20人\n2〜20人\n1〜30人\n4〜32人\n1〜32人\n2〜35人\n1〜42人\n1〜55人\n1〜60人\n60人\n1〜64人\n1〜70人\n1〜99人\n1〜100人\n1〜200人\n1〜999人\n```\n\n## 4人用ゲームの抽出 : 解決編2\n\n厳密な4人用ではなくても4人以上で遊べればよいので、見落としなくすべてのソフトを確認したいですし、さらにはキーワードやタグなんかも指定して検索したくなってきました。\n\n検索結果にヒットしたゲームをすべて購入するわけにもいきません。検索結果をクリックしたら、eshop にいってそのまま詳細を見れたほうがいいでしょう。\n\nということでそんな感じのUIを作ることにしました。\n\n\n(そんな感じのUI)\n![ss.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/89ffde54-fd09-17eb-9a6c-f8daceb7884d.png)\n\nUI制作には Nuxt.js + Vuetify を利用しました。もはやローコードと言っていい程度のコード量で制作できました。\n(Vue.js 単体でもよいのですが、Vuetify を使う設定が面倒だったので Nuxt.js を利用しました。)\n\n- [Nuxt.js](https://nuxtjs.org/)\n  - [Vuetify](https://vuetifyjs.com/ja/)\n    - [Data tables](https://vuetifyjs.com/ja/components/data-tables/)\n    - [Autocompletes](https://vuetifyjs.com/ja/components/autocompletes/)\n\n```vue\n<template>\n  <div>\n    <v-row>\n      <v-col cols=\"2\" class=\"teal lighten-5\">\n        <v-text-field\n          v-model=\"searchTitle\"\n          label=\"タイトル\"\n          prepend-icon=\"mdi-magnify\"\n          hide-details\n          dense\n        />\n        <v-autocomplete\n          v-model=\"selectedMaker\"\n          :items=\"makers\"\n          label=\"メーカー\"\n          chips\n          small-chips\n          clearable\n          dense\n          class=\"mt-8\"\n        />\n        <v-autocomplete\n          v-model=\"selectedCategories\"\n          :items=\"categories\"\n          label=\"カテゴリ\"\n          multiple\n          chips\n          small-chips\n          deletable-chips\n          clearable\n          dense\n          class=\"mt-8\"\n        />\n        <v-autocomplete\n          v-model=\"selectedPlayers\"\n          :items=\"players\"\n          label=\"プレイ人数\"\n          multiple\n          chips\n          small-chips\n          deletable-chips\n          clearable\n          dense\n          class=\"mt-8\"\n        />\n        <v-select\n          v-model=\"selectedMinPrice\"\n          :items=\"PRICES\"\n          label=\"価格(MIN)\"\n          clearable\n          dense\n          class=\"mt-8\"\n        />\n        <v-select\n          v-model=\"selectedMaxPrice\"\n          :items=\"PRICES\"\n          label=\"価格(MAX)\"\n          clearable\n          dense\n          class=\"mt-4\"\n        />\n      </v-col>\n      <v-col cols=\"10\">\n        <v-data-table\n          :headers=\"gameHeaders\"\n          :items=\"filteredGames\"\n          :footer-props=\"{\n            'items-per-page-options': [ 200 ]\n          }\"\n          :ites-per-page=\"200\"\n          height=\"calc(100vh - 192px)\"\n          fixed-header\n          dense\n        >\n          <template #[`item.TitleName`]=\"{ item }\">\n            <div class=\"d-flex __clickable\" @click=\"onShowPage(item)\">\n              <v-img\n                :src=\"`/images/eshop/games/${item.InitialCode}.jpg`\"\n                max-width=\"172\"\n              />\n              <div>\n                <div class=\"text-h6 pa-1\">\n                  {{ item.TitleName }}\n                </div>\n                <div class=\"mt-2\">\n                  <v-chip\n                    v-for=\"(c, i) in item._categories\"\n                    :key=\"i\"\n                    x-small\n                    class=\"mx-1 mb-1\"\n                    @click.stop=\"onClickCategory(c)\"\n                  >\n                    {{ c }}\n                  </v-chip>\n                </div>\n              </div>\n            </div>\n          </template>\n          <template #[`item._players`]=\"{ item }\">\n            <div\n              v-for=\"(p, i) in item._players\"\n              :key=\"i\"\n              class=\"d-flex\"\n            >\n              <div class=\"__players__key\">\n                {{ p.key }}\n              </div>\n              <div class=\"__players__value\">\n                {{ p.value }}\n              </div>\n            </div>\n          </template>\n        </v-data-table>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport GAMES from '~/assets/eshop/games.json'\nimport DETAILS from '~/assets/eshop/index.js'\n\nconst BASE_URL = 'https://store-jp.nintendo.com/list/software/'\n\n// 最大プレイ人数を取得\nfunction maxPlayerCount (v) {\n  const counts = v.replace('人', '').split('〜').map(v => Number(v)).filter(v => !isNaN(v))\n  const count = counts.reduce((a, v) => Math.max(a, Number(v)), 0)\n  return count\n}\n\nexport default {\n  name: 'GameList',\n  data: () => {\n    const PRICES = ['500', '1000', '1500', '2000', '3000', '4000', '5000']\n\n    const games = GAMES\n      .map((g) => {\n        const detail = DETAILS[g.InitialCode]\n        g.TitleName = String(g.TitleName)\n        g._price = Number(g.Price.replace(/[^0-9a-z]/gi, ''))\n        g._categories = detail.categories\n        g._players = detail.players\n        return g\n      })\n    const makers = games.map(g => g.MakerName).sort()\n    const categories = Array.from(new Set(games.flatMap(g => g._categories))).sort()\n    const players = Array.from(new Set(games.flatMap(g => g._players).map(p => p.value))).sort((v0, v1) => {\n      // 最大プレイ人数順でソート\n      return maxPlayerCount(v0) - maxPlayerCount(v1)\n    })\n    return {\n      PRICES,\n      games,\n      makers,\n      categories,\n      players,\n      searchTitle: '',\n      selectedMaker: null,\n      selectedCategories: [],\n      selectedPlayers: [],\n      selectedMinPrice: '',\n      selectedMaxPrice: '',\n      selectedGame: null\n    }\n  },\n  computed: {\n    gameHeaders () {\n      return [\n        { text: 'タイトル', value: 'TitleName' },\n        { text: 'メーカー', value: 'MakerName' },\n        { text: '価格', value: '_price', align: 'end' },\n        { text: '発売日', value: 'SalesDate', align: 'end' },\n        { text: 'プレイ人数', value: '_players' }\n      ]\n    },\n    filteredGames () {\n      let games = this.games\n\n      if (this.selectedMaker) {\n        games = games.filter(g => this.selectedMaker === g.MakerName)\n      }\n      if (this.selectedCategories.length > 0) {\n        games = games.filter(g => g._categories.some(c => this.selectedCategories.includes(c)))\n      }\n      if (this.selectedPlayers.length > 0) {\n        games = games.filter(g => g._players.some(p => this.selectedPlayers.includes(p.value)))\n      }\n      if (this.selectedMinPrice !== '') {\n        const price = Number(this.selectedMinPrice)\n        games = games.filter(g => g._price >= price)\n      }\n      if (this.selectedMaxPrice !== '') {\n        const price = Number(this.selectedMaxPrice)\n        games = games.filter(g => g._price <= price)\n      }\n      if (this.searchTitle !== '') {\n        games = games.filter(g => ~g.TitleName.indexOf(this.searchTitle))\n      }\n      return games\n    },\n    showPageUrl () {\n      if (!this.selectedGame) {\n        return ''\n      }\n      return BASE_URL + this.selectedGame.LinkURL.replace('/titles/', '') + '.html'\n    }\n  },\n  methods: {\n    onShowPage (game) {\n      this.selectedGame = game\n      window.open(this.showPageUrl, '_blank')\n    },\n    onClickCategory (c) {\n      if (!this.selectedCategories.includes(c)) {\n        this.selectedCategories.push(c)\n      }\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.__clickable {\n  cursor: pointer;\n}\n.__players__key {\n  width: 144px;\n}\n.__players__value {\n  width: 60px;\n}\n</style>\n\n```\n\n\n## サムネイル画像について\nxml に含まれている `ScreenshotImgURL` をそのまま使うことはできません。\n画像への直リンクは禁止されていますし、サムネで表示するには大きすぎる画像なので、リサイズして保存することにしました。\n\n- 画像を取得してリサイズして保存\n  - [axios](https://www.npmjs.com/package/axios) : http client\n  - [sharp](https://www.npmjs.com/package/sharp) : resize\n\n```js\n  // screen shot を取得してリサイズして保存\n  const res = await axios.get(game.ScreenshotImgURL, { responseType: 'arraybuffer' });\n  const thumbnail = await sharp(res.data)\n    .resize(320)\n    .jpeg()\n    .toBuffer();\n  fs.writeFileSync(file, thumbnail, 'binary');\n```\n\n## まとめ\nとても短いコードで4人用ゲームを探せる様になりました。\n個人で利用できればと思いましたが、他の方にも需要あるかと思い本稿を起稿しました。\n年末年始のゲームライフ・プログラミングライフの充実の一助となれれば幸いです。\n\nまた、switch は素晴らしいインディーズゲームがたくさん出ているプラットフォームだと思います。\nこれらのゲームが人目に触れず埋もれるのはもったいないので色々見てもらえたらいいなと思います。\n\n## おまけ\nまた、本稿のプログラムは github にプログラム学習リソースとして公開しています。\nよろしければ合わせてご参照ください。\n※本稿のプログラムは、あくまで個人で楽しむ範囲でご利用ください。\n\n[SESビジネスプログラマのためのプログラミング練習帳](https://github.com/kaku3/workbooks)/03_switch_eshop \n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-12-25T16:36:49+09:00",
    "group": null,
    "id": "71e6ad62deff95738251",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "Vue.js",
        "versions": []
      },
      {
        "name": "個人開発",
        "versions": []
      },
      {
        "name": "Vuetify",
        "versions": []
      },
      {
        "name": "Nuxt",
        "versions": []
      }
    ],
    "title": "年末年始に向けてスイッチで４人で遊べるゲームがほしい話",
    "updated_at": "2022-12-25T21:45:23+09:00",
    "url": "https://qiita.com/kaku3/items/71e6ad62deff95738251",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1595,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:18\">\n<span id=\"プロローグ\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%83%AD%E3%83%BC%E3%82%B0\"><i class=\"fa fa-link\"></i></a>プロローグ</h2>\n<p data-sourcepos=\"3:1-5:100\">営業A「いい感じのIT人材いないっすね。」<br>\n営業B「30代ぐらいの現場経験が豊富でリーダできるやつほしいよね。」<br>\n営業A「そんなやつは、みんな条件がいいところに引っ張られてるだろ？」</p>\n<p data-sourcepos=\"7:1-8:70\">営業A<br>\n(…まてよ？…こんな話、10年以上していないか…？)</p>\n<p data-sourcepos=\"10:1-10:349\">…IT業界の登場人物がサザエさんやポケモンのサトシの様に年を取らないなら、この仮説は合っている可能性もあるだろう。だが、IT業界に従事している人々は<strong>年を取を取っている</strong>。DXやらなにやらで必要な人材の数が増えているにしても、何かがおかしい。</p>\n<p data-sourcepos=\"12:1-13:82\">「これは調査する必要がありそうだな。」<br>\nそうつぶやくと営業Aはパソコンに向かってググりはじめた。</p>\n<h2 data-sourcepos=\"16:1-16:32\">\n<span id=\"it人材年齢分布の推移\" class=\"fragment\"></span><a href=\"#it%E4%BA%BA%E6%9D%90%E5%B9%B4%E9%BD%A2%E5%88%86%E5%B8%83%E3%81%AE%E6%8E%A8%E7%A7%BB\"><i class=\"fa fa-link\"></i></a>IT人材年齢分布の推移</h2>\n<p data-sourcepos=\"18:1-19:76\">営業A「クソ…悪い予感が的中したか」<br>\n営業Aは経産省のレポートを眺めながらそうつぶやいた。</p>\n<p data-sourcepos=\"21:1-21:148\"><a href=\"https://camo.qiitausercontent.com/d0d34fe3c7a470a67fa9c2394f965e9884467b15/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f33363438646633332d396562382d343431302d613066332d6430613332336438666531342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F3648df33-9eb8-4410-a0f3-d0a323d8fe14.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=a1e7eb03b04064a6315d9fb8d45f5ce2\" alt=\"IT人材の年齢分布の推移.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/3648df33-9eb8-4410-a0f3-d0a323d8fe14.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F3648df33-9eb8-4410-a0f3-d0a323d8fe14.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=386b9ba13f9202158b06525dd0435ca2 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"23:1-23:130\">出典: 経済産業省 <a href=\"https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf\" rel=\"nofollow noopener\" target=\"_blank\">－ IT 人材需給に関する調査 －</a></p>\n<p data-sourcepos=\"25:1-26:146\">グラフの見方はおそらくこうだろう。<br>\n順当に推移しているならば、2010年や2015年の25歳の割合が、2015年や2020年の30歳の割合におよそ移動するはず。</p>\n<p data-sourcepos=\"28:1-28:253\">ところがグラフを見ると、2010年から2020年で、25 - 29歳と、30 - 34歳の推移の仕方に大きな違いがあり、25- 29歳が微減に対して、30 -34 歳は2010年から2020年にかけて半減しているじゃあないか。</p>\n<p data-sourcepos=\"30:1-30:171\">これは条件がいいところに引っ張られていると考えるより、どこへともなく消えていると考える方が自然なんじゃないのか…？</p>\n<h2 data-sourcepos=\"33:1-33:44\">\n<span id=\"プログラマー35歳定年説再\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%83%BC35%E6%AD%B3%E5%AE%9A%E5%B9%B4%E8%AA%AC%E5%86%8D\"><i class=\"fa fa-link\"></i></a>プログラマー35歳定年説（再）</h2>\n<p data-sourcepos=\"35:1-35:58\">営業A「こんな未来予想図になるのか…？」</p>\n<p data-sourcepos=\"37:1-37:228\">グラフの2025年と2030年の推計は予測値とある。ITスクールや商材ビジネスの広告が世に溢れ、未経験エンジニアも大歓迎だ。それなら確かにIT人材は増えるかもしれない。</p>\n<p data-sourcepos=\"39:1-39:247\">それにしても、20代は横ばいに対して、30代が増加傾向になるだろうか。何らかの理由で半減する程離脱しているのに、誰かに数ヶ月教えてもらった技術を片手に参入するのだろうか。</p>\n<p data-sourcepos=\"41:1-41:227\">30歳を超えた時点で仕事の質が変わる、それまでの仕事の仕方が通用しなくなる、新規技術が習得できなくなるなど理由で離脱する、というグラフじゃないのかこれは？</p>\n<p data-sourcepos=\"43:1-43:83\">『プログラマー35歳定年説』は都市伝説じゃなかったのか…？</p>\n<h2 data-sourcepos=\"46:1-46:57\">\n<span id=\"プレイヤーからプレイングマネージャへ\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AC%E3%82%A4%E3%83%A4%E3%83%BC%E3%81%8B%E3%82%89%E3%83%97%E3%83%AC%E3%82%A4%E3%83%B3%E3%82%B0%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%A3%E3%81%B8\"><i class=\"fa fa-link\"></i></a>プレイヤーからプレイングマネージャへ</h2>\n<p data-sourcepos=\"48:1-48:58\">営業A「そんな冗談は思考を鈍らせるな…」</p>\n<p data-sourcepos=\"50:1-50:146\">『プログラマー35歳定年説』の邪念を払うかのように大きく首を振ったところ、新たな仮説が頭をよぎった。</p>\n<p data-sourcepos=\"52:1-52:33\">「そうか…プレマネか」</p>\n<p data-sourcepos=\"54:1-54:276\">SESの人月労働者は時給労働者だ。単位時間内でどんなに素晴らしいコードを書いても顧客からもらえるお金は変わらない。顧客からもらえるお金を増やそうと思ったら、雇ってもらう人を増やすしかない。</p>\n<p data-sourcepos=\"56:1-56:337\">1人月分のアウトプットを出せるか分からない新人をつけられて、自分と合わせて2人月分のアウトプットを出さなければいけなくなる。会社からリーダーとかいうキラキラした言葉で圧をかけられはじめる年齢が30歳ぐらいからと考えると辻褄が合う。</p>\n<p data-sourcepos=\"58:1-58:158\">PGとしての仕事も覚えて、だいたい作業見積もりもできるようになり定時退社余裕となった矢先に、未知との遭遇だ。</p>\n<p data-sourcepos=\"60:1-60:497\">プレマネの業務は、PG能力はベースとしてもちろん必要な上に、それ以外の能力も多く要求される。プレイヤーではなくプレイングマネージャにある日突然させられる。その準備がまったくできていないならば、昨日までは自分の仕事が完璧にできていたのに、今日からは全くできない。何のサポートもなく責任だけは増えるリーダー。離脱してしまうのは自然だろう。</p>\n<h2 data-sourcepos=\"63:1-63:15\">\n<span id=\"火消し屋\" class=\"fragment\"></span><a href=\"#%E7%81%AB%E6%B6%88%E3%81%97%E5%B1%8B\"><i class=\"fa fa-link\"></i></a>火消し屋</h2>\n<p data-sourcepos=\"65:1-65:60\">グラフから読み取れることがもう一つある。</p>\n<p data-sourcepos=\"67:1-68:357\">少し前であれば、40代、50代のエンジニアは書類の時点で敬遠されがちだった。<br>\nところが、30代は離脱してしまい炎上案件を鎮火できるのが40代以上だけとなると、40代からでもしばらくは仕事はあることになる。その人々が一斉に定年を迎えると火消しができなくなるかもしれないが、それまでに炎上プロジェクトはなくなっているのだろうか。</p>\n<h2 data-sourcepos=\"71:1-71:18\">\n<span id=\"エピローグ\" class=\"fragment\"></span><a href=\"#%E3%82%A8%E3%83%94%E3%83%AD%E3%83%BC%E3%82%B0\"><i class=\"fa fa-link\"></i></a>エピローグ</h2>\n<p data-sourcepos=\"73:1-74:93\">IT人材不足なのは間違いない。<br>\n未経験30代だろうと、40代だろうとIT業界を目指す人はウエルカムだ。</p>\n<p data-sourcepos=\"76:1-76:97\">以下のような業務ができるのであれば営業Aに声をかけるといいだろう。</p>\n<ul data-sourcepos=\"78:1-85:0\">\n<li data-sourcepos=\"78:1-78:35\">顧客から要望ヒアリング</li>\n<li data-sourcepos=\"79:1-79:32\">要件・仕様整理・調整</li>\n<li data-sourcepos=\"80:1-80:17\">仕様書作成</li>\n<li data-sourcepos=\"81:1-81:59\">タスク分割・スケジュール作成・人員割当</li>\n<li data-sourcepos=\"82:1-82:29\">指示出し・進捗確認</li>\n<li data-sourcepos=\"83:1-83:17\">開発・試験</li>\n<li data-sourcepos=\"84:1-85:0\">保守</li>\n</ul>\n<p data-sourcepos=\"86:1-86:288\">求人でよく見かける「コミュニケーション能力」をより明確に書くと「顧客の要望を理解・整理して現場の開発者が作業できるように落とし込んで口頭および文書でやりとり」できる能力ということになるだろう。</p>\n<p data-sourcepos=\"88:1-88:179\">「リモワで楽しくキーボードだけを叩いて高収入ゲットの案件ばかりならIT人材が不足などしないはずだが・・・難しいものだな。」</p>\n<p data-sourcepos=\"90:1-90:58\">そうつぶやいて営業Aはパソコンを閉じた。</p>\n<h2 data-sourcepos=\"93:1-93:13\">\n<span id=\"おまけ1\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%911\"><i class=\"fa fa-link\"></i></a>おまけ1</h2>\n<p data-sourcepos=\"95:1-95:25\">営業A短編シリーズ</p>\n<p data-sourcepos=\"97:1-97:50\"><iframe id=\"qiita-embed-content__40acd5d49ff932a76caabdeab18f11da\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__40acd5d49ff932a76caabdeab18f11da\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F3378ea55b1240d7360a1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h2 data-sourcepos=\"100:1-100:13\">\n<span id=\"おまけ2\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%912\"><i class=\"fa fa-link\"></i></a>おまけ2</h2>\n<p data-sourcepos=\"102:1-104:83\">IT人材不足を憂いて、学習用の資料をgitで<strong>無料</strong>公開してます(不定期更新)。<br>\nよろしければご利用ください。<br>\n<a href=\"https://github.com/kaku3/workbooks\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのためのお仕事問題集</a></p>\n",
    "body": "## プロローグ\n\n営業A「いい感じのIT人材いないっすね。」\n営業B「30代ぐらいの現場経験が豊富でリーダできるやつほしいよね。」\n営業A「そんなやつは、みんな条件がいいところに引っ張られてるだろ？」\n\n営業A\n(…まてよ？…こんな話、10年以上していないか…？)\n\n…IT業界の登場人物がサザエさんやポケモンのサトシの様に年を取らないなら、この仮説は合っている可能性もあるだろう。だが、IT業界に従事している人々は**年を取を取っている**。DXやらなにやらで必要な人材の数が増えているにしても、何かがおかしい。\n\n「これは調査する必要がありそうだな。」\nそうつぶやくと営業Aはパソコンに向かってググりはじめた。\n\n\n## IT人材年齢分布の推移\n\n営業A「クソ…悪い予感が的中したか」\n営業Aは経産省のレポートを眺めながらそうつぶやいた。\n\n![IT人材の年齢分布の推移.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/3648df33-9eb8-4410-a0f3-d0a323d8fe14.png)\n\n出典: 経済産業省 [－ IT 人材需給に関する調査 －](https://www.meti.go.jp/policy/it_policy/jinzai/houkokusyo.pdf)\n\nグラフの見方はおそらくこうだろう。\n順当に推移しているならば、2010年や2015年の25歳の割合が、2015年や2020年の30歳の割合におよそ移動するはず。\n\nところがグラフを見ると、2010年から2020年で、25 - 29歳と、30 - 34歳の推移の仕方に大きな違いがあり、25- 29歳が微減に対して、30 -34 歳は2010年から2020年にかけて半減しているじゃあないか。\n\nこれは条件がいいところに引っ張られていると考えるより、どこへともなく消えていると考える方が自然なんじゃないのか…？\n\n\n## プログラマー35歳定年説（再）\n\n営業A「こんな未来予想図になるのか…？」\n\nグラフの2025年と2030年の推計は予測値とある。ITスクールや商材ビジネスの広告が世に溢れ、未経験エンジニアも大歓迎だ。それなら確かにIT人材は増えるかもしれない。\n\nそれにしても、20代は横ばいに対して、30代が増加傾向になるだろうか。何らかの理由で半減する程離脱しているのに、誰かに数ヶ月教えてもらった技術を片手に参入するのだろうか。\n\n30歳を超えた時点で仕事の質が変わる、それまでの仕事の仕方が通用しなくなる、新規技術が習得できなくなるなど理由で離脱する、というグラフじゃないのかこれは？\n\n『プログラマー35歳定年説』は都市伝説じゃなかったのか…？\n\n\n## プレイヤーからプレイングマネージャへ\n\n営業A「そんな冗談は思考を鈍らせるな…」\n\n『プログラマー35歳定年説』の邪念を払うかのように大きく首を振ったところ、新たな仮説が頭をよぎった。\n\n「そうか…プレマネか」\n\nSESの人月労働者は時給労働者だ。単位時間内でどんなに素晴らしいコードを書いても顧客からもらえるお金は変わらない。顧客からもらえるお金を増やそうと思ったら、雇ってもらう人を増やすしかない。\n\n1人月分のアウトプットを出せるか分からない新人をつけられて、自分と合わせて2人月分のアウトプットを出さなければいけなくなる。会社からリーダーとかいうキラキラした言葉で圧をかけられはじめる年齢が30歳ぐらいからと考えると辻褄が合う。\n\nPGとしての仕事も覚えて、だいたい作業見積もりもできるようになり定時退社余裕となった矢先に、未知との遭遇だ。\n\nプレマネの業務は、PG能力はベースとしてもちろん必要な上に、それ以外の能力も多く要求される。プレイヤーではなくプレイングマネージャにある日突然させられる。その準備がまったくできていないならば、昨日までは自分の仕事が完璧にできていたのに、今日からは全くできない。何のサポートもなく責任だけは増えるリーダー。離脱してしまうのは自然だろう。\n\n\n## 火消し屋\n\nグラフから読み取れることがもう一つある。\n\n少し前であれば、40代、50代のエンジニアは書類の時点で敬遠されがちだった。\nところが、30代は離脱してしまい炎上案件を鎮火できるのが40代以上だけとなると、40代からでもしばらくは仕事はあることになる。その人々が一斉に定年を迎えると火消しができなくなるかもしれないが、それまでに炎上プロジェクトはなくなっているのだろうか。\n\n\n## エピローグ\n\nIT人材不足なのは間違いない。\n未経験30代だろうと、40代だろうとIT業界を目指す人はウエルカムだ。\n\n以下のような業務ができるのであれば営業Aに声をかけるといいだろう。\n\n- 顧客から要望ヒアリング\n- 要件・仕様整理・調整\n- 仕様書作成\n- タスク分割・スケジュール作成・人員割当\n- 指示出し・進捗確認\n- 開発・試験\n- 保守\n\n求人でよく見かける「コミュニケーション能力」をより明確に書くと「顧客の要望を理解・整理して現場の開発者が作業できるように落とし込んで口頭および文書でやりとり」できる能力ということになるだろう。\n\n「リモワで楽しくキーボードだけを叩いて高収入ゲットの案件ばかりならIT人材が不足などしないはずだが・・・難しいものだな。」\n\nそうつぶやいて営業Aはパソコンを閉じた。\n\n\n## おまけ1\n\n営業A短編シリーズ\n\nhttps://qiita.com/kaku3/items/3378ea55b1240d7360a1\n\n\n## おまけ2\n\nIT人材不足を憂いて、学習用の資料をgitで**無料**公開してます(不定期更新)。\nよろしければご利用ください。\n[エンジニアのためのお仕事問題集](https://github.com/kaku3/workbooks)\n",
    "coediting": false,
    "comments_count": 3,
    "created_at": "2022-10-29T20:42:55+09:00",
    "group": null,
    "id": "03aae7b9e3c70c55f513",
    "likes_count": 77,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 24,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      }
    ],
    "title": "ITミステリー短編：消えたエンジニア",
    "updated_at": "2023-01-02T08:57:35+09:00",
    "url": "https://qiita.com/kaku3/items/03aae7b9e3c70c55f513",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 25864,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h1 data-sourcepos=\"1:1-1:14\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n<p data-sourcepos=\"3:1-3:122\">どうも、職業エンジニア歴25年、プログラマ歴30年くらいのPM(プレイングマネージャ)です。</p>\n<p data-sourcepos=\"5:1-5:333\">技術書と言うと言語や設計やプログラミングスタイルについての本が紹介されることが多そうですが、 <strong>「ああ、若い頃にこういう本を読んでいたらもっと基本ステータスが高いエンジニアになれたのにな」</strong> と思った本を紹介したいと思います。</p>\n<p data-sourcepos=\"7:1-7:189\">明日から直接プログラミング力や設計力が上がるわけではないですが、伸び悩んだ時に気晴らしで読んでみたりするとよいかもしれません。</p>\n<p data-sourcepos=\"9:1-9:140\">※本稿は、Qiita Engineer Festa 2022 「買ってよかった技術書を紹介しよう！」向けに書いた記事になります。</p>\n<p data-sourcepos=\"11:1-11:56\"><iframe id=\"qiita-embed-content__fcd3356432126cf53f11699e797058f3\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__fcd3356432126cf53f11699e797058f3\" data-content=\"https%3A%2F%2Fqiita.com%2Fofficial-campaigns%2Fengineer-festa%2F2022\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<h1 data-sourcepos=\"14:1-14:80\">\n<span id=\"スーパーエンジニアへの道技術リーダーシップの人間学\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%83%BC%E3%83%91%E3%83%BC%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%B8%E3%81%AE%E9%81%93%E6%8A%80%E8%A1%93%E3%83%AA%E3%83%BC%E3%83%80%E3%83%BC%E3%82%B7%E3%83%83%E3%83%97%E3%81%AE%E4%BA%BA%E9%96%93%E5%AD%A6\"><i class=\"fa fa-link\"></i></a>スーパーエンジニアへの道―技術リーダーシップの人間学</h1>\n<p data-sourcepos=\"16:1-16:333\"><iframe id=\"qiita-embed-content__ecb8c5a9a7ba9ec27a8edd27b71b27c1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ecb8c5a9a7ba9ec27a8edd27b71b27c1\" data-content=\"https%3A%2F%2Fwww.amazon.co.jp%2F%25E3%2582%25B9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25B8%25E3%2581%25AE%25E9%2581%2593%25E2%2580%2595%25E6%258A%2580%25E8%25A1%2593%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AE%25E4%25BA%25BA%25E9%2596%2593%25E5%25AD%25A6-G-M-%25E3%2583%25AF%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B0%2Fdp%2F4320025636%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"18:1-20:66\">超古典。当時深い理由もなく尊敬していた先輩に薦められて読んだ本。<br>\nスーパーエンジニアと言わず凡百のエンジニアにも実践できる役に立つ考え方がたくさん書いてあり読み物としてもおもしろかった。<br>\n思えばわたしの原点はここにあるかもしれない。</p>\n<h1 data-sourcepos=\"23:1-23:72\">\n<span id=\"知覚力を磨く-絵画を観察するように世界を見る技法\" class=\"fragment\"></span><a href=\"#%E7%9F%A5%E8%A6%9A%E5%8A%9B%E3%82%92%E7%A3%A8%E3%81%8F-%E7%B5%B5%E7%94%BB%E3%82%92%E8%A6%B3%E5%AF%9F%E3%81%99%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E4%B8%96%E7%95%8C%E3%82%92%E8%A6%8B%E3%82%8B%E6%8A%80%E6%B3%95\"><i class=\"fa fa-link\"></i></a>知覚力を磨く 絵画を観察するように世界を見る技法</h1>\n<p data-sourcepos=\"24:1-24:285\"><iframe id=\"qiita-embed-content__4dd4c4918b5c494c4c111519427269eb\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__4dd4c4918b5c494c4c111519427269eb\" data-content=\"https%3A%2F%2Fwww.amazon.co.jp%2F%25E7%259F%25A5%25E8%25A6%259A%25E5%258A%259B%25E3%2582%2592%25E7%25A3%25A8%25E3%2581%258F-%25E7%25B5%25B5%25E7%2594%25BB%25E3%2582%2592%25E8%25A6%25B3%25E5%25AF%259F%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E4%25B8%2596%25E7%2595%258C%25E3%2582%2592%25E8%25A6%258B%25E3%2582%258B%25E6%258A%2580%25E6%25B3%2595-%25E7%25A5%259E%25E7%2594%25B0-%25E6%2588%25BF%25E6%259E%259D%2Fdp%2F4478111626\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"26:1-26:74\"><strong>『知覚力』</strong> という概念を理解するのによかった本。</p>\n<p data-sourcepos=\"28:1-28:273\">同じ会議に出ていても人によって認識内容が異なる理由の第一歩は『知覚力』かなと思いました。見たと認識していない（知覚していない）ものは、整理も理解もできず、当然アウトプットもできない。</p>\n<p data-sourcepos=\"30:1-30:375\">また、手っ取り早くコーディングスキルを上げる手法の一つとして写経やコードリーディングがあるが、「知覚力」が低いといくらやっても効果が現れない。スクールの課題などで写経をしても一向にプログラム力が上がらないと感じている方は読んでみるといいかもしれない。</p>\n<p data-sourcepos=\"32:1-32:123\">この本の難点はトレーニングの内容をそのまま実践すること自体が相当難易度が高いこと。</p>\n<h1 data-sourcepos=\"35:1-35:23\">\n<span id=\"東大読書--作文\" class=\"fragment\"></span><a href=\"#%E6%9D%B1%E5%A4%A7%E8%AA%AD%E6%9B%B8--%E4%BD%9C%E6%96%87\"><i class=\"fa fa-link\"></i></a>東大読書 / 作文</h1>\n<ul data-sourcepos=\"36:1-38:0\">\n<li data-sourcepos=\"36:1-36:75\">「読む力」と「地頭力」がいっきに身につく 東大読書</li>\n<li data-sourcepos=\"37:1-38:0\">「伝える力」と「地頭力」がいっきに高まる 東大作文</li>\n</ul>\n<p data-sourcepos=\"39:1-39:294\"><iframe id=\"qiita-embed-content__1cd56696c3a4113b328b1ac4e1480d3d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1cd56696c3a4113b328b1ac4e1480d3d\" data-content=\"https%3A%2F%2Fwww.amazon.co.jp%2F%25E3%2580%258C%25E8%25AA%25AD%25E3%2582%2580%25E5%258A%259B%25E3%2580%258D%25E3%2581%25A8%25E3%2580%258C%25E5%259C%25B0%25E9%25A0%25AD%25E5%258A%259B%25E3%2580%258D%25E3%2581%258C%25E3%2581%2584%25E3%2581%25A3%25E3%2581%258D%25E3%2581%25AB%25E8%25BA%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%258F-%25E6%259D%25B1%25E5%25A4%25A7%25E8%25AA%25AD%25E6%259B%25B8-%25E8%25A5%25BF%25E5%25B2%25A1-%25E5%25A3%25B1%25E8%25AA%25A0%2Fdp%2F4492046259\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"41:1-41:294\"><iframe id=\"qiita-embed-content__ee5512d49943b24c1861158c4ea96f9e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ee5512d49943b24c1861158c4ea96f9e\" data-content=\"https%3A%2F%2Fwww.amazon.co.jp%2F%25E3%2580%258C%25E4%25BC%259D%25E3%2581%2588%25E3%2582%258B%25E5%258A%259B%25E3%2580%258D%25E3%2581%25A8%25E3%2580%258C%25E5%259C%25B0%25E9%25A0%25AD%25E5%258A%259B%25E3%2580%258D%25E3%2581%258C%25E3%2581%2584%25E3%2581%25A3%25E3%2581%258D%25E3%2581%25AB%25E9%25AB%2598%25E3%2581%25BE%25E3%2582%258B-%25E6%259D%25B1%25E5%25A4%25A7%25E4%25BD%259C%25E6%2596%2587-%25E8%25A5%25BF%25E5%25B2%25A1-%25E5%25A3%25B1%25E8%25AA%25A0%2Fdp%2F4492046399\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"43:1-44:204\">あまり特筆すべき点はないのですが、報連相、議事録や仕様書作成を行っていく上で基礎知識として読み書きの本をあげました。<br>\n日本語力が低いと、日本語の外部設計をプログラム語に翻訳するのも当然うまくできないので、日本語力の向上はプログラム力の向上につながります。</p>\n<p data-sourcepos=\"46:1-46:169\"><strong>当然ですが、読み書きの力を上げるためには、本書を読むだけではなく、実際にたくさん読み書きをしないといけません。</strong></p>\n<h1 data-sourcepos=\"49:1-49:98\">\n<span id=\"ホスピタリティを育てる物語-感動の接客ができるようになる14の力\" class=\"fragment\"></span><a href=\"#%E3%83%9B%E3%82%B9%E3%83%94%E3%82%BF%E3%83%AA%E3%83%86%E3%82%A3%E3%82%92%E8%82%B2%E3%81%A6%E3%82%8B%E7%89%A9%E8%AA%9E-%E6%84%9F%E5%8B%95%E3%81%AE%E6%8E%A5%E5%AE%A2%E3%81%8C%E3%81%A7%E3%81%8D%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%AA%E3%82%8B14%E3%81%AE%E5%8A%9B\"><i class=\"fa fa-link\"></i></a>ホスピタリティを育てる物語 「感動の接客」ができるようになる14の力</h1>\n<p data-sourcepos=\"50:1-50:359\"><iframe id=\"qiita-embed-content__90bae239bb1a00d8ceed627058ff395f\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__90bae239bb1a00d8ceed627058ff395f\" data-content=\"https%3A%2F%2Fwww.amazon.co.jp%2F%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2594%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2582%2592%25E8%2582%25B2%25E3%2581%25A6%25E3%2582%258B%25E7%2589%25A9%25E8%25AA%259E-%25E3%2580%258C%25E6%2584%259F%25E5%258B%2595%25E3%2581%25AE%25E6%258E%25A5%25E5%25AE%25A2%25E3%2580%258D%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B14%25E3%2581%25AE%25E5%258A%259B-%25E4%25B9%2585%25E4%25BF%259D-%25E4%25BA%25AE%25E5%2590%25BE%2Fdp%2F4798159832\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"52:1-53:347\">アジャイル開発ではいろいろな手法が提唱されているけれどもうまくいかなかったり、『Don't just do agile. Be agile』なんていう言葉があったりします。<br>\nこの『Be agile』ってつまりはホスピタリティだったりしませんか？と個人的には感じていて、チーム全体がホスピタリティを身につけているとアジャイルっぽい仕事の進め方をしてもなんだかうまくいって職場に笑顔があふれるのではないかと思っています。</p>\n<h1 data-sourcepos=\"56:1-56:26\">\n<span id=\"アオアシ漫画\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%82%AA%E3%82%A2%E3%82%B7%E6%BC%AB%E7%94%BB\"><i class=\"fa fa-link\"></i></a>アオアシ（漫画）</h1>\n<p data-sourcepos=\"57:1-57:188\"><iframe id=\"qiita-embed-content__1f5328a1085393ac6c8f064ef3160d26\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1f5328a1085393ac6c8f064ef3160d26\" data-content=\"https%3A%2F%2Fwww.amazon.co.jp%2F%25E3%2582%25A2%25E3%2582%25AA%25E3%2582%25A2%25E3%2582%25B7-1-%25E3%2583%2593%25E3%2583%2583%25E3%2582%25B0%25E3%2582%25B3%25E3%2583%259F%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9-%25E5%25B0%258F%25E6%259E%2597-%25E6%259C%2589%25E5%2590%25BE%2Fdp%2F4091868924\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"59:1-60:269\">知覚力の訓練がてら読んでほしい作品です。<br>\nサッカー漫画ですが、ITプロジェクトに置き換えて読んでみることで、小難しいマネジメント書籍に出てくる自分とは違う世界線の物語より具体的かつ身近な物語として感じる事ができると思います。</p>\n<p data-sourcepos=\"62:1-62:252\">プロジェクトを俯瞰して刻々と変わる状況の中でメンバーも顧客もよりよいゴールに向けて誘導してボールを持ちすぎず、適切にパスを回すことの大事さなど、多くの学びがありました。</p>\n<h1 data-sourcepos=\"65:1-65:115\">\n<span id=\"システムの問題地図-でどこから変える使えないitに振り回される悲しき景色\" class=\"fragment\"></span><a href=\"#%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E5%95%8F%E9%A1%8C%E5%9C%B0%E5%9B%B3-%E3%81%A7%E3%81%A9%E3%81%93%E3%81%8B%E3%82%89%E5%A4%89%E3%81%88%E3%82%8B%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%84it%E3%81%AB%E6%8C%AF%E3%82%8A%E5%9B%9E%E3%81%95%E3%82%8C%E3%82%8B%E6%82%B2%E3%81%97%E3%81%8D%E6%99%AF%E8%89%B2\"><i class=\"fa fa-link\"></i></a>システムの問題地図 ~「で、どこから変える?」使えないITに振り回される悲しき景色</h1>\n<p data-sourcepos=\"66:1-66:414\"><iframe id=\"qiita-embed-content__eb0d9166ed6ebe17c78c5cc45959efc7\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__eb0d9166ed6ebe17c78c5cc45959efc7\" data-content=\"https%3A%2F%2Fwww.amazon.co.jp%2F%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AE%25E5%2595%258F%25E9%25A1%258C%25E5%259C%25B0%25E5%259B%25B3-%25E3%2580%258C%25E3%2581%25A7%25E3%2580%2581%25E3%2581%25A9%25E3%2581%2593%25E3%2581%258B%25E3%2582%2589%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B-%25E3%2580%258D%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584IT%25E3%2581%25AB%25E6%258C%25AF%25E3%2582%258A%25E5%259B%259E%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E6%2582%25B2%25E3%2581%2597%25E3%2581%258D%25E6%2599%25AF%25E8%2589%25B2-%25E6%25B2%25A2%25E6%25B8%25A1-%25E3%2581%2582%25E3%2581%25BE%25E3%2581%25AD%2Fdp%2F4774194638\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"68:1-69:161\">ITが『楽して稼げる仕事』ではなさそうなことが分かる本。<br>\nより単価の高い仕事を得るためにも、ITシステムの案件がどういうものかを把握しておくことはよいことだと思います。</p>\n<h1 data-sourcepos=\"72:1-72:11\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h1>\n<p data-sourcepos=\"73:1-75:144\">読書は効率よく知識を増やすのに有効な手段ですが読書の習慣が身についていないとなかなか手がでません。<br>\nまた、楽しくないことは続かないですし、身にもつかないです。<br>\nそこで今回は比較的読みやすくて学習効率を上げたり観点を増やしたりできそうな本を紹介してみました。</p>\n<p data-sourcepos=\"77:1-77:75\">楽しいエンジニアライフの一助となれればと思います。</p>\n",
    "body": "# はじめに\n\nどうも、職業エンジニア歴25年、プログラマ歴30年くらいのPM(プレイングマネージャ)です。\n\n技術書と言うと言語や設計やプログラミングスタイルについての本が紹介されることが多そうですが、 **「ああ、若い頃にこういう本を読んでいたらもっと基本ステータスが高いエンジニアになれたのにな」** と思った本を紹介したいと思います。\n\n明日から直接プログラミング力や設計力が上がるわけではないですが、伸び悩んだ時に気晴らしで読んでみたりするとよいかもしれません。\n\n※本稿は、Qiita Engineer Festa 2022 「買ってよかった技術書を紹介しよう！」向けに書いた記事になります。\n\nhttps://qiita.com/official-campaigns/engineer-festa/2022\n\n\n# スーパーエンジニアへの道―技術リーダーシップの人間学\n\nhttps://www.amazon.co.jp/%E3%82%B9%E3%83%BC%E3%83%91%E3%83%BC%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%B8%E3%81%AE%E9%81%93%E2%80%95%E6%8A%80%E8%A1%93%E3%83%AA%E3%83%BC%E3%83%80%E3%83%BC%E3%82%B7%E3%83%83%E3%83%97%E3%81%AE%E4%BA%BA%E9%96%93%E5%AD%A6-G-M-%E3%83%AF%E3%82%A4%E3%83%B3%E3%83%90%E3%83%BC%E3%82%B0/dp/4320025636/\n\n超古典。当時深い理由もなく尊敬していた先輩に薦められて読んだ本。\nスーパーエンジニアと言わず凡百のエンジニアにも実践できる役に立つ考え方がたくさん書いてあり読み物としてもおもしろかった。\n思えばわたしの原点はここにあるかもしれない。\n\n\n# 知覚力を磨く 絵画を観察するように世界を見る技法\nhttps://www.amazon.co.jp/%E7%9F%A5%E8%A6%9A%E5%8A%9B%E3%82%92%E7%A3%A8%E3%81%8F-%E7%B5%B5%E7%94%BB%E3%82%92%E8%A6%B3%E5%AF%9F%E3%81%99%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E4%B8%96%E7%95%8C%E3%82%92%E8%A6%8B%E3%82%8B%E6%8A%80%E6%B3%95-%E7%A5%9E%E7%94%B0-%E6%88%BF%E6%9E%9D/dp/4478111626\n\n**『知覚力』** という概念を理解するのによかった本。\n\n同じ会議に出ていても人によって認識内容が異なる理由の第一歩は『知覚力』かなと思いました。見たと認識していない（知覚していない）ものは、整理も理解もできず、当然アウトプットもできない。\n\nまた、手っ取り早くコーディングスキルを上げる手法の一つとして写経やコードリーディングがあるが、「知覚力」が低いといくらやっても効果が現れない。スクールの課題などで写経をしても一向にプログラム力が上がらないと感じている方は読んでみるといいかもしれない。\n\nこの本の難点はトレーニングの内容をそのまま実践すること自体が相当難易度が高いこと。\n\n\n# 東大読書 / 作文\n- 「読む力」と「地頭力」がいっきに身につく 東大読書\n- 「伝える力」と「地頭力」がいっきに高まる 東大作文\n\nhttps://www.amazon.co.jp/%E3%80%8C%E8%AA%AD%E3%82%80%E5%8A%9B%E3%80%8D%E3%81%A8%E3%80%8C%E5%9C%B0%E9%A0%AD%E5%8A%9B%E3%80%8D%E3%81%8C%E3%81%84%E3%81%A3%E3%81%8D%E3%81%AB%E8%BA%AB%E3%81%AB%E3%81%A4%E3%81%8F-%E6%9D%B1%E5%A4%A7%E8%AA%AD%E6%9B%B8-%E8%A5%BF%E5%B2%A1-%E5%A3%B1%E8%AA%A0/dp/4492046259\n\nhttps://www.amazon.co.jp/%E3%80%8C%E4%BC%9D%E3%81%88%E3%82%8B%E5%8A%9B%E3%80%8D%E3%81%A8%E3%80%8C%E5%9C%B0%E9%A0%AD%E5%8A%9B%E3%80%8D%E3%81%8C%E3%81%84%E3%81%A3%E3%81%8D%E3%81%AB%E9%AB%98%E3%81%BE%E3%82%8B-%E6%9D%B1%E5%A4%A7%E4%BD%9C%E6%96%87-%E8%A5%BF%E5%B2%A1-%E5%A3%B1%E8%AA%A0/dp/4492046399\n\nあまり特筆すべき点はないのですが、報連相、議事録や仕様書作成を行っていく上で基礎知識として読み書きの本をあげました。\n日本語力が低いと、日本語の外部設計をプログラム語に翻訳するのも当然うまくできないので、日本語力の向上はプログラム力の向上につながります。\n\n**当然ですが、読み書きの力を上げるためには、本書を読むだけではなく、実際にたくさん読み書きをしないといけません。**\n\n\n# ホスピタリティを育てる物語 「感動の接客」ができるようになる14の力\nhttps://www.amazon.co.jp/%E3%83%9B%E3%82%B9%E3%83%94%E3%82%BF%E3%83%AA%E3%83%86%E3%82%A3%E3%82%92%E8%82%B2%E3%81%A6%E3%82%8B%E7%89%A9%E8%AA%9E-%E3%80%8C%E6%84%9F%E5%8B%95%E3%81%AE%E6%8E%A5%E5%AE%A2%E3%80%8D%E3%81%8C%E3%81%A7%E3%81%8D%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%AA%E3%82%8B14%E3%81%AE%E5%8A%9B-%E4%B9%85%E4%BF%9D-%E4%BA%AE%E5%90%BE/dp/4798159832\n\nアジャイル開発ではいろいろな手法が提唱されているけれどもうまくいかなかったり、『Don't just do agile. Be agile』なんていう言葉があったりします。\nこの『Be agile』ってつまりはホスピタリティだったりしませんか？と個人的には感じていて、チーム全体がホスピタリティを身につけているとアジャイルっぽい仕事の進め方をしてもなんだかうまくいって職場に笑顔があふれるのではないかと思っています。\n\n\n# アオアシ（漫画）\nhttps://www.amazon.co.jp/%E3%82%A2%E3%82%AA%E3%82%A2%E3%82%B7-1-%E3%83%93%E3%83%83%E3%82%B0%E3%82%B3%E3%83%9F%E3%83%83%E3%82%AF%E3%82%B9-%E5%B0%8F%E6%9E%97-%E6%9C%89%E5%90%BE/dp/4091868924\n\n知覚力の訓練がてら読んでほしい作品です。\nサッカー漫画ですが、ITプロジェクトに置き換えて読んでみることで、小難しいマネジメント書籍に出てくる自分とは違う世界線の物語より具体的かつ身近な物語として感じる事ができると思います。\n\nプロジェクトを俯瞰して刻々と変わる状況の中でメンバーも顧客もよりよいゴールに向けて誘導してボールを持ちすぎず、適切にパスを回すことの大事さなど、多くの学びがありました。\n\n\n# システムの問題地図 ~「で、どこから変える?」使えないITに振り回される悲しき景色\nhttps://www.amazon.co.jp/%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E5%95%8F%E9%A1%8C%E5%9C%B0%E5%9B%B3-%E3%80%8C%E3%81%A7%E3%80%81%E3%81%A9%E3%81%93%E3%81%8B%E3%82%89%E5%A4%89%E3%81%88%E3%82%8B-%E3%80%8D%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%84IT%E3%81%AB%E6%8C%AF%E3%82%8A%E5%9B%9E%E3%81%95%E3%82%8C%E3%82%8B%E6%82%B2%E3%81%97%E3%81%8D%E6%99%AF%E8%89%B2-%E6%B2%A2%E6%B8%A1-%E3%81%82%E3%81%BE%E3%81%AD/dp/4774194638\n\nITが『楽して稼げる仕事』ではなさそうなことが分かる本。\nより単価の高い仕事を得るためにも、ITシステムの案件がどういうものかを把握しておくことはよいことだと思います。\n\n\n# まとめ\n読書は効率よく知識を増やすのに有効な手段ですが読書の習慣が身についていないとなかなか手がでません。\nまた、楽しくないことは続かないですし、身にもつかないです。\nそこで今回は比較的読みやすくて学習効率を上げたり観点を増やしたりできそうな本を紹介してみました。\n\n楽しいエンジニアライフの一助となれればと思います。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-07-09T15:14:00+09:00",
    "group": null,
    "id": "9354614403000ee4b6d8",
    "likes_count": 5,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 5,
    "tags": [
      {
        "name": "新人プログラマ応援",
        "versions": []
      },
      {
        "name": "QiitaEngineerFesta_技術書",
        "versions": []
      }
    ],
    "title": "意識低い系PM的エンジニアライフを加速する書籍6.5選",
    "updated_at": "2022-07-10T23:41:02+09:00",
    "url": "https://qiita.com/kaku3/items/9354614403000ee4b6d8",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2586,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"2:1-3:117\">大量のファイルの中に大量の置換文字列を含むプロジェクトってありますよね？<br>\n全置換するツールを作りたいけれども、完全に機械的に置換できない微妙なファイル。</p>\n<p data-sourcepos=\"5:1-5:305\">機械的に置換できそうな部分（正規表現で表現できそうな部分）をぐいっと選択してコマンドパレットからコマンド一撃で置換できたら瞬殺じゃない？しかも<strong>vs code の extension 作成めちゃんこ簡単そう</strong>ってことで作りました。</p>\n<h2 data-sourcepos=\"8:1-8:15\">\n<span id=\"事前準備\" class=\"fragment\"></span><a href=\"#%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>事前準備</h2>\n<ul data-sourcepos=\"10:1-13:0\">\n<li data-sourcepos=\"10:1-10:23\">nodist + node 16.15.0</li>\n<li data-sourcepos=\"11:1-11:4\">yo</li>\n<li data-sourcepos=\"12:1-13:0\">genarator-code</li>\n</ul>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"14:1-23:3\"><div class=\"highlight\"><pre><code># nodist のページからインストーラーをダウンロードしてインストール\n# choco でインストールすると深いフォルダにインストールされるので手動で浅いフォルダにインストールした方がよさそう\nhttps://github.com/nullivex/nodist/releases\n\n# npm が動作しない時に実行\nnodist npm match\n# yo, generator-code をインストール\nnpm install yo generator-code -g\n</code></pre></div></div>\n<p data-sourcepos=\"25:1-25:92\">※node 環境があれば nodist ではなくてもよいです。(nvm-windows, volta, ...)</p>\n<h2 data-sourcepos=\"28:1-28:36\">\n<span id=\"プロジェクトを作成する\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>プロジェクトを作成する</h2>\n<p data-sourcepos=\"30:1-30:115\"><code>yo code</code> を実行していつものおじさんの質問に答えてプロジェクトを作成しましょう。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"32:1-53:3\"><div class=\"highlight\"><pre><code>yo code\n\n\n     _-----_     ╭──────────────────────────╮\n    |       |    │   Welcome to the Visual  │\n    |--(o)--|    │   Studio Code Extension  │\n   `---------´   │        generator!        │\n    ( _´U`_ )    ╰──────────────────────────╯\n    /___A___\\   /\n     |  ~  |\n   __'.___.'__\n ´   `  |° ´ Y `\n\n? What type of extension do you want to create? New Extension (TypeScript)\n? What's the name of your extension? {your project name}\n? What's the identifier of your extension? {your identifier name}\n? What's the description of your extension? \n? Initialize a git repository? Yes\n? Bundle the source code with webpack? No       \n? Which package manager to use? yarn\n</code></pre></div></div>\n<p data-sourcepos=\"55:1-56:114\">プロジェクトができたら <code>F5</code>で実行します。<br>\nエクステンションがインストールされた状態の vs code が起動してデバッグできます。</p>\n<h2 data-sourcepos=\"59:1-59:25\">\n<span id=\"extensionts-を見る\" class=\"fragment\"></span><a href=\"#extensionts-%E3%82%92%E8%A6%8B%E3%82%8B\"><i class=\"fa fa-link\"></i></a>extension.ts を見る</h2>\n<p data-sourcepos=\"61:1-63:95\">主にコードを書くのは extension.ts になります。<br>\n作成した時点では、コマンドを実行すると hello と表示されるだけの extension になっています。<br>\nregister command の中身を変更すれば良さそうなことが分かると思います。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"65:1-93:3\"><div class=\"highlight\"><pre><code>// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\t\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"{your project name}\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet disposable = vscode.commands.registerCommand('{your project name}.hello', () =&gt; {\n\t\t// The code you place here will be executed every time your command is executed\n\t\t// Display a message box to the user\n\t\tvscode.window.showInformationMessage('Hello World from {your project name}!');\n\t});\n\n\tcontext.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n\n</code></pre></div></div>\n<p data-sourcepos=\"95:1-95:108\">とりあえずは、Hello というコマンド名を変えてみると理解が深まると思います。</p>\n<h2 data-sourcepos=\"98:1-98:24\">\n<span id=\"サンプルを見る\" class=\"fragment\"></span><a href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%82%92%E8%A6%8B%E3%82%8B\"><i class=\"fa fa-link\"></i></a>サンプルを見る</h2>\n<p data-sourcepos=\"100:1-100:171\">しかしそれだけでは、選択したテキストを操作する方法はさっぱりわからないので、以下のサイトよりサンプルを取得しよう。</p>\n<p data-sourcepos=\"102:1-102:54\"><iframe id=\"qiita-embed-content__b5689eed90d9a98eee0e4857816491a1\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__b5689eed90d9a98eee0e4857816491a1\" data-content=\"https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fvscode-extension-samples%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"104:1-106:3\"><div class=\"highlight\"><pre><code>git clone https://github.com/Microsoft/vscode-extension-samples\n</code></pre></div></div>\n<p data-sourcepos=\"108:1-108:161\">今回やりたいことに近いのは、<code>document-editing-sample</code> っぽいのでそのプロジェクトの、<code>extension.ts</code> を見ることにしました。</p>\n<p data-sourcepos=\"110:1-110:104\"><iframe id=\"qiita-embed-content__43c7fef1ab9a0a939b3b9cb61ddb7f88\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__43c7fef1ab9a0a939b3b9cb61ddb7f88\" data-content=\"https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fvscode-extension-samples%2Fblob%2Fmain%2Fdocument-editing-sample%2Fsrc%2Fextension.ts\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"111:1-136:3\"><div class=\"highlight\"><pre><code>'use strict';\n\nimport * as vscode from 'vscode';\n\nexport function activate(context: vscode.ExtensionContext) {\n\tconst disposable = vscode.commands.registerCommand('extension.reverseWord', function () {\n\t\t// Get the active text editor\n\t\tconst editor = vscode.window.activeTextEditor;\n\n\t\tif (editor) {\n\t\t\tconst document = editor.document;\n\t\t\tconst selection = editor.selection;\n\n\t\t\t// Get the word within the selection\n\t\t\tconst word = document.getText(selection);\n\t\t\tconst reversed = word.split('').reverse().join('');\n\t\t\teditor.edit(editBuilder =&gt; {\n\t\t\t\teditBuilder.replace(selection, reversed);\n\t\t\t});\n\t\t}\n\t});\n\n\tcontext.subscriptions.push(disposable);\n}\n</code></pre></div></div>\n<p data-sourcepos=\"138:1-140:102\">驚く程簡単。<br>\nword を reversed にしている部分を書き換えればよさそうだ。<br>\n修正したらエクステンションを実行している vscode を閉じて、<code>F5</code>で再実行。</p>\n<h2 data-sourcepos=\"143:1-143:12\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n<p data-sourcepos=\"145:1-145:78\">ということで小一時間でエクステンションが書けました。</p>\n<p data-sourcepos=\"147:1-148:114\">新人さん向け課題としてもちょうどよさそうだし、脳死反復作業をプログラムの力で解決するのはよいことなだと思います。<br>\nプロジェクトメンバーに配布すれば、アウトプットが均質化されるのも魅力的です。</p>\n<p data-sourcepos=\"150:1-150:118\">もしも身の回りに反復作業があるようなら、extension 作成してみてはいかがでしょうか？</p>\n",
    "body": "## はじめに\n大量のファイルの中に大量の置換文字列を含むプロジェクトってありますよね？\n全置換するツールを作りたいけれども、完全に機械的に置換できない微妙なファイル。\n\n機械的に置換できそうな部分（正規表現で表現できそうな部分）をぐいっと選択してコマンドパレットからコマンド一撃で置換できたら瞬殺じゃない？しかも**vs code の extension 作成めちゃんこ簡単そう**ってことで作りました。\n\n\n## 事前準備\n\n- nodist + node 16.15.0\n- yo\n- genarator-code\n\n```\n# nodist のページからインストーラーをダウンロードしてインストール\n# choco でインストールすると深いフォルダにインストールされるので手動で浅いフォルダにインストールした方がよさそう\nhttps://github.com/nullivex/nodist/releases\n\n# npm が動作しない時に実行\nnodist npm match\n# yo, generator-code をインストール\nnpm install yo generator-code -g\n```\n\n※node 環境があれば nodist ではなくてもよいです。(nvm-windows, volta, ...)\n\n\n## プロジェクトを作成する\n\n`yo code` を実行していつものおじさんの質問に答えてプロジェクトを作成しましょう。\n\n```\nyo code\n\n\n     _-----_     ╭──────────────────────────╮\n    |       |    │   Welcome to the Visual  │\n    |--(o)--|    │   Studio Code Extension  │\n   `---------´   │        generator!        │\n    ( _´U`_ )    ╰──────────────────────────╯\n    /___A___\\   /\n     |  ~  |\n   __'.___.'__\n ´   `  |° ´ Y `\n\n? What type of extension do you want to create? New Extension (TypeScript)\n? What's the name of your extension? {your project name}\n? What's the identifier of your extension? {your identifier name}\n? What's the description of your extension? \n? Initialize a git repository? Yes\n? Bundle the source code with webpack? No       \n? Which package manager to use? yarn\n```\n\nプロジェクトができたら `F5`で実行します。\nエクステンションがインストールされた状態の vs code が起動してデバッグできます。\n\n\n## extension.ts を見る\n\n主にコードを書くのは extension.ts になります。\n作成した時点では、コマンドを実行すると hello と表示されるだけの extension になっています。\nregister command の中身を変更すれば良さそうなことが分かると思います。\n\n```\n// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\t\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"{your project name}\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet disposable = vscode.commands.registerCommand('{your project name}.hello', () => {\n\t\t// The code you place here will be executed every time your command is executed\n\t\t// Display a message box to the user\n\t\tvscode.window.showInformationMessage('Hello World from {your project name}!');\n\t});\n\n\tcontext.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n\n```\n\nとりあえずは、Hello というコマンド名を変えてみると理解が深まると思います。\n\n\n## サンプルを見る\n\nしかしそれだけでは、選択したテキストを操作する方法はさっぱりわからないので、以下のサイトよりサンプルを取得しよう。\n\nhttps://github.com/microsoft/vscode-extension-samples/\n\n```\ngit clone https://github.com/Microsoft/vscode-extension-samples\n```\n\n今回やりたいことに近いのは、`document-editing-sample` っぽいのでそのプロジェクトの、`extension.ts` を見ることにしました。\n\nhttps://github.com/microsoft/vscode-extension-samples/blob/main/document-editing-sample/src/extension.ts\n```\n'use strict';\n\nimport * as vscode from 'vscode';\n\nexport function activate(context: vscode.ExtensionContext) {\n\tconst disposable = vscode.commands.registerCommand('extension.reverseWord', function () {\n\t\t// Get the active text editor\n\t\tconst editor = vscode.window.activeTextEditor;\n\n\t\tif (editor) {\n\t\t\tconst document = editor.document;\n\t\t\tconst selection = editor.selection;\n\n\t\t\t// Get the word within the selection\n\t\t\tconst word = document.getText(selection);\n\t\t\tconst reversed = word.split('').reverse().join('');\n\t\t\teditor.edit(editBuilder => {\n\t\t\t\teditBuilder.replace(selection, reversed);\n\t\t\t});\n\t\t}\n\t});\n\n\tcontext.subscriptions.push(disposable);\n}\n```\n\n驚く程簡単。\nword を reversed にしている部分を書き換えればよさそうだ。\n修正したらエクステンションを実行している vscode を閉じて、`F5`で再実行。\n\n\n## まとめ\n\nということで小一時間でエクステンションが書けました。\n\n新人さん向け課題としてもちょうどよさそうだし、脳死反復作業をプログラムの力で解決するのはよいことなだと思います。\nプロジェクトメンバーに配布すれば、アウトプットが均質化されるのも魅力的です。\n\nもしも身の回りに反復作業があるようなら、extension 作成してみてはいかがでしょうか？\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-05-03T12:15:14+09:00",
    "group": null,
    "id": "dbdc553543e43f37cc55",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "効率化",
        "versions": []
      },
      {
        "name": "VSCode",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      },
      {
        "name": "VSCode-Extension",
        "versions": []
      }
    ],
    "title": "GWの趣味プロ：vs code extension をつくって作業効率化する話",
    "updated_at": "2022-05-04T12:03:54+09:00",
    "url": "https://qiita.com/kaku3/items/dbdc553543e43f37cc55",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1714,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:57\">\n<span id=\"勉強しているのに良いコードが書けない\" class=\"fragment\"></span><a href=\"#%E5%8B%89%E5%BC%B7%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%81%AE%E3%81%AB%E8%89%AF%E3%81%84%E3%82%B3%E3%83%BC%E3%83%89%E3%81%8C%E6%9B%B8%E3%81%91%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>勉強しているのに良いコードが書けない</h2>\n<p data-sourcepos=\"3:1-3:328\">言語自体を学ぶのであれば、自分にあってそうな本を本屋で探して<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup>買ってきて、読みながら実際に動かしてみたりすればよいし、ちょっとよいコードが書きたくなったら、みなさんが勧めているリーダブルコードなどを読めばいいでしょう。</p>\n<p data-sourcepos=\"5:1-5:190\">ただそのようなことをしていても<strong>あるレベル以上のコードが書けるようにはならない</strong>のですが、その理由を究明していきたいと思います。</p>\n<h2 data-sourcepos=\"8:1-8:48\">\n<span id=\"日本語もプログラムもただの言語\" class=\"fragment\"></span><a href=\"#%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%82%82%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%82%82%E3%81%9F%E3%81%A0%E3%81%AE%E8%A8%80%E8%AA%9E\"><i class=\"fa fa-link\"></i></a>日本語もプログラムもただの言語</h2>\n<p data-sourcepos=\"10:1-11:216\">日本語の読み書きは日本人であれば全員義務教育で学びます。<br>\n日本語を学んだ人が全員分かりやすくて面白い話をするかというとそんなことはなくて、壊滅的に話がつまらない人や何言ってるか分からない人も存在します。</p>\n<p data-sourcepos=\"13:1-13:247\">『人に物事をうまく伝えられていないこと』に気づいていない方が大半、危機意識を持って書籍を読む方が少し、分かりやすくて面白い話をする方が数％といったとこでしょうか。<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup></p>\n<p data-sourcepos=\"15:1-15:183\">この点についてたくさん良書が出ていますが、説明の方法の本を読んでも次の日から説明が上手くなることはめったにないと思います。</p>\n<p data-sourcepos=\"17:1-17:6\">例）</p>\n<p data-sourcepos=\"19:1-19:182\"><iframe id=\"qiita-embed-content__819026d49581d6fa16d1561b7cea7645\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__819026d49581d6fa16d1561b7cea7645\" data-content=\"https%3A%2F%2Fwww.amazon.co.jp%2F%25E4%25B8%2580%25E7%2595%25AA%25E4%25BC%259D%25E3%2582%258F%25E3%2582%258B%25E8%25AA%25AC%25E6%2598%258E%25E3%2581%25AE%25E9%25A0%2586%25E7%2595%25AA-%25E7%2594%25B0%25E4%25B8%25AD%25E8%2580%2595%25E6%25AF%2594%25E5%258F%25A4-ebook%2Fdp%2FB07DK7BCGS%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"22:1-23:244\">同様にプログラム言語を<strong>学ぶだけでは</strong>人間やコンピュータにとって分かりやすくて面白いプログラムは書けません。<br>\n意識の高いオブジェクト指向やデザインパターンを学んでも<strong>次の日から優れたオブジェクト指向やデザインパターンを取り入れたコードが書けることもめったにないと思います。</strong></p>\n<p data-sourcepos=\"25:1-25:6\">例）</p>\n<p data-sourcepos=\"27:1-27:457\"><iframe id=\"qiita-embed-content__ebd0848319ce9fc3afd51bc513104fe9\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ebd0848319ce9fc3afd51bc513104fe9\" data-content=\"https%3A%2F%2Fwww.amazon.co.jp%2F%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25A7%25E3%2581%25AA%25E3%2581%259C%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B-%25E7%25AC%25AC%25EF%25BC%2593%25E7%2589%2588-%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584OOP%25E3%2580%2581%25E8%25A8%25AD%25E8%25A8%2588%25E3%2580%2581%25E3%2582%25A2%25E3%2582%25B8%25E3%2583%25A3%25E3%2582%25A4%25E3%2583%25AB%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E7%259F%25A5%25E8%25AD%2598-%25E5%25B9%25B3%25E6%25BE%25A4-%25E7%25AB%25A0-ebook%2Fdp%2FB092HDFJKK\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"29:1-29:45\"><iframe id=\"qiita-embed-content__0154919daa9834877c0cce44046fe80b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__0154919daa9834877c0cce44046fe80b\" data-content=\"https%3A%2F%2Fwww.techscore.com%2Ftech%2FDesignPattern%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"31:1-31:159\">これらの書籍やウェブサイトは分かりやすく書いてくれていると思いますが、なぜこの様なことが起きるのでしょう？</p>\n<h2 data-sourcepos=\"34:1-34:54\">\n<span id=\"そうだコードリーディングをしよう\" class=\"fragment\"></span><a href=\"#%E3%81%9D%E3%81%86%E3%81%A0%E3%82%B3%E3%83%BC%E3%83%89%E3%83%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%82%92%E3%81%97%E3%82%88%E3%81%86\"><i class=\"fa fa-link\"></i></a>そうだ、コードリーディングをしよう</h2>\n<p data-sourcepos=\"36:1-37:183\">書籍には「こうするとよい」というルールが書かれていると思います。ただし、実際のよい（悪い）例はあまり載っていないと思います。<br>\n書面には書ききれないし、あまり沢山載せてしまうと退屈になったり、ルールを伝えるという本質から外れてしまうからだと思います。</p>\n<p data-sourcepos=\"39:1-39:364\">一方で、ググってコピペをした経験がある方は分かると思いますが、ウェブ上には<strong>自分一人では考えつきもしないコード</strong>がたくさん存在しています。それらのコードをきちんと理解すれば、少し修正して自分のプロジェクトに適用できることも知っていると思います。</p>\n<p data-sourcepos=\"41:1-41:175\">小さな課題だけではなく大きな設計についても同様です。<strong>ウェブ上の他人は自分には考えつきもしないコードを書いています。</strong></p>\n<p data-sourcepos=\"43:1-44:374\">良い設計のプログラム、悪い設計のプログラム、大きなプログラム、小さなプログラムをたくさん読むことで、自分の中に<strong>ものさし</strong>ができます。<sup><a href=\"#fn-3\" id=\"fnref-3\">3</a></sup><br>\n面白くて分かりやすいも、何言ってるか分からないも<strong>相対的</strong>な評価です。なるべく長くて正確なものさしを自分の中に持たなければ自分のプログラムが分かりやすいのかを公平に判断できないし、<strong>自分の読めないコードは全てクソコード</strong>と判断してしまうかもしれません。</p>\n<p data-sourcepos=\"46:1-46:177\">コードリーディングを行うことで、書籍にあるルールを自分の知識として使いこなせるようにする力があるのではないでしょうか？</p>\n<h2 data-sourcepos=\"49:1-49:12\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n<p data-sourcepos=\"51:1-51:345\">課題に対して、自分で考えてプログラムを書いて解決するのは達成感もあり訓練にもなるのですが、時間をかけて自分で考えられるプログラムを書くことしかできません。人間は０から生み出すよりも、１や５をカイゼンしていく方が得意にできています。</p>\n<p data-sourcepos=\"53:1-53:258\">たくさんのコードを読んで、良いところを吸収しましょう。悪いところは、なぜその様なコードが生まれたか考えて、同じ様なコードを書かないように気をつけるようにするといいでしょう。</p>\n<p data-sourcepos=\"55:1-55:188\">まるで国語の問題の様ですが<strong>書いた人の思考も読み取りましょう。</strong> それができるようになるとコードを読む速さが飛躍的に上がります。</p>\n<p data-sourcepos=\"57:1-57:341\">オブジェクト指向もデザインパターンもとにかく使ってみないと覚えられないので、<strong>最初は無駄に複雑なコードを書きがちです。</strong> 大量のコードを書いていくうちに無駄が削ぎ落とされていきますが、書くだけで習得するのはかなり難易度が高いです。</p>\n<p data-sourcepos=\"59:1-59:202\">良い設計のプログラム、悪い設計のプログラム、大きなプログラム、小さなプログラムをたくさん読んで、自分の中の<strong>ものさし</strong>を拡張しましょう。</p>\n<p data-sourcepos=\"62:1-62:256\">本稿は<a href=\"https://qiita.com/official-events/3f21c92121aa125807b4\">新人プログラマ応援 - みんなで新人を育てよう！</a>イベント向けの記事になります。他にもいくつか投稿していますのでよろしければどうぞ。</p>\n<p data-sourcepos=\"64:1-64:50\"><iframe id=\"qiita-embed-content__8bb36d50cf9c22da9377469443066eba\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__8bb36d50cf9c22da9377469443066eba\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ffb949aa1a53f1f71c796\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"66:1-66:50\"><iframe id=\"qiita-embed-content__65338071e84994b48745e645e60c5039\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__65338071e84994b48745e645e60c5039\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff8411523cce000de750e\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"68:1-68:50\"><iframe id=\"qiita-embed-content__297d506800e9d4e55305d3768d7c1661\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__297d506800e9d4e55305d3768d7c1661\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2F937354cc180c8bee823b\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"70:1-70:50\"><iframe id=\"qiita-embed-content__e9631bc9421bef5cc90c457f350d2137\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e9631bc9421bef5cc90c457f350d2137\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Ff15aa269e5ef43a711d4\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<p data-sourcepos=\"72:1-72:50\"><iframe id=\"qiita-embed-content__d72e45bda02dd6058c1bba36de64ab6b\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__d72e45bda02dd6058c1bba36de64ab6b\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fabe98001f74025cec422\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"74:7-74:123\">アマゾンだと本の中をチラ見できないので技術書は本屋で買うのがいいと思っています <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"75:7-75:90\">わたしも分かりやすく面白い話ができる人になりたいものです <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-3\">\n<p data-sourcepos=\"76:7-76:165\">ものさしを拡張するという考え方が身につくと、レビューでの指摘にもいちいち過剰に反応しなくなるかもしれません <a href=\"#fnref-3\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## 勉強しているのに良いコードが書けない\n\n言語自体を学ぶのであれば、自分にあってそうな本を本屋で探して[^1]買ってきて、読みながら実際に動かしてみたりすればよいし、ちょっとよいコードが書きたくなったら、みなさんが勧めているリーダブルコードなどを読めばいいでしょう。\n\nただそのようなことをしていても**あるレベル以上のコードが書けるようにはならない**のですが、その理由を究明していきたいと思います。\n\n\n## 日本語もプログラムもただの言語\n\n日本語の読み書きは日本人であれば全員義務教育で学びます。\n日本語を学んだ人が全員分かりやすくて面白い話をするかというとそんなことはなくて、壊滅的に話がつまらない人や何言ってるか分からない人も存在します。\n\n『人に物事をうまく伝えられていないこと』に気づいていない方が大半、危機意識を持って書籍を読む方が少し、分かりやすくて面白い話をする方が数％といったとこでしょうか。[^2]\n\nこの点についてたくさん良書が出ていますが、説明の方法の本を読んでも次の日から説明が上手くなることはめったにないと思います。\n\n例）\n\nhttps://www.amazon.co.jp/%E4%B8%80%E7%95%AA%E4%BC%9D%E3%82%8F%E3%82%8B%E8%AA%AC%E6%98%8E%E3%81%AE%E9%A0%86%E7%95%AA-%E7%94%B0%E4%B8%AD%E8%80%95%E6%AF%94%E5%8F%A4-ebook/dp/B07DK7BCGS/\n\n\n同様にプログラム言語を**学ぶだけでは**人間やコンピュータにとって分かりやすくて面白いプログラムは書けません。\n意識の高いオブジェクト指向やデザインパターンを学んでも**次の日から優れたオブジェクト指向やデザインパターンを取り入れたコードが書けることもめったにないと思います。**\n\n例）\n\nhttps://www.amazon.co.jp/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E3%81%A7%E3%81%AA%E3%81%9C%E3%81%A4%E3%81%8F%E3%82%8B%E3%81%AE%E3%81%8B-%E7%AC%AC%EF%BC%93%E7%89%88-%E7%9F%A5%E3%81%A3%E3%81%A6%E3%81%8A%E3%81%8D%E3%81%9F%E3%81%84OOP%E3%80%81%E8%A8%AD%E8%A8%88%E3%80%81%E3%82%A2%E3%82%B8%E3%83%A3%E3%82%A4%E3%83%AB%E9%96%8B%E7%99%BA%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98-%E5%B9%B3%E6%BE%A4-%E7%AB%A0-ebook/dp/B092HDFJKK\n\nhttps://www.techscore.com/tech/DesignPattern/\n\nこれらの書籍やウェブサイトは分かりやすく書いてくれていると思いますが、なぜこの様なことが起きるのでしょう？\n\n\n## そうだ、コードリーディングをしよう\n\n書籍には「こうするとよい」というルールが書かれていると思います。ただし、実際のよい（悪い）例はあまり載っていないと思います。\n書面には書ききれないし、あまり沢山載せてしまうと退屈になったり、ルールを伝えるという本質から外れてしまうからだと思います。\n\n一方で、ググってコピペをした経験がある方は分かると思いますが、ウェブ上には**自分一人では考えつきもしないコード**がたくさん存在しています。それらのコードをきちんと理解すれば、少し修正して自分のプロジェクトに適用できることも知っていると思います。\n\n小さな課題だけではなく大きな設計についても同様です。**ウェブ上の他人は自分には考えつきもしないコードを書いています。**\n\n良い設計のプログラム、悪い設計のプログラム、大きなプログラム、小さなプログラムをたくさん読むことで、自分の中に**ものさし**ができます。[^3]\n面白くて分かりやすいも、何言ってるか分からないも**相対的**な評価です。なるべく長くて正確なものさしを自分の中に持たなければ自分のプログラムが分かりやすいのかを公平に判断できないし、**自分の読めないコードは全てクソコード**と判断してしまうかもしれません。\n\nコードリーディングを行うことで、書籍にあるルールを自分の知識として使いこなせるようにする力があるのではないでしょうか？\n\n\n## まとめ\n\n課題に対して、自分で考えてプログラムを書いて解決するのは達成感もあり訓練にもなるのですが、時間をかけて自分で考えられるプログラムを書くことしかできません。人間は０から生み出すよりも、１や５をカイゼンしていく方が得意にできています。\n\nたくさんのコードを読んで、良いところを吸収しましょう。悪いところは、なぜその様なコードが生まれたか考えて、同じ様なコードを書かないように気をつけるようにするといいでしょう。\n\nまるで国語の問題の様ですが**書いた人の思考も読み取りましょう。** それができるようになるとコードを読む速さが飛躍的に上がります。\n\nオブジェクト指向もデザインパターンもとにかく使ってみないと覚えられないので、**最初は無駄に複雑なコードを書きがちです。** 大量のコードを書いていくうちに無駄が削ぎ落とされていきますが、書くだけで習得するのはかなり難易度が高いです。\n\n良い設計のプログラム、悪い設計のプログラム、大きなプログラム、小さなプログラムをたくさん読んで、自分の中の**ものさし**を拡張しましょう。\n\n\n本稿は[新人プログラマ応援 - みんなで新人を育てよう！](https://qiita.com/official-events/3f21c92121aa125807b4)イベント向けの記事になります。他にもいくつか投稿していますのでよろしければどうぞ。\n\nhttps://qiita.com/kaku3/items/fb949aa1a53f1f71c796\n\nhttps://qiita.com/kaku3/items/f8411523cce000de750e\n\nhttps://qiita.com/kaku3/items/937354cc180c8bee823b\n\nhttps://qiita.com/kaku3/items/f15aa269e5ef43a711d4\n\nhttps://qiita.com/kaku3/items/abe98001f74025cec422\n\n[^1]: アマゾンだと本の中をチラ見できないので技術書は本屋で買うのがいいと思っています\n[^2]: わたしも分かりやすく面白い話ができる人になりたいものです\n[^3]: ものさしを拡張するという考え方が身につくと、レビューでの指摘にもいちいち過剰に反応しなくなるかもしれません\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-04-30T12:46:56+09:00",
    "group": null,
    "id": "a481c83f4f65f3321eca",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 1,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "コードリーディング",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      }
    ],
    "title": "良いコードを書くには...究明編",
    "updated_at": "2022-04-30T14:22:52+09:00",
    "url": "https://qiita.com/kaku3/items/a481c83f4f65f3321eca",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2279,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:108\">先日健康診断を受けた時に、そんなとこで業務カイゼンできるんだなと驚きまして。<br>\nまだまだ常識にとらわれてしまっているなと反省しましたので記事を書きます。</p>\n<h2 data-sourcepos=\"7:1-7:15\">\n<span id=\"視力検査\" class=\"fragment\"></span><a href=\"#%E8%A6%96%E5%8A%9B%E6%A4%9C%E6%9F%BB\"><i class=\"fa fa-link\"></i></a>視力検査</h2>\n<ul data-sourcepos=\"9:1-14:0\">\n<li data-sourcepos=\"9:1-11:0\">\n<p data-sourcepos=\"9:3-10:72\">before<br>\n「上から順に、穴のあいている方を教えてください」</p>\n</li>\n<li data-sourcepos=\"12:1-14:0\">\n<p data-sourcepos=\"12:3-13:45\">after<br>\n「どこらへんまで見えますか？」</p>\n</li>\n</ul>\n<p data-sourcepos=\"15:1-15:248\"><strong>そこそこの視力がある人にとっては当然見えるに決まっているものを上から順に読み上げる謎の儀式</strong> に何の疑問も抱いていなかったのですが、言われてみてなるほどと驚きました。</p>\n<h3 data-sourcepos=\"17:1-17:13\">\n<span id=\"気づき\" class=\"fragment\"></span><a href=\"#%E6%B0%97%E3%81%A5%E3%81%8D\"><i class=\"fa fa-link\"></i></a>気づき</h3>\n<p data-sourcepos=\"18:1-19:96\">適切な質問、コミュニケーションによってコストを下げられるのだなと思いました。<br>\n日頃反復している中にも無駄がないか今一度振り返りたいと思います。</p>\n<h2 data-sourcepos=\"22:1-22:9\">\n<span id=\"採血\" class=\"fragment\"></span><a href=\"#%E6%8E%A1%E8%A1%80\"><i class=\"fa fa-link\"></i></a>採血</h2>\n<ul data-sourcepos=\"24:1-30:0\">\n<li data-sourcepos=\"24:1-27:0\">\n<p data-sourcepos=\"24:3-26:45\">before<br>\n「いつもどっちから取ります？」<br>\n「ぐーぱぐーぱーしてください」</p>\n</li>\n<li data-sourcepos=\"28:1-30:0\">\n<p data-sourcepos=\"28:3-29:48\">after<br>\n「好きな方の手を出してください」</p>\n</li>\n</ul>\n<p data-sourcepos=\"31:1-31:224\">採血の注射器の針とスピッツ(試験管)が分かれているタイプになってからは、そんなに痛くないのでは？と薄々思っていたのですが、いよいよ聞かれなくなりました。</p>\n<p data-sourcepos=\"33:1-33:135\">刺した時に <strong>なんか血が出てましたが</strong> 顧客満足度としてはあんまり変わらなかったって感じです。</p>\n<h3 data-sourcepos=\"35:1-35:13\">\n<span id=\"気づき-1\" class=\"fragment\"></span><a href=\"#%E6%B0%97%E3%81%A5%E3%81%8D-1\"><i class=\"fa fa-link\"></i></a>気づき</h3>\n<p data-sourcepos=\"36:1-37:237\">顧客に提供する価値ってなんだろうなと考えさせられました。<br>\n健康診断の時は完全に油断していて早く終る事に価値を見出していませんでしたが、検査用に血を抜くことが目的なら、短時間で終わることに価値があるのではと思いました。</p>\n<p data-sourcepos=\"39:1-39:186\">熟練の看護師さんの技能がなくても業務が行える程度に技術が進歩しているのだとしたら、業務も変えられるんだろうなぁと思いました。</p>\n<p data-sourcepos=\"41:1-41:156\">脳死で業務のツールを使ってしまっていますが、新しいツールをウォッチしてやり方を変えていこうと思いました。</p>\n<h2 data-sourcepos=\"44:1-44:12\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n<p data-sourcepos=\"46:1-46:39\">今回の気付きは２点でした。</p>\n<ul data-sourcepos=\"48:1-50:0\">\n<li data-sourcepos=\"48:1-48:38\">質問とコミュニケーション</li>\n<li data-sourcepos=\"49:1-50:0\">ツールとワークフロー</li>\n</ul>\n<p data-sourcepos=\"51:1-52:90\">世間ではDXっていうワードに丸められちゃってますが、現場のカイゼンは小さな積み重ねで実現すると思います。<br>\n様々な事象をきちんと観察してカイゼンしていければと思います。</p>\n",
    "body": "## はじめに\n\n先日健康診断を受けた時に、そんなとこで業務カイゼンできるんだなと驚きまして。\nまだまだ常識にとらわれてしまっているなと反省しましたので記事を書きます。\n\n\n## 視力検査\n\n- before\n「上から順に、穴のあいている方を教えてください」\n\n- after\n「どこらへんまで見えますか？」\n\n**そこそこの視力がある人にとっては当然見えるに決まっているものを上から順に読み上げる謎の儀式** に何の疑問も抱いていなかったのですが、言われてみてなるほどと驚きました。\n\n### 気づき\n適切な質問、コミュニケーションによってコストを下げられるのだなと思いました。\n日頃反復している中にも無駄がないか今一度振り返りたいと思います。\n\n\n## 採血\n\n- before\n「いつもどっちから取ります？」\n「ぐーぱぐーぱーしてください」\n\n- after\n「好きな方の手を出してください」\n\n採血の注射器の針とスピッツ(試験管)が分かれているタイプになってからは、そんなに痛くないのでは？と薄々思っていたのですが、いよいよ聞かれなくなりました。\n\n刺した時に **なんか血が出てましたが** 顧客満足度としてはあんまり変わらなかったって感じです。\n\n### 気づき\n顧客に提供する価値ってなんだろうなと考えさせられました。\n健康診断の時は完全に油断していて早く終る事に価値を見出していませんでしたが、検査用に血を抜くことが目的なら、短時間で終わることに価値があるのではと思いました。\n\n熟練の看護師さんの技能がなくても業務が行える程度に技術が進歩しているのだとしたら、業務も変えられるんだろうなぁと思いました。\n\n脳死で業務のツールを使ってしまっていますが、新しいツールをウォッチしてやり方を変えていこうと思いました。\n\n\n## まとめ\n\n今回の気付きは２点でした。\n\n- 質問とコミュニケーション\n- ツールとワークフロー\n\n世間ではDXっていうワードに丸められちゃってますが、現場のカイゼンは小さな積み重ねで実現すると思います。\n様々な事象をきちんと観察してカイゼンしていければと思います。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-04-23T17:02:25+09:00",
    "group": null,
    "id": "ad2b24e4dd9e9beec083",
    "likes_count": 6,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "カイゼン",
        "versions": []
      },
      {
        "name": "業務効率化",
        "versions": []
      }
    ],
    "title": "健康診断で学ぶ業務カイゼン",
    "updated_at": "2022-04-23T17:02:25+09:00",
    "url": "https://qiita.com/kaku3/items/ad2b24e4dd9e9beec083",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1714,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:18\">\n<span id=\"プロローグ\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%83%AD%E3%83%BC%E3%82%B0\"><i class=\"fa fa-link\"></i></a>プロローグ</h2>\n<p data-sourcepos=\"3:1-3:121\">この文章を目に止めたあなたは、彼の地(IT業界)での長い旅路についていることでしょう。</p>\n<p data-sourcepos=\"5:1-5:202\">もしもこれまでの人生で、FF11でもPSOでも『数本』のMMORPGを遊んでいれば、この世界での旅路で起こることの多くを予見することができると思います。</p>\n<p data-sourcepos=\"7:1-7:102\">あなたの旅路がよりよいものになるように願いをこめて、すこし語ります。</p>\n<h2 data-sourcepos=\"10:1-10:18\">\n<span id=\"冒険の記憶\" class=\"fragment\"></span><a href=\"#%E5%86%92%E9%99%BA%E3%81%AE%E8%A8%98%E6%86%B6\"><i class=\"fa fa-link\"></i></a>冒険の記憶</h2>\n<p data-sourcepos=\"12:1-12:336\">右も左も分からない中、高レベルプレイヤーの誘いのままに、遺跡やダンジョンなどの未開の地を冒険したでしょうか。強い敵を高レベルプレイヤーが倒し、経験値のおこぼれに授かり、ドロップアイテムをもらえるウハウハ体験をしたでしょうか。</p>\n<p data-sourcepos=\"14:1-14:246\">また、高レベルプレイヤーになってからは、自分が受けた恩を返す、新米冒険者に知識を伝えることで優越感を味わう、などの理由で新米冒険者と旅をすることはあったでしょうか。</p>\n<p data-sourcepos=\"16:1-17:132\">一方で、最初は全てが新鮮で、いちいち感謝したり感動していたけれども、何本が遊んでいると体験の質が同じことに気づいたでしょうか。<br>\n自分のクエストを優先するようになり、新米冒険者に手を差し伸べなくなっていったでしょうか？</p>\n<p data-sourcepos=\"19:1-19:267\">あるいは、充実したチュートリアルをプレイし、ある一定のレベルまでは快適に進める様になったけれども、チュートリアルが終わってもその内容を全く覚えてないということはあったでしょうか？</p>\n<p data-sourcepos=\"21:1-21:141\"><strong>他にも色々な記憶があるかと思いますが、それらの記憶を、IT業界の旅路に置き換えてみてください。</strong></p>\n<p data-sourcepos=\"23:1-23:219\">MMORPGの中の人も彼の地で就労している人も同じ人間なのだから、彼の地で就労している高レベルプレイヤーや新米プレイヤーの立ち振舞も想像できてきませんか？</p>\n<p data-sourcepos=\"25:1-26:249\">あなたが経歴書を送りまくって面接をしまくってようやく所属したITギルドは、流れの冒険者の集まりです。<br>\nそれぞれの冒険者がそれぞれのクエストを抱えていて、たまたま新米冒険者に声をかけてくれる優しい人がいたりいなかったりする、そんな世界だと考えると分かりやすいと思います。</p>\n<h2 data-sourcepos=\"29:1-29:36\">\n<span id=\"課金でつよさは買えない\" class=\"fragment\"></span><a href=\"#%E8%AA%B2%E9%87%91%E3%81%A7%E3%81%A4%E3%82%88%E3%81%95%E3%81%AF%E8%B2%B7%E3%81%88%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>課金でつよさは買えない</h2>\n<p data-sourcepos=\"31:1-32:68\">ゲームの世界の記憶と彼の地のルールの違いで忘れてはならないことがあります。<br>\n<strong>『課金では簡単につよくならない』</strong> ことです。</p>\n<p data-sourcepos=\"34:1-36:316\">スクールなどへの課金は、有料チュートリアルだと考えると分かりやすいと思います。<br>\n本当につよくなるには無限に冒険を繰り返して地道に経験値を手に入れてレベルアップしてスキルツリーを伸ばしていくしかないです。<br>\n経験値２倍などのチートアイテムは存在しませんが、<strong>「知覚力」</strong> のスキルは何をしても経験値が多めに入りますし、<strong>「タイピング」</strong> のスキルは行動速度1.5倍のバフがかかり続けるので早めに取った方がよいスキルだと思います。</p>\n<h2 data-sourcepos=\"39:1-39:69\">\n<span id=\"ポップリポップモンスターの出現再出現\" class=\"fragment\"></span><a href=\"#%E3%83%9D%E3%83%83%E3%83%97%E3%83%AA%E3%83%9D%E3%83%83%E3%83%97%E3%83%A2%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%BC%E3%81%AE%E5%87%BA%E7%8F%BE%E5%86%8D%E5%87%BA%E7%8F%BE\"><i class=\"fa fa-link\"></i></a>ポップ・リポップ（モンスターの出現・再出現）</h2>\n<p data-sourcepos=\"41:1-42:228\">自分のレベルで効率よく経験値を稼げるモンスターを倒して、リポップ待ちして、再度倒して経験値を稼いだことはありますか？<br>\n特定の場所でプレイヤー達がこぞってポップ待ちをして、ポップしたらわれこそはと倒し、遠慮しているといつまで経っても経験値を得られなかったことはありますか？</p>\n<p data-sourcepos=\"44:1-45:156\">ITクエストにおいては、「案件」がこのモンスターに相当します。<br>\n実際には全く同じモンスターは存在しないため、「同程度の難易度の案件」がポップするのを待つことになります。</p>\n<p data-sourcepos=\"47:1-47:140\">日本国が運営しているITクエストは、案件の量も難易度も、年々渋くバランス調整されているようです。</p>\n<p data-sourcepos=\"49:1-50:165\">昔々あった、10人パーティで遺跡を何年もかけて攻略するといった案件は今ではほとんど存在しません。<br>\nモンスターが出現しないのであればギルドも冒険者も不要となってしまいますので、運営には頑張ってほしいものですね。</p>\n<p data-sourcepos=\"52:1-53:455\">最近の案件は以下でしょうか。<br>\nローコード・ノーコードの流れから来る、別系統のスキルツリーを伸ばす案件、アイデアを超高速で形にしてサービスをリリースするスタートアップ系案件、止められないレガシーシステムをリプレイスする高難易度マイグレーション案件、正体不明の敵DX案件、どの様な攻撃をされてもサービスを維持する大規模防衛戦SRE案件などなど。</p>\n<p data-sourcepos=\"55:1-55:99\">新米冒険者のあなたが倒せそうなモンスターはこの中にいるでしょうか？</p>\n<h2 data-sourcepos=\"58:1-58:41\">\n<span id=\"レベル20以降のレベルアップ\" class=\"fragment\"></span><a href=\"#%E3%83%AC%E3%83%99%E3%83%AB20%E4%BB%A5%E9%99%8D%E3%81%AE%E3%83%AC%E3%83%99%E3%83%AB%E3%82%A2%E3%83%83%E3%83%97\"><i class=\"fa fa-link\"></i></a>レベル20以降のレベルアップ</h2>\n<p data-sourcepos=\"60:1-60:323\">多くのゲームでは、レベルが上がる毎に1レベル上げるための経験値が高くなっていきます。あるいは、同じモンスターを倒していると経験値があまりもらえなくなります。更には1レベル上がってもたいしてつよくならなくなっていきます。</p>\n<p data-sourcepos=\"62:1-62:44\">これはITクエストでも同じです。</p>\n<p data-sourcepos=\"64:1-65:288\">単一の案件を継続すると、経験値が入りにくくなりレベルも上がらず他の案件へ入りにくくなります。<br>\nメインのクエストとは別で、死にかけながら効率的な狩り場を探したり、我慢して地道な反復をしたり様々な工夫をしてレベルを上げて、運営が用意する新たな案件への参加条件を獲得しないといけなくなります。</p>\n<p data-sourcepos=\"67:1-68:256\">ITクエストの世界では、github を旅して回ると消滅しないちょうどよいつよさのソースを見つけて経験値を稼げるかもしれません。<br>\nただ地図もコンパスもなく github を旅して回るのはとても大変なので、<strong>何か作りたいモノ</strong> など自分なりの課題を決めて、それを達成するための方法を探して回るのがよいかもしれません。</p>\n<p data-sourcepos=\"70:1-70:244\"><strong>案件でソースを読みきれないと即死で様々なデスペナルティが発生</strong>しますが、自発的に読んでいるソースは読み切れなくても死なないので安心して読めるのも利点だと思います。</p>\n<h2 data-sourcepos=\"73:1-73:39\">\n<span id=\"フルダイブmmorpg-itクエスト\" class=\"fragment\"></span><a href=\"#%E3%83%95%E3%83%AB%E3%83%80%E3%82%A4%E3%83%96mmorpg-it%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88\"><i class=\"fa fa-link\"></i></a>フルダイブMMORPG ITクエスト</h2>\n<p data-sourcepos=\"75:1-76:146\">MMORPGは魔王を倒して終わりではなく、その世界での暮らしを楽しむゲームだと思います。<br>\nITクエストは数十年続く人気ゲームですが、ゲームバランスが年々高難易度に調整されている様に思えます。</p>\n<p data-sourcepos=\"78:1-79:138\">とは言え、死にかけながら様々な無理難題を攻略した時の達成感はなかなかのものです。<br>\nエルデンリングを攻略できるような褪せ人達には、この不条理な世界も楽しめるかもしれないですね。</p>\n<p data-sourcepos=\"81:1-81:54\">「…あれ？ログアウトボタンがない？」</p>\n",
    "body": "## プロローグ\n\nこの文章を目に止めたあなたは、彼の地(IT業界)での長い旅路についていることでしょう。\n\nもしもこれまでの人生で、FF11でもPSOでも『数本』のMMORPGを遊んでいれば、この世界での旅路で起こることの多くを予見することができると思います。\n\nあなたの旅路がよりよいものになるように願いをこめて、すこし語ります。\n\n\n## 冒険の記憶\n\n右も左も分からない中、高レベルプレイヤーの誘いのままに、遺跡やダンジョンなどの未開の地を冒険したでしょうか。強い敵を高レベルプレイヤーが倒し、経験値のおこぼれに授かり、ドロップアイテムをもらえるウハウハ体験をしたでしょうか。\n\nまた、高レベルプレイヤーになってからは、自分が受けた恩を返す、新米冒険者に知識を伝えることで優越感を味わう、などの理由で新米冒険者と旅をすることはあったでしょうか。\n\n一方で、最初は全てが新鮮で、いちいち感謝したり感動していたけれども、何本が遊んでいると体験の質が同じことに気づいたでしょうか。\n自分のクエストを優先するようになり、新米冒険者に手を差し伸べなくなっていったでしょうか？\n\nあるいは、充実したチュートリアルをプレイし、ある一定のレベルまでは快適に進める様になったけれども、チュートリアルが終わってもその内容を全く覚えてないということはあったでしょうか？\n\n**他にも色々な記憶があるかと思いますが、それらの記憶を、IT業界の旅路に置き換えてみてください。**\n\nMMORPGの中の人も彼の地で就労している人も同じ人間なのだから、彼の地で就労している高レベルプレイヤーや新米プレイヤーの立ち振舞も想像できてきませんか？\n\nあなたが経歴書を送りまくって面接をしまくってようやく所属したITギルドは、流れの冒険者の集まりです。\nそれぞれの冒険者がそれぞれのクエストを抱えていて、たまたま新米冒険者に声をかけてくれる優しい人がいたりいなかったりする、そんな世界だと考えると分かりやすいと思います。\n\n\n## 課金でつよさは買えない\n\nゲームの世界の記憶と彼の地のルールの違いで忘れてはならないことがあります。\n**『課金では簡単につよくならない』** ことです。\n\nスクールなどへの課金は、有料チュートリアルだと考えると分かりやすいと思います。\n本当につよくなるには無限に冒険を繰り返して地道に経験値を手に入れてレベルアップしてスキルツリーを伸ばしていくしかないです。\n経験値２倍などのチートアイテムは存在しませんが、**「知覚力」** のスキルは何をしても経験値が多めに入りますし、**「タイピング」** のスキルは行動速度1.5倍のバフがかかり続けるので早めに取った方がよいスキルだと思います。\n\n\n## ポップ・リポップ（モンスターの出現・再出現）\n\n自分のレベルで効率よく経験値を稼げるモンスターを倒して、リポップ待ちして、再度倒して経験値を稼いだことはありますか？\n特定の場所でプレイヤー達がこぞってポップ待ちをして、ポップしたらわれこそはと倒し、遠慮しているといつまで経っても経験値を得られなかったことはありますか？\n\nITクエストにおいては、「案件」がこのモンスターに相当します。\n実際には全く同じモンスターは存在しないため、「同程度の難易度の案件」がポップするのを待つことになります。\n\n日本国が運営しているITクエストは、案件の量も難易度も、年々渋くバランス調整されているようです。\n\n昔々あった、10人パーティで遺跡を何年もかけて攻略するといった案件は今ではほとんど存在しません。\nモンスターが出現しないのであればギルドも冒険者も不要となってしまいますので、運営には頑張ってほしいものですね。\n\n最近の案件は以下でしょうか。\nローコード・ノーコードの流れから来る、別系統のスキルツリーを伸ばす案件、アイデアを超高速で形にしてサービスをリリースするスタートアップ系案件、止められないレガシーシステムをリプレイスする高難易度マイグレーション案件、正体不明の敵DX案件、どの様な攻撃をされてもサービスを維持する大規模防衛戦SRE案件などなど。\n\n新米冒険者のあなたが倒せそうなモンスターはこの中にいるでしょうか？\n\n\n## レベル20以降のレベルアップ\n\n多くのゲームでは、レベルが上がる毎に1レベル上げるための経験値が高くなっていきます。あるいは、同じモンスターを倒していると経験値があまりもらえなくなります。更には1レベル上がってもたいしてつよくならなくなっていきます。\n\nこれはITクエストでも同じです。\n\n単一の案件を継続すると、経験値が入りにくくなりレベルも上がらず他の案件へ入りにくくなります。\nメインのクエストとは別で、死にかけながら効率的な狩り場を探したり、我慢して地道な反復をしたり様々な工夫をしてレベルを上げて、運営が用意する新たな案件への参加条件を獲得しないといけなくなります。\n\nITクエストの世界では、github を旅して回ると消滅しないちょうどよいつよさのソースを見つけて経験値を稼げるかもしれません。\nただ地図もコンパスもなく github を旅して回るのはとても大変なので、**何か作りたいモノ** など自分なりの課題を決めて、それを達成するための方法を探して回るのがよいかもしれません。\n\n**案件でソースを読みきれないと即死で様々なデスペナルティが発生**しますが、自発的に読んでいるソースは読み切れなくても死なないので安心して読めるのも利点だと思います。\n\n\n## フルダイブMMORPG ITクエスト\n\nMMORPGは魔王を倒して終わりではなく、その世界での暮らしを楽しむゲームだと思います。\nITクエストは数十年続く人気ゲームですが、ゲームバランスが年々高難易度に調整されている様に思えます。\n\nとは言え、死にかけながら様々な無理難題を攻略した時の達成感はなかなかのものです。\nエルデンリングを攻略できるような褪せ人達には、この不条理な世界も楽しめるかもしれないですね。\n\n「…あれ？ログアウトボタンがない？」\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-04-23T16:03:02+09:00",
    "group": null,
    "id": "f15aa269e5ef43a711d4",
    "likes_count": 23,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 5,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      }
    ],
    "title": "フルダイブMMORPG ITクエスト",
    "updated_at": "2022-04-23T16:03:02+09:00",
    "url": "https://qiita.com/kaku3/items/f15aa269e5ef43a711d4",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 11284,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:42\">\n<span id=\"プロジェクトの空気の読み方\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E7%A9%BA%E6%B0%97%E3%81%AE%E8%AA%AD%E3%81%BF%E6%96%B9\"><i class=\"fa fa-link\"></i></a>プロジェクトの空気の読み方</h2>\n<p data-sourcepos=\"3:1-3:85\"><strong>空気は吸ったり吐いたりするもので読むものではないです。</strong></p>\n<p data-sourcepos=\"5:1-5:195\">そんな目に見えないモノを読もうとしても読めるわけがないのですが、空気を読んで上手く立ち回っているっぽく感じる人がいるのも事実です。</p>\n<p data-sourcepos=\"7:1-7:63\">では一体彼らは何を読んでいるのでしょう…？</p>\n<p data-sourcepos=\"9:1-10:90\">そうです。<br>\n彼らは俯瞰してプロジェクトの大いなる流れを読んでいるのです。</p>\n<p data-sourcepos=\"12:1-13:201\">プロジェクト全体の大いなる流れ、すなわち全体のタスクと各タスクの日程感を把握して、どのタイミングでどの様に振る舞うべきかを考えて行動しているのです。<br>\n目に見えない空気ではなく『目に見えるタスクと、それらのタスクの日程感を見て行動を考える』ことこそが『プロジェクトの空気の読み方』です。</p>\n<p data-sourcepos=\"15:1-18:114\">基本は、与えられたタスクについて締切から逆算して何をすべきか考える。<br>\n誰か他の人が関係する時はその人のタスクについても同様に考える。<br>\nついでにプロジェクト全体のタスクや締切も把握しておく。<br>\nこれが空気の読み方ですがピンと来ないと思うのでいくつか例をあげてみましょう。</p>\n<h2 data-sourcepos=\"21:1-21:90\">\n<span id=\"先輩が忙しそうだからと質問するのを躊躇締切を守れなかった\" class=\"fragment\"></span><a href=\"#%E5%85%88%E8%BC%A9%E3%81%8C%E5%BF%99%E3%81%97%E3%81%9D%E3%81%86%E3%81%A0%E3%81%8B%E3%82%89%E3%81%A8%E8%B3%AA%E5%95%8F%E3%81%99%E3%82%8B%E3%81%AE%E3%82%92%E8%BA%8A%E8%BA%87%E7%B7%A0%E5%88%87%E3%82%92%E5%AE%88%E3%82%8C%E3%81%AA%E3%81%8B%E3%81%A3%E3%81%9F\"><i class=\"fa fa-link\"></i></a>先輩が忙しそうだからと質問するのを躊躇、締切を守れなかった</h2>\n<p data-sourcepos=\"23:1-25:39\">分からないことがあるけれども、忙しそうな先輩に申し訳なくて声をかけることができない。<br>\n散々様子を伺ってようやく声をかけれた時には「なんで今聞くの？もっと早く聞きなよ？」と言われてしまう。<br>\n新人あるあるかと思います。</p>\n<p data-sourcepos=\"27:1-30:255\">ここで「もっと早く聞きなよ？」と言われる理由を考察してみましょう。<br>\nおそらく先輩はあなたのタスクの締め切りも担保しなければいけない立場ではないでしょうか？<br>\nもしそうであれば、あなたの仕事が終わらないことも先輩の仕事が終わらないことも同義です。<br>\nあなたが早く質問していれば、適切にアドバイスをすることであなたの仕事を無事に終わらせることができたという状況であれば「もっと早く聞きなよ？」と言いたくなるかもしれません。</p>\n<p data-sourcepos=\"32:1-32:153\">忙しそうにしているところに声をかけることと、締切に仕事が終わらないこととどちらが申し訳ないでしょうか？</p>\n<h2 data-sourcepos=\"35:1-35:81\">\n<span id=\"できないことをできないと言えないまま締め切りを迎えた\" class=\"fragment\"></span><a href=\"#%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8%E3%82%92%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E3%81%A8%E8%A8%80%E3%81%88%E3%81%AA%E3%81%84%E3%81%BE%E3%81%BE%E7%B7%A0%E3%82%81%E5%88%87%E3%82%8A%E3%82%92%E8%BF%8E%E3%81%88%E3%81%9F\"><i class=\"fa fa-link\"></i></a>できないことをできないと言えないまま締め切りを迎えた</h2>\n<p data-sourcepos=\"37:1-37:81\">できないことをできないということは勇気がいることです。</p>\n<p data-sourcepos=\"39:1-39:186\">しかしながら、与えられたタスクができていないまま、できないとも言えずに締め切りを迎えると何が起きるのかを考察してみましょう。</p>\n<p data-sourcepos=\"41:1-41:273\">学校の宿題ができなかったのであれば、あなたが先生に怒られて終わりです。ひょっとしたら成績が下るかもしれないし、下がらないかもしれない。その場さえ乗り切れば終わりだったかもしれません。</p>\n<p data-sourcepos=\"43:1-43:345\">会社の仕事は基本的にはお客様との契約の上成り立っているチームでの仕事です。チーム全体がお客様との契約を履行できないという状況に陥ります。お客様に至ってはあなた達のチームに依頼した製品をリリースできず大きな損害を被ることになります。</p>\n<p data-sourcepos=\"45:1-45:142\">できないと分かった時点でチームの誰かに相談しましょう。誰もあなたのことを責めないと思います。<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup></p>\n<p data-sourcepos=\"47:1-48:105\">誰かがフォローするとしても、問題に対処する時間が少ないとフォローできないです。<br>\n時間が少なければ少ない程フォローができる人間は少なくなってしまいます。</p>\n<h2 data-sourcepos=\"51:1-51:42\">\n<span id=\"作業見積もりを答えられない\" class=\"fragment\"></span><a href=\"#%E4%BD%9C%E6%A5%AD%E8%A6%8B%E7%A9%8D%E3%82%82%E3%82%8A%E3%82%92%E7%AD%94%E3%81%88%E3%82%89%E3%82%8C%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>作業見積もりを答えられない</h2>\n<p data-sourcepos=\"53:1-54:211\">やったことのない作業の見積もりを正確にできる人間はいません。<br>\n無理して根拠のない見積もりを申告するより、まずはx時間くださいと言って見積もり根拠を収集して精度の高い見積もりを出してみてはいかがでしょうか。</p>\n<h2 data-sourcepos=\"57:1-57:12\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n<p data-sourcepos=\"59:1-59:207\">プロジェクトの『空気』は、いつまでに何を納品するか、納品した開発物をお客様がどの様に利用するか、までを考えると読むことができると思います。</p>\n<p data-sourcepos=\"61:1-61:237\">これはこれで大変なことではあるのですが、よく分からないことで思い悩むよりもアウトプットに集中するという考え方をした方が仕事がしやすくなるのではないでしょうか。</p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"64:7-64:33\">責めないでください <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## プロジェクトの空気の読み方\n\n**空気は吸ったり吐いたりするもので読むものではないです。**\n\nそんな目に見えないモノを読もうとしても読めるわけがないのですが、空気を読んで上手く立ち回っているっぽく感じる人がいるのも事実です。\n\nでは一体彼らは何を読んでいるのでしょう…？\n\nそうです。\n彼らは俯瞰してプロジェクトの大いなる流れを読んでいるのです。\n\nプロジェクト全体の大いなる流れ、すなわち全体のタスクと各タスクの日程感を把握して、どのタイミングでどの様に振る舞うべきかを考えて行動しているのです。\n目に見えない空気ではなく『目に見えるタスクと、それらのタスクの日程感を見て行動を考える』ことこそが『プロジェクトの空気の読み方』です。\n\n基本は、与えられたタスクについて締切から逆算して何をすべきか考える。\n誰か他の人が関係する時はその人のタスクについても同様に考える。\nついでにプロジェクト全体のタスクや締切も把握しておく。\nこれが空気の読み方ですがピンと来ないと思うのでいくつか例をあげてみましょう。\n\n\n## 先輩が忙しそうだからと質問するのを躊躇、締切を守れなかった\n\n分からないことがあるけれども、忙しそうな先輩に申し訳なくて声をかけることができない。\n散々様子を伺ってようやく声をかけれた時には「なんで今聞くの？もっと早く聞きなよ？」と言われてしまう。\n新人あるあるかと思います。\n\nここで「もっと早く聞きなよ？」と言われる理由を考察してみましょう。\nおそらく先輩はあなたのタスクの締め切りも担保しなければいけない立場ではないでしょうか？\nもしそうであれば、あなたの仕事が終わらないことも先輩の仕事が終わらないことも同義です。\nあなたが早く質問していれば、適切にアドバイスをすることであなたの仕事を無事に終わらせることができたという状況であれば「もっと早く聞きなよ？」と言いたくなるかもしれません。\n\n忙しそうにしているところに声をかけることと、締切に仕事が終わらないこととどちらが申し訳ないでしょうか？\n\n\n## できないことをできないと言えないまま締め切りを迎えた\n\nできないことをできないということは勇気がいることです。\n\nしかしながら、与えられたタスクができていないまま、できないとも言えずに締め切りを迎えると何が起きるのかを考察してみましょう。\n\n学校の宿題ができなかったのであれば、あなたが先生に怒られて終わりです。ひょっとしたら成績が下るかもしれないし、下がらないかもしれない。その場さえ乗り切れば終わりだったかもしれません。\n\n会社の仕事は基本的にはお客様との契約の上成り立っているチームでの仕事です。チーム全体がお客様との契約を履行できないという状況に陥ります。お客様に至ってはあなた達のチームに依頼した製品をリリースできず大きな損害を被ることになります。\n\nできないと分かった時点でチームの誰かに相談しましょう。誰もあなたのことを責めないと思います。[^1]\n\n誰かがフォローするとしても、問題に対処する時間が少ないとフォローできないです。\n時間が少なければ少ない程フォローができる人間は少なくなってしまいます。\n\n\n## 作業見積もりを答えられない\n\nやったことのない作業の見積もりを正確にできる人間はいません。\n無理して根拠のない見積もりを申告するより、まずはx時間くださいと言って見積もり根拠を収集して精度の高い見積もりを出してみてはいかがでしょうか。\n\n\n## まとめ\n\nプロジェクトの『空気』は、いつまでに何を納品するか、納品した開発物をお客様がどの様に利用するか、までを考えると読むことができると思います。\n\nこれはこれで大変なことではあるのですが、よく分からないことで思い悩むよりもアウトプットに集中するという考え方をした方が仕事がしやすくなるのではないでしょうか。\n\n\n[^1]: 責めないでください\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-04-06T01:44:12+09:00",
    "group": null,
    "id": "937354cc180c8bee823b",
    "likes_count": 28,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 15,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      }
    ],
    "title": "プロジェクトの空気の読み方",
    "updated_at": "2022-04-06T01:44:12+09:00",
    "url": "https://qiita.com/kaku3/items/937354cc180c8bee823b",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 8164,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:30\">\n<span id=\"日本語ライティング\" class=\"fragment\"></span><a href=\"#%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%A9%E3%82%A4%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0\"><i class=\"fa fa-link\"></i></a>日本語ライティング</h2>\n<p data-sourcepos=\"3:1-4:42\">何を言っているんだと感じるかもしれませんが、社会に出て最初に学ぶべきことは圧倒的に日本語ライティングです。<br>\n次点でタッチタイピングです。</p>\n<h2 data-sourcepos=\"7:1-7:48\">\n<span id=\"あれわたし日本語書いてない\" class=\"fragment\"></span><a href=\"#%E3%81%82%E3%82%8C%E3%82%8F%E3%81%9F%E3%81%97%E6%97%A5%E6%9C%AC%E8%AA%9E%E6%9B%B8%E3%81%84%E3%81%A6%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>あれ？わたし日本語書いてない？</h2>\n<p data-sourcepos=\"9:1-10:217\">自分の胸に手を当てて、日常生活を振り返ってみましょう。<br>\nLineで短いメッセージを送ったり、facebookでなんとなく思ってることを書いたりはするけれども、<strong>まとまった量の文章を書く機会</strong>って、少なくないでしょうか？</p>\n<p data-sourcepos=\"12:1-12:396\">現代文の試験で <strong>「文章を読んで作者の考えを述べよ」</strong> という問題が出題されて <strong>「そんなアカの他人の考えなんか分からねーよｗ」</strong> という黒い感情を抱いた人は少なくないと思いますが、文章には記載のない前提知識や業務知識も要求されるような問題が、業務では普通に出題されます。</p>\n<p data-sourcepos=\"14:1-14:358\">例えば外部設計という仕事では、生まれも育ちも違うお客様が書いた 100ページ以上もある要件定義書を読んで、意図を汲み取って整理し、数100ページ単位の外部設計書を書いて、お客様が思った通りの製品を開発するための設計を開発者に伝えなければいけません。</p>\n<p data-sourcepos=\"16:1-17:122\">この業務は、文章を読み取る、整理する、理解する、文章を出力する以外の能力を必要としませんが、できる人がとても少ないです。<br>\n理由は簡単で、<strong>まとまった日本語の文章を書く訓練をしていないからできない</strong> のです。</p>\n<p data-sourcepos=\"19:1-20:111\">良質な書籍がたくさん出ているけれども、それでもできる人が少ないのは、一朝一夕でできることではないということを裏付けていると思います。<br>\n自分の手に馴染んで無意識で良い文章を書ける様になるには反復練習が必要です。</p>\n<p data-sourcepos=\"22:1-22:243\">社説要約でも何でもよいですが、 <strong>『意味の分からないアカの他人の文章を読んでまとめて誰かにレビューしてもらう』</strong> という日本語ライティングの訓練を継続してみませんか？</p>\n<p data-sourcepos=\"24:1-24:14\">(参考書籍)</p>\n<ul data-sourcepos=\"25:1-28:0\">\n<li data-sourcepos=\"25:1-25:218\"><a href=\"https://www.amazon.co.jp/%E4%B8%80%E7%95%AA%E4%BC%9D%E3%82%8F%E3%82%8B%E8%AA%AC%E6%98%8E%E3%81%AE%E9%A0%86%E7%95%AA-%E7%94%B0%E4%B8%AD%E8%80%95%E6%AF%94%E5%8F%A4-ebook/dp/B07DK7BCGS/\" rel=\"nofollow noopener\" target=\"_blank\">一番伝わる説明の順番</a></li>\n<li data-sourcepos=\"26:1-28:0\"><a href=\"https://www.amazon.co.jp/%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E6%96%87%E7%AB%A0%E8%A1%93-%E5%86%8D%E5%85%A5%E9%96%80%E8%AC%9B%E5%BA%A7-%E6%96%B0%E7%89%88-%E7%8A%B6%E6%B3%81%E5%88%A5%E3%81%AB%E3%81%99%E3%81%90%E5%8A%B9%E3%81%8F-%E6%96%87%E6%9B%B8%E3%83%BB%E6%96%87%E7%AB%A0%E4%BD%9C%E6%88%90%E3%81%AE%E5%AE%9F%E8%B7%B5%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF/dp/4798164259/\" rel=\"nofollow noopener\" target=\"_blank\">エンジニアのための文章術 再入門講座 新版 状況別にすぐ効く! 文書・文章作成の実践テクニック</a></li>\n</ul>\n<h2 data-sourcepos=\"29:1-29:33\">\n<span id=\"使わない能力は衰える\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%82%8F%E3%81%AA%E3%81%84%E8%83%BD%E5%8A%9B%E3%81%AF%E8%A1%B0%E3%81%88%E3%82%8B\"><i class=\"fa fa-link\"></i></a>使わない能力は衰える</h2>\n<p data-sourcepos=\"31:1-32:81\">人間には恐ろしい仕様があります。<br>\n使わない能力はじわじわと少しずつ衰えるという仕様です。</p>\n<p data-sourcepos=\"34:1-34:274\">フォートナイト、APEXやストリートファイターなどのアクション性の高いゲームや何らかのスポーツをやっている方は経験があると思いますが、強さを維持するためには、訓練や実践を継続する必要です。</p>\n<p data-sourcepos=\"36:1-37:229\">同様に、文章力を維持するためにも定期的なアウトプットが必要です。<br>\n気づかないくらい少しずつ衰えるという鬼畜仕様で、気づいた時には致命的な程に文章が書けなくなっていて、書くのが嫌になったりするので本当に注意が必要です。<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup></p>\n<h2 data-sourcepos=\"40:1-40:18\">\n<span id=\"タイピング\" class=\"fragment\"></span><a href=\"#%E3%82%BF%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0\"><i class=\"fa fa-link\"></i></a>タイピング</h2>\n<p data-sourcepos=\"42:1-42:213\">多くの人が「必ずしも必要ではない」と提唱していますが、飛び抜けて何らかの技能を持っていないのであれば身につけておいた方がいい能力かと思います。</p>\n<p data-sourcepos=\"44:1-45:156\">文章にしてもプログラムにしても試行錯誤できる回数が増えるからです。<br>\n試行錯誤の回数はそのまま得られる経験値やアウトプットの品質に直結しますので、何をするにも効率がよいです。</p>\n<p data-sourcepos=\"47:1-48:228\">加えてタイピングが遅いと何をするのも億劫になります。<br>\n足が速ければ、サッカーもバスケットもある程度抵抗なく始められると思いますが、足が遅ければ、そもそも運動に興味を持てない可能性が上がることもあるでしょう。</p>\n<p data-sourcepos=\"50:1-50:99\">敢えて習得をドロップする理由はないと思いますが、いかがでしょうか？</p>\n<h2 data-sourcepos=\"53:1-53:60\">\n<span id=\"新人の多くの問題は日本語力で解決できる\" class=\"fragment\"></span><a href=\"#%E6%96%B0%E4%BA%BA%E3%81%AE%E5%A4%9A%E3%81%8F%E3%81%AE%E5%95%8F%E9%A1%8C%E3%81%AF%E6%97%A5%E6%9C%AC%E8%AA%9E%E5%8A%9B%E3%81%A7%E8%A7%A3%E6%B1%BA%E3%81%A7%E3%81%8D%E3%82%8B\"><i class=\"fa fa-link\"></i></a>新人の多くの問題は日本語力で解決できる</h2>\n<h3 data-sourcepos=\"55:1-55:28\">\n<span id=\"報連相ができない\" class=\"fragment\"></span><a href=\"#%E5%A0%B1%E9%80%A3%E7%9B%B8%E3%81%8C%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>報連相ができない</h3>\n<p data-sourcepos=\"57:1-57:273\">先日、<a href=\"https://qiita.com/kaku3/items/f8411523cce000de750e\" id=\"reference-f2773d18297a4cc2cc30\">結論から報告するのは難しい</a>という記事を書きましたが、こちらの記事の報告側の問題の多くは <strong>日本語ライティング能力</strong> で解決できると考えています。</p>\n<p data-sourcepos=\"59:1-59:153\">報告書を書くこと自体が速くなれば、報告の回数を増やす事や内容を見直すことに対する抵抗も減ると思います。</p>\n<p data-sourcepos=\"61:1-61:186\">当然、闇雲に試行錯誤していてもカイゼンしませんので、前人の偉大な知識はググったり書籍を読んだりして拝借するのがよいでしょう。</p>\n<p data-sourcepos=\"63:1-63:8\">(書籍)</p>\n<ul data-sourcepos=\"64:1-66:0\">\n<li data-sourcepos=\"64:1-66:0\"><a href=\"https://www.amazon.co.jp/%E4%BC%9A%E7%A4%BE%E3%81%A7%E3%81%AF%E6%95%99%E3%81%88%E3%81%A6%E3%82%82%E3%82%89%E3%81%88%E3%81%AA%E3%81%84-%E4%B8%8A%E3%81%AB%E8%A1%8C%E3%81%8F%E4%BA%BA%E3%81%AE-%E5%A0%B1%E9%80%A3%E7%9B%B8%E3%81%AE%E3%82%AD%E3%83%9B%E3%83%B3-%E8%BB%8A%E5%A1%9A-%E5%85%83%E7%AB%A0/dp/4799106635/\" rel=\"nofollow noopener\" target=\"_blank\">会社では教えてもらえない 上に行く人の 報連相のキホン</a></li>\n</ul>\n<h3 data-sourcepos=\"67:1-67:34\">\n<span id=\"質問がうまくできない\" class=\"fragment\"></span><a href=\"#%E8%B3%AA%E5%95%8F%E3%81%8C%E3%81%86%E3%81%BE%E3%81%8F%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>質問がうまくできない</h3>\n<p data-sourcepos=\"69:1-69:198\">先輩が忙しそうにしている中、懸命にタイミングを伺って質問をしたら、以下のような指摘を受けてテンションが下がった経験はないでしょうか？</p>\n<ul data-sourcepos=\"71:1-73:0\">\n<li data-sourcepos=\"71:1-71:14\">早く聞け</li>\n<li data-sourcepos=\"72:1-73:0\">整理してから聞け</li>\n</ul>\n<p data-sourcepos=\"74:1-74:66\">聞きにいくたびに逆のことを言うじゃないかと。</p>\n<p data-sourcepos=\"76:1-76:150\">でもこれって、日本語ライティング力とタイピング力があれば、「早く整理して」聞けることになりませんか？</p>\n<p data-sourcepos=\"78:1-78:300\">先輩が感情的に話す方の場合はそこは改善してもらった方がいいと思いますが、質問の元になった問題、その時の状況および質問の内容を分析して次回どうするかを考えてメモして早く整理して聞けるようになりましょう。</p>\n<p data-sourcepos=\"80:1-80:240\">間違っても「あの先輩は毎回言うことが違う困った先輩」とカテゴライズして以後のコミュニケーションを取ることを断絶するのはやめましょう。お互いにとってマイナスです。</p>\n<h3 data-sourcepos=\"83:1-83:28\">\n<span id=\"プログラムが汚い\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%8C%E6%B1%9A%E3%81%84\"><i class=\"fa fa-link\"></i></a>プログラムが汚い</h3>\n<p data-sourcepos=\"85:1-86:129\">プログラミングは <strong>『日本語をコンピューターを動かすための言語に翻訳する』</strong> 作業です。<br>\nですので、「論理的で分かりやすい日本語」を翻訳したコードであれば可読性は高いはずです。</p>\n<p data-sourcepos=\"88:1-88:393\">最適で高速な賢いアルゴリズムを書こうとした場合は「コンピューター」が見て分かりやすいコードを書く必要があるので、「人が見て」汚いのは仕方がないですが、そういう前提はあるとしても <strong>「なぜその様な実装がされているか分からないコード」</strong> を見かけることは少なくないです。</p>\n<p data-sourcepos=\"90:1-91:120\">「論理的で分かりやすい日本語」をベースに書かれていないコードは、コードレビューでの説明もできないと思います。<br>\n説明が苦手なのではなくて、説明ができない日本語をプログラム化したのだと思います。</p>\n<p data-sourcepos=\"93:1-93:186\">何年プログラマとして経験を積んでも設計ができるようにならない人が一定数いるのは、このあたりに大きな要因があると感じています。</p>\n<p data-sourcepos=\"95:1-95:357\">『論理的で分かりやすい日本語を翻訳したコード』を書くのは慣れるまでは時間がかかるかもしれませんが、長いエンジニア人生で見た場合、その様なコードを書いておかないとどこかでキャリアが頭打ちするリスクがあることは理解しておいた方がよいでしょう。</p>\n<h3 data-sourcepos=\"98:1-98:34\">\n<span id=\"プログラムが書けない\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%8C%E6%9B%B8%E3%81%91%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>プログラムが書けない</h3>\n<p data-sourcepos=\"100:1-100:126\">こちらは残念ながら <strong>日本語ライティング力では解決できません</strong> が問題の構造は同じです。</p>\n<p data-sourcepos=\"102:1-104:80\">突然ですが英語を話したり書いたりできますか？<br>\n義務教育を受けていれば相当長い期間習っていると思いますが、できない方が大半だと思います。<br>\n<strong>『書いたり話したりしていないからできない』</strong> のです。</p>\n<p data-sourcepos=\"106:1-106:132\">同様に、会社でどんなに先輩が懇切丁寧に分かりやすく教えてくれても書けるようになりません。</p>\n<p data-sourcepos=\"108:1-108:216\">会社は学校ではないので自分で時間を見つけてコソ練するしかありません。コソ練を継続するコツは楽しむことです。楽しくないことは続けられないですから。</p>\n<p data-sourcepos=\"110:1-111:141\">※コソ練用の記事も寄稿していますので、よろしければご参照ください。<br>\n<a href=\"https://qiita.com/kaku3/items/abe98001f74025cec422\" id=\"reference-3f6e23613a0374bca546\">新人Web系職業プログラマーのための「丁度よいサイズの課題集」</a></p>\n<h2 data-sourcepos=\"113:1-113:12\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n<p data-sourcepos=\"115:1-115:76\">今回は、<strong>日本語ライティング</strong>の重要性を書きました。</p>\n<p data-sourcepos=\"117:1-117:234\">文中の報連相や質問の問題は、新人固有の問題かと思われがちですが、どこまでもついて回ります。お客様への報連相や質問は新人の時のそれより遥かに難易度が高いです。</p>\n<p data-sourcepos=\"119:1-121:78\">炎上したプロジェクトを鎮火させるのに必要なのは日本語です。<br>\n炎上させない様に合意形成を取るのも日本語です。<br>\nプロジェクトを円滑に運営するのにも日本語は必要です。</p>\n<p data-sourcepos=\"123:1-123:211\">エンジニアとしてやっている限り、ひいては、日本で社会人をやっている限り必要な<strong>日本語ライティング</strong>を是非今日から始めてみてはいかがでしょうか。</p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"126:7-126:78\">この記事も自分の練習のために書いていたりします。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## 日本語ライティング\n\n何を言っているんだと感じるかもしれませんが、社会に出て最初に学ぶべきことは圧倒的に日本語ライティングです。\n次点でタッチタイピングです。\n\n\n## あれ？わたし日本語書いてない？\n\n自分の胸に手を当てて、日常生活を振り返ってみましょう。\nLineで短いメッセージを送ったり、facebookでなんとなく思ってることを書いたりはするけれども、**まとまった量の文章を書く機会**って、少なくないでしょうか？\n\n現代文の試験で **「文章を読んで作者の考えを述べよ」** という問題が出題されて **「そんなアカの他人の考えなんか分からねーよｗ」** という黒い感情を抱いた人は少なくないと思いますが、文章には記載のない前提知識や業務知識も要求されるような問題が、業務では普通に出題されます。\n\n例えば外部設計という仕事では、生まれも育ちも違うお客様が書いた 100ページ以上もある要件定義書を読んで、意図を汲み取って整理し、数100ページ単位の外部設計書を書いて、お客様が思った通りの製品を開発するための設計を開発者に伝えなければいけません。\n\nこの業務は、文章を読み取る、整理する、理解する、文章を出力する以外の能力を必要としませんが、できる人がとても少ないです。\n理由は簡単で、**まとまった日本語の文章を書く訓練をしていないからできない** のです。\n\n良質な書籍がたくさん出ているけれども、それでもできる人が少ないのは、一朝一夕でできることではないということを裏付けていると思います。\n自分の手に馴染んで無意識で良い文章を書ける様になるには反復練習が必要です。\n\n社説要約でも何でもよいですが、 **『意味の分からないアカの他人の文章を読んでまとめて誰かにレビューしてもらう』** という日本語ライティングの訓練を継続してみませんか？\n\n(参考書籍)\n- [一番伝わる説明の順番](https://www.amazon.co.jp/%E4%B8%80%E7%95%AA%E4%BC%9D%E3%82%8F%E3%82%8B%E8%AA%AC%E6%98%8E%E3%81%AE%E9%A0%86%E7%95%AA-%E7%94%B0%E4%B8%AD%E8%80%95%E6%AF%94%E5%8F%A4-ebook/dp/B07DK7BCGS/)\n- [エンジニアのための文章術 再入門講座 新版 状況別にすぐ効く! 文書・文章作成の実践テクニック](https://www.amazon.co.jp/%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E6%96%87%E7%AB%A0%E8%A1%93-%E5%86%8D%E5%85%A5%E9%96%80%E8%AC%9B%E5%BA%A7-%E6%96%B0%E7%89%88-%E7%8A%B6%E6%B3%81%E5%88%A5%E3%81%AB%E3%81%99%E3%81%90%E5%8A%B9%E3%81%8F-%E6%96%87%E6%9B%B8%E3%83%BB%E6%96%87%E7%AB%A0%E4%BD%9C%E6%88%90%E3%81%AE%E5%AE%9F%E8%B7%B5%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF/dp/4798164259/)\n\n\n## 使わない能力は衰える\n\n人間には恐ろしい仕様があります。\n使わない能力はじわじわと少しずつ衰えるという仕様です。\n\nフォートナイト、APEXやストリートファイターなどのアクション性の高いゲームや何らかのスポーツをやっている方は経験があると思いますが、強さを維持するためには、訓練や実践を継続する必要です。\n\n同様に、文章力を維持するためにも定期的なアウトプットが必要です。\n気づかないくらい少しずつ衰えるという鬼畜仕様で、気づいた時には致命的な程に文章が書けなくなっていて、書くのが嫌になったりするので本当に注意が必要です。[^1]\n\n\n## タイピング\n\n多くの人が「必ずしも必要ではない」と提唱していますが、飛び抜けて何らかの技能を持っていないのであれば身につけておいた方がいい能力かと思います。\n\n文章にしてもプログラムにしても試行錯誤できる回数が増えるからです。\n試行錯誤の回数はそのまま得られる経験値やアウトプットの品質に直結しますので、何をするにも効率がよいです。\n\n加えてタイピングが遅いと何をするのも億劫になります。\n足が速ければ、サッカーもバスケットもある程度抵抗なく始められると思いますが、足が遅ければ、そもそも運動に興味を持てない可能性が上がることもあるでしょう。\n\n敢えて習得をドロップする理由はないと思いますが、いかがでしょうか？\n\n\n## 新人の多くの問題は日本語力で解決できる\n\n### 報連相ができない\n\n先日、[結論から報告するのは難しい](https://qiita.com/kaku3/items/f8411523cce000de750e)という記事を書きましたが、こちらの記事の報告側の問題の多くは **日本語ライティング能力** で解決できると考えています。\n\n報告書を書くこと自体が速くなれば、報告の回数を増やす事や内容を見直すことに対する抵抗も減ると思います。\n\n当然、闇雲に試行錯誤していてもカイゼンしませんので、前人の偉大な知識はググったり書籍を読んだりして拝借するのがよいでしょう。\n\n(書籍)\n- [会社では教えてもらえない 上に行く人の 報連相のキホン](https://www.amazon.co.jp/%E4%BC%9A%E7%A4%BE%E3%81%A7%E3%81%AF%E6%95%99%E3%81%88%E3%81%A6%E3%82%82%E3%82%89%E3%81%88%E3%81%AA%E3%81%84-%E4%B8%8A%E3%81%AB%E8%A1%8C%E3%81%8F%E4%BA%BA%E3%81%AE-%E5%A0%B1%E9%80%A3%E7%9B%B8%E3%81%AE%E3%82%AD%E3%83%9B%E3%83%B3-%E8%BB%8A%E5%A1%9A-%E5%85%83%E7%AB%A0/dp/4799106635/)\n\n\n### 質問がうまくできない\n\n先輩が忙しそうにしている中、懸命にタイミングを伺って質問をしたら、以下のような指摘を受けてテンションが下がった経験はないでしょうか？\n\n- 早く聞け\n- 整理してから聞け\n\n聞きにいくたびに逆のことを言うじゃないかと。\n\nでもこれって、日本語ライティング力とタイピング力があれば、「早く整理して」聞けることになりませんか？\n\n先輩が感情的に話す方の場合はそこは改善してもらった方がいいと思いますが、質問の元になった問題、その時の状況および質問の内容を分析して次回どうするかを考えてメモして早く整理して聞けるようになりましょう。\n\n間違っても「あの先輩は毎回言うことが違う困った先輩」とカテゴライズして以後のコミュニケーションを取ることを断絶するのはやめましょう。お互いにとってマイナスです。\n\n\n### プログラムが汚い\n\nプログラミングは **『日本語をコンピューターを動かすための言語に翻訳する』** 作業です。\nですので、「論理的で分かりやすい日本語」を翻訳したコードであれば可読性は高いはずです。\n\n最適で高速な賢いアルゴリズムを書こうとした場合は「コンピューター」が見て分かりやすいコードを書く必要があるので、「人が見て」汚いのは仕方がないですが、そういう前提はあるとしても **「なぜその様な実装がされているか分からないコード」** を見かけることは少なくないです。\n\n「論理的で分かりやすい日本語」をベースに書かれていないコードは、コードレビューでの説明もできないと思います。\n説明が苦手なのではなくて、説明ができない日本語をプログラム化したのだと思います。\n\n何年プログラマとして経験を積んでも設計ができるようにならない人が一定数いるのは、このあたりに大きな要因があると感じています。\n\n『論理的で分かりやすい日本語を翻訳したコード』を書くのは慣れるまでは時間がかかるかもしれませんが、長いエンジニア人生で見た場合、その様なコードを書いておかないとどこかでキャリアが頭打ちするリスクがあることは理解しておいた方がよいでしょう。\n\n\n### プログラムが書けない\n\nこちらは残念ながら **日本語ライティング力では解決できません** が問題の構造は同じです。\n\n突然ですが英語を話したり書いたりできますか？\n義務教育を受けていれば相当長い期間習っていると思いますが、できない方が大半だと思います。\n**『書いたり話したりしていないからできない』** のです。\n\n同様に、会社でどんなに先輩が懇切丁寧に分かりやすく教えてくれても書けるようになりません。\n\n会社は学校ではないので自分で時間を見つけてコソ練するしかありません。コソ練を継続するコツは楽しむことです。楽しくないことは続けられないですから。\n\n※コソ練用の記事も寄稿していますので、よろしければご参照ください。\n[新人Web系職業プログラマーのための「丁度よいサイズの課題集」](https://qiita.com/kaku3/items/abe98001f74025cec422)\n\n## まとめ\n\n今回は、**日本語ライティング**の重要性を書きました。\n\n文中の報連相や質問の問題は、新人固有の問題かと思われがちですが、どこまでもついて回ります。お客様への報連相や質問は新人の時のそれより遥かに難易度が高いです。\n\n炎上したプロジェクトを鎮火させるのに必要なのは日本語です。\n炎上させない様に合意形成を取るのも日本語です。\nプロジェクトを円滑に運営するのにも日本語は必要です。\n\nエンジニアとしてやっている限り、ひいては、日本で社会人をやっている限り必要な**日本語ライティング**を是非今日から始めてみてはいかがでしょうか。\n\n\n[^1]: この記事も自分の練習のために書いていたりします。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-04-02T17:00:03+09:00",
    "group": null,
    "id": "fb949aa1a53f1f71c796",
    "likes_count": 113,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 79,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人教育",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      }
    ],
    "title": "新卒エンジニアが最初に学ぶとよいことは…",
    "updated_at": "2022-04-02T17:28:25+09:00",
    "url": "https://qiita.com/kaku3/items/fb949aa1a53f1f71c796",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 26814,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:33\">\n<span id=\"結論から報告しろ\" class=\"fragment\"></span><a href=\"#%E7%B5%90%E8%AB%96%E3%81%8B%E3%82%89%E5%A0%B1%E5%91%8A%E3%81%97%E3%82%8D\"><i class=\"fa fa-link\"></i></a>「結論から報告しろ」</h2>\n<p data-sourcepos=\"3:1-3:283\">様々なビジネス書にもドヤ顔<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup>で書かれていますし、その様に報告してもらいたいのはその通りですが、この発言をすることによって結論から報告してもらえるようになったことはあまりない気がしています。</p>\n<p data-sourcepos=\"5:1-5:66\">皆さんや皆さんの周りの人はどうでしょうか…？</p>\n<p data-sourcepos=\"7:1-7:231\">少し客観的にこの話の構造を考えると『自転車に乗れない人に <strong>「自転車に乗れば目的地に簡単に早く着くよ」</strong> というアドバイスをしている』様な構造に思えてきます。</p>\n<p data-sourcepos=\"9:1-10:189\">できる人から見ると当然できて然るべきなのでカジュアルにアドバイスをしていますが、できない人から見ると何が悪いかさっぱり分からないからできない。<br>\nトヨタ式なぜなぜで詰めても、本人の中にそれを実行するための何かがないため、メンタルが傷む事はあってもカイゼンされることはない。</p>\n<p data-sourcepos=\"12:1-12:150\">…ということで今回は「結論から報告する」ために何が必要かを探りつつ訓練法を紹介してみたいと思います。</p>\n<h2 data-sourcepos=\"15:1-15:30\">\n<span id=\"そもそも結論とは\" class=\"fragment\"></span><a href=\"#%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82%E7%B5%90%E8%AB%96%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>そもそも結論とは？</h2>\n<blockquote data-sourcepos=\"17:1-19:108\">\n<p data-sourcepos=\"17:3-19:108\">［名］(スル)<br>\n１ 考えたり論じたりして最終的な判断をまとめること。また、その内容。「調査の―を出す」<br>\n２ 論理学で、推論において前提から導き出された判断。終結。断案。⇔前提。</p>\n</blockquote>\n<p data-sourcepos=\"21:1-21:78\">引用元：<a href=\"https://dictionary.goo.ne.jp/word/%E7%B5%90%E8%AB%96/\" rel=\"nofollow noopener\" target=\"_blank\">goo辞書</a></p>\n<p data-sourcepos=\"23:1-23:132\">調べてみたらよく分からなくなりましたが、日常業務で登場する「結論」は以下の様に感じます。</p>\n<ol data-sourcepos=\"25:1-27:0\">\n<li data-sourcepos=\"25:1-25:63\">自分と相手の間に何らかのトピックがあって</li>\n<li data-sourcepos=\"26:1-27:0\">その中で、報告する時点で一番重要なこと</li>\n</ol>\n<p data-sourcepos=\"28:1-28:57\">こちらの想定で考察を進めてみましょう。</p>\n<h2 data-sourcepos=\"31:1-31:63\">\n<span id=\"思った通りのトピックの認識が同じ奇跡\" class=\"fragment\"></span><a href=\"#%E6%80%9D%E3%81%A3%E3%81%9F%E9%80%9A%E3%82%8A%E3%81%AE%E3%83%88%E3%83%94%E3%83%83%E3%82%AF%E3%81%AE%E8%AA%8D%E8%AD%98%E3%81%8C%E5%90%8C%E3%81%98%E5%A5%87%E8%B7%A1\"><i class=\"fa fa-link\"></i></a>『思った通り』のトピックの認識が同じ奇跡</h2>\n<p data-sourcepos=\"33:1-33:284\">多くのケースでは、<strong>『そもそも何らかのトピックの認識が自分と相手で異なっていて』</strong> 自分なりに一番重要と思っていることを伝えたにも関わらず <strong>『結論から報告しろ』</strong> と一蹴されている様に感じます。</p>\n<p data-sourcepos=\"35:1-35:309\">逆に言うと、トピックが <strong>『思った通り』</strong> 伝わっている人からの報告は必ずしも結論から報告していないかもしれないけれども目くじらを立てて『結論から報告しろ』と言わなくてもなんとなく修正されていってる気がします。</p>\n<p data-sourcepos=\"37:1-37:54\">ベン図で表すとこんな感じでしょうか。</p>\n<p data-sourcepos=\"39:1-39:132\"><a href=\"https://camo.qiitausercontent.com/fe6d577d43aca35ee2df7373f526b3496aeb2f02/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f61663236663435352d623037612d336436392d393531352d3764633864346131653439642e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Faf26f455-b07a-3d69-9515-7dc8d4a1e49d.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f8c4894b8fad01a18f34ebf32524f2e5\" alt=\"00-topics.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/af26f455-b07a-3d69-9515-7dc8d4a1e49d.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Faf26f455-b07a-3d69-9515-7dc8d4a1e49d.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=9ab42c9cfb7214b235a52bcb31ca001c 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"41:1-43:391\">あまり意識することはないと思いますが、わたし達の会話は経験によって補われている部分が大きいです。<br>\n類似した案件を経験している人には話が伝わる可能性が上がる一方、未経験の新人には話が伝わる可能性が下がっていると思います。<br>\nにも関わらず、聞く側は当然理解できると思って話を聞いてしまいます。当然理解したと思っていれば、その場で質問が出ることはないです。問題が出た際に「なんで聞かなかったの？」と問い詰めると「質問できる程理解できていなかった」というところまでがテンプレ<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup>かと思います。</p>\n<p data-sourcepos=\"45:1-45:153\">話す方も聞く方も話が伝わることはむしろ奇跡と思っておいた方が余計な軋轢を生まなくてよいかもしれません。</p>\n<h2 data-sourcepos=\"48:1-48:57\">\n<span id=\"トピックの理解と整理二次元整理法\" class=\"fragment\"></span><a href=\"#%E3%83%88%E3%83%94%E3%83%83%E3%82%AF%E3%81%AE%E7%90%86%E8%A7%A3%E3%81%A8%E6%95%B4%E7%90%86%E4%BA%8C%E6%AC%A1%E5%85%83%E6%95%B4%E7%90%86%E6%B3%95\"><i class=\"fa fa-link\"></i></a>トピックの理解と整理（二次元整理法）</h2>\n<p data-sourcepos=\"50:1-51:114\">とは言え、令和の世の中のIT業界で毎回奇跡が起きることを祈って仕事をするのはあまりセンスのよい行いとは言えないでしょう。<br>\nということで、トピックの理解に有効と思われる方法を紹介してみたいと思います。</p>\n<p data-sourcepos=\"53:1-53:20\">(二次元整理法)</p>\n<ul data-sourcepos=\"54:1-59:0\">\n<li data-sourcepos=\"54:1-55:96\">エクセル方眼紙（各セルの横幅を縮めて方眼紙状にしたエクセルシート）を用意する\n<ul data-sourcepos=\"55:5-55:96\">\n<li data-sourcepos=\"55:5-55:96\">スプレッドシート等、オンラインで同時編集できることが望ましい</li>\n</ul>\n</li>\n<li data-sourcepos=\"56:1-56:56\">トピックに含まれる要素を箇条書きする</li>\n<li data-sourcepos=\"57:1-57:53\">ホワイトボードの様に縦横自由に使う</li>\n<li data-sourcepos=\"58:1-59:0\">内容が近いものは近くに書く</li>\n</ul>\n<p data-sourcepos=\"60:1-61:131\">(サンプル)<br>\n<a href=\"https://camo.qiitausercontent.com/94a76676191b2594c8948e020fcf2b26ac74f066/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f61346338376666612d343061322d373233622d373839392d6231313032636538356463302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa4c87ffa-40a2-723b-7899-b1102ce85dc0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=7e3b0272136936d6b60c28b84ec8122f\" alt=\"10-00-方眼紙.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a4c87ffa-40a2-723b-7899-b1102ce85dc0.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa4c87ffa-40a2-723b-7899-b1102ce85dc0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d6f17b5f8dae80a00a942beb25fc8844 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"63:1-64:190\">相手から依頼を受けた時点で依頼内容を細かい箇条書きに分解して書き出し、縦横に配置して整理する方法です。<br>\n『１次元ではなく２次元で考える』、『簡単に編集ができる』の２点を満たせればエクセルやスプレッドシートである必要もありません。<sup><a href=\"#fn-3\" id=\"fnref-3\">3</a></sup></p>\n<p data-sourcepos=\"66:1-66:367\">長々と前フリを書いて仰々しい名前を付けた<sup><a href=\"#fn-4\" id=\"fnref-4\">4</a></sup>割には「エクセル方眼紙を使おう」しか言ってないのですが、現状が上手くいっていないのであれば何かカイゼンしないといけませんが、大変なことは長続きしないので簡単にできることをやりましょうという考え方ですね。</p>\n<p data-sourcepos=\"68:1-68:414\">自転車には練習をしないと乗れるようにならないです。「練習していたらある日乗れるようになったが、結局何で乗れるようになったか分からない」という経験もあるかと思いますが、トピックの理解と整理も同じく地道な訓練によって、 <strong>ある日突然劇的にカイゼンされる性質のもの</strong> だと思っています。</p>\n<h2 data-sourcepos=\"71:1-71:12\">\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n<p data-sourcepos=\"73:1-73:264\">意識の高いビジネス書を読んだり、先輩に指摘されたりして「結論から報告」することを考えるのは必要なことだと思いますが、トピックを理解・整理して結論にたどり着くには訓練が必要です。</p>\n<p data-sourcepos=\"75:1-75:345\">今回は訓練の手法として二次元整理法を紹介してみました。慣れてくれば脳内でも整理ができることが増えて、いちいち書き出さなくても「結論」を見繕うことができるようになりますし報告以外でも役に立ちます。もしよろしければ試してみてください。</p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"77:7-77:153\">ドヤ顔の文章にイラッとしたのが個人的結論なので最初に書きました。上から目線で言うのはやめましょう。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"78:7-78:57\">アンチパターン。気をつけましょう。 <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-3\">\n<p data-sourcepos=\"79:7-79:135\">マインドマップツールもあるのですが、書き方が制限されるので個人的には合いませんでした。 <a href=\"#fnref-3\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-4\">\n<p data-sourcepos=\"80:7-80:84\">名前をつけた方が浸透しやすいらしいので付けてみました <a href=\"#fnref-4\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## 「結論から報告しろ」\n\n様々なビジネス書にもドヤ顔[^1]で書かれていますし、その様に報告してもらいたいのはその通りですが、この発言をすることによって結論から報告してもらえるようになったことはあまりない気がしています。\n\n皆さんや皆さんの周りの人はどうでしょうか…？\n\n少し客観的にこの話の構造を考えると『自転車に乗れない人に **「自転車に乗れば目的地に簡単に早く着くよ」** というアドバイスをしている』様な構造に思えてきます。\n\nできる人から見ると当然できて然るべきなのでカジュアルにアドバイスをしていますが、できない人から見ると何が悪いかさっぱり分からないからできない。\nトヨタ式なぜなぜで詰めても、本人の中にそれを実行するための何かがないため、メンタルが傷む事はあってもカイゼンされることはない。\n\n…ということで今回は「結論から報告する」ために何が必要かを探りつつ訓練法を紹介してみたいと思います。\n\n\n## そもそも結論とは？\n\n> ［名］(スル)\n> １ 考えたり論じたりして最終的な判断をまとめること。また、その内容。「調査の―を出す」\n> ２ 論理学で、推論において前提から導き出された判断。終結。断案。⇔前提。\n\n引用元：[goo辞書](https://dictionary.goo.ne.jp/word/%E7%B5%90%E8%AB%96/)\n\n調べてみたらよく分からなくなりましたが、日常業務で登場する「結論」は以下の様に感じます。\n\n1. 自分と相手の間に何らかのトピックがあって\n2. その中で、報告する時点で一番重要なこと\n\nこちらの想定で考察を進めてみましょう。\n\n\n## 『思った通り』のトピックの認識が同じ奇跡\n\n多くのケースでは、**『そもそも何らかのトピックの認識が自分と相手で異なっていて』** 自分なりに一番重要と思っていることを伝えたにも関わらず **『結論から報告しろ』** と一蹴されている様に感じます。\n\n逆に言うと、トピックが **『思った通り』** 伝わっている人からの報告は必ずしも結論から報告していないかもしれないけれども目くじらを立てて『結論から報告しろ』と言わなくてもなんとなく修正されていってる気がします。\n\nベン図で表すとこんな感じでしょうか。\n\n![00-topics.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/af26f455-b07a-3d69-9515-7dc8d4a1e49d.png)\n\nあまり意識することはないと思いますが、わたし達の会話は経験によって補われている部分が大きいです。\n類似した案件を経験している人には話が伝わる可能性が上がる一方、未経験の新人には話が伝わる可能性が下がっていると思います。\nにも関わらず、聞く側は当然理解できると思って話を聞いてしまいます。当然理解したと思っていれば、その場で質問が出ることはないです。問題が出た際に「なんで聞かなかったの？」と問い詰めると「質問できる程理解できていなかった」というところまでがテンプレ[^2]かと思います。\n\n話す方も聞く方も話が伝わることはむしろ奇跡と思っておいた方が余計な軋轢を生まなくてよいかもしれません。\n\n\n## トピックの理解と整理（二次元整理法）\n\nとは言え、令和の世の中のIT業界で毎回奇跡が起きることを祈って仕事をするのはあまりセンスのよい行いとは言えないでしょう。\nということで、トピックの理解に有効と思われる方法を紹介してみたいと思います。\n\n(二次元整理法)\n- エクセル方眼紙（各セルの横幅を縮めて方眼紙状にしたエクセルシート）を用意する\n    - スプレッドシート等、オンラインで同時編集できることが望ましい\n- トピックに含まれる要素を箇条書きする\n- ホワイトボードの様に縦横自由に使う\n- 内容が近いものは近くに書く\n\n(サンプル)\n![10-00-方眼紙.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a4c87ffa-40a2-723b-7899-b1102ce85dc0.png)\n\n相手から依頼を受けた時点で依頼内容を細かい箇条書きに分解して書き出し、縦横に配置して整理する方法です。\n『１次元ではなく２次元で考える』、『簡単に編集ができる』の２点を満たせればエクセルやスプレッドシートである必要もありません。[^3]\n\n長々と前フリを書いて仰々しい名前を付けた[^4]割には「エクセル方眼紙を使おう」しか言ってないのですが、現状が上手くいっていないのであれば何かカイゼンしないといけませんが、大変なことは長続きしないので簡単にできることをやりましょうという考え方ですね。\n\n自転車には練習をしないと乗れるようにならないです。「練習していたらある日乗れるようになったが、結局何で乗れるようになったか分からない」という経験もあるかと思いますが、トピックの理解と整理も同じく地道な訓練によって、 **ある日突然劇的にカイゼンされる性質のもの** だと思っています。\n\n\n## まとめ\n\n意識の高いビジネス書を読んだり、先輩に指摘されたりして「結論から報告」することを考えるのは必要なことだと思いますが、トピックを理解・整理して結論にたどり着くには訓練が必要です。\n\n今回は訓練の手法として二次元整理法を紹介してみました。慣れてくれば脳内でも整理ができることが増えて、いちいち書き出さなくても「結論」を見繕うことができるようになりますし報告以外でも役に立ちます。もしよろしければ試してみてください。\n\n[^1]: ドヤ顔の文章にイラッとしたのが個人的結論なので最初に書きました。上から目線で言うのはやめましょう。\n[^2]: アンチパターン。気をつけましょう。\n[^3]: マインドマップツールもあるのですが、書き方が制限されるので個人的には合いませんでした。\n[^4]: 名前をつけた方が浸透しやすいらしいので付けてみました\n",
    "coediting": false,
    "comments_count": 13,
    "created_at": "2022-03-26T16:44:59+09:00",
    "group": null,
    "id": "f8411523cce000de750e",
    "likes_count": 84,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 49,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "マネジメント",
        "versions": []
      },
      {
        "name": "新人教育",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      }
    ],
    "title": "結論から報告するのは難しい",
    "updated_at": "2022-03-26T16:44:59+09:00",
    "url": "https://qiita.com/kaku3/items/f8411523cce000de750e",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 25733,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"2:1-2:39\">クラス図を書いていますか？</p>\n<p data-sourcepos=\"4:1-4:322\">担当範囲のクラス数が10や20であれば、特にクラス図を書くこともなく脳内で設計を済ませて実装をすることも多いのではないでしょうか。熟練のエンジニアであればあるほど、いちいち大仰な図を書かなくても設計ができることでしょう。</p>\n<p data-sourcepos=\"6:1-9:196\">ここで、プロジェクトやプロダクトのライフサイクルに視野を広げてみましょう。<br>\n仮に担当者が10人いるプロジェクトならば、一人が10や20のクラスを作成すればプロジェクト全体では100や200のクラスが存在することになるでしょう。<br>\n100や200のクラスの中には似て非なるクラスも量産されているかもしれないし、そうでないかもしれません。<br>\n<strong>シュレディンガーの猫のようなソースコード</strong>で、ソースを隅々まで読まない限りはまったく無用なコードがあるのかどうか分からなそうです。</p>\n<p data-sourcepos=\"11:1-11:384\">神プログラマーが丹念にコードレビューを行う事で品質の均質化を図れるかもしれませんが、神プログラマーへの負荷の集中しボトルネックと化してしまうのは想像に難しくありません。場合によってはプロジェクト半ばに神プログラマーが離脱してしまうこともあるかもしれません。</p>\n<p data-sourcepos=\"13:1-13:438\">このシュレディンガーのソースコードは、リリースを迎えた後に保守フェーズに移行し、製品寿命がつきるまでは破棄されずにメンテナンスされる宿命をおいます。脳内に設計図を持つ初期開発メンバーの大半は保守フェーズ移行時に解散していて <strong>『なんとなく誰も触りたくない状態』</strong> のまま保管されることとなります。</p>\n<p data-sourcepos=\"15:1-18:207\">パッケージ製品ではなく、基幹業務のシステムやWebサービスであればリリース後も機能追加や改修がなされることが往々にしてあります。<br>\n新たな要求仕様を満たそうにも、初期開発チームは解散しています。その様なケースでは、SES（など）で傭兵の様に新たなエンジニアがランダムに招集されます。<br>\nここで招集されたエンジニアが目の当たりにするのは、<strong>いろいろな人間の設計思想が入り混じった100や200のクラス</strong> です。<br>\nこれを一切の事前情報もない状態で間違いなく読み取り、新たな要求仕様を満たすべく修正するには初期開発チーム以上の技術と時間が必要になります。</p>\n<p data-sourcepos=\"20:1-20:281\">ただ、<strong>『本当に必要になるかどうか分からない未来に発生する莫大なコスト』</strong> に対して、ギリギリの予算やスケジュールの中で『必ずしも今必要ない』ドキュメントを書くことは大変難しいとは思います。</p>\n<p data-sourcepos=\"22:1-22:163\">ということで(?)、今回は『クラス図はなくて本当にいいのか問題<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup>』について解決策を模索した話を書こうと思います。</p>\n<h2 data-sourcepos=\"25:1-25:26\">\n<span id=\"クラス図とplantuml\" class=\"fragment\"></span><a href=\"#%E3%82%AF%E3%83%A9%E3%82%B9%E5%9B%B3%E3%81%A8plantuml\"><i class=\"fa fa-link\"></i></a>クラス図とPlantUML</h2>\n<p data-sourcepos=\"27:1-27:126\">クラス図を知らない方のために、以下に、PlantUML で記述したクラス図の例を示しておきます。</p>\n<p data-sourcepos=\"29:1-30:91\"><a href=\"https://camo.qiitausercontent.com/800c903132dc236b312c99421a6c8986b8edc30a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f30373863313739632d636565622d333862372d636138622d3833386363626435623739372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F078c179c-ceeb-38b7-ca8b-838ccbd5b797.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=97c10a2461df1c4b48f6295f4d122592\" alt=\"2022-03-12_14h31_11.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/078c179c-ceeb-38b7-ca8b-838ccbd5b797.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F078c179c-ceeb-38b7-ca8b-838ccbd5b797.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=34a52f172a31fcfc70b4f2c21acc705a 1x\" loading=\"lazy\"></a><br>\n(参考)<a href=\"https://qiita.com/opengl-8080/items/98c510b8ca060bdd2ea3\" id=\"reference-437efef103a4883f8ff8\">PlantUML使い方メモ</a></p>\n<p data-sourcepos=\"32:1-34:245\">クラスの関係性を示した図で、<strong>『視覚的に』</strong> プログラムの構成を理解できる設計工程における重要な図です。<br>\n熟練の開発者であれば当然名前を聞いたこともあるでしょうし、設計の際に脳内でクラス図を描くこともしているでしょう。<br>\n実際に図を描くのにはコストがかかり、また、実装が更新されてもメンテナンスされないことも多く、<strong>「開発現場ではあまり見かけない図面」</strong> になっているように感じています。</p>\n<p data-sourcepos=\"36:1-36:306\">結果として、初学者の職業プログラマは業務上でクラス図を見ることもなく、業務で必要な図と認知することもできない状況になっており、業務をこなしているだけではクラス設計ができるようにならないことが懸念されます。</p>\n<p data-sourcepos=\"38:1-39:264\">この問題を解決するためには作図のコストの問題を解決しなければなりません。Excel方眼紙、<a href=\"https://www.diagrams.net/\" rel=\"nofollow noopener\" target=\"_blank\">diagrams.net(旧draw.io)</a>や <a href=\"https://qiita.com/takatea/items/bd1015df17a439614048\" id=\"reference-8986b3655ceefeb95f6c\">AmaterasUML</a>など様々なツールがありますが、図を描くのはやはりコストがかかります。<br>\n<a href=\"https://plantuml.com/ja/\" rel=\"nofollow noopener\" target=\"_blank\">PlantUML</a>であれば、コードベースでクラスとクラスの関係性の定義のみを行えば自動でクラス図が生成されるので、大幅に作図のコストを落とせますが、以下の問題が残ります。</p>\n<ol data-sourcepos=\"41:1-44:0\">\n<li data-sourcepos=\"41:1-41:69\">実装に合わせてメンテナンスするのはやはり大変</li>\n<li data-sourcepos=\"42:1-42:45\">微妙にいい感じの図にならない</li>\n<li data-sourcepos=\"43:1-44:0\">『図』は ctrl + f で検索できない</li>\n</ol>\n<p data-sourcepos=\"45:1-45:87\">よって、これらの問題の解決方法を考えていくことにしました。</p>\n<h2 data-sourcepos=\"48:1-48:69\">\n<span id=\"実装に合わせてメンテナンスするのはやはり大変\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E8%A3%85%E3%81%AB%E5%90%88%E3%82%8F%E3%81%9B%E3%81%A6%E3%83%A1%E3%83%B3%E3%83%86%E3%83%8A%E3%83%B3%E3%82%B9%E3%81%99%E3%82%8B%E3%81%AE%E3%81%AF%E3%82%84%E3%81%AF%E3%82%8A%E5%A4%A7%E5%A4%89\"><i class=\"fa fa-link\"></i></a>実装に合わせてメンテナンスするのはやはり大変</h2>\n<p data-sourcepos=\"50:1-50:142\">実装から PlantUML ファイルを生成できれば、実装に合わせてメンテナンスを行う必要がなくなりそうです。</p>\n<p data-sourcepos=\"52:1-52:343\">コマンドラインツール <a href=\"http://plantuml-depend.sourceforge.net/command_line/command_line.html\" rel=\"nofollow noopener\" target=\"_blank\">PlantUML Dependency</a> を用いれば、ソースを解析し PlantUML ファイル(.puml) を生成できるようで、リリース時などにこのツールを実行することで、メンテナンスの問題は解決できました。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"54:1-62:3\"><div class=\"highlight\"><pre><code>Examples:\n\tjava -jar plantuml-dependency-cli-1.4.0.jar -h\n\tjava -jar plantuml-dependency-cli-1.4.0.jar -o /home/test/plantuml.txt -b . -dp ^(?!net.sourceforge.plantumldependency)(.+)$ -v\n\tjava -jar plantuml-dependency-cli-1.4.0.jar -o /home/test/plantuml.txt -b . -i **/*.java -e **/*Test*.java -dn .*Test.* -v\n\tjava -jar plantuml-dependency-cli-1.4.0.jar -o /home/test/plantuml.txt -b . -i **/*.java -e **/*Test*.java -dt implementations,interfaces,extensions,imports,static_imports\n\tjava -jar plantuml-dependency-cli-1.4.0.jar -o myoutput.txt -b \"C:\\Users\\PlantUML test\" -i **/*Test.java\n\tjava -jar plantuml-dependency-cli-1.4.0.jar -version -v\n</code></pre></div></div>\n<h2 data-sourcepos=\"65:1-65:45\">\n<span id=\"微妙にいい感じの図にならない\" class=\"fragment\"></span><a href=\"#%E5%BE%AE%E5%A6%99%E3%81%AB%E3%81%84%E3%81%84%E6%84%9F%E3%81%98%E3%81%AE%E5%9B%B3%E3%81%AB%E3%81%AA%E3%82%89%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>微妙にいい感じの図にならない</h2>\n<p data-sourcepos=\"67:1-68:151\">長年の悩みでした。<br>\nAI()でいい感じに配置できればいいのですが、それは難しそうだったので別のアプローチを取ることにしました。</p>\n<p data-sourcepos=\"70:1-70:102\">PlantUML が出力する図の不満点を考えてみると、以下２点が思いつきました。</p>\n<ul data-sourcepos=\"72:1-74:0\">\n<li data-sourcepos=\"72:1-72:65\">設計者が脳内に描いている制約をつけられない</li>\n<li data-sourcepos=\"73:1-74:0\">横や縦に無限に大きくなる図面が出力される</li>\n</ul>\n<p data-sourcepos=\"75:1-75:202\">設計者の脳内は、AI()ではなく別途設定ファイルで書いてもらうとして、あとは横や縦に無限に大きくならない簡単なルールを決めればよさそうです。</p>\n<p data-sourcepos=\"77:1-77:143\">実装コストも考慮して、flexbox で可能な範囲の配置ルールと簡単な設定を行える様にすることにしました。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"79:1-90:3\"><div class=\"highlight\"><pre><code>配置の考え方\n- flexbox で配置\n- 1行に最大4パッケージ配置\n- 1パッケージ内の1行に最大4クラス\n    - max-width: 25%;\n    - min-width: max-content;\n\n設定の考え方\n- 何段目にどのパッケージを置くかを設定\n- justify-content の値も設定(省略時は center)\n</code></pre></div></div>\n<p data-sourcepos=\"92:1-94:144\">ここまで方針が決まれば後は簡単です。<br>\n<a href=\"https://github.com/Enteee/plantuml-parser\" rel=\"nofollow noopener\" target=\"_blank\">plantuml-parser</a>を用いて、puml -&gt; json 変換を行います。<br>\n変換した json ファイルを読み込んで js で html 上に配置すれば、後は css が勝手に見やすく並べてくれます。</p>\n<p data-sourcepos=\"96:1-97:182\">html で配置までは簡単でしたが、関係性を示す線は html では多少面倒です。<br>\n業務ではあまり利用することのない svg を利用して、配置後のクラスの座標を元に線を引く様な実装とすれば比較的容易に引けました。</p>\n<div class=\"code-frame\" data-lang=\"javascript\" data-sourcepos=\"99:1-112:3\">\n<div class=\"code-lang\"><span class=\"bold\">sample.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\">// jQuery で svg.append({svg element}) のように直接 append 操作しても svg要素として認識されないので、</span>\n<span class=\"c1\">// svg タグを作る時に文字列として svg要素も一緒に作る。</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">svgElements</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"p\">...</span>\n<span class=\"nx\">svgElements</span><span class=\"p\">.</span><span class=\"nf\">push</span><span class=\"p\">(</span><span class=\"s2\">`&lt;line x1=\"</span><span class=\"p\">${</span><span class=\"nx\">x1</span><span class=\"p\">}</span><span class=\"s2\">\" y1=\"</span><span class=\"p\">${</span><span class=\"nx\">y1</span><span class=\"p\">}</span><span class=\"s2\">\" x2=\"</span><span class=\"p\">${</span><span class=\"nx\">x2</span><span class=\"p\">}</span><span class=\"s2\">\" y2=\"</span><span class=\"p\">${</span><span class=\"nx\">y2</span><span class=\"p\">}</span><span class=\"s2\">\" class=\"</span><span class=\"p\">${</span><span class=\"nx\">cls</span><span class=\"p\">}</span><span class=\"s2\">\" data-left=\"</span><span class=\"p\">${</span><span class=\"nx\">leftId</span><span class=\"p\">}</span><span class=\"s2\">\" data-right=\"</span><span class=\"p\">${</span><span class=\"nx\">rightId</span><span class=\"p\">}</span><span class=\"s2\">\" /&gt;`</span><span class=\"p\">)</span>\n\n<span class=\"p\">...</span>\n<span class=\"kd\">const</span> <span class=\"nx\">svg</span> <span class=\"o\">=</span> <span class=\"nf\">$</span><span class=\"p\">(</span><span class=\"s2\">`&lt;svg width=\"</span><span class=\"p\">${</span><span class=\"nx\">width</span><span class=\"p\">}</span><span class=\"s2\">\" height=\"</span><span class=\"p\">${</span><span class=\"nx\">height</span><span class=\"p\">}</span><span class=\"s2\">\"&gt;</span><span class=\"p\">${</span><span class=\"nx\">svgElements</span><span class=\"p\">.</span><span class=\"nf\">join</span><span class=\"p\">(</span><span class=\"dl\">''</span><span class=\"p\">)}</span><span class=\"s2\">&lt;/svg&gt;`</span><span class=\"p\">)</span>\n<span class=\"nx\">container</span><span class=\"p\">.</span><span class=\"nf\">append</span><span class=\"p\">(</span><span class=\"nx\">svg</span><span class=\"p\">)</span>\n\n</code></pre></div>\n</div>\n<h2 data-sourcepos=\"115:1-115:46\">\n<span id=\"図は-ctrl--f-で検索できない\" class=\"fragment\"></span><a href=\"#%E5%9B%B3%E3%81%AF-ctrl--f-%E3%81%A7%E6%A4%9C%E7%B4%A2%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>『図』は ctrl + f で検索できない</h2>\n<p data-sourcepos=\"117:1-118:299\">前述の通り、html で作成する方針としましたので、ctrl + f で検索も可能となりました。<br>\n<a href=\"https://datatables.net/\" rel=\"nofollow noopener\" target=\"_blank\">DataTables</a> も併用して、クラス一覧なども併記するようにしたり、<code>Element.scrollIntoView()</code> も利用して一覧で選択したクラスをクラス図上で表示するようにしたりして、だいぶ快適なクラス図が完成しました。</p>\n<h2 data-sourcepos=\"121:1-121:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"123:1-124:171\">随分昔に『よりよい設計をしたい』と思いクラス図を学んだものですが、皆様はいかがでしょうか？<br>\n前述の通り描かなくなって久しかったのですが、未来を見据えると必要かなと考えさせられたのでツール作成にいたりました。</p>\n<p data-sourcepos=\"126:1-127:209\">IT業界で仕事をしていると、よい設計が何かも知らないししたいとも思っていない方が大多数なのかなと感じます。<br>\nこれは、よい設計を見る機会もないし、よい設計が給料に反映されているかを知る方法もないというIT業界の構造的な問題にも原因があるように思えます。</p>\n<p data-sourcepos=\"129:1-129:237\">その様な状況下で、さほどコストをかけずに「よい設計」も「よくない設計」も見える化することで、自然とよい設計に近づいていける仕組みを作れたらよいなと思いました。</p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"131:7-131:212\">クラス図のタグをつけようと思ったら、クラス図のタグがついた記事が30件しかなかった(2022/03/12時点)ことからもクラス図への関心の低さが伺えました。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## はじめに\nクラス図を書いていますか？\n\n担当範囲のクラス数が10や20であれば、特にクラス図を書くこともなく脳内で設計を済ませて実装をすることも多いのではないでしょうか。熟練のエンジニアであればあるほど、いちいち大仰な図を書かなくても設計ができることでしょう。\n\nここで、プロジェクトやプロダクトのライフサイクルに視野を広げてみましょう。\n仮に担当者が10人いるプロジェクトならば、一人が10や20のクラスを作成すればプロジェクト全体では100や200のクラスが存在することになるでしょう。\n100や200のクラスの中には似て非なるクラスも量産されているかもしれないし、そうでないかもしれません。\n**シュレディンガーの猫のようなソースコード**で、ソースを隅々まで読まない限りはまったく無用なコードがあるのかどうか分からなそうです。\n\n神プログラマーが丹念にコードレビューを行う事で品質の均質化を図れるかもしれませんが、神プログラマーへの負荷の集中しボトルネックと化してしまうのは想像に難しくありません。場合によってはプロジェクト半ばに神プログラマーが離脱してしまうこともあるかもしれません。\n\nこのシュレディンガーのソースコードは、リリースを迎えた後に保守フェーズに移行し、製品寿命がつきるまでは破棄されずにメンテナンスされる宿命をおいます。脳内に設計図を持つ初期開発メンバーの大半は保守フェーズ移行時に解散していて **『なんとなく誰も触りたくない状態』** のまま保管されることとなります。\n\nパッケージ製品ではなく、基幹業務のシステムやWebサービスであればリリース後も機能追加や改修がなされることが往々にしてあります。\n新たな要求仕様を満たそうにも、初期開発チームは解散しています。その様なケースでは、SES（など）で傭兵の様に新たなエンジニアがランダムに招集されます。\nここで招集されたエンジニアが目の当たりにするのは、**いろいろな人間の設計思想が入り混じった100や200のクラス** です。\nこれを一切の事前情報もない状態で間違いなく読み取り、新たな要求仕様を満たすべく修正するには初期開発チーム以上の技術と時間が必要になります。\n\nただ、**『本当に必要になるかどうか分からない未来に発生する莫大なコスト』** に対して、ギリギリの予算やスケジュールの中で『必ずしも今必要ない』ドキュメントを書くことは大変難しいとは思います。\n\nということで(?)、今回は『クラス図はなくて本当にいいのか問題[^1]』について解決策を模索した話を書こうと思います。\n\n\n## クラス図とPlantUML\n\nクラス図を知らない方のために、以下に、PlantUML で記述したクラス図の例を示しておきます。\n\n![2022-03-12_14h31_11.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/078c179c-ceeb-38b7-ca8b-838ccbd5b797.png)\n(参考)[PlantUML使い方メモ](https://qiita.com/opengl-8080/items/98c510b8ca060bdd2ea3)\n\nクラスの関係性を示した図で、**『視覚的に』** プログラムの構成を理解できる設計工程における重要な図です。\n熟練の開発者であれば当然名前を聞いたこともあるでしょうし、設計の際に脳内でクラス図を描くこともしているでしょう。\n実際に図を描くのにはコストがかかり、また、実装が更新されてもメンテナンスされないことも多く、**「開発現場ではあまり見かけない図面」** になっているように感じています。\n\n結果として、初学者の職業プログラマは業務上でクラス図を見ることもなく、業務で必要な図と認知することもできない状況になっており、業務をこなしているだけではクラス設計ができるようにならないことが懸念されます。\n\nこの問題を解決するためには作図のコストの問題を解決しなければなりません。Excel方眼紙、[diagrams.net(旧draw.io)](https://www.diagrams.net/)や [AmaterasUML](https://qiita.com/takatea/items/bd1015df17a439614048)など様々なツールがありますが、図を描くのはやはりコストがかかります。\n[PlantUML](https://plantuml.com/ja/)であれば、コードベースでクラスとクラスの関係性の定義のみを行えば自動でクラス図が生成されるので、大幅に作図のコストを落とせますが、以下の問題が残ります。\n\n1. 実装に合わせてメンテナンスするのはやはり大変\n2. 微妙にいい感じの図にならない\n3. 『図』は ctrl + f で検索できない\n\nよって、これらの問題の解決方法を考えていくことにしました。\n\n\n## 実装に合わせてメンテナンスするのはやはり大変\n\n実装から PlantUML ファイルを生成できれば、実装に合わせてメンテナンスを行う必要がなくなりそうです。\n\nコマンドラインツール [PlantUML Dependency](http://plantuml-depend.sourceforge.net/command_line/command_line.html) を用いれば、ソースを解析し PlantUML ファイル(.puml) を生成できるようで、リリース時などにこのツールを実行することで、メンテナンスの問題は解決できました。\n\n```\nExamples:\n\tjava -jar plantuml-dependency-cli-1.4.0.jar -h\n\tjava -jar plantuml-dependency-cli-1.4.0.jar -o /home/test/plantuml.txt -b . -dp ^(?!net.sourceforge.plantumldependency)(.+)$ -v\n\tjava -jar plantuml-dependency-cli-1.4.0.jar -o /home/test/plantuml.txt -b . -i **/*.java -e **/*Test*.java -dn .*Test.* -v\n\tjava -jar plantuml-dependency-cli-1.4.0.jar -o /home/test/plantuml.txt -b . -i **/*.java -e **/*Test*.java -dt implementations,interfaces,extensions,imports,static_imports\n\tjava -jar plantuml-dependency-cli-1.4.0.jar -o myoutput.txt -b \"C:\\Users\\PlantUML test\" -i **/*Test.java\n\tjava -jar plantuml-dependency-cli-1.4.0.jar -version -v\n```\n\n\n## 微妙にいい感じの図にならない\n\n長年の悩みでした。\nAI()でいい感じに配置できればいいのですが、それは難しそうだったので別のアプローチを取ることにしました。\n\nPlantUML が出力する図の不満点を考えてみると、以下２点が思いつきました。\n\n- 設計者が脳内に描いている制約をつけられない\n- 横や縦に無限に大きくなる図面が出力される\n\n設計者の脳内は、AI()ではなく別途設定ファイルで書いてもらうとして、あとは横や縦に無限に大きくならない簡単なルールを決めればよさそうです。\n\n実装コストも考慮して、flexbox で可能な範囲の配置ルールと簡単な設定を行える様にすることにしました。\n\n```\n配置の考え方\n- flexbox で配置\n- 1行に最大4パッケージ配置\n- 1パッケージ内の1行に最大4クラス\n    - max-width: 25%;\n    - min-width: max-content;\n\n設定の考え方\n- 何段目にどのパッケージを置くかを設定\n- justify-content の値も設定(省略時は center)\n```\n\nここまで方針が決まれば後は簡単です。\n[plantuml-parser](https://github.com/Enteee/plantuml-parser)を用いて、puml -> json 変換を行います。\n変換した json ファイルを読み込んで js で html 上に配置すれば、後は css が勝手に見やすく並べてくれます。\n\nhtml で配置までは簡単でしたが、関係性を示す線は html では多少面倒です。\n業務ではあまり利用することのない svg を利用して、配置後のクラスの座標を元に線を引く様な実装とすれば比較的容易に引けました。\n\n``` sample.js\n// jQuery で svg.append({svg element}) のように直接 append 操作しても svg要素として認識されないので、\n// svg タグを作る時に文字列として svg要素も一緒に作る。\n\nconst svgElements = []\n\n...\nsvgElements.push(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" class=\"${cls}\" data-left=\"${leftId}\" data-right=\"${rightId}\" />`)\n\n...\nconst svg = $(`<svg width=\"${width}\" height=\"${height}\">${svgElements.join('')}</svg>`)\ncontainer.append(svg)\n\n```\n\n\n## 『図』は ctrl + f で検索できない\n\n前述の通り、html で作成する方針としましたので、ctrl + f で検索も可能となりました。\n[DataTables](https://datatables.net/) も併用して、クラス一覧なども併記するようにしたり、`Element.scrollIntoView()` も利用して一覧で選択したクラスをクラス図上で表示するようにしたりして、だいぶ快適なクラス図が完成しました。\n\n\n## おわりに\n\n随分昔に『よりよい設計をしたい』と思いクラス図を学んだものですが、皆様はいかがでしょうか？\n前述の通り描かなくなって久しかったのですが、未来を見据えると必要かなと考えさせられたのでツール作成にいたりました。\n\nIT業界で仕事をしていると、よい設計が何かも知らないししたいとも思っていない方が大多数なのかなと感じます。\nこれは、よい設計を見る機会もないし、よい設計が給料に反映されているかを知る方法もないというIT業界の構造的な問題にも原因があるように思えます。\n\nその様な状況下で、さほどコストをかけずに「よい設計」も「よくない設計」も見える化することで、自然とよい設計に近づいていける仕組みを作れたらよいなと思いました。\n\n[^1]: クラス図のタグをつけようと思ったら、クラス図のタグがついた記事が30件しかなかった(2022/03/12時点)ことからもクラス図への関心の低さが伺えました。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-03-12T16:56:32+09:00",
    "group": null,
    "id": "2eb4ea578d734e592b2e",
    "likes_count": 4,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 6,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "PlantUML",
        "versions": []
      },
      {
        "name": "設計",
        "versions": []
      },
      {
        "name": "新人教育",
        "versions": []
      },
      {
        "name": "クラス図",
        "versions": []
      }
    ],
    "title": "未来のためにクラス図作成作業の半自動化をした話(PlantUML, PlantUML Dependency, plantuml-parser + html)",
    "updated_at": "2022-03-12T16:56:32+09:00",
    "url": "https://qiita.com/kaku3/items/2eb4ea578d734e592b2e",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 6504,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-5:131\">テーブル定義が100を超える様なプロジェクトを経験されていますでしょうか。<br>\n図やエクセルからかすかな記憶を頼りに目的のテーブルやカラムドにたどり着いていますでしょうか。<br>\n新メンバー投入の際に、宇宙を感じるERや100シートあるエクセルを熟読させていますでしょうか。</p>\n<p data-sourcepos=\"7:1-7:348\">長らく、ERやテーブル定義はそういうものだと思いこんで何の疑問も持っていなかったのですが、nuxt や vuetify があんまりにも簡単でわずかなコードを書けば、インタラクティブで便利なER図やテーブル定義を作れるのではないかと思い作成して公開しました。</p>\n<p data-sourcepos=\"9:1-10:48\"><a href=\"https://github.com/kaku3/erm-viewer\" rel=\"nofollow noopener\" target=\"_blank\">erm-viewer</a><br>\n<a href=\"https://kaku3.github.io/erm-viewer/dist/\" rel=\"nofollow noopener\" target=\"_blank\">demo</a></p>\n<h2 data-sourcepos=\"13:1-13:13\">\n<span id=\"erm-viewer\" class=\"fragment\"></span><a href=\"#erm-viewer\"><i class=\"fa fa-link\"></i></a>erm-viewer</h2>\n<p data-sourcepos=\"15:1-15:306\">ER/テーブル定義用Eclipseプラグイン<a href=\"http://ermaster.sourceforge.net/index_ja.html\" rel=\"nofollow noopener\" target=\"_blank\">ER Master</a>という神ツールで作成された erm ファイルを読み込み、そのER図やテーブル定義を <strong>インタラクティブER図/テーブル定義</strong> として表示するツールです。</p>\n<p data-sourcepos=\"17:1-17:168\">相当快適なインターフェイスを提供できたと思うのですが、 <strong>erm ファイルをお持ちではない方には無用の長物となります。</strong></p>\n<p data-sourcepos=\"19:1-20:78\">また、erm ファイルを雰囲気で読み取って表示用データを作りましたので、読み込みができないケースもあるかもしれません。<br>\nその場合にはソース修正してご利用頂ければと思います。</p>\n<h2 data-sourcepos=\"23:1-23:9\">\n<span id=\"機能\" class=\"fragment\"></span><a href=\"#%E6%A9%9F%E8%83%BD\"><i class=\"fa fa-link\"></i></a>機能</h2>\n<p data-sourcepos=\"25:1-26:227\">かなり基本的な機能しか作ってないです。<br>\n逆に言うと <strong>『かなり基本的な機能すらないのが当たり前と思い込んでいた』</strong> というDXが推進されない理由あるあるについて考えさせられながらのツール制作でした。</p>\n<ul data-sourcepos=\"28:1-35:0\">\n<li data-sourcepos=\"28:1-31:0\">\n<p data-sourcepos=\"28:3-30:174\">ctrl + f で検索できるER図<br>\nブラウザの検索機能で「図」を検索できます。<br>\npngになった「図」は検索できませんが、html の div タグなどで描画したER図は、普通にブラウザのキーワード検索が利用できます。</p>\n</li>\n<li data-sourcepos=\"32:1-35:0\">\n<p data-sourcepos=\"32:3-34:132\">table 全文検索/インクリメンタルサーチ<br>\n部分一致でフィルタされるのは似て非なるテーブルが多い時に猛威を発揮します。<br>\n保守フェーズ突入後など、記憶が薄れ始めた時期や別メンバーに交代時などに猛威を発揮します。</p>\n</li>\n</ul>\n<p data-sourcepos=\"36:1-36:97\">vuetify の DataTable 組み込みの検索ボックスを置くだけで実装できました。</p>\n<ul data-sourcepos=\"38:1-40:0\">\n<li data-sourcepos=\"38:1-40:0\">ページ遷移なしで任意のテーブルの詳細確認<br>\n複数のテーブルの詳細を見たい時にシート移動しなくてよいのは単純に快適です。</li>\n</ul>\n<p data-sourcepos=\"41:1-41:205\">vuetify の DataTable の expand 機能で、任意の行に追加で情報を記載可能なので、それを利用してテーブルの一覧/開閉可能なテーブルの詳細を実装しました。</p>\n<ul data-sourcepos=\"43:1-47:0\">\n<li data-sourcepos=\"43:1-47:0\">テーブル一覧とER対応<br>\nテーブル一覧で任意のテーブルをクリックすると、ER図上のそのテーブルを表示。<br>\nExcelや画像ビューワーを交互に開くのが面倒くさかったのでレイヤーのあるUIを作ってみました。<br>\n低コストで簡単に作れて効果が高いなと思いました。</li>\n</ul>\n<p data-sourcepos=\"48:1-49:39\">知らないうちに実装されていた <a href=\"https://developer.mozilla.org/ja/docs/Web/API/Element/scrollIntoView\" rel=\"nofollow noopener\" target=\"_blank\">Element.scrollIntoView()</a> でプラグインなどなしで簡単に実装できました。<br>\n※<strong>もちろんIEは無視です。</strong></p>\n<ul data-sourcepos=\"51:1-55:0\">\n<li data-sourcepos=\"51:1-55:0\">関連一覧表示/移動<br>\n関連を持つカラムをクリックすると、関連一覧を表示。<br>\nクリックで関連カラムを持つテーブルをスクロール表示。<br>\n画像を頑張ってドラッグして目的のテーブルにたどり着いたり戻ったりを無限に繰り返すのが地味にコストだなと思い作りました。</li>\n</ul>\n<p data-sourcepos=\"56:1-56:74\">こちらも<code>Element.scrollIntoView()</code>で簡単に実装できました。</p>\n<h2 data-sourcepos=\"59:1-59:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"60:1-60:253\">ER図やテーブルの理解のコストは、元々プロジェクトのコストとして計上されておらずエンジニアのセンスや努力や<strong>残業</strong>や<strong>残業</strong>によって暗黙的に賄われていることが多いと思います。</p>\n<p data-sourcepos=\"62:1-62:93\">今回のツールでそのようなコストを削減する一助になれば幸いです。</p>\n<p data-sourcepos=\"64:1-65:330\">DXでのコスト削減と世間ではバズワード的に語られていますが、仰々しいパッケージ製品を導入しなくても削減できるコストはたくさんあると思います。<br>\nエンジニアは、エンジニアリングによって人々の暮らしをよくする仕事をしていますが、自分たちの暮らしもよくすることをもっと考えてもいいと思います。その延長線上に見たことのない人々の暮らしや社会をよくすることはあると思います。</p>\n<p data-sourcepos=\"67:1-68:117\">と、難しい話もしましたが、単純に nuxt や vuetify は簡単で楽しいので是非書いてみてください。<br>\n今回のツールも行数としてはかなり短いので学習の参考にもご利用頂けると思います。</p>\n<p data-sourcepos=\"71:1-71:47\">(さいきょうのソース公開シリーズ)</p>\n<ul data-sourcepos=\"72:1-72:176\">\n<li data-sourcepos=\"72:1-72:176\"><a href=\"https://qiita.com/kaku3/items/9a554779422f58b51591\" id=\"reference-011a32fd128b02e6593b\">ぼくのかんがえた\"ほぼ\"さいきょうのガントチャートツール(agile gantt)のソース公開します</a></li>\n</ul>\n",
    "body": "## はじめに\n\nテーブル定義が100を超える様なプロジェクトを経験されていますでしょうか。\n図やエクセルからかすかな記憶を頼りに目的のテーブルやカラムドにたどり着いていますでしょうか。\n新メンバー投入の際に、宇宙を感じるERや100シートあるエクセルを熟読させていますでしょうか。\n\n長らく、ERやテーブル定義はそういうものだと思いこんで何の疑問も持っていなかったのですが、nuxt や vuetify があんまりにも簡単でわずかなコードを書けば、インタラクティブで便利なER図やテーブル定義を作れるのではないかと思い作成して公開しました。\n\n[erm-viewer](https://github.com/kaku3/erm-viewer)\n[demo](https://kaku3.github.io/erm-viewer/dist/)\n\n\n## erm-viewer\n\nER/テーブル定義用Eclipseプラグイン[ER Master](http://ermaster.sourceforge.net/index_ja.html)という神ツールで作成された erm ファイルを読み込み、そのER図やテーブル定義を **インタラクティブER図/テーブル定義** として表示するツールです。\n\n相当快適なインターフェイスを提供できたと思うのですが、 **erm ファイルをお持ちではない方には無用の長物となります。**\n\nまた、erm ファイルを雰囲気で読み取って表示用データを作りましたので、読み込みができないケースもあるかもしれません。\nその場合にはソース修正してご利用頂ければと思います。\n\n\n## 機能\n\nかなり基本的な機能しか作ってないです。\n逆に言うと **『かなり基本的な機能すらないのが当たり前と思い込んでいた』** というDXが推進されない理由あるあるについて考えさせられながらのツール制作でした。\n\n- ctrl + f で検索できるER図\nブラウザの検索機能で「図」を検索できます。\npngになった「図」は検索できませんが、html の div タグなどで描画したER図は、普通にブラウザのキーワード検索が利用できます。\n\n- table 全文検索/インクリメンタルサーチ\n部分一致でフィルタされるのは似て非なるテーブルが多い時に猛威を発揮します。\n保守フェーズ突入後など、記憶が薄れ始めた時期や別メンバーに交代時などに猛威を発揮します。\n\nvuetify の DataTable 組み込みの検索ボックスを置くだけで実装できました。\n\n- ページ遷移なしで任意のテーブルの詳細確認\n複数のテーブルの詳細を見たい時にシート移動しなくてよいのは単純に快適です。\n\nvuetify の DataTable の expand 機能で、任意の行に追加で情報を記載可能なので、それを利用してテーブルの一覧/開閉可能なテーブルの詳細を実装しました。\n\n- テーブル一覧とER対応\nテーブル一覧で任意のテーブルをクリックすると、ER図上のそのテーブルを表示。\nExcelや画像ビューワーを交互に開くのが面倒くさかったのでレイヤーのあるUIを作ってみました。\n低コストで簡単に作れて効果が高いなと思いました。\n\n知らないうちに実装されていた [Element.scrollIntoView()](https://developer.mozilla.org/ja/docs/Web/API/Element/scrollIntoView) でプラグインなどなしで簡単に実装できました。\n※**もちろんIEは無視です。**\n\n- 関連一覧表示/移動\n関連を持つカラムをクリックすると、関連一覧を表示。\nクリックで関連カラムを持つテーブルをスクロール表示。\n画像を頑張ってドラッグして目的のテーブルにたどり着いたり戻ったりを無限に繰り返すのが地味にコストだなと思い作りました。\n\nこちらも`Element.scrollIntoView()`で簡単に実装できました。\n\n\n## おわりに\nER図やテーブルの理解のコストは、元々プロジェクトのコストとして計上されておらずエンジニアのセンスや努力や**残業**や**残業**によって暗黙的に賄われていることが多いと思います。\n\n今回のツールでそのようなコストを削減する一助になれば幸いです。\n\nDXでのコスト削減と世間ではバズワード的に語られていますが、仰々しいパッケージ製品を導入しなくても削減できるコストはたくさんあると思います。\nエンジニアは、エンジニアリングによって人々の暮らしをよくする仕事をしていますが、自分たちの暮らしもよくすることをもっと考えてもいいと思います。その延長線上に見たことのない人々の暮らしや社会をよくすることはあると思います。\n\nと、難しい話もしましたが、単純に nuxt や vuetify は簡単で楽しいので是非書いてみてください。\n今回のツールも行数としてはかなり短いので学習の参考にもご利用頂けると思います。\n\n\n(さいきょうのソース公開シリーズ)\n- [ぼくのかんがえた\"ほぼ\"さいきょうのガントチャートツール(agile gantt)のソース公開します](https://qiita.com/kaku3/items/9a554779422f58b51591)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-02-26T14:27:46+09:00",
    "group": null,
    "id": "ceeea343463dcd224c22",
    "likes_count": 3,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 3,
    "tags": [
      {
        "name": "ERMaster",
        "versions": []
      },
      {
        "name": "ER図",
        "versions": []
      },
      {
        "name": "Vuetify",
        "versions": []
      },
      {
        "name": "Nuxt",
        "versions": []
      }
    ],
    "title": "ぼくがかんがえたえた\"ほぼ\"さいきょうのインタラクティブER図/テーブル定義のソース公開します",
    "updated_at": "2022-02-26T14:27:46+09:00",
    "url": "https://qiita.com/kaku3/items/ceeea343463dcd224c22",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1539,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"ぼくがほしいガントチャートツールがない\" class=\"fragment\"></span><a href=\"#%E3%81%BC%E3%81%8F%E3%81%8C%E3%81%BB%E3%81%97%E3%81%84%E3%82%AC%E3%83%B3%E3%83%88%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88%E3%83%84%E3%83%BC%E3%83%AB%E3%81%8C%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>ぼくがほしいガントチャートツールがない</h2>\n\n<p>どうも、現役プレイングマネージャです。</p>\n\n<p>巷ではアジャイル開発が賑わってますが、アジャイル管理という言葉はあまり聞いたことがないです。<br>\n実際、タスク管理はclickupやjiraやバックログなどの優秀なチケット管理ツールでだいぶ快適になってきていますが「今プロジェクトはどういう状況？」と言われた時に一言で回答できるような管理ツールがないのが現状かと思います。</p>\n\n<p>報告のためだけに Excelマクロ taskline で wbs を作成したり、ProjectLibre はなんとなくもっさりしてるし、Microsoft Project は高くて買えないし、そもそもリソース管理までをざっくりできるツールがないといった具合に色々探してみたけどよさそうな物がない。<br>\nこれでは変化の激しい開発に対して管理側で適切に人（リソース）の割り振りなどできるはずがありません。</p>\n\n<h2>\n<span id=\"パンがなければケーキを食べればいいじゃない\" class=\"fragment\"></span><a href=\"#%E3%83%91%E3%83%B3%E3%81%8C%E3%81%AA%E3%81%91%E3%82%8C%E3%81%B0%E3%82%B1%E3%83%BC%E3%82%AD%E3%82%92%E9%A3%9F%E3%81%B9%E3%82%8C%E3%81%B0%E3%81%84%E3%81%84%E3%81%98%E3%82%83%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>パンがなければケーキを食べればいいじゃない</h2>\n\n<p>ということでプログラムの学習も兼ねて自作することにしました。<br>\n身につけた知識で暮らしを豊かにするのは気分がいいです。セルフDXです。</p>\n\n<p>あまりコードを書くことなくそこそこ使えるところまで実装できました。<br>\nNuxtjs や socket.io を用いたサイト作成のサンプルとしてもお手軽なコード量です。<br>\nもしも同じ様な悩みの方がいればご利用頂けれるよう、機能追加する前の軽量な状態のソース公開をしておこうと思います。<br>\nお役に立ちましたらスターなどをつけて頂けたりすると励みになります。</p>\n\n<p><a href=\"https://github.com/kaku3/agile-gantt\" rel=\"nofollow noopener\" target=\"_blank\">github:kaku3/agile-gantt</a></p>\n\n<p><a href=\"https://camo.qiitausercontent.com/d28ebebba17b60831d39c423220a88ba6e739869/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f39356433356135342d386635342d396532302d316461372d3432343232346238346634342e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/95d35a54-8f54-9e20-1da7-424224b84f44.gif\" alt=\"overview.gif\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/95d35a54-8f54-9e20-1da7-424224b84f44.gif\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"コンセプト機能編\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%B3%E3%82%BB%E3%83%97%E3%83%88%E6%A9%9F%E8%83%BD%E7%B7%A8\"><i class=\"fa fa-link\"></i></a>コンセプト（機能編）</h2>\n\n<ul>\n<li>\n<strong>「思ったとおり入力・編集できる」</strong>\n\n<ul>\n<li>DX()で業務に集中したい。ツール作成のモチベーション</li>\n</ul>\n</li>\n<li>工数自動計算</li>\n<li>メモ機能</li>\n<li>Todo機能\n\n<ul>\n<li>単なるwbsではなく、アジャイル開発のための統合環境とする</li>\n<li>打ち合わせ時のアクションアイテムが議事録の深い闇に消えないようにする</li>\n</ul>\n</li>\n<li>\n<p>必要な機能からつくる</p>\n\n<ul>\n<li>設定画面などは適当\n\n<ul>\n<li>動けばいい。ユーザーがついたら改善する</li>\n</ul>\n</li>\n<li>稲妻線はいらない\n\n<ul>\n<li>過去の常識にとらわれず、必要な機能を考える</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>とりあえずDBは使わない</p>\n\n<ul>\n<li>導入しやすくするため、環境は最低限に抑える</li>\n</ul>\n</li>\n</ul>\n\n<h2>\n<span id=\"コンセプト製造編\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%B3%E3%82%BB%E3%83%97%E3%83%88%E8%A3%BD%E9%80%A0%E7%B7%A8\"><i class=\"fa fa-link\"></i></a>コンセプト（製造編）</h2>\n\n<ul>\n<li>必要な機能からつくる\n\n<ul>\n<li>工数見合いで優先順位をつける</li>\n<li>モチベーション維持のため技術的に面白そうなことの優先順位が上がることがある</li>\n</ul>\n</li>\n<li>そのうちバックエンドはまるっと差し替えできるように実装\n\n<ul>\n<li>お金があれば firebase を使いたい</li>\n</ul>\n</li>\n<li>ソースコードが学習サンプルになること\n\n<ul>\n<li>Nuxt.js\n\n<ul>\n<li>store</li>\n<li>auth</li>\n</ul>\n</li>\n<li>vuetify</li>\n<li>express\n\n<ul>\n<li>socket.io</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n<h2>\n<span id=\"環境要件\" class=\"fragment\"></span><a href=\"#%E7%92%B0%E5%A2%83%E8%A6%81%E4%BB%B6\"><i class=\"fa fa-link\"></i></a>環境要件</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>node 16.13.2\nyarn 1.22.4\n</code></pre></div></div>\n\n<h2>\n<span id=\"実行\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E8%A1%8C\"><i class=\"fa fa-link\"></i></a>実行</h2>\n\n<h3>\n<span id=\"バックエンド\" class=\"fragment\"></span><a href=\"#%E3%83%90%E3%83%83%E3%82%AF%E3%82%A8%E3%83%B3%E3%83%89\"><i class=\"fa fa-link\"></i></a>バックエンド</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>cd backend\n# インストール\nyarn install\n# 実行\nnode app.js\n</code></pre></div></div>\n\n<h3>\n<span id=\"フロントエンド\" class=\"fragment\"></span><a href=\"#%E3%83%95%E3%83%AD%E3%83%B3%E3%83%88%E3%82%A8%E3%83%B3%E3%83%89\"><i class=\"fa fa-link\"></i></a>フロントエンド</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>cd frontend\n# インストール\nyarn install\n# 実行\nyarn dev\n</code></pre></div></div>\n\n<p><a href=\"http://localhost:3000\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://localhost:3000</a> にアクセス</p>\n\n<ul>\n<li>release 版</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code># env.production.js を適切に修正。\nnpm generate # 実行ファイルを dist/ に生成\nnpm start # サーバ実行\n</code></pre></div></div>\n\n<h2>\n<span id=\"ゴール\" class=\"fragment\"></span><a href=\"#%E3%82%B4%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>ゴール</h2>\n\n<p>WBSが更新されない最大の理由は「めんどうくさい上にメリットが分かりにくいから」だと思います。<br>\n可能な限り「めんどうくさい」を取り除いて適切にWBSが更新される状況を作り出し、プロジェクトが見える化されるメリットを共有できるようにする。</p>\n\n<ul>\n<li>入力が簡単\n\n<ul>\n<li>リスケが容易にできるドラッグ＆ドロップ</li>\n<li>プロジェクトテンプレートで抜け漏れをなくす</li>\n<li>プロジェクトコピペで類似プロジェクト管理を容易に</li>\n</ul>\n</li>\n<li>リソースの人月管理\n\n<ul>\n<li>稼働率</li>\n<li>工数自動計算</li>\n<li>割当状況確認</li>\n</ul>\n</li>\n<li>ざっくり進捗把握\n\n<ul>\n<li>警告表示</li>\n</ul>\n</li>\n<li>一括管理\n\n<ul>\n<li>多人数同時更新対応\n\n<ul>\n<li>個人個人で別々のフォーマットでWBS管理を回避</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n<h2>\n<span id=\"要素技術\" class=\"fragment\"></span><a href=\"#%E8%A6%81%E7%B4%A0%E6%8A%80%E8%A1%93\"><i class=\"fa fa-link\"></i></a>要素技術</h2>\n\n<ul>\n<li>\n<p>フロントエンド</p>\n\n<ul>\n<li>\n<a href=\"https://nuxtjs.org/\" rel=\"nofollow noopener\" target=\"_blank\">Nuxt.js</a>\nフロントエンドフレームワーク。認証やaxiosなど結局細かく足さないとなので vue-cli で作り始めるより楽。</li>\n<li>\n<a href=\"https://vuetifyjs.com/\" rel=\"nofollow noopener\" target=\"_blank\">Vuetify</a>\nUIフレームワーク。element-ui よりモダン。</li>\n<li>\n<a href=\"https://www.npmjs.com/package/splitpanes\" rel=\"nofollow noopener\" target=\"_blank\">splitpanes</a>\nスプリッタ</li>\n<li>\n<a href=\"https://www.npmjs.com/package/vue-nestable\" rel=\"nofollow noopener\" target=\"_blank\">vue-nestable</a>\nタスク部階層つきドラッグ＆ドロップ。VueDraggable(Sortable.jsベース)も試したがこちらを採用。</li>\n<li>\n<a href=\"https://www.npmjs.com/package/vue-draggable-resizable\" rel=\"nofollow noopener\" target=\"_blank\">vue-draggable-resizable</a>\nタイムライン部ドラッグ＆ドロップ。vue-drag-resize も試したがこちらを採用。</li>\n<li>\n<a href=\"https://www.npmjs.com/package/socket.io-client\" rel=\"nofollow noopener\" target=\"_blank\">socket.io-client</a>\nWebリアルタイム通信（クライアント側）。\nサンプルコードとして読める様に、jsonをざっくり投げる簡単な実装にとどめた。</li>\n<li>\n<a href=\"https://www.npmjs.com/package/excel-formula\" rel=\"nofollow noopener\" target=\"_blank\">excel-formula</a>\nnode 用 EXCEL関数。NETWORKDAYS が最高に便利。</li>\n<li>\n<a href=\"https://www.npmjs.com/package/vue-json-to-csv\" rel=\"nofollow noopener\" target=\"_blank\">vue-json-to-csv</a>\njsonデータを csvファイルダウンロード</li>\n<li>\n<a href=\"https://tiptap.dev/\" rel=\"nofollow noopener\" target=\"_blank\">tiptap</a>\nHeadless WYSIWYG Text Editor。置いただけでかなり快適に動作。</li>\n</ul>\n</li>\n<li>\n<p>バックエンド</p>\n\n<ul>\n<li>\n<a href=\"https://www.npmjs.com/package/express\" rel=\"nofollow noopener\" target=\"_blank\">express</a>\nWebサーバ</li>\n<li>\n<a href=\"https://www.npmjs.com/package/socket.io\" rel=\"nofollow noopener\" target=\"_blank\">socket.io</a>\nWebリアルタイム通信（サーバ側）\nサンプルコードとして読める様に、jsonをざっくり投げる簡単な実装にとどめた。</li>\n<li>\n<a href=\"https://www.npmjs.com/package/jsonwebtoken\" rel=\"nofollow noopener\" target=\"_blank\">jsonwebtoken</a>\njwttoken エンコード/デコード</li>\n<li>\n<a href=\"https://www.npmjs.com/package/bcrypt\" rel=\"nofollow noopener\" target=\"_blank\">bcrypt</a>\nパスワードハッシュ</li>\n</ul>\n</li>\n</ul>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>見える化が推進され、実際管理業務が随分快適になりました。<br>\n自分が欲しい機能がほぼ<sup id=\"fnref1\"><a href=\"#fn1\" title=\"技術や工数見合いで未実装機能多数あり\">1</a></sup>実装されているツールで仕事をするのだから快適ではないはずはありません。</p>\n\n<p>自分の作ったツールで自分の業務が快適にできるというのはエンジニア冥利につきると思います。<br>\n昔は全部自分で作らなければならず簡単には作れなかったものが、今は少し調べれば簡単に作れるようです。<br>\n日々の業務で何かセルフDXできそうなことがあれば、是非取り組んでみてください。とても楽しいと思います。</p>\n\n<p>公開したソースが皆様の業務や学習の一助になれば幸いです。</p>\n\n<div class=\"footnotes\">\n<hr>\n<ol>\n\n<li id=\"fn1\">\n<p>技術や工数見合いで未実装機能多数あり <a href=\"#fnref1\">↩</a></p>\n</li>\n\n</ol>\n</div>\n",
    "body": "## ぼくがほしいガントチャートツールがない\n\nどうも、現役プレイングマネージャです。\n\n巷ではアジャイル開発が賑わってますが、アジャイル管理という言葉はあまり聞いたことがないです。\n実際、タスク管理はclickupやjiraやバックログなどの優秀なチケット管理ツールでだいぶ快適になってきていますが「今プロジェクトはどういう状況？」と言われた時に一言で回答できるような管理ツールがないのが現状かと思います。\n\n報告のためだけに Excelマクロ taskline で wbs を作成したり、ProjectLibre はなんとなくもっさりしてるし、Microsoft Project は高くて買えないし、そもそもリソース管理までをざっくりできるツールがないといった具合に色々探してみたけどよさそうな物がない。\nこれでは変化の激しい開発に対して管理側で適切に人（リソース）の割り振りなどできるはずがありません。\n\n\n## パンがなければケーキを食べればいいじゃない\n\nということでプログラムの学習も兼ねて自作することにしました。\n身につけた知識で暮らしを豊かにするのは気分がいいです。セルフDXです。\n\nあまりコードを書くことなくそこそこ使えるところまで実装できました。\nNuxtjs や socket.io を用いたサイト作成のサンプルとしてもお手軽なコード量です。\nもしも同じ様な悩みの方がいればご利用頂けれるよう、機能追加する前の軽量な状態のソース公開をしておこうと思います。\nお役に立ちましたらスターなどをつけて頂けたりすると励みになります。\n\n[github:kaku3/agile-gantt](https://github.com/kaku3/agile-gantt)\n\n![overview.gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/95d35a54-8f54-9e20-1da7-424224b84f44.gif)\n\n\n## コンセプト（機能編）\n\n- **「思ったとおり入力・編集できる」**\n    - DX()で業務に集中したい。ツール作成のモチベーション\n- 工数自動計算\n- メモ機能\n- Todo機能\n    - 単なるwbsではなく、アジャイル開発のための統合環境とする\n    - 打ち合わせ時のアクションアイテムが議事録の深い闇に消えないようにする\n- 必要な機能からつくる\n    - 設定画面などは適当\n        - 動けばいい。ユーザーがついたら改善する\n    - 稲妻線はいらない\n        - 過去の常識にとらわれず、必要な機能を考える\n\n- とりあえずDBは使わない\n    - 導入しやすくするため、環境は最低限に抑える\n\n## コンセプト（製造編）\n\n- 必要な機能からつくる\n    - 工数見合いで優先順位をつける\n    - モチベーション維持のため技術的に面白そうなことの優先順位が上がることがある\n- そのうちバックエンドはまるっと差し替えできるように実装\n    - お金があれば firebase を使いたい\n- ソースコードが学習サンプルになること\n    - Nuxt.js\n        - store\n        - auth\n    - vuetify\n    - express\n        - socket.io\n\n\n## 環境要件\n\n```\nnode 16.13.2\nyarn 1.22.4\n```\n\n## 実行\n\n### バックエンド\n\n```\ncd backend\n# インストール\nyarn install\n# 実行\nnode app.js\n```\n\n### フロントエンド\n\n```\ncd frontend\n# インストール\nyarn install\n# 実行\nyarn dev\n```\n\nhttp://localhost:3000 にアクセス\n\n- release 版\n\n```\n# env.production.js を適切に修正。\nnpm generate # 実行ファイルを dist/ に生成\nnpm start # サーバ実行\n```\n\n\n## ゴール\n\nWBSが更新されない最大の理由は「めんどうくさい上にメリットが分かりにくいから」だと思います。\n可能な限り「めんどうくさい」を取り除いて適切にWBSが更新される状況を作り出し、プロジェクトが見える化されるメリットを共有できるようにする。\n\n- 入力が簡単\n    - リスケが容易にできるドラッグ＆ドロップ\n    - プロジェクトテンプレートで抜け漏れをなくす\n    - プロジェクトコピペで類似プロジェクト管理を容易に\n- リソースの人月管理\n    - 稼働率\n    - 工数自動計算\n    - 割当状況確認\n- ざっくり進捗把握\n    - 警告表示\n- 一括管理\n    - 多人数同時更新対応\n        - 個人個人で別々のフォーマットでWBS管理を回避\n\n\n## 要素技術\n\n- フロントエンド\n    - [Nuxt.js](https://nuxtjs.org/)\n    フロントエンドフレームワーク。認証やaxiosなど結局細かく足さないとなので vue-cli で作り始めるより楽。\n    - [Vuetify](https://vuetifyjs.com/)\n    UIフレームワーク。element-ui よりモダン。\n    - [splitpanes](https://www.npmjs.com/package/splitpanes)\n    スプリッタ\n    - [vue-nestable](https://www.npmjs.com/package/vue-nestable)\n    タスク部階層つきドラッグ＆ドロップ。VueDraggable(Sortable.jsベース)も試したがこちらを採用。\n    - [vue-draggable-resizable](https://www.npmjs.com/package/vue-draggable-resizable)\n    タイムライン部ドラッグ＆ドロップ。vue-drag-resize も試したがこちらを採用。\n    - [socket.io-client](https://www.npmjs.com/package/socket.io-client)\n    Webリアルタイム通信（クライアント側）。\n    サンプルコードとして読める様に、jsonをざっくり投げる簡単な実装にとどめた。\n    - [excel-formula](https://www.npmjs.com/package/excel-formula)\n    node 用 EXCEL関数。NETWORKDAYS が最高に便利。\n    - [vue-json-to-csv](https://www.npmjs.com/package/vue-json-to-csv)\n    jsonデータを csvファイルダウンロード\n    - [tiptap](https://tiptap.dev/)\n    Headless WYSIWYG Text Editor。置いただけでかなり快適に動作。\n\n- バックエンド\n    - [express](https://www.npmjs.com/package/express)\n    Webサーバ\n    - [socket.io](https://www.npmjs.com/package/socket.io)\n    Webリアルタイム通信（サーバ側）\n    サンプルコードとして読める様に、jsonをざっくり投げる簡単な実装にとどめた。\n    - [jsonwebtoken](https://www.npmjs.com/package/jsonwebtoken)\n    jwttoken エンコード/デコード\n    - [bcrypt](https://www.npmjs.com/package/bcrypt)\n    パスワードハッシュ\n\n## まとめ\n\n見える化が推進され、実際管理業務が随分快適になりました。\n自分が欲しい機能がほぼ[^1]実装されているツールで仕事をするのだから快適ではないはずはありません。\n\n自分の作ったツールで自分の業務が快適にできるというのはエンジニア冥利につきると思います。\n昔は全部自分で作らなければならず簡単には作れなかったものが、今は少し調べれば簡単に作れるようです。\n日々の業務で何かセルフDXできそうなことがあれば、是非取り組んでみてください。とても楽しいと思います。\n\n公開したソースが皆様の業務や学習の一助になれば幸いです。\n\n[^1]: 技術や工数見合いで未実装機能多数あり\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-02-05T15:05:14+09:00",
    "group": null,
    "id": "9a554779422f58b51591",
    "likes_count": 37,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 27,
    "tags": [
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "Socket.io",
        "versions": []
      },
      {
        "name": "Express",
        "versions": []
      },
      {
        "name": "マネジメント",
        "versions": []
      },
      {
        "name": "Nuxt",
        "versions": []
      }
    ],
    "title": "ぼくのかんがえた\"ほぼ\"さいきょうのガントチャートツール(agile gantt)のソース公開します",
    "updated_at": "2022-02-16T00:37:48+09:00",
    "url": "https://qiita.com/kaku3/items/9a554779422f58b51591",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 7751,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"すぐにできます\" class=\"fragment\"></span><a href=\"#%E3%81%99%E3%81%90%E3%81%AB%E3%81%A7%E3%81%8D%E3%81%BE%E3%81%99\"><i class=\"fa fa-link\"></i></a>すぐにできます！</h2>\n\n<p>『もう出ました』というそば屋の様な響きですね。<br>\n反射的に「すぐにできます」という回答をする方は一定数いると思いますが、その回答をしてできなかった場合に何が起きるかを考えてみたいと思います。</p>\n\n<h2>\n<span id=\"想像以上に莫大な損害が発生する\" class=\"fragment\"></span><a href=\"#%E6%83%B3%E5%83%8F%E4%BB%A5%E4%B8%8A%E3%81%AB%E8%8E%AB%E5%A4%A7%E3%81%AA%E6%90%8D%E5%AE%B3%E3%81%8C%E7%99%BA%E7%94%9F%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>想像以上に莫大な損害が発生する</h2>\n\n<p>「すぐにできる」つもりで計画が立ちます。</p>\n\n<p>開発者が「すぐにできる」と答えたら、それに合わせてリリース日の調整をします。<br>\n試験担当者の手配も「すぐ」に合わせてすることになります。<br>\n実際に「すぐ」にできなかった場合は、苦労して手配した試験担当者が手持ち無沙汰になり待機コストが発生します。</p>\n\n<p>BtoC製品であれば、リリース日に向けて広告の出稿も必要ですが、すぐにできなかった場合には広告が全て無駄になります。<br>\n大変な損害です。</p>\n\n<h2>\n<span id=\"相手に不信感を与えてしまう\" class=\"fragment\"></span><a href=\"#%E7%9B%B8%E6%89%8B%E3%81%AB%E4%B8%8D%E4%BF%A1%E6%84%9F%E3%82%92%E4%B8%8E%E3%81%88%E3%81%A6%E3%81%97%E3%81%BE%E3%81%86\"><i class=\"fa fa-link\"></i></a>相手に不信感を与えてしまう</h2>\n\n<p>状況の整理ができていて理路整然と理由が説明できた上で「すぐできる」と回答するのであれば問題はないですが、それらを伴わずに「すぐできる」と回答することは危険に感じます。</p>\n\n<p>なぜなら、回答される側に、タスクを把握していないのに「すぐできる」と言っている様に受け止められるからです。<br>\n更に、タスクを把握していないとすれば、「すぐにできる」かもしれないけれども、望んでいるアウトプットと異なる作業をされるリスクが高いとも感じられると思います。</p>\n\n<p>わたしが、経験上「すぐにできる」と言って本当にすぐにできた人には、ほとんどお会いしたことがないせいかもしれません。</p>\n\n<h2>\n<span id=\"すぐにできると答えるメリットは薄い\" class=\"fragment\"></span><a href=\"#%E3%81%99%E3%81%90%E3%81%AB%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%A8%E7%AD%94%E3%81%88%E3%82%8B%E3%83%A1%E3%83%AA%E3%83%83%E3%83%88%E3%81%AF%E8%96%84%E3%81%84\"><i class=\"fa fa-link\"></i></a>「すぐにできる」と答えるメリットは薄い</h2>\n\n<p>結局評価されるのはアウトプットです。<br>\n約束した期日に約束した物量・品質のアウトプットを約束した相手に引き渡たすことが大事です。<br>\n「すぐにできる」と答える事で、<strong>物量・品質を担保できなくなるリスクを上げることになります。</strong><br>\n相手が予定している期日より早く提出しても <strong>意味はないし評価も上がりません。</strong></p>\n\n<p>更に、相手が望んでいる物量・品質と、自分で思っている物量・品質に差異がある場合、「すぐにできた」としても <strong>「アウトプットはすぐに出すが、望んでいるアウトプットを出さない人」</strong> と思われるリスクがあります。</p>\n\n<p>作業に着手する前に、理路整然と説明できる状態になっており、相手に説明をして合意形成を行うことで「間違ったアウトプット」を出すリスクを下げることができると思います。</p>\n\n<p><strong>「すぐにできること」</strong>よりも<strong>「着手する作業の説明ができること」</strong>の方に遥かに価値があるのではないでしょうか。</p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>約束を守るのは社会人の最低限のルールです。<br>\n多少時間はかかっても、約束を守る人間の方が信用されますし、約束を守らない人間はそもそも信用されません。<br>\nさらに、できない約束をすると、様々な人間に迷惑をかけたり、損害が発生します。</p>\n\n<p>この大前提がある中で「すぐにできる」と発言するのは大変リスクが高い行為に感じます。</p>\n\n<p>タスクが発生した際には、一呼吸おいて、まずはタスクを整理、分解、再構築し、見積もりを立てた後に、その後理路整然と報告し、期日を約束するのがよいと思います。</p>\n\n<p>最初の見積もり通りいかないことも多々あると思いますが、その場合にはこまめに報連相するとよいでしょう。<br>\n言いづらいこと、切り出しづらいことも多々あると思いますが、早め早めに適切な行動を取ることで相手の信頼を得られることも多くあると思います。</p>\n\n<p>趣味プログラマではなく、業務プログラマの皆様におきましては、好きなものを好きなように作るだけでは仕事にならず、誰かに依頼された作業を行うという仕事をされていると思います。<br>\n本記事がその誰かに信頼されるような仕事をするための参考になれば幸いです。</p>\n",
    "body": "## すぐにできます！\n\n『もう出ました』というそば屋の様な響きですね。\n反射的に「すぐにできます」という回答をする方は一定数いると思いますが、その回答をしてできなかった場合に何が起きるかを考えてみたいと思います。\n\n\n## 想像以上に莫大な損害が発生する\n\n「すぐにできる」つもりで計画が立ちます。\n\n開発者が「すぐにできる」と答えたら、それに合わせてリリース日の調整をします。\n試験担当者の手配も「すぐ」に合わせてすることになります。\n実際に「すぐ」にできなかった場合は、苦労して手配した試験担当者が手持ち無沙汰になり待機コストが発生します。\n\nBtoC製品であれば、リリース日に向けて広告の出稿も必要ですが、すぐにできなかった場合には広告が全て無駄になります。\n大変な損害です。\n\n\n## 相手に不信感を与えてしまう\n\n状況の整理ができていて理路整然と理由が説明できた上で「すぐできる」と回答するのであれば問題はないですが、それらを伴わずに「すぐできる」と回答することは危険に感じます。\n\nなぜなら、回答される側に、タスクを把握していないのに「すぐできる」と言っている様に受け止められるからです。\n更に、タスクを把握していないとすれば、「すぐにできる」かもしれないけれども、望んでいるアウトプットと異なる作業をされるリスクが高いとも感じられると思います。\n\nわたしが、経験上「すぐにできる」と言って本当にすぐにできた人には、ほとんどお会いしたことがないせいかもしれません。\n\n\n## 「すぐにできる」と答えるメリットは薄い\n\n結局評価されるのはアウトプットです。\n約束した期日に約束した物量・品質のアウトプットを約束した相手に引き渡たすことが大事です。\n「すぐにできる」と答える事で、**物量・品質を担保できなくなるリスクを上げることになります。**\n相手が予定している期日より早く提出しても **意味はないし評価も上がりません。**\n\n更に、相手が望んでいる物量・品質と、自分で思っている物量・品質に差異がある場合、「すぐにできた」としても **「アウトプットはすぐに出すが、望んでいるアウトプットを出さない人」** と思われるリスクがあります。\n\n作業に着手する前に、理路整然と説明できる状態になっており、相手に説明をして合意形成を行うことで「間違ったアウトプット」を出すリスクを下げることができると思います。\n\n**「すぐにできること」**よりも**「着手する作業の説明ができること」**の方に遥かに価値があるのではないでしょうか。\n\n## まとめ\n\n約束を守るのは社会人の最低限のルールです。\n多少時間はかかっても、約束を守る人間の方が信用されますし、約束を守らない人間はそもそも信用されません。\nさらに、できない約束をすると、様々な人間に迷惑をかけたり、損害が発生します。\n\nこの大前提がある中で「すぐにできる」と発言するのは大変リスクが高い行為に感じます。\n\nタスクが発生した際には、一呼吸おいて、まずはタスクを整理、分解、再構築し、見積もりを立てた後に、その後理路整然と報告し、期日を約束するのがよいと思います。\n\n最初の見積もり通りいかないことも多々あると思いますが、その場合にはこまめに報連相するとよいでしょう。\n言いづらいこと、切り出しづらいことも多々あると思いますが、早め早めに適切な行動を取ることで相手の信頼を得られることも多くあると思います。\n\n趣味プログラマではなく、業務プログラマの皆様におきましては、好きなものを好きなように作るだけでは仕事にならず、誰かに依頼された作業を行うという仕事をされていると思います。\n本記事がその誰かに信頼されるような仕事をするための参考になれば幸いです。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-01-29T17:20:55+09:00",
    "group": null,
    "id": "6c8c737bbb280be34471",
    "likes_count": 4,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 2,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "マネジメント",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      }
    ],
    "title": "「すぐにできます」について考える",
    "updated_at": "2022-01-30T22:07:19+09:00",
    "url": "https://qiita.com/kaku3/items/6c8c737bbb280be34471",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2210,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:31\">\n<span id=\"why-デザインパターン\" class=\"fragment\"></span><a href=\"#why-%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3\"><i class=\"fa fa-link\"></i></a>Why デザインパターン</h2>\n<p data-sourcepos=\"3:1-3:60\">職業プログラマのみなさんおはこんばんわ。</p>\n<p data-sourcepos=\"5:1-5:198\">大量にプログラムを書く仕事を想像してプログラマになられたかもしれませんが、<strong>大量にプログラムを読む仕事</strong> をなさっているでしょうか？<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup></p>\n<p data-sourcepos=\"7:1-7:361\">規模の大きな開発や、短期間での開発に対応するためには、既存プロジェクトのソース、オープンソースやフレームワークのソースなど、<strong>他人の書いたソースを読んで理解して利用する</strong>必要があるため、プログラムを書く機会より読む機会が増えていると思います。</p>\n<p data-sourcepos=\"9:1-11:24\">ここで困ったことが一つあります。<br>\n<strong>『プログラムはコンピューターが理解できさえすればどのように書いてあっても動く』</strong><br>\nということです。</p>\n<p data-sourcepos=\"13:1-13:191\">例えば、変数名を <code>hoge</code> と定義したプログラムは動作しますが、書いた本人以外の他人がそのプログラムの意図を理解するのは困難でしょう。</p>\n<p data-sourcepos=\"15:1-15:234\">あるいは、一つの関数が1000行のプログラムも動作しますが、他人が読むことは大変困難でしょう。悪いことに<strong>書いた本人ですら3ヶ月後には読めない</strong>こともあるでしょう。</p>\n<p data-sourcepos=\"17:1-18:120\">これらは極端な事例ですが、**「誰が設計しても、このケースではこう設計するのが妥当」**というベストプラクティスに沿って職業プログラマ全員が読んだり書いたりすれば毎回コーディングや設計で悩んだり悩まされたりしなくてよくなるはずです。<br>\nこれがデザインパターンが生まれた理由であり、わたし達が学習する理由かと思います。</p>\n<p data-sourcepos=\"20:1-20:318\">残念なことに実装ありきの解説で敷居が高かったり、利用頻度がそこまで高くなかったりして微妙かなと思うところもありますが、知識として知っておいて損はないかと思いますので身近なユースケースを上げて説明したいと思います。</p>\n<h2 data-sourcepos=\"23:1-23:40\">\n<span id=\"生成に関するパターン1---5\" class=\"fragment\"></span><a href=\"#%E7%94%9F%E6%88%90%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8B%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B31---5\"><i class=\"fa fa-link\"></i></a>生成に関するパターン(1 - 5)</h2>\n<table data-sourcepos=\"25:1-31:80\">\n<thead>\n<tr data-sourcepos=\"25:1-25:51\">\n<th data-sourcepos=\"25:2-25:28\">デザインパターン</th>\n<th data-sourcepos=\"25:30-25:50\">ユースケース</th>\n</tr>\n</thead>\n<tbody>\n<tr data-sourcepos=\"27:1-27:146\">\n<td data-sourcepos=\"27:2-27:82\"><a href=\"#1-abstract-factory%E6%8A%BD%E8%B1%A1%E7%9A%84%E3%81%AA%E5%B7%A5%E5%A0%B4\">1. Abstract Factory(抽象的な工場) </a></td>\n<td data-sourcepos=\"27:84-27:146\">ココイチはカレー工場で、二郎はラーメン工場</td>\n</tr>\n<tr data-sourcepos=\"28:1-28:122\">\n<td data-sourcepos=\"28:2-28:46\"><a href=\"#2-builder%E5%BB%BA%E7%AF%89%E8%80%85\">2. Builder(建築者)</a></td>\n<td data-sourcepos=\"28:48-28:122\">ベースの武器と素材や不要な武器と金を渡して武器強化</td>\n</tr>\n<tr data-sourcepos=\"29:1-29:179\">\n<td data-sourcepos=\"29:2-29:133\"><a href=\"#3-factory-methodfactory%E3%81%AB%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E7%94%9F%E6%88%90%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\">3. Factory Method(Factoryにオブジェクト生成メソッド)</a></td>\n<td data-sourcepos=\"29:135-29:179\">餅は餅屋に、カレーはカレー屋に</td>\n</tr>\n<tr data-sourcepos=\"30:1-30:89\">\n<td data-sourcepos=\"30:2-30:43\"><a href=\"#4-prototype%E9%9B%9B%E5%BD%A2\">4. Prototype(雛形)</a></td>\n<td data-sourcepos=\"30:45-30:89\">セントラルキッチンでスープ製造</td>\n</tr>\n<tr data-sourcepos=\"31:1-31:80\">\n<td data-sourcepos=\"31:2-31:43\"><a href=\"#5-singleton%E5%8D%98%E4%B8%80\">5. Singleton(単一)</a></td>\n<td data-sourcepos=\"31:45-31:80\">セントラルキッチンは一つ</td>\n</tr>\n</tbody>\n</table>\n<h2 data-sourcepos=\"34:1-34:41\">\n<span id=\"構造に関するパターン6---12\" class=\"fragment\"></span><a href=\"#%E6%A7%8B%E9%80%A0%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8B%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B36---12\"><i class=\"fa fa-link\"></i></a>構造に関するパターン(6 - 12)</h2>\n<table data-sourcepos=\"36:1-44:159\">\n<thead>\n<tr data-sourcepos=\"36:1-36:48\">\n<th data-sourcepos=\"36:2-36:28\">デザインパターン</th>\n<th data-sourcepos=\"36:30-36:47\">超入門概要</th>\n</tr>\n</thead>\n<tbody>\n<tr data-sourcepos=\"38:1-38:56\">\n<td data-sourcepos=\"38:2-38:40\"><a href=\"#6-adapter%E9%81%A9%E5%90%88\">6. Adapter(適合)</a></td>\n<td data-sourcepos=\"38:42-38:56\">居抜き店舗</td>\n</tr>\n<tr data-sourcepos=\"39:1-39:57\">\n<td data-sourcepos=\"39:2-39:32\"><a href=\"#7-bridge%E6%A9%8B\">7. Bridge(橋)</a></td>\n<td data-sourcepos=\"39:34-39:57\">展示場とイベント</td>\n</tr>\n<tr data-sourcepos=\"40:1-40:78\">\n<td data-sourcepos=\"40:2-40:50\"><a href=\"#8-composite%E8%A4%87%E5%90%88%E7%89%A9\">8. Composite(複合物)</a></td>\n<td data-sourcepos=\"40:52-40:78\">ゲームオブジェクト</td>\n</tr>\n<tr data-sourcepos=\"41:1-41:94\">\n<td data-sourcepos=\"41:2-41:50\"><a href=\"#9-decorator%E8%A3%85%E9%A3%BE%E8%80%85\">9. Decorator(装飾者)</a></td>\n<td data-sourcepos=\"41:52-41:94\">PSストアセールと消費税(悪い例)</td>\n</tr>\n<tr data-sourcepos=\"42:1-42:74\">\n<td data-sourcepos=\"42:2-42:40\"><a href=\"#10-facade%E7%AA%93%E5%8F%A3\">10. Facade(窓口)</a></td>\n<td data-sourcepos=\"42:42-42:74\">区役所とウーバーイーツ</td>\n</tr>\n<tr data-sourcepos=\"43:1-43:71\">\n<td data-sourcepos=\"43:2-43:46\"><a href=\"#11-flyweight%E8%BB%BD%E9%87%8F\">11. Flyweight(軽量)</a></td>\n<td data-sourcepos=\"43:48-43:71\">ネットフリックス</td>\n</tr>\n<tr data-sourcepos=\"44:1-44:159\">\n<td data-sourcepos=\"44:2-44:44\"><a href=\"#12-proxy%E4%BB%A3%E7%90%86%E4%BA%BA\">12. Proxy(代理人)</a></td>\n<td data-sourcepos=\"44:46-44:159\">カリスマ経営者率いるプログラミングスクール、オフショア窓口、美容院、メルカリ</td>\n</tr>\n</tbody>\n</table>\n<h2 data-sourcepos=\"46:1-46:48\">\n<span id=\"振る舞いに関するパターン13---23\" class=\"fragment\"></span><a href=\"#%E6%8C%AF%E3%82%8B%E8%88%9E%E3%81%84%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8B%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B313---23\"><i class=\"fa fa-link\"></i></a>振る舞いに関するパターン(13 - 23)</h2>\n<table data-sourcepos=\"48:1-60:295\">\n<thead>\n<tr data-sourcepos=\"48:1-48:51\">\n<th data-sourcepos=\"48:2-48:28\">デザインパターン</th>\n<th data-sourcepos=\"48:30-48:50\">ユースケース</th>\n</tr>\n</thead>\n<tbody>\n<tr data-sourcepos=\"50:1-50:138\">\n<td data-sourcepos=\"50:2-50:86\"><a href=\"#13-chain-of-responsibility%E8%B2%AC%E4%BB%BB%E3%81%AE%E9%8E%96\">13. Chain of Responsibility(責任の鎖)</a></td>\n<td data-sourcepos=\"50:88-50:138\">お前じゃ話にならん店長を呼んでこい</td>\n</tr>\n<tr data-sourcepos=\"51:1-51:91\">\n<td data-sourcepos=\"51:2-51:66\"><a href=\"#14-command%E6%89%8B%E9%A0%86%E6%9B%B8%E9%80%9A%E3%82%8A%E3%82%84%E3%81%A3%E3%81%A6\">14. Command(コマンド)</a></td>\n<td data-sourcepos=\"51:68-51:91\">手順書通りやって</td>\n</tr>\n<tr data-sourcepos=\"52:1-52:129\">\n<td data-sourcepos=\"52:2-52:92\"><a href=\"#15-interpreterrpg%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E8%A8%80%E8%AA%9E\">15. Interpreter(インタプリタ)</a></td>\n<td data-sourcepos=\"52:94-52:129\">RPGゲームのスクリプト言語</td>\n</tr>\n<tr data-sourcepos=\"53:1-53:144\">\n<td data-sourcepos=\"53:2-53:92\"><a href=\"#16-iterator%E5%8F%A4%E3%81%84%E8%A8%AD%E8%A8%88%E9%96%A2%E6%95%B0%E5%9E%8B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%82%92%E3%81%97%E3%82%88%E3%81%86\">16. Iterator(繰り返し)</a></td>\n<td data-sourcepos=\"53:94-53:144\">古い設計。関数型プログラムをしよう</td>\n</tr>\n<tr data-sourcepos=\"54:1-54:81\">\n<td data-sourcepos=\"54:2-54:62\"><a href=\"#17-mediatorses%E3%81%A8%E6%8C%87%E6%8F%AE%E5%91%BD%E4%BB%A4\">17. Mediator(指揮命令)</a></td>\n<td data-sourcepos=\"54:64-54:81\">SESと指揮命令</td>\n</tr>\n<tr data-sourcepos=\"55:1-55:106\">\n<td data-sourcepos=\"55:2-55:72\"><a href=\"#18-memento%E8%A8%98%E5%BF%B5%E5%93%81%E3%82%88%E3%82%8A%E3%82%BB%E3%83%BC%E3%83%96%E3%83%87%E3%83%BC%E3%82%BF\">18. Memento(記念品)</a></td>\n<td data-sourcepos=\"55:74-55:106\">記念品よりセーブデータ</td>\n</tr>\n<tr data-sourcepos=\"56:1-56:90\">\n<td data-sourcepos=\"56:2-56:65\"><a href=\"#19-observer%E6%96%B0%E5%88%8A%E3%81%8A%E7%9F%A5%E3%82%89%E3%81%9B%E6%A9%9F%E8%83%BD\">19. Observer(観測者)</a></td>\n<td data-sourcepos=\"56:67-56:90\">新刊お知らせ機能</td>\n</tr>\n<tr data-sourcepos=\"57:1-57:75\">\n<td data-sourcepos=\"57:2-57:53\"><a href=\"#20-state%E3%82%AD%E3%83%A3%E3%83%A9%E3%82%AF%E3%82%BF%E9%81%B8%E6%8A%9E\">20. State(状態)</a></td>\n<td data-sourcepos=\"57:55-57:75\">キャラクタ選択</td>\n</tr>\n<tr data-sourcepos=\"58:1-58:114\">\n<td data-sourcepos=\"58:2-58:74\"><a href=\"#21-strategy%E6%88%A6%E7%95%A5%E3%81%8B%E6%88%A6%E8%A1%93%E3%81%8B%E3%81%9D%E3%82%8C%E3%81%8C%E5%95%8F%E9%A1%8C%E3%81%A0\">21. Strategy(戦略)</a></td>\n<td data-sourcepos=\"58:76-58:114\">戦略か戦術か、それが問題だ</td>\n</tr>\n<tr data-sourcepos=\"59:1-59:149\">\n<td data-sourcepos=\"59:2-59:130\"><a href=\"#22-template-method%E5%AD%A6%E7%BF%92%E6%8C%87%E5%B0%8E%E8%A6%81%E7%B6%B1\">22. Template Method(テンプレートメソッド)</a></td>\n<td data-sourcepos=\"59:132-59:149\">学習指導要綱</td>\n</tr>\n<tr data-sourcepos=\"60:1-60:295\">\n<td data-sourcepos=\"60:2-60:228\"><a href=\"#23-visitor%E3%82%A6%E3%83%BC%E3%83%90%E3%83%BC%E3%81%A8%E3%83%9E%E3%83%83%E3%82%AF%E3%83%87%E3%83%AA%E3%83%90%E3%83%AA%E3%83%BC%E3%81%A8%E3%83%A4%E3%83%9E%E3%83%88%E3%81%A8%E4%BD%90%E5%B7%9D%E3%81%A8\">23. Visitor(訪問者)</a></td>\n<td data-sourcepos=\"60:230-60:295\">ウーバーとマックデリバリーとヤマトと佐川と…</td>\n</tr>\n</tbody>\n</table>\n<h3 data-sourcepos=\"63:1-63:43\">\n<span id=\"1-abstract-factory抽象的な工場\" class=\"fragment\"></span><a href=\"#1-abstract-factory%E6%8A%BD%E8%B1%A1%E7%9A%84%E3%81%AA%E5%B7%A5%E5%A0%B4\"><i class=\"fa fa-link\"></i></a>1. Abstract Factory(抽象的な工場)</h3>\n<p data-sourcepos=\"65:1-65:72\">１つ目からちょっと何言ってるか分からないですね。</p>\n<p data-sourcepos=\"67:1-68:147\">晩ごはんを食べるプログラムを書くとしましょうか。<br>\nココイチならカレー、二郎ならラーメンが食べられますが、まだ今日はどちらを食べたいか決まってません。</p>\n<p data-sourcepos=\"70:1-71:272\">この様な時に、晩ごはん工場をAbstract Factory と見立てて、ココイチや二郎をFactoryと見立てて、プログラムを書くとはっきり食べたいモノが決まってなくてもプログラムが書けます。<br>\nまた、急に気が変わってサイゼの辛味チキンが食べたくなったとしても、サイゼリヤを Factory として実装して、サイゼリヤを create するだけでその後晩ごはんを食べる処理などは修正が不要となります。</p>\n<p data-sourcepos=\"73:1-73:131\"><a href=\"https://camo.qiitausercontent.com/702cde0d44ceb0f1dfc2ff771afbb4738b524818/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f30323039313761632d323538642d613166632d353237302d3762336633306162626339342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F020917ac-258d-a1fc-5270-7b3f30abbc94.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=82ca0e2d96b30f820cd4d0f445092543\" alt=\"AbstractFactory.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/020917ac-258d-a1fc-5270-7b3f30abbc94.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F020917ac-258d-a1fc-5270-7b3f30abbc94.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=04ef4329105cea9bc3b9a0d635e9b3e9 1x\" loading=\"lazy\"></a></p>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"75:1-81:3\">\n<div class=\"code-lang\"><span class=\"bold\">AbstractFactorySnippet.java</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nc\">SupperFactory</span> <span class=\"n\">factory</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">CocoichiFactory</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// 以下のコードは店(Factory)によらず共通</span>\n<span class=\"n\">factory</span><span class=\"o\">.</span><span class=\"na\">createFood</span><span class=\"o\">(</span><span class=\"mi\">800</span><span class=\"o\">);</span>\n<span class=\"o\">...</span>\n</code></pre></div>\n</div>\n<h3 data-sourcepos=\"83:1-83:25\">\n<span id=\"2-builder建築者\" class=\"fragment\"></span><a href=\"#2-builder%E5%BB%BA%E7%AF%89%E8%80%85\"><i class=\"fa fa-link\"></i></a>2. Builder(建築者)</h3>\n<p data-sourcepos=\"85:1-85:67\">2つ目もちょっと何言ってるか分からないですね。</p>\n<p data-sourcepos=\"87:1-87:126\">『建築者に渡すべきものを渡して結果を取得する方法』だけ取り決めとくという考え方です。</p>\n<p data-sourcepos=\"89:1-90:171\">身近な例だと、ソシャゲの武器強化などでしょうか。<br>\n<code>Equipment</code> は <code>Material</code> から派生しておくと、強化用素材だけではなく、不要な武器防具も強化用素材として利用できそうですね。</p>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"92:1-99:3\">\n<div class=\"code-lang\"><span class=\"bold\">LeveledEquipmentBuilder.java</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">interface</span> <span class=\"nc\">LeveledEquipmentBuilder</span> <span class=\"o\">{</span>\n  <span class=\"kt\">void</span> <span class=\"nf\">setTarget</span><span class=\"o\">(</span><span class=\"nc\">Equipment</span> <span class=\"n\">equipment</span><span class=\"o\">);</span>  <span class=\"c1\">// 強化対象</span>\n  <span class=\"kt\">void</span> <span class=\"nf\">addMaterial</span><span class=\"o\">(</span><span class=\"nc\">Material</span> <span class=\"n\">material</span><span class=\"o\">);</span> <span class=\"c1\">// 強化用素材</span>\n  <span class=\"kt\">void</span> <span class=\"nf\">setMoney</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">money</span><span class=\"o\">);</span> <span class=\"c1\">// 強化費用</span>\n  <span class=\"nc\">Equipment</span> <span class=\"nf\">build</span><span class=\"o\">();</span>    <span class=\"c1\">// 結果取得</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"101:1-102:168\">課金アイテムなどで成功率を上げられるなら、<code>addSuccessRate</code> といったインターフェイスも追加する必要があるでしょう。<br>\n武器強化機能は様々なソシャゲで見かけ今や実装必須の機能と言えるので再利用可能なコードにしておくと便利そうですね。</p>\n<p data-sourcepos=\"104:1-104:123\"><a href=\"https://camo.qiitausercontent.com/d0515989165803032e08e5f41ce96e5618102cae/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63346330623566342d313265362d333363612d646163392d6238633734386139346236312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c4c0b5f4-12e6-33ca-dac9-b8c748a94b61.png\" alt=\"Builder.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c4c0b5f4-12e6-33ca-dac9-b8c748a94b61.png\" loading=\"lazy\"></a></p>\n<h3 data-sourcepos=\"107:1-107:69\">\n<span id=\"3-factory-methodfactoryにオブジェクト生成メソッド\" class=\"fragment\"></span><a href=\"#3-factory-methodfactory%E3%81%AB%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E7%94%9F%E6%88%90%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\"><i class=\"fa fa-link\"></i></a>3. Factory Method(Factoryにオブジェクト生成メソッド)</h3>\n<p data-sourcepos=\"109:1-109:166\"><code>Abstract Factory</code> の章で、カレーやラーメンを<code>Food</code>として定義していましたが、カレーはカレーだしラーメンはラーメンです。</p>\n<p data-sourcepos=\"111:1-111:135\"><a href=\"https://camo.qiitausercontent.com/df249c5a3d19a7153ed77a662aa10cb2b2dc641a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36323435653466362d386230652d623438662d336534302d3762623862393565386233322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6245e4f6-8b0e-b48f-3e40-7bb8b95e8b32.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ceadf4466b39ec2971cbcbe8276e230b\" alt=\"FactoryMethod(Food).png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6245e4f6-8b0e-b48f-3e40-7bb8b95e8b32.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6245e4f6-8b0e-b48f-3e40-7bb8b95e8b32.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=87923a7841124a0759039b455571bbb2 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"113:1-113:440\">カレーにはごはんやナンがつきますが、ラーメンに小ライスがつくことはありますが、ナンがくっつくことはわたしが知る限りではないです。これらを <code>Food</code> で管理するように設計した場合、ラーメンにナンをくっつけることもできてしまいます。なかなか興味深い<code>Food</code>の完成となるわけですが、プログラムとしては危険です。</p>\n<p data-sourcepos=\"115:1-115:157\">ココイチや二郎に Factory Method を持たせることで、うっかりカレー屋でラーメンを提供するのを防ぐことができます。</p>\n<p data-sourcepos=\"117:1-117:136\"><a href=\"https://camo.qiitausercontent.com/da93a10475dd0ebc40951489de4362b5bf2318b9/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38396632316232302d613935662d316466392d656432622d3166656237643135346330312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/89f21b20-a95f-1df9-ed2b-1feb7d154c01.png\" alt=\"FactoryMethod(class).png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/89f21b20-a95f-1df9-ed2b-1feb7d154c01.png\" loading=\"lazy\"></a></p>\n<h3 data-sourcepos=\"120:1-120:24\">\n<span id=\"4-prototype雛形\" class=\"fragment\"></span><a href=\"#4-prototype%E9%9B%9B%E5%BD%A2\"><i class=\"fa fa-link\"></i></a>4. Prototype(雛形)</h3>\n<p data-sourcepos=\"122:1-124:114\">これは、町田商店のセントラルキッチンですね。<br>\n各店舗で同じ様にスープを１から炊かないで、セントラルキッチンでスープを作って各店舗に配送。<br>\nひと味足りないと感じる方もいるかもしれませんが、大変合理的な考え方ですよね。</p>\n<p data-sourcepos=\"126:1-126:162\">プログラムは手間暇かけても丹精込めても書いた通りにしか動かないので、プロトタイプ作ってコピーすればよいです。</p>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"128:1-151:3\">\n<div class=\"code-lang\"><span class=\"bold\">PrototypeSnippet.java</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">class</span> <span class=\"nc\">CentralKitchen</span> <span class=\"o\">{</span>\n    <span class=\"nc\">Soup</span> <span class=\"nf\">createSoup</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// すごく大変な工程でスープを作る</span>\n        <span class=\"k\">return</span> <span class=\"n\">soup</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">ShopKitchen</span> <span class=\"o\">{</span>\n    <span class=\"c1\">// セントラルキッチンで作ったスープを足していく。</span>\n    <span class=\"c1\">// スープを作るメソッドは存在しない。</span>\n    <span class=\"kt\">void</span> <span class=\"nf\">addSoup</span><span class=\"o\">(</span><span class=\"nc\">Soup</span> <span class=\"n\">soup</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"c1\">// セントラルキッチンでスープを作って、各店舗に配送</span>\n<span class=\"nc\">ShopKitchen</span> <span class=\"n\">shopKitchens</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ShopKitchen</span><span class=\"o\">[{</span><span class=\"n\">店舗数</span><span class=\"o\">}];</span>\n<span class=\"nc\">Soup</span> <span class=\"n\">amazingSoup</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"nc\">CentralKitchen</span><span class=\"o\">()).</span><span class=\"na\">createSoup</span><span class=\"o\">()</span>\n<span class=\"k\">for</span><span class=\"o\">(</span><span class=\"nc\">ShopKitchen</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">shopKitchens</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"na\">addSoup</span><span class=\"o\">(</span><span class=\"n\">amazingSoup</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n\n</code></pre></div>\n</div>\n<h3 data-sourcepos=\"154:1-154:24\">\n<span id=\"5-singleton単一\" class=\"fragment\"></span><a href=\"#5-singleton%E5%8D%98%E4%B8%80\"><i class=\"fa fa-link\"></i></a>5. Singleton(単一)</h3>\n<p data-sourcepos=\"156:1-156:245\"><code>Prototype</code> の章のサンプルコードで勘のよい方は気づいたかもしれませんが、プログラム上では、セントラルキッチンが作り放題ですね。これを出来なくするパターンが<code>Singleton</code>です。</p>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"158:1-172:3\">\n<div class=\"code-lang\"><span class=\"bold\">SingletonSnippet.java</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">class</span> <span class=\"nc\">CentralKitchen</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">static</span> <span class=\"nc\">CentralKitchen</span> <span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">CentralKitchen</span><span class=\"o\">();</span>\n    <span class=\"kd\">private</span> <span class=\"nf\">CentralKitchen</span><span class=\"o\">(){}</span> <span class=\"c1\">// private にして外部から呼べなくする。</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"nc\">CentralKitchen</span> <span class=\"nf\">getInstance</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">instance</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"nc\">Soup</span> <span class=\"n\">soup</span> <span class=\"o\">=</span> <span class=\"nc\">CentralKitchen</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">().</span><span class=\"na\">createSoup</span><span class=\"o\">()</span>\n\n</code></pre></div>\n</div>\n<h3 data-sourcepos=\"175:1-175:22\">\n<span id=\"6-adapter適合\" class=\"fragment\"></span><a href=\"#6-adapter%E9%81%A9%E5%90%88\"><i class=\"fa fa-link\"></i></a>6. Adapter(適合)</h3>\n<p data-sourcepos=\"177:1-177:414\">美味しいラーメンを作る自信があるのでラーメン店を作りたいが、お金もないし、店舗のデザインなどについては全くの素人だとします。店舗のキッチン設備や什器がある程度整った『居抜き店舗』を見つけて改装すれば、１からラーメン屋を作るよりは手間がかからないことでしょう。これが<code>Adapter</code>です。</p>\n<p data-sourcepos=\"179:1-179:123\"><a href=\"https://camo.qiitausercontent.com/4ddef271ea4406bc8e05dd743365a66433eea801/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36663832386663362d386532352d343333612d623964302d3933656239373735623666332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6f828fc6-8e25-433a-b9d0-93eb9775b6f3.png\" alt=\"Adapter.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6f828fc6-8e25-433a-b9d0-93eb9775b6f3.png\" loading=\"lazy\"></a></p>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"181:1-203:3\">\n<div class=\"code-lang\"><span class=\"bold\">AdapterSnippet.java</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">class</span> <span class=\"nc\">UnpopularDiner</span> <span class=\"o\">{</span>\n    <span class=\"c1\">// 目も当てられないぐらい汚いキッチン</span>\n    <span class=\"c1\">// ぐちゃぐちゃな店内</span>\n    <span class=\"c1\">// なるべくそのまま利用したい</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">interface</span> <span class=\"nc\">CommonNoodleShop</span> <span class=\"o\">{</span>\n    <span class=\"c1\">// ラーメン屋として一般的に必要なメニューを定義</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// 不人気店をベースにして作った、一般的なラーメンメニューを取り揃えた、わたしの素敵なラーメン店</span>\n<span class=\"kd\">class</span> <span class=\"nc\">MyAwesomeNoodleShop</span> <span class=\"kd\">extends</span> <span class=\"nc\">UnpopularDiner</span> <span class=\"kd\">implements</span> <span class=\"nc\">CommonNoodleShop</span> <span class=\"o\">{</span>\n    <span class=\"nc\">Ramen</span> <span class=\"nf\">getShoyuRamen</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// ラーメンを実装。</span>\n        <span class=\"c1\">// UnpopularDiner の設備(プロパティ・メソッド)はすべて使える。</span>\n        <span class=\"c1\">// 汚いキッチンを使って美味しいラーメンを作る。</span>\n        <span class=\"c1\">// ...</span>\n        <span class=\"k\">return</span> <span class=\"n\">ramen</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre></div>\n</div>\n<p data-sourcepos=\"205:1-205:406\">実際のプロジェクトでは、極めて重要だが解析困難なビジネスロジックが記述された class に遭遇することがある。そのような class は 1[byte] でも修正したら動かなくなる絶妙な実装であるため、Adapter を用いて本体にはなるべく触らない様にすることで安全に再利用することを検討するかもしれません。</p>\n<h3 data-sourcepos=\"208:1-208:18\">\n<span id=\"7-bridge橋\" class=\"fragment\"></span><a href=\"#7-bridge%E6%A9%8B\"><i class=\"fa fa-link\"></i></a>7. Bridge(橋)</h3>\n<p data-sourcepos=\"210:1-210:409\">様々な展示場がありイベントがあります。イベントの主催者や出展者は、展示場とは別の所で準備をして展示場に入り展示を行います。コミケ、ゲームショー、あるいはモーターショーといった展示の実装には、ビックサイト側は関与していません。この関係性を <code>Bridge</code> で表すと下図のようになります。</p>\n<p data-sourcepos=\"212:1-212:122\"><a href=\"https://camo.qiitausercontent.com/539824974175f89606fbeb4e3e5271bd0741f24f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38633034616439642d613963342d316630322d306562322d3464646537373561663663372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8c04ad9d-a9c4-1f02-0eb2-4dde775af6c7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=7f7bea8d449286252de26ad2c056866f\" alt=\"Bridge.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8c04ad9d-a9c4-1f02-0eb2-4dde775af6c7.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8c04ad9d-a9c4-1f02-0eb2-4dde775af6c7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b8c276c0e352128b9d6dc377384b7df5 1x\" loading=\"lazy\"></a></p>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"214:1-219:3\">\n<div class=\"code-lang\"><span class=\"bold\">BridgeSnippet.java</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\">// ビックサイトでコミケ開催</span>\n<span class=\"nc\">ComicmarketEvent</span> <span class=\"n\">comicmarketEvent</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ComicmarketEvent</span><span class=\"o\">();</span>\n<span class=\"nc\">Exhibition</span> <span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">BigsightExhibition</span><span class=\"o\">(</span><span class=\"n\">comicmarketEvent</span><span class=\"o\">);</span>\n<span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">doExhibition</span><span class=\"o\">();</span>\n</code></pre></div>\n</div>\n<h3 data-sourcepos=\"221:1-221:27\">\n<span id=\"8-composite複合物\" class=\"fragment\"></span><a href=\"#8-composite%E8%A4%87%E5%90%88%E7%89%A9\"><i class=\"fa fa-link\"></i></a>8. Composite(複合物)</h3>\n<p data-sourcepos=\"223:1-224:159\">枝と葉を同じ様に処理するとか、容器と中身を同じ様に処理すると再帰的処理が簡単になるパターン。<br>\nフォルダとファイルが一般的で分かりやすい例かと思いますが、ここではやはりゲームを例に説明したいと思います。</p>\n<p data-sourcepos=\"226:1-228:129\">3Dのゲームを想像してください。世界(<code>Scene</code>)の中には背景(<code>Background</code>)、プレイヤー(<code>Player</code>)、武器(<code>Weapon</code>)、弾(<code>Bullet</code>)、アイテムボックス(<code>ItemBox</code>)やアイテム(<code>Item</code>)などのオブジェクト等があると思います。<code>item</code>はアイテムボックスの中にあったり地面(<code>Ground</code>)に転がっていたりプレイヤーに拾われたりします。<br>\nプレイヤーはオブジェクトですが、武器を所持するオブジェクトであったりもします。<br>\nまた、オブジェクトとして意識されることはあまりないと思いますが光源やカメラもあります。</p>\n<p data-sourcepos=\"230:1-230:298\">これらのゲームオブジェクト(<code>GameObject</code>)の配置や状態はゲームの進行状況によって頻繁に変更する必要がありますし、それらの操作を個別に考えるのは大変なので、<code>Composite</code>パターンで表現されることが多い様に思います。</p>\n<p data-sourcepos=\"232:1-233:96\">管理イメージを図にすると下図の様になります。<br>\n(instance と class 表現が混じっていますが…よろしく解釈してください。)</p>\n<p data-sourcepos=\"235:1-235:125\"><a href=\"https://camo.qiitausercontent.com/df3e5e5373f311217e7b027e5db4208c28259875/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f34383262383339622d626334362d353539632d356138332d6536333533633661333330352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F482b839b-bc46-559c-5a83-e6353c6a3305.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=748a44491b562ea25a8848481137a42a\" alt=\"Composite.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/482b839b-bc46-559c-5a83-e6353c6a3305.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F482b839b-bc46-559c-5a83-e6353c6a3305.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=861a0cc6bb3e84057f9b8e77d4135891 1x\" loading=\"lazy\"></a></p>\n<h3 data-sourcepos=\"238:1-238:27\">\n<span id=\"9-decorator装飾者\" class=\"fragment\"></span><a href=\"#9-decorator%E8%A3%85%E9%A3%BE%E8%80%85\"><i class=\"fa fa-link\"></i></a>9. Decorator(装飾者)</h3>\n<p data-sourcepos=\"240:1-243:122\">PSストアセール、利用してますか？<br>\nちょいちょい色々なセールをやってて、その都度いくつかのゲームがお得なプライスで購入できますね。<br>\n消費税の処理は通常価格と割引後の価格に対して適用されます。<br>\nこれを<code>decorator</code>で実装すればセールの影響を受けない処理を書けそうで書けなさそうです。</p>\n<p data-sourcepos=\"245:1-245:125\"><a href=\"https://camo.qiitausercontent.com/cf9729bd9baff96abba2c7e449421b341307d7fb/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64316461393233312d373735652d366233332d313333322d3439366238313637633639352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d1da9231-775e-6b33-1332-496b8167c695.png\" alt=\"Decorator.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d1da9231-775e-6b33-1332-496b8167c695.png\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"247:1-247:189\">確かに、消費税コード部分やセール部分は変更が不要だしシンプルですが、この実装ではセール毎にコード修正が必要となってしまいます。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"249:1-267:3\"><div class=\"highlight\"><pre><code>//----------------------------------------\n// 通常時コード\nProduct p = new Product();\nProduct taxedProduct = new TaxedProduct(p);\n\n// 消費税を考慮した価格を取得\ntaxedProduct.getPrice();\n\n//----------------------------------------\n// セール時コード\nProduct p = new Product();\nProduct saledProduct = new SaledProduct(p);\nProduct taxedProduct = new TaxedProduct(saledProduct);\n\n// 消費税を考慮した価格を取得\ntaxedProduct.getPrice();\n\n</code></pre></div></div>\n<p data-sourcepos=\"269:1-271:90\">ビジネス要件である、PSStore のセールがどの様な周期でどの様な製品に対して行われているかを理解しないで実装したのでしょうか。<br>\nセールや消費税適用前後で値段しか変わらないのにPSStoreに並べる商品自体を<code>interface</code>として定義している点も意味不明ですね。<br>\nでは、<code>PSStorePrice</code> にすればいいかというとそうでもなさそうです。</p>\n<p data-sourcepos=\"273:1-273:210\">近視眼的にデザインパターンを適用しても、再利用性が上がらない上にメンテナンスを行う人などに不快感を与える可能性もあるので注意が必要そうです。</p>\n<h3 data-sourcepos=\"276:1-276:22\">\n<span id=\"10-facade窓口\" class=\"fragment\"></span><a href=\"#10-facade%E7%AA%93%E5%8F%A3\"><i class=\"fa fa-link\"></i></a>10. Facade(窓口)</h3>\n<p data-sourcepos=\"277:1-278:185\">区役所で住民票を取るとします。区役所は巨大な建物で大変多くの業務を行っているが、住民票発行の窓口に行けばとりあえず住民票を取る事がでます。<br>\n適切な窓口が設定されることで区役所の業務すべてを把握することなく円滑に目的を達成できるようにするためのパターンが<code>Facade</code>です。</p>\n<p data-sourcepos=\"280:1-281:204\">配達に関する機能を持っているため、単純な窓口ではないですがウーバーイーツを想像してみましょう。<br>\n利用者はウーバーイーツの裏にある複雑な仕組みを意識することなく簡単なインターフェースで様々な食料を手に入れる事ができるようになりました。</p>\n<p data-sourcepos=\"283:1-283:61\">これが<code>Facade(窓口)</code>を利用するメリットです。</p>\n<p data-sourcepos=\"285:1-285:246\">コードを<code>Facade</code>パターンで書けば分りやすくなるのではなく、 <strong>『<code>Facade</code>パターンを利用した方が自然に記述できる外部設計に対して<code>Facade</code>を適用する』</strong> と考えると良いと思います。</p>\n<p data-sourcepos=\"287:1-287:122\"><a href=\"https://camo.qiitausercontent.com/cfc45eec868f07dbb47e319aada4aba14f54d2e9/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f30343336613439352d353531642d336666652d336539312d3262366366623732613262332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F0436a495-551d-3ffe-3e91-2b6cfb72a2b3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=6589a46a1d5d81168099873b90eb3e35\" alt=\"Facade.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/0436a495-551d-3ffe-3e91-2b6cfb72a2b3.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F0436a495-551d-3ffe-3e91-2b6cfb72a2b3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=fa4e9e884f96c39aa88a687afa73d79f 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"289:1-290:155\">人間向けの言語で書かれた外部設計を、コンピューターに分かる様に翻訳するのが職業プログラミングです。<br>\nクラス名に<code>Facade</code>とつける時点で、外部設計からは読み取れない複雑な翻訳（実装）になっているかもしれません。</p>\n<h3 data-sourcepos=\"293:1-293:25\">\n<span id=\"11-flyweight軽量\" class=\"fragment\"></span><a href=\"#11-flyweight%E8%BB%BD%E9%87%8F\"><i class=\"fa fa-link\"></i></a>11. Flyweight(軽量)</h3>\n<p data-sourcepos=\"294:1-295:243\">ネットフリックスは、知らない人はあまりいないと思いますが動画見放題のサブスクサービスです。<br>\nそんなネットフリックスも、創業当時は実店舗を持ってDVDレンタルのビジネスを行っていたのですが、業態を大幅に転換し紆余曲折を経て現在のサービスを提供するに至りました。</p>\n<p data-sourcepos=\"297:1-297:236\">現CEOのリード・ヘイスティングスや初代CEOのマーク・ランドルフが <code>Flyweightパターン</code> を適用しようと思ったかどうかは知りませんが、 <code>Flyweightパターン</code> で表現できそうです。</p>\n<p data-sourcepos=\"299:1-299:125\"><a href=\"https://camo.qiitausercontent.com/404814aa5b536fbf5f296aeed0b4da9d32e88868/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38626234613264662d333731652d633133632d363831392d3538356433343737376332652e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8bb4a2df-371e-c13c-6819-585d34777c2e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=a726b978e5b28fe05c36d986a3b41553\" alt=\"Flyweight.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8bb4a2df-371e-c13c-6819-585d34777c2e.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8bb4a2df-371e-c13c-6819-585d34777c2e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=43055cc82fa885fd70aa07adf93053f1 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"301:1-302:118\">(参考)<br>\n<a href=\"https://www.dhbr.net/articles/-/7044\" rel=\"nofollow noopener\" target=\"_blank\">ネットフリックスという世界的企業はいかに誕生したのか</a></p>\n<h3 data-sourcepos=\"305:1-305:24\">\n<span id=\"12-proxy代理人\" class=\"fragment\"></span><a href=\"#12-proxy%E4%BB%A3%E7%90%86%E4%BA%BA\"><i class=\"fa fa-link\"></i></a>12. Proxy(代理人)</h3>\n<p data-sourcepos=\"306:1-308:138\">コードレベルで考えると Adapter パターンとの違いが分かりづらいため、ここでも人間世界で起きている事例で考えます。<br>\n例えば、何かやらかした際に、法廷で争わなければいけなくなりますが、おそらく多くの人は法律の知識がないため弁護士を代理人として立てると思います。<br>\nこのような、『何らかの意味ある代理行為』がデザインパターンで定義されていることかと思います。</p>\n<p data-sourcepos=\"310:1-310:102\">代理行為には様々な種類がありますが、本章では以下に４種類列挙します。</p>\n<h4 data-sourcepos=\"312:1-312:85\">\n<span id=\"カリスマ経営者率いるプログラミングスクールa-virtual-proxy\" class=\"fragment\"></span><a href=\"#%E3%82%AB%E3%83%AA%E3%82%B9%E3%83%9E%E7%B5%8C%E5%96%B6%E8%80%85%E7%8E%87%E3%81%84%E3%82%8B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%82%B9%E3%82%AF%E3%83%BC%E3%83%ABa-virtual-proxy\"><i class=\"fa fa-link\"></i></a>カリスマ経営者率いるプログラミングスクール(A virtual proxy)</h4>\n<p data-sourcepos=\"313:1-314:204\">カリスマ経営者の有名なITスクールに入ると、カリスマ経営者に教えてもらえてプログラムが書けるような気分になります。<br>\n実際にはカリスマ経営者は、社員やバイトの先生に何らかの方針を伝えるのみで、教育行為の大半は社員やバイトの先生が行うことになると思います。</p>\n<p data-sourcepos=\"316:1-316:222\">カリスマ経営者は、カリスマとして活動したり経営者として活動したりするのが忙しいので全ての生徒の相手ができないため、代理で教える先生が必要となります。</p>\n<p data-sourcepos=\"318:1-318:131\"><a href=\"https://camo.qiitausercontent.com/0f97e54088cdb40c1f66142d89c2b4fa1881d3f6/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f34633634666437642d633933342d393535362d323666302d6633383764356561633836352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F4c64fd7d-c934-9556-26f0-f387d5eac865.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=798476363f23454ef44985c655b7350c\" alt=\"A virtual proxy.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/4c64fd7d-c934-9556-26f0-f387d5eac865.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F4c64fd7d-c934-9556-26f0-f387d5eac865.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=15220359b4f523ea35c6437de6a1f7f6 1x\" loading=\"lazy\"></a></p>\n<h4 data-sourcepos=\"321:1-321:42\">\n<span id=\"オフショア窓口a-remote-proxy\" class=\"fragment\"></span><a href=\"#%E3%82%AA%E3%83%95%E3%82%B7%E3%83%A7%E3%82%A2%E7%AA%93%E5%8F%A3a-remote-proxy\"><i class=\"fa fa-link\"></i></a>オフショア窓口(A remote proxy)</h4>\n<p data-sourcepos=\"322:1-323:234\">単価の安い海外にIT業務の委託を行いたいですが、英語が分かりませんし、海外に行って仕事を発注するのも大変です。<br>\n一方、単価の安い国側でも単価の高い日本の仕事がほしいですが、日本に移住するのも大変ですし生活コストが上がってしまうため安い単価で仕事が受けられなくなります。</p>\n<p data-sourcepos=\"325:1-325:146\">日本語と現地語が話せるPMを日本事務所に配置することで現地からの業務提供を円滑に行うことができます。</p>\n<p data-sourcepos=\"327:1-327:130\"><a href=\"https://camo.qiitausercontent.com/039e7b0044d2a18aa5968d58f94eefd2107b419c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f66336662343535382d323962322d363964362d363161312d3939323938356366306436342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff3fb4558-29b2-69d6-61a1-992985cf0d64.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ff227552e145b136073ee89512b35ceb\" alt=\"A remote proxy.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f3fb4558-29b2-69d6-61a1-992985cf0d64.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff3fb4558-29b2-69d6-61a1-992985cf0d64.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d98f8c2da0965ca7b8b66b62de6f1590 1x\" loading=\"lazy\"></a></p>\n<h4 data-sourcepos=\"330:1-330:34\">\n<span id=\"美容院a-protective-proxy\" class=\"fragment\"></span><a href=\"#%E7%BE%8E%E5%AE%B9%E9%99%A2a-protective-proxy\"><i class=\"fa fa-link\"></i></a>美容院(A protective proxy)</h4>\n<p data-sourcepos=\"331:1-332:84\">多くの人は、髪の毛を自分で切ることができますが、それをしようとは思いません。イケてない髪型になったら取り返しがつかないからです。<br>\nかっこよく（かわいく）切ってくれる人に頼むのが安全です。</p>\n<p data-sourcepos=\"334:1-334:134\"><a href=\"https://camo.qiitausercontent.com/d364f761e8e0262f6fc79b4d9b6f8c582bd2b276/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f30623633616630632d393164302d333765612d396263662d3762653535613439313833362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F0b63af0c-91d0-37ea-9bcf-7be55a491836.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=04a0f9ab3ada927ccd8410e882b6043f\" alt=\"A protective proxy.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/0b63af0c-91d0-37ea-9bcf-7be55a491836.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F0b63af0c-91d0-37ea-9bcf-7be55a491836.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=0f788b18aeff262197cea1de884383b3 1x\" loading=\"lazy\"></a></p>\n<h4 data-sourcepos=\"337:1-337:32\">\n<span id=\"メルカリa-smart-proxy\" class=\"fragment\"></span><a href=\"#%E3%83%A1%E3%83%AB%E3%82%AB%E3%83%AAa-smart-proxy\"><i class=\"fa fa-link\"></i></a>メルカリ(A smart proxy)</h4>\n<p data-sourcepos=\"338:1-339:216\">いらなくなった古着を売るとして、友達に声をかけるなど色々な手段があると思いますが、メルカリに出品される方も多いのではないでしょうか。<br>\n家の前に置いておいても誰かの目に止まり購入されることはほぼないと思いますが、メルカリに出品しておくとあなたに代わって古着を売り飛ばしてくれます。</p>\n<p data-sourcepos=\"341:1-341:129\"><a href=\"https://camo.qiitausercontent.com/cba2cdbcc4ecdeedf1d9c433c5aeadff2e8a5265/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f39663765623930652d646236372d623563372d386630632d6266376530626436343833652e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F9f7eb90e-db67-b5c7-8f0c-bf7e0bd6483e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=791614dffd0f80a5e7fb640a0d450eb5\" alt=\"A smart proxy.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/9f7eb90e-db67-b5c7-8f0c-bf7e0bd6483e.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F9f7eb90e-db67-b5c7-8f0c-bf7e0bd6483e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=db4b5d4b9d4d1629ff02020c3542e241 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"344:1-345:176\">(参考)<br>\n<a href=\"https://stackoverflow.com/questions/37692814/what-is-the-exact-difference-between-adapter-and-proxy-patterns\" rel=\"nofollow noopener\" target=\"_blank\">What is the exact difference between Adapter and Proxy patterns?</a></p>\n<h3 data-sourcepos=\"348:1-348:45\">\n<span id=\"13-chain-of-responsibility責任の鎖\" class=\"fragment\"></span><a href=\"#13-chain-of-responsibility%E8%B2%AC%E4%BB%BB%E3%81%AE%E9%8E%96\"><i class=\"fa fa-link\"></i></a>13. Chain of Responsibility(責任の鎖)</h3>\n<p data-sourcepos=\"349:1-349:368\">大勢のお客で賑わっている居酒屋での出来事です。炭酸麦茶を頼んで30分以上経ちますがまだ届きません。いい加減遅いなと思いテーブルの呼び出しベルを押し店員を呼び出し「オーダー入ってます？」とすまなそうに確認して炭酸麦茶を提供してもらうことができました。</p>\n<p data-sourcepos=\"351:1-351:357\">一方隣の席からは「お前じゃ話にならん、店長を呼んでこい」という怒鳴り声が聞こえてきました。興味津々でそちらの席を横目で観察したところ、バイトリーダーらしき人物が出てきて謝罪をするも結局店長は出てこないという様子を目撃することになりました。</p>\n<p data-sourcepos=\"353:1-354:264\">これが、責任の鎖です。<br>\nこの居酒屋のスタッフは、バイト→バイトリーダー→雇われ店長→本部マネージャー→本部社長と言った責任の鎖でつながれており、顧客の怒り度に対して誰がどう対処するかを規定しています。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"356:1-431:3\"><div class=\"highlight\"><pre><code>public abstract class Responsible {\n    private Responsible next = null;\n    private String name = null;\n\n    public Responsible(String name){\n        this.name = name;\n    }\n    public Responsible setNext(Responsible next){\n        this.next = next;\n        return next;\n    }\n    public final void handle(Claim claim){\n        if(canHandle(claim)) {\n            doHandle(claim);\n        } else if(next != null) {\n            next.handle(claim);\n        }else{\n            //FIXME: Something to do.\n        }\n    }\n    protected abstract boolean canHandle(Claim claim);\n    protected abstract void doHandle(Claim claim);\n}\n\n// バイト\npublic class PartTimer extends Responsible {\n    public HeadOfPartTimer(String name){\n        super(name);\n    }   \n    protected boolean canHandle(Claim claim){\n        if(claim.level.lessThan(Claim.ANGRY)){\n            return true;\n        }\n        return false;\n    }\n    protected void doHandle(Claim claim){\n        // 平謝り\n        // オーダーされた商品を持ってくる\n    }\n}\n\n// バイトリーダー\npublic class HeadOfPartTimer extends Responsible {\n    public HeadOfPartTimer(String name){\n        super(name);\n    }   \n    protected boolean canHandle(Claim claim){\n        if(claim.level.lessThan(Claim.SUPER_ANGRY)){\n            return true;\n        }\n        return false;\n    }\n    protected void doHandle(Claim claim){\n        // 平謝り\n        // 次回使える5%引きチケットを渡す\n    }\n}\n\n// 雇われ店長\npublic class StoreManager extends Responsible {\n    public StoreManager(String name){\n        super(name);\n    }   \n    protected boolean canHandle(Claim claim){\n        if(claim.level.lessThan(Claim.SUPER_SUPER_ANGRY)){\n            return true;\n        }\n        return false;\n    }\n    protected void doHandle(Claim claim){\n        throw new UnsupportedOperationException(); \n    }\n}\n\n</code></pre></div></div>\n<h3 data-sourcepos=\"433:1-433:41\">\n<span id=\"14-command手順書通りやって\" class=\"fragment\"></span><a href=\"#14-command%E6%89%8B%E9%A0%86%E6%9B%B8%E9%80%9A%E3%82%8A%E3%82%84%E3%81%A3%E3%81%A6\"><i class=\"fa fa-link\"></i></a>14. Command(手順書通りやって)</h3>\n<p data-sourcepos=\"435:1-436:152\">作業の手順を書いた手順書があります。コピーすれば複数の手順書にできますし、いろいろな人に渡して作業をお願いすることができます。<br>\nCommand パターンは、「手順書」と「依頼」を表すパターンです。手順の内容は実際の手順書によって異なります。</p>\n<p data-sourcepos=\"438:1-439:341\">「銀座のコーラを買ってくる」依頼であれば「銀座への行き方」などが手順書に定義されます。「銀座に行く」手順書と「コーラを買う」手順書を分ければ、買い物コマンドを作るだけで銀座での買い物はし放題かもしれません。<br>\nコマンドを実行した結果としてコーラを受け取りたいですし、コーラ以外にも焼きそばやパンも食べたいとなると、戻り値が <code>void</code> では受け取れず、また、コーラ買ってくるまでの間他の事をしていたいとなると、非同期での実行が必要になってきます。</p>\n<p data-sourcepos=\"441:1-441:159\">適用自体は簡単ですが、要件をよく確認して設計しないといたずらに複雑なコードになるだけなので注意が必要です。</p>\n<p data-sourcepos=\"443:1-443:123\"><a href=\"https://camo.qiitausercontent.com/fdb3fe04ef153503e8b21007b7b1ef37b06472d1/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36616137353537302d373966632d343734312d646533612d6461643464383264653266662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6aa75570-79fc-4741-de3a-dad4d82de2ff.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=7133d0c3b07cbef125170916a8e85c47\" alt=\"Command.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6aa75570-79fc-4741-de3a-dad4d82de2ff.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6aa75570-79fc-4741-de3a-dad4d82de2ff.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f98d4758366925138264f281be9b226e 1x\" loading=\"lazy\"></a></p>\n<h3 data-sourcepos=\"445:1-445:57\">\n<span id=\"15-interpreterrpgゲームのスクリプト言語\" class=\"fragment\"></span><a href=\"#15-interpreterrpg%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E8%A8%80%E8%AA%9E\"><i class=\"fa fa-link\"></i></a>15. Interpreter(RPGゲームのスクリプト言語)</h3>\n<p data-sourcepos=\"447:1-448:207\">スクリプト言語がインタプリタによって実行されているかは一旦横においておくことにします。<br>\nデザインパターンとして学ぶべきことは「業務上の課題を解決するためになんらかの文法の言語を作りそれを解析して動かす」パターンということです。</p>\n<p data-sourcepos=\"450:1-453:280\">RPGゲームを作る場合を例に考察してみましょう。<br>\nRPGゲームは、街の入り口に立っている町人Aに「ようこそラダトームのまちへ」と喋らせたり、主人公やライバルキャラクターに小芝居させながら大量の会話をさせるなどのイベントシーンが必要です。これらのイベントシーンをプログラマがアセンブラやC言語などのプログラム言語で書くのは非常に大変です。<br>\nゲームの企画やプランナーの人が「talk(charaA, ようこそラダトームのまちへ)」と書いたら町人Aがセリフをしゃべってくれる仕組みがあったらどうでしょうか。いちいちプログラマにお願いして嫌な顔をされながらイベントを作るよりは遥かに簡単そうです。一方のプログラマはバトルプログラムやエフェクトプログラムに集中できそうで win win です。<br>\nこの時に作る <code>talk()</code> 等を解析して動かすプログラムを巨大な if 文で作ると大変なので、インタプリタを作って Composite パターンなどに当てはまるように解析して実行していくのがインタプリタパターンです。</p>\n<p data-sourcepos=\"455:1-455:163\">昔は毎回スクリプトエンジンを手作りしていましたが最近は<a href=\"https://ja.wikipedia.org/wiki/Lua\" rel=\"nofollow noopener\" target=\"_blank\">Lua言語</a>が人気があるようですね。</p>\n<h3 data-sourcepos=\"457:1-457:69\">\n<span id=\"16-iterator古い設計関数型プログラムをしよう\" class=\"fragment\"></span><a href=\"#16-iterator%E5%8F%A4%E3%81%84%E8%A8%AD%E8%A8%88%E9%96%A2%E6%95%B0%E5%9E%8B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%82%92%E3%81%97%E3%82%88%E3%81%86\"><i class=\"fa fa-link\"></i></a>16. Iterator(古い設計。関数型プログラムをしよう)</h3>\n<p data-sourcepos=\"459:1-460:314\">iterator パターンは、配列やリストに含まれる要素に対して何らかの処理を行うパターンです。<br>\n<code>hasNext()</code>, <code>getNext()</code> などのメソッドを見かけたら iterator パターンでなんらかの集合の要素を取得しているんだなと見てもらえば良いと思いますが、近代言語ではよりよい方法が提供されているので敢えて実装しない方がよいでしょう。</p>\n<p data-sourcepos=\"462:1-462:123\">配列操作用のメソッドに関数を渡す事で配列の全ての要素に対して任意の処理を行えます。</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"464:1-474:3\"><div class=\"highlight\"><pre><code>例)\nfind(f) : f関数の戻り値が true の要素を返す（１つ）\nfilter(f) : f関数の戻り値が true の要素を返す（複数）\nmap(f) : f関数の戻り値の配列に map する\nreduce(f) : 配列の要素に対してfで与えられる関数を順次実行した結果を返す（１つ）\nsome(f) : f関数の戻り値が true の要素があるか？\nevery(f) : f関数の戻り値がすべて true か？\nflatMap(f) : f関数の戻り値（配列）を全て連結した配列を返す\n...\n</code></pre></div></div>\n<p data-sourcepos=\"476:1-476:137\">余計なことは覚えずに、js では Array クラスのメソッド、Java では StreamApi を利用するとよいでしょう。</p>\n<p data-sourcepos=\"478:1-478:103\">参考)<a href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\" rel=\"nofollow noopener\" target=\"_blank\">MDN Array</a></p>\n<h3 data-sourcepos=\"481:1-481:36\">\n<span id=\"17-mediatorsesと指揮命令\" class=\"fragment\"></span><a href=\"#17-mediatorses%E3%81%A8%E6%8C%87%E6%8F%AE%E5%91%BD%E4%BB%A4\"><i class=\"fa fa-link\"></i></a>17. Mediator(SESと指揮命令)</h3>\n<p data-sourcepos=\"483:1-483:172\">Mediator(仲介役)というとあまり見かけない表現かと思いますが、われわれの仕事現場に目を向けると分かりやすい例があります。</p>\n<p data-sourcepos=\"485:1-485:295\">ITプロジェクトで協力会社さんに参画頂いた際、参画者の性質を見てAさんは開発、Bさんは試験などおおよその方針を指揮命令者が出していると思います。Mediator パターンで実現したいのはこの指揮命令による秩序です。</p>\n<p data-sourcepos=\"487:1-487:297\">ただ、SESで参画している協力会社さん同士が直接業務に関する指示を行ってはいけないにも関わらず、指揮命令者の指示を待っていると仕事が進まないので、直接会話して仕事を進めているケースもあるかもしれません。</p>\n<p data-sourcepos=\"489:1-489:298\">現実の世界でも必ずしもうまく機能しないケース（指揮命令系統が複雑になるだけで仕事が進まない）もある通り、Mediatorパターンを適用する際には、本当にMediatorが必要なのかをよく考えて適用する必要があるでしょう。</p>\n<p data-sourcepos=\"491:1-491:124\"><a href=\"https://camo.qiitausercontent.com/852d9b7aad3ebdc1a0bd2ce60461f8e6f2f84aba/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f33376334613632642d393831392d366239382d356339372d6138343030366465643764662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F37c4a62d-9819-6b98-5c97-a84006ded7df.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e7d8b7fc50f2512690fb23478f8e7a6a\" alt=\"Mediator.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/37c4a62d-9819-6b98-5c97-a84006ded7df.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F37c4a62d-9819-6b98-5c97-a84006ded7df.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=15d79191506ad08c83d70d87feab6879 1x\" loading=\"lazy\"></a></p>\n<h3 data-sourcepos=\"494:1-494:50\">\n<span id=\"18-memento記念品よりセーブデータ\" class=\"fragment\"></span><a href=\"#18-memento%E8%A8%98%E5%BF%B5%E5%93%81%E3%82%88%E3%82%8A%E3%82%BB%E3%83%BC%E3%83%96%E3%83%87%E3%83%BC%E3%82%BF\"><i class=\"fa fa-link\"></i></a>18. Memento(記念品よりセーブデータ)</h3>\n<p data-sourcepos=\"496:1-497:228\">令和の世の中で、Memento(記念品、形見)と言われて日常で馴染み深い人は少数派の様に思います。<br>\nコンピューターゲームを遊んで、次の日その続きから遊ぶために、その時の状態を保存したセーブデータを作ったことがある人はそれなりにいるのではないでしょうか。</p>\n<p data-sourcepos=\"499:1-499:145\">Mementoパターンは、ある時点での処理の続きを再開できるように必要なデータを保存しておくパターンです。</p>\n<p data-sourcepos=\"501:1-502:121\">セーブデータは、次回からゲームを再開するために、その時点での所持金や経験値やレベルなどのプレイヤーの状態を表す変数が保存されますが、その時点での画面の映像などは保存されません。<br>\nMementoパターンでも同様に、プログラムの動作に必要な最小限のデータのみを保存します。</p>\n<p data-sourcepos=\"504:1-504:123\"><a href=\"https://camo.qiitausercontent.com/1e9cfce0e2cc2fedc82bdb3cc46de089a2e7d117/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f39656166303233352d303163642d343563612d353362372d3231333231343832366433632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F9eaf0235-01cd-45ca-53b7-213214826d3c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=44a66138726e298cd92a6a4ca2011356\" alt=\"Memento.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/9eaf0235-01cd-45ca-53b7-213214826d3c.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F9eaf0235-01cd-45ca-53b7-213214826d3c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b0343e057b9df365d6ba2a4a8d3a0249 1x\" loading=\"lazy\"></a></p>\n<h3 data-sourcepos=\"507:1-507:42\">\n<span id=\"19-observer新刊お知らせ機能\" class=\"fragment\"></span><a href=\"#19-observer%E6%96%B0%E5%88%8A%E3%81%8A%E7%9F%A5%E3%82%89%E3%81%9B%E6%A9%9F%E8%83%BD\"><i class=\"fa fa-link\"></i></a>19. Observer(新刊お知らせ機能)</h3>\n<p data-sourcepos=\"509:1-509:372\">Observer(観測者)パターンは、言葉の響きからすると観測者が Polling などして何かを観測するように思えますが、実際は、「新刊お知らせ機能」の様に、「読んでる漫画の新刊がでたら通知してくれ」と登録しておくと、新刊が出た際に Observer(観測者)に通知が来るパターンです。</p>\n<p data-sourcepos=\"511:1-511:255\">タイマーなどで定期監視をしなくてよいためコンピュータに対する負荷も少なく、「新刊が出た」などのイベントに対して処理を実行できるイベントドリブンの考え方も人間に優しいです。</p>\n<p data-sourcepos=\"513:1-513:246\">Angular や Vue や React などに実装されているデータバインディングがあるとほとんど無用になるのですがちょっとうまく動かない時に利用する watch がObserver の考え方と近いと思います。</p>\n<p data-sourcepos=\"515:1-515:124\"><a href=\"https://camo.qiitausercontent.com/8e6e25b05825b93790398ee4c1d6393f74eb1c6f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f35353535643732372d313133352d326436332d663132302d6562623463656365353539362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F5555d727-1135-2d63-f120-ebb4cece5596.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=5771850e0fd954780a9411560059e21b\" alt=\"Observer.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/5555d727-1135-2d63-f120-ebb4cece5596.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F5555d727-1135-2d63-f120-ebb4cece5596.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=16a9805b3eb653c3d975b696c86d8395 1x\" loading=\"lazy\"></a></p>\n<h3 data-sourcepos=\"518:1-518:36\">\n<span id=\"20-stateキャラクタ選択\" class=\"fragment\"></span><a href=\"#20-state%E3%82%AD%E3%83%A3%E3%83%A9%E3%82%AF%E3%82%BF%E9%81%B8%E6%8A%9E\"><i class=\"fa fa-link\"></i></a>20. State(キャラクタ選択)</h3>\n<p data-sourcepos=\"520:1-520:254\">執筆時点の流行に乗ると、ELDEN RING での放浪剣士や素寒貧といった素性選択かと思いますが、戦士や魔法使いなどの職業の例えの方が普遍的で分かりやすそうなのでそちらで話を進めます。</p>\n<p data-sourcepos=\"522:1-522:342\">プレイヤーの選択により、プレイヤーの操作するキャラクターが「戦士」や「魔法使い」になるゲームがあったとします。「戦士」は剣や盾などを装備しての近接攻撃が得意で、魔法使いは杖やローブなどが装備可能で魔法による遠距離攻撃が得意です。</p>\n<p data-sourcepos=\"524:1-525:147\">AボタンやBボタンを押下時のイベント関数に「もし戦士だったら」とか、「もし魔法使いだったら」といったコードを書くのは一見直感的です。<br>\n最初に戦士しかいないところに魔法使いを追加したらその様なコードを書くことも往々にしてあるでしょう。</p>\n<p data-sourcepos=\"527:1-527:393\">ただこれが、複雑なコマンド入力でキャラクタ固有スキル発動もしたい、職業によって固有のスキルツリーも持ちたいとなってくると「もし戦士だったら」という分岐をどこに書いたらいいかがよく分からなくなってきます。拡張が辛くなってきた時がリファクタリング適正期かと思います。</p>\n<p data-sourcepos=\"529:1-529:369\">仕様書も書かずにノリで拡張したコードであれば、新たにプロジェクトに追加されたメンバーに新ジョブ「僧侶」の実装を依頼することも難しいでしょうし、ゲームをやらないメンバーはスキルツリーのコードが職業によって分岐があることに気がつかないかもしれません。</p>\n<p data-sourcepos=\"531:1-531:240\">そこで、状態(職業)毎にクラスを定義して各クラスに対して定められたアクションの実装を行えば、自然かつ拡張性の高いクラス定義を行えるという考え方が State パターンです。</p>\n<p data-sourcepos=\"533:1-533:4\">例)</p>\n<ul data-sourcepos=\"534:1-541:0\">\n<li data-sourcepos=\"534:1-536:93\">攻撃行動\n<ul data-sourcepos=\"535:5-536:93\">\n<li data-sourcepos=\"535:5-535:84\">「戦士という状態」のプレイヤーが攻撃をすれば剣を振る</li>\n<li data-sourcepos=\"536:5-536:93\">「魔法使いという状態」のプレイヤーが攻撃をすれば魔法を詠唱</li>\n</ul>\n</li>\n<li data-sourcepos=\"537:1-539:96\">防御行動\n<ul data-sourcepos=\"538:5-539:96\">\n<li data-sourcepos=\"538:5-538:87\">「戦士という状態」のプレイヤーが防御をすれば盾を構える</li>\n<li data-sourcepos=\"539:5-539:96\">「魔法使いという状態」のプレイヤーが防御をしても何もできない</li>\n</ul>\n</li>\n<li data-sourcepos=\"540:1-541:0\">etc...</li>\n</ul>\n<p data-sourcepos=\"542:1-542:121\"><a href=\"https://camo.qiitausercontent.com/6a912caf2789e073a6935b9c9181aa6bab5fd5ab/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37326461623938622d306566342d386632332d666162302d3035393236366264666261332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F72dab98b-0ef4-8f23-fab0-059266bdfba3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ead338dbb853bc3070d091ec821262fc\" alt=\"State.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/72dab98b-0ef4-8f23-fab0-059266bdfba3.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F72dab98b-0ef4-8f23-fab0-059266bdfba3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=1a3fc783d6ec40b65c97fb2c3eb9c8e3 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"544:1-544:385\"><code>jobState.attacAction()</code> でそれぞれの職業に応じた攻撃を行えるといった実装になるため、ここに「騎士」や「僧侶」を追加しても <code>Player</code> クラスやその他のコードの変更は不要で、<code>KnightState</code> や <code>ClericState</code> といった新規追加クラスに対してコードを書けばよいというのも精神衛生上よいです。</p>\n<p data-sourcepos=\"546:1-546:243\">職業を状態と捉えるかどうかは議論がありそうですが、デザインパターンの本質としてはパターンを適用することでコードが分かりやすくなるかどうかというところだと思います。</p>\n<h3 data-sourcepos=\"548:1-548:57\">\n<span id=\"21-strategy戦略か戦術かそれが問題だ\" class=\"fragment\"></span><a href=\"#21-strategy%E6%88%A6%E7%95%A5%E3%81%8B%E6%88%A6%E8%A1%93%E3%81%8B%E3%81%9D%E3%82%8C%E3%81%8C%E5%95%8F%E9%A1%8C%E3%81%A0\"><i class=\"fa fa-link\"></i></a>21. Strategy(戦略か戦術か、それが問題だ)</h3>\n<p data-sourcepos=\"550:1-551:147\">戦略を定義したクラスを用意してそれを入れ替えれば、コードの修正範囲は小さいという考え方のパターンですが、ストラテジーパターンで作られているJavaのソートは、皆さんご存知の通り大変冗長なコードになっています。<br>\n戦術レベルの内容を戦略で解決するというデザインが適切ではないというポピュラーな例と言えるでしょう。</p>\n<p data-sourcepos=\"553:1-553:152\">Strategy は適用すべきところに適用することにして、ソートは Lambda や Comparator を利用して書くのがよいでしょう。</p>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"555:1-587:3\">\n<div class=\"code-lang\"><span class=\"bold\">SortSnippet.java</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\">// 【冗長】昇順ソート戦略</span>\n<span class=\"nc\">Comparator</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">ascSortStoratagy</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">Comparator</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">compare</span><span class=\"o\">(</span><span class=\"nc\">String</span> <span class=\"n\">s1</span><span class=\"o\">,</span> <span class=\"nc\">String</span> <span class=\"n\">s2</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">s1</span><span class=\"o\">.</span><span class=\"na\">compareTo</span><span class=\"o\">(</span><span class=\"n\">s2</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">};</span>\n\n<span class=\"c1\">// 【冗長】降順ソート戦略</span>\n<span class=\"nc\">Comparator</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">descSortStoratagy</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">Comparator</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">compare</span><span class=\"o\">(</span><span class=\"nc\">String</span> <span class=\"n\">s1</span><span class=\"o\">,</span> <span class=\"nc\">String</span> <span class=\"n\">s2</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">s2</span><span class=\"o\">.</span><span class=\"na\">compareTo</span><span class=\"o\">(</span><span class=\"n\">s1</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">};</span>\n\n<span class=\"c1\">// 【冗長】昇順ソート戦略でソート</span>\n<span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">sortedItems</span> <span class=\"o\">=</span> <span class=\"n\">items</span><span class=\"o\">.</span><span class=\"na\">stream</span><span class=\"o\">()</span>\n    <span class=\"o\">.</span><span class=\"na\">sorted</span><span class=\"o\">(</span><span class=\"n\">ascSortStoratagy</span><span class=\"o\">)</span>   <span class=\"c1\">// 別途定義した昇順ストラテジーを指定。インラインでも書けるが冗長</span>\n    <span class=\"o\">.</span><span class=\"na\">collect</span><span class=\"o\">(</span><span class=\"nc\">Collectors</span><span class=\"o\">.</span><span class=\"na\">toList</span><span class=\"o\">());</span>\n\n<span class=\"c1\">// Lambda でソート</span>\n<span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">sortedItems</span> <span class=\"o\">=</span> <span class=\"n\">items</span><span class=\"o\">.</span><span class=\"na\">stream</span><span class=\"o\">()</span>\n    <span class=\"o\">.</span><span class=\"na\">sorted</span><span class=\"o\">((</span><span class=\"n\">s1</span><span class=\"o\">,</span> <span class=\"n\">s2</span><span class=\"o\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">s1</span><span class=\"o\">.</span><span class=\"na\">compareTo</span><span class=\"o\">(</span><span class=\"n\">s2</span><span class=\"o\">))</span>   <span class=\"c1\">// Lambda 式で直接定義</span>\n    <span class=\"o\">.</span><span class=\"na\">collect</span><span class=\"o\">(</span><span class=\"nc\">Collectors</span><span class=\"o\">.</span><span class=\"na\">toList</span><span class=\"o\">());</span>\n\n<span class=\"c1\">// Comparator でソート</span>\n<span class=\"c1\">// クラスのフィールドを比較する場合は、Comparator.comparing を利用する</span>\n<span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">sortedItems</span> <span class=\"o\">=</span> <span class=\"n\">items</span><span class=\"o\">.</span><span class=\"na\">stream</span><span class=\"o\">()</span>\n    <span class=\"o\">.</span><span class=\"na\">sorted</span><span class=\"o\">(</span><span class=\"nc\">Comparator</span><span class=\"o\">.</span><span class=\"na\">naturalOrder</span><span class=\"o\">())</span>  <span class=\"c1\">// 昇順</span>\n    <span class=\"o\">.</span><span class=\"na\">collect</span><span class=\"o\">(</span><span class=\"nc\">Collectors</span><span class=\"o\">.</span><span class=\"na\">toList</span><span class=\"o\">())</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"589:1-590:106\">(参考)<br>\n<a href=\"https://qiita.com/KevinFQ/items/09c73cc76cb646ae63f4\" id=\"reference-c6ea2aae38f24e924d8d\">Comparatorを使ってListをソートする方法</a></p>\n<h3 data-sourcepos=\"592:1-592:43\">\n<span id=\"22-template-method学習指導要綱\" class=\"fragment\"></span><a href=\"#22-template-method%E5%AD%A6%E7%BF%92%E6%8C%87%E5%B0%8E%E8%A6%81%E7%B6%B1\"><i class=\"fa fa-link\"></i></a>22. Template Method(学習指導要綱)</h3>\n<p data-sourcepos=\"594:1-596:134\">日本には様々な学校がありますが、そこで提供される教育はおよそ同じような内容でしょう。<br>\n年間にどれぐらい授業があって、どんなふうに教育しなさい、というのが学習指導要綱として定められているからです。<br>\nその学習指導要綱に沿って各教員が教育を行う、というのが Template Method の考え方に近いでしょう。</p>\n<p data-sourcepos=\"598:1-599:238\">ところで、複雑すぎる Template Method はシステムの品質を上げません。実装が困難で、実装者による個人差が大きく出てしまうからです。<br>\nTemplate Method を実装することが教員に要求されていますが、実装次第で東大合格者が出たり学級崩壊が起きたり、過労で離任が発生したりもしていることからも分かるでしょう。</p>\n<p data-sourcepos=\"601:1-601:285\">本稿を書くにあたって<a href=\"https://www.mext.go.jp/component/a_menu/education/micro_detail/__icsFiles/afieldfile/2019/03/18/1387017_001.pdf\" rel=\"nofollow noopener\" target=\"_blank\">【総則編】小学校学習指導要領（平成29年告示）解説</a>を一読しましたが、これは大変だなと思いました。</p>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"603:1-633:3\"><div class=\"highlight\"><pre><code><span class=\"c1\">// 学習指導要綱</span>\n<span class=\"kd\">public</span> <span class=\"kd\">abstract</span> <span class=\"kd\">class</span> <span class=\"nc\">CurriculumGuideline</span> <span class=\"o\">{</span>\n    <span class=\"c1\">// 授業の準備をする</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">abstract</span> <span class=\"kt\">void</span> <span class=\"nf\">prepareClassroom</span><span class=\"o\">();</span>\n    <span class=\"c1\">// 授業をする</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">abstract</span> <span class=\"kt\">void</span> <span class=\"nf\">doClassroom</span><span class=\"o\">();</span>\n    <span class=\"c1\">// 宿題をつくる</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">abstract</span> <span class=\"kt\">void</span> <span class=\"nf\">makeHomework</span><span class=\"o\">();</span>\n    <span class=\"c1\">// 宿題を採点する</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">abstract</span> <span class=\"kt\">void</span> <span class=\"nf\">checkHomework</span><span class=\"o\">();</span>\n\n    <span class=\"c1\">// and so on...</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// 怠け者先生</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">LazyTeacher</span> <span class=\"kd\">extends</span> <span class=\"nc\">CurriculumGuideline</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">abstract</span> <span class=\"kt\">void</span> <span class=\"nf\">prepareClassroom</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// TODO Auto-generated method stub</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">abstract</span> <span class=\"kt\">void</span> <span class=\"nf\">doClassroom</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// TODO Auto-generated method stub</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">abstract</span> <span class=\"kt\">void</span> <span class=\"nf\">makeHomework</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// TODO Auto-generated method stub</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">abstract</span> <span class=\"kt\">void</span> <span class=\"nf\">checkHomework</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// TODO Auto-generated method stub</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n<p data-sourcepos=\"635:1-635:300\">一方で、コンビニやファミレスのアルバイト作業は作業のテンプレート化がうまくできていて結果に差異が少ない様に思えます。たまに例外が発生して twitter などで炎上していますが、作業要項の問題とは考えにくいです。</p>\n<p data-sourcepos=\"637:1-637:121\">Template Method はシステムを捉えるのに必須な考え方ですが、適用が難しいという印象です。</p>\n<h3 data-sourcepos=\"640:1-640:83\">\n<span id=\"23-visitorウーバーとマックデリバリーとヤマトと佐川と\" class=\"fragment\"></span><a href=\"#23-visitor%E3%82%A6%E3%83%BC%E3%83%90%E3%83%BC%E3%81%A8%E3%83%9E%E3%83%83%E3%82%AF%E3%83%87%E3%83%AA%E3%83%90%E3%83%AA%E3%83%BC%E3%81%A8%E3%83%A4%E3%83%9E%E3%83%88%E3%81%A8%E4%BD%90%E5%B7%9D%E3%81%A8\"><i class=\"fa fa-link\"></i></a>23. Visitor(ウーバーとマックデリバリーとヤマトと佐川と…)</h3>\n<p data-sourcepos=\"642:1-645:318\">家に来そうなVisitor(訪問者)を列挙してみました。<br>\nウーバーが顧客の家を訪問したら『お金をもらって商品を渡す』という行為をします。<br>\n訪問者側に、訪問時の処理を実装するのが Visitor パターンです。<br>\nこの様な実装にしておくと、顧客に断りなく値上げをしたりサービスの質を落とすこともやり放題…ではなく、アルゴリズムをオブジェクトの構造から分離ができますが、少々大掛かりなパターンであまり利用することはない印象です。</p>\n<p data-sourcepos=\"647:1-647:123\"><a href=\"https://camo.qiitausercontent.com/ac43225d638207361d557bba8ca52c0ec40a2a89/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f30633531356633362d373031652d623137352d363733392d3230396334386331616637322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F0c515f36-701e-b175-6739-209c48c1af72.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=9b529318c7d507cb0bc7e6dfcad21bbd\" alt=\"Visitor.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/0c515f36-701e-b175-6739-209c48c1af72.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F0c515f36-701e-b175-6739-209c48c1af72.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=5f194e2cc9188c65cecbdd534d1f1eff 1x\" loading=\"lazy\"></a></p>\n<h2 data-sourcepos=\"650:1-650:15\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n<p data-sourcepos=\"652:1-653:135\">ちょいちょい時間を見つけて更新していたら１年ぐらいかかりましたが、全部書けてよかったです。<br>\nなんとなく意識高く難しく感じる『デザインパターン』を少しでも身近に感じて頂けたら幸いです。</p>\n<p data-sourcepos=\"655:1-656:240\">デザインパターンは偉大な先人達が開発する時の <strong>『ベストプラクティス』</strong> をパターンとして抽出してくれたものなので学びは多いです。<br>\n近代開発からすると、冗長なパターンが多い様な気もしなくはないですが、設計の考え方をうまく学んで、よりよいコードを書くのに役立てて頂けたらいいのかなと思いました。</p>\n<p data-sourcepos=\"659:1-661:60\">(参考サイト)<br>\n<a href=\"https://www.techscore.com/tech/DesignPattern/index.html/\" rel=\"nofollow noopener\" target=\"_blank\">TECHSCORE デザインパターン</a><br>\n<a href=\"https://refactoring.guru/design-patterns/\" rel=\"nofollow noopener\" target=\"_blank\">DESIGN PATTERNS</a></p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"664:7-664:90\">実際は大量のドキュメントを書いたり試験したりもする仕事。 <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "## Why デザインパターン\n\n職業プログラマのみなさんおはこんばんわ。\n\n大量にプログラムを書く仕事を想像してプログラマになられたかもしれませんが、**大量にプログラムを読む仕事** をなさっているでしょうか？[^1]\n\n規模の大きな開発や、短期間での開発に対応するためには、既存プロジェクトのソース、オープンソースやフレームワークのソースなど、**他人の書いたソースを読んで理解して利用する**必要があるため、プログラムを書く機会より読む機会が増えていると思います。\n\nここで困ったことが一つあります。\n**『プログラムはコンピューターが理解できさえすればどのように書いてあっても動く』**\nということです。\n\n例えば、変数名を `hoge` と定義したプログラムは動作しますが、書いた本人以外の他人がそのプログラムの意図を理解するのは困難でしょう。\n\nあるいは、一つの関数が1000行のプログラムも動作しますが、他人が読むことは大変困難でしょう。悪いことに**書いた本人ですら3ヶ月後には読めない**こともあるでしょう。\n\nこれらは極端な事例ですが、**「誰が設計しても、このケースではこう設計するのが妥当」**というベストプラクティスに沿って職業プログラマ全員が読んだり書いたりすれば毎回コーディングや設計で悩んだり悩まされたりしなくてよくなるはずです。\nこれがデザインパターンが生まれた理由であり、わたし達が学習する理由かと思います。\n\n残念なことに実装ありきの解説で敷居が高かったり、利用頻度がそこまで高くなかったりして微妙かなと思うところもありますが、知識として知っておいて損はないかと思いますので身近なユースケースを上げて説明したいと思います。\n\n\n## 生成に関するパターン(1 - 5)\n\n|デザインパターン   |ユースケース   |\n|---|---|\n|[1. Abstract Factory(抽象的な工場) ](#1-abstract-factory抽象的な工場)|ココイチはカレー工場で、二郎はラーメン工場\n|[2. Builder(建築者)](#2-builder建築者) |ベースの武器と素材や不要な武器と金を渡して武器強化\n|[3. Factory Method(Factoryにオブジェクト生成メソッド)](#3-factory-methodfactoryにオブジェクト生成メソッド)|餅は餅屋に、カレーはカレー屋に\n|[4. Prototype(雛形)](#4-prototype雛形)|セントラルキッチンでスープ製造\n|[5. Singleton(単一)](#5-singleton単一)|セントラルキッチンは一つ\n\n\n## 構造に関するパターン(6 - 12)\n\n|デザインパターン   |超入門概要   |\n|---|---|\n|[6. Adapter(適合)](#6-adapter適合) |居抜き店舗\n|[7. Bridge(橋)](#7-bridge橋) |展示場とイベント\n|[8. Composite(複合物)](#8-composite複合物) |ゲームオブジェクト\n|[9. Decorator(装飾者)](#9-decorator装飾者) |PSストアセールと消費税(悪い例)\n|[10. Facade(窓口)](#10-facade窓口) |区役所とウーバーイーツ\n|[11. Flyweight(軽量)](#11-flyweight軽量) |ネットフリックス\n|[12. Proxy(代理人)](#12-proxy代理人) |カリスマ経営者率いるプログラミングスクール、オフショア窓口、美容院、メルカリ\n\n## 振る舞いに関するパターン(13 - 23)\n\n|デザインパターン   |ユースケース   |\n|---|---|\n|[13. Chain of Responsibility(責任の鎖)](#13-chain-of-responsibility責任の鎖) |お前じゃ話にならん店長を呼んでこい\n|[14. Command(コマンド)](#14-command手順書通りやって) |手順書通りやって\n|[15. Interpreter(インタプリタ)](#15-interpreterrpgゲームのスクリプト言語) |RPGゲームのスクリプト言語\n|[16. Iterator(繰り返し)](#16-iterator古い設計関数型プログラムをしよう) |古い設計。関数型プログラムをしよう\n|[17. Mediator(指揮命令)](#17-mediatorsesと指揮命令) |SESと指揮命令\n|[18. Memento(記念品)](#18-memento記念品よりセーブデータ) |記念品よりセーブデータ\n|[19. Observer(観測者)](#19-observer新刊お知らせ機能) |新刊お知らせ機能\n|[20. State(状態)](#20-stateキャラクタ選択) |キャラクタ選択\n|[21. Strategy(戦略)](#21-strategy戦略か戦術かそれが問題だ) |戦略か戦術か、それが問題だ\n|[22. Template Method(テンプレートメソッド)](#22-template-method%E5%AD%A6%E7%BF%92%E6%8C%87%E5%B0%8E%E8%A6%81%E7%B6%B1) |学習指導要綱\n|[23. Visitor(訪問者)](#23-visitor%E3%82%A6%E3%83%BC%E3%83%90%E3%83%BC%E3%81%A8%E3%83%9E%E3%83%83%E3%82%AF%E3%83%87%E3%83%AA%E3%83%90%E3%83%AA%E3%83%BC%E3%81%A8%E3%83%A4%E3%83%9E%E3%83%88%E3%81%A8%E4%BD%90%E5%B7%9D%E3%81%A8) |ウーバーとマックデリバリーとヤマトと佐川と…\n\n\n### 1. Abstract Factory(抽象的な工場)\n\n１つ目からちょっと何言ってるか分からないですね。\n\n晩ごはんを食べるプログラムを書くとしましょうか。\nココイチならカレー、二郎ならラーメンが食べられますが、まだ今日はどちらを食べたいか決まってません。\n\nこの様な時に、晩ごはん工場をAbstract Factory と見立てて、ココイチや二郎をFactoryと見立てて、プログラムを書くとはっきり食べたいモノが決まってなくてもプログラムが書けます。\nまた、急に気が変わってサイゼの辛味チキンが食べたくなったとしても、サイゼリヤを Factory として実装して、サイゼリヤを create するだけでその後晩ごはんを食べる処理などは修正が不要となります。\n\n![AbstractFactory.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/020917ac-258d-a1fc-5270-7b3f30abbc94.png)\n\n``` AbstractFactorySnippet.java\nSupperFactory factory = new CocoichiFactory();\n\n// 以下のコードは店(Factory)によらず共通\nfactory.createFood(800);\n...\n```\n\n### 2. Builder(建築者)\n\n2つ目もちょっと何言ってるか分からないですね。\n\n『建築者に渡すべきものを渡して結果を取得する方法』だけ取り決めとくという考え方です。\n\n身近な例だと、ソシャゲの武器強化などでしょうか。\n`Equipment` は `Material` から派生しておくと、強化用素材だけではなく、不要な武器防具も強化用素材として利用できそうですね。\n\n``` LeveledEquipmentBuilder.java\ninterface LeveledEquipmentBuilder {\n  void setTarget(Equipment equipment);  // 強化対象\n  void addMaterial(Material material); // 強化用素材\n  void setMoney(int money); // 強化費用\n  Equipment build();    // 結果取得\n}\n```\n\n課金アイテムなどで成功率を上げられるなら、`addSuccessRate` といったインターフェイスも追加する必要があるでしょう。\n武器強化機能は様々なソシャゲで見かけ今や実装必須の機能と言えるので再利用可能なコードにしておくと便利そうですね。\n\n![Builder.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c4c0b5f4-12e6-33ca-dac9-b8c748a94b61.png)\n\n\n### 3. Factory Method(Factoryにオブジェクト生成メソッド)\n\n`Abstract Factory` の章で、カレーやラーメンを`Food`として定義していましたが、カレーはカレーだしラーメンはラーメンです。\n\n![FactoryMethod(Food).png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6245e4f6-8b0e-b48f-3e40-7bb8b95e8b32.png)\n\nカレーにはごはんやナンがつきますが、ラーメンに小ライスがつくことはありますが、ナンがくっつくことはわたしが知る限りではないです。これらを `Food` で管理するように設計した場合、ラーメンにナンをくっつけることもできてしまいます。なかなか興味深い`Food`の完成となるわけですが、プログラムとしては危険です。\n\nココイチや二郎に Factory Method を持たせることで、うっかりカレー屋でラーメンを提供するのを防ぐことができます。\n\n![FactoryMethod(class).png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/89f21b20-a95f-1df9-ed2b-1feb7d154c01.png)\n\n\n### 4. Prototype(雛形)\n\nこれは、町田商店のセントラルキッチンですね。\n各店舗で同じ様にスープを１から炊かないで、セントラルキッチンでスープを作って各店舗に配送。\nひと味足りないと感じる方もいるかもしれませんが、大変合理的な考え方ですよね。\n\nプログラムは手間暇かけても丹精込めても書いた通りにしか動かないので、プロトタイプ作ってコピーすればよいです。\n\n``` PrototypeSnippet.java\nclass CentralKitchen {\n    Soup createSoup() {\n        // すごく大変な工程でスープを作る\n        return soup;\n    }\n}\n\nclass ShopKitchen {\n    // セントラルキッチンで作ったスープを足していく。\n    // スープを作るメソッドは存在しない。\n    void addSoup(Soup soup);\n}\n\n...\n\n// セントラルキッチンでスープを作って、各店舗に配送\nShopKitchen shopKitchens[] = new ShopKitchen[{店舗数}];\nSoup amazingSoup = (new CentralKitchen()).createSoup()\nfor(ShopKitchen k : shopKitchens) {\n    k.addSoup(amazingSoup);\n}\n\n```\n\n\n### 5. Singleton(単一)\n\n`Prototype` の章のサンプルコードで勘のよい方は気づいたかもしれませんが、プログラム上では、セントラルキッチンが作り放題ですね。これを出来なくするパターンが`Singleton`です。\n\n``` SingletonSnippet.java\nclass CentralKitchen {\n    private static CentralKitchen instance = new CentralKitchen();\n    private CentralKitchen(){} // private にして外部から呼べなくする。\n\n    public static CentralKitchen getInstance() {\n        return instance;\n    }\n}\n\n...\n\nSoup soup = CentralKitchen.getInstance().createSoup()\n\n```\n\n\n### 6. Adapter(適合)\n\n美味しいラーメンを作る自信があるのでラーメン店を作りたいが、お金もないし、店舗のデザインなどについては全くの素人だとします。店舗のキッチン設備や什器がある程度整った『居抜き店舗』を見つけて改装すれば、１からラーメン屋を作るよりは手間がかからないことでしょう。これが`Adapter`です。\n\n![Adapter.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6f828fc6-8e25-433a-b9d0-93eb9775b6f3.png)\n\n``` AdapterSnippet.java\nclass UnpopularDiner {\n    // 目も当てられないぐらい汚いキッチン\n    // ぐちゃぐちゃな店内\n    // なるべくそのまま利用したい\n}\n\ninterface CommonNoodleShop {\n    // ラーメン屋として一般的に必要なメニューを定義\n}\n\n// 不人気店をベースにして作った、一般的なラーメンメニューを取り揃えた、わたしの素敵なラーメン店\nclass MyAwesomeNoodleShop extends UnpopularDiner implements CommonNoodleShop {\n    Ramen getShoyuRamen() {\n        // ラーメンを実装。\n        // UnpopularDiner の設備(プロパティ・メソッド)はすべて使える。\n        // 汚いキッチンを使って美味しいラーメンを作る。\n        // ...\n        return ramen;\n    }\n}\n\n```\n\n実際のプロジェクトでは、極めて重要だが解析困難なビジネスロジックが記述された class に遭遇することがある。そのような class は 1[byte] でも修正したら動かなくなる絶妙な実装であるため、Adapter を用いて本体にはなるべく触らない様にすることで安全に再利用することを検討するかもしれません。\n\n\n### 7. Bridge(橋)\n\n様々な展示場がありイベントがあります。イベントの主催者や出展者は、展示場とは別の所で準備をして展示場に入り展示を行います。コミケ、ゲームショー、あるいはモーターショーといった展示の実装には、ビックサイト側は関与していません。この関係性を `Bridge` で表すと下図のようになります。\n\n![Bridge.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8c04ad9d-a9c4-1f02-0eb2-4dde775af6c7.png)\n\n``` BridgeSnippet.java\n// ビックサイトでコミケ開催\nComicmarketEvent comicmarketEvent = new ComicmarketEvent();\nExhibition e = new BigsightExhibition(comicmarketEvent);\ne.doExhibition();\n```\n\n### 8. Composite(複合物)\n\n枝と葉を同じ様に処理するとか、容器と中身を同じ様に処理すると再帰的処理が簡単になるパターン。\nフォルダとファイルが一般的で分かりやすい例かと思いますが、ここではやはりゲームを例に説明したいと思います。\n\n3Dのゲームを想像してください。世界(`Scene`)の中には背景(`Background`)、プレイヤー(`Player`)、武器(`Weapon`)、弾(`Bullet`)、アイテムボックス(`ItemBox`)やアイテム(`Item`)などのオブジェクト等があると思います。`item`はアイテムボックスの中にあったり地面(`Ground`)に転がっていたりプレイヤーに拾われたりします。\nプレイヤーはオブジェクトですが、武器を所持するオブジェクトであったりもします。\nまた、オブジェクトとして意識されることはあまりないと思いますが光源やカメラもあります。\n\nこれらのゲームオブジェクト(`GameObject`)の配置や状態はゲームの進行状況によって頻繁に変更する必要がありますし、それらの操作を個別に考えるのは大変なので、`Composite`パターンで表現されることが多い様に思います。\n\n管理イメージを図にすると下図の様になります。\n(instance と class 表現が混じっていますが…よろしく解釈してください。)\n\n![Composite.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/482b839b-bc46-559c-5a83-e6353c6a3305.png)\n\n\n### 9. Decorator(装飾者) \n\nPSストアセール、利用してますか？\nちょいちょい色々なセールをやってて、その都度いくつかのゲームがお得なプライスで購入できますね。\n消費税の処理は通常価格と割引後の価格に対して適用されます。\nこれを`decorator`で実装すればセールの影響を受けない処理を書けそうで書けなさそうです。\n\n![Decorator.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d1da9231-775e-6b33-1332-496b8167c695.png)\n\n確かに、消費税コード部分やセール部分は変更が不要だしシンプルですが、この実装ではセール毎にコード修正が必要となってしまいます。\n\n```\n//----------------------------------------\n// 通常時コード\nProduct p = new Product();\nProduct taxedProduct = new TaxedProduct(p);\n\n// 消費税を考慮した価格を取得\ntaxedProduct.getPrice();\n\n//----------------------------------------\n// セール時コード\nProduct p = new Product();\nProduct saledProduct = new SaledProduct(p);\nProduct taxedProduct = new TaxedProduct(saledProduct);\n\n// 消費税を考慮した価格を取得\ntaxedProduct.getPrice();\n\n```\n\nビジネス要件である、PSStore のセールがどの様な周期でどの様な製品に対して行われているかを理解しないで実装したのでしょうか。\nセールや消費税適用前後で値段しか変わらないのにPSStoreに並べる商品自体を`interface`として定義している点も意味不明ですね。\nでは、`PSStorePrice` にすればいいかというとそうでもなさそうです。\n\n近視眼的にデザインパターンを適用しても、再利用性が上がらない上にメンテナンスを行う人などに不快感を与える可能性もあるので注意が必要そうです。\n\n\n### 10. Facade(窓口) \n区役所で住民票を取るとします。区役所は巨大な建物で大変多くの業務を行っているが、住民票発行の窓口に行けばとりあえず住民票を取る事がでます。\n適切な窓口が設定されることで区役所の業務すべてを把握することなく円滑に目的を達成できるようにするためのパターンが`Facade`です。\n\n配達に関する機能を持っているため、単純な窓口ではないですがウーバーイーツを想像してみましょう。\n利用者はウーバーイーツの裏にある複雑な仕組みを意識することなく簡単なインターフェースで様々な食料を手に入れる事ができるようになりました。\n\nこれが`Facade(窓口)`を利用するメリットです。\n\nコードを`Facade`パターンで書けば分りやすくなるのではなく、 **『`Facade`パターンを利用した方が自然に記述できる外部設計に対して`Facade`を適用する』** と考えると良いと思います。\n\n![Facade.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/0436a495-551d-3ffe-3e91-2b6cfb72a2b3.png)\n\n人間向けの言語で書かれた外部設計を、コンピューターに分かる様に翻訳するのが職業プログラミングです。\nクラス名に`Facade`とつける時点で、外部設計からは読み取れない複雑な翻訳（実装）になっているかもしれません。\n\n\n### 11. Flyweight(軽量)\nネットフリックスは、知らない人はあまりいないと思いますが動画見放題のサブスクサービスです。\nそんなネットフリックスも、創業当時は実店舗を持ってDVDレンタルのビジネスを行っていたのですが、業態を大幅に転換し紆余曲折を経て現在のサービスを提供するに至りました。\n\n現CEOのリード・ヘイスティングスや初代CEOのマーク・ランドルフが `Flyweightパターン` を適用しようと思ったかどうかは知りませんが、 `Flyweightパターン` で表現できそうです。\n\n![Flyweight.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8bb4a2df-371e-c13c-6819-585d34777c2e.png)\n\n(参考)\n[ネットフリックスという世界的企業はいかに誕生したのか](https://www.dhbr.net/articles/-/7044)\n\n\n### 12. Proxy(代理人)\nコードレベルで考えると Adapter パターンとの違いが分かりづらいため、ここでも人間世界で起きている事例で考えます。\n例えば、何かやらかした際に、法廷で争わなければいけなくなりますが、おそらく多くの人は法律の知識がないため弁護士を代理人として立てると思います。\nこのような、『何らかの意味ある代理行為』がデザインパターンで定義されていることかと思います。\n\n代理行為には様々な種類がありますが、本章では以下に４種類列挙します。\n\n#### カリスマ経営者率いるプログラミングスクール(A virtual proxy)\nカリスマ経営者の有名なITスクールに入ると、カリスマ経営者に教えてもらえてプログラムが書けるような気分になります。\n実際にはカリスマ経営者は、社員やバイトの先生に何らかの方針を伝えるのみで、教育行為の大半は社員やバイトの先生が行うことになると思います。\n\nカリスマ経営者は、カリスマとして活動したり経営者として活動したりするのが忙しいので全ての生徒の相手ができないため、代理で教える先生が必要となります。\n\n![A virtual proxy.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/4c64fd7d-c934-9556-26f0-f387d5eac865.png)\n\n\n#### オフショア窓口(A remote proxy)\n単価の安い海外にIT業務の委託を行いたいですが、英語が分かりませんし、海外に行って仕事を発注するのも大変です。\n一方、単価の安い国側でも単価の高い日本の仕事がほしいですが、日本に移住するのも大変ですし生活コストが上がってしまうため安い単価で仕事が受けられなくなります。\n\n日本語と現地語が話せるPMを日本事務所に配置することで現地からの業務提供を円滑に行うことができます。\n\n![A remote proxy.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f3fb4558-29b2-69d6-61a1-992985cf0d64.png)\n\n\n#### 美容院(A protective proxy)\n多くの人は、髪の毛を自分で切ることができますが、それをしようとは思いません。イケてない髪型になったら取り返しがつかないからです。\nかっこよく（かわいく）切ってくれる人に頼むのが安全です。\n\n![A protective proxy.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/0b63af0c-91d0-37ea-9bcf-7be55a491836.png)\n\n\n#### メルカリ(A smart proxy)\nいらなくなった古着を売るとして、友達に声をかけるなど色々な手段があると思いますが、メルカリに出品される方も多いのではないでしょうか。\n家の前に置いておいても誰かの目に止まり購入されることはほぼないと思いますが、メルカリに出品しておくとあなたに代わって古着を売り飛ばしてくれます。\n\n![A smart proxy.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/9f7eb90e-db67-b5c7-8f0c-bf7e0bd6483e.png)\n\n\n(参考)\n[What is the exact difference between Adapter and Proxy patterns?](https://stackoverflow.com/questions/37692814/what-is-the-exact-difference-between-adapter-and-proxy-patterns)\n\n\n### 13. Chain of Responsibility(責任の鎖)\n大勢のお客で賑わっている居酒屋での出来事です。炭酸麦茶を頼んで30分以上経ちますがまだ届きません。いい加減遅いなと思いテーブルの呼び出しベルを押し店員を呼び出し「オーダー入ってます？」とすまなそうに確認して炭酸麦茶を提供してもらうことができました。\n\n一方隣の席からは「お前じゃ話にならん、店長を呼んでこい」という怒鳴り声が聞こえてきました。興味津々でそちらの席を横目で観察したところ、バイトリーダーらしき人物が出てきて謝罪をするも結局店長は出てこないという様子を目撃することになりました。\n\nこれが、責任の鎖です。\nこの居酒屋のスタッフは、バイト→バイトリーダー→雇われ店長→本部マネージャー→本部社長と言った責任の鎖でつながれており、顧客の怒り度に対して誰がどう対処するかを規定しています。\n\n```\npublic abstract class Responsible {\n    private Responsible next = null;\n    private String name = null;\n\n    public Responsible(String name){\n        this.name = name;\n    }\n    public Responsible setNext(Responsible next){\n        this.next = next;\n        return next;\n    }\n    public final void handle(Claim claim){\n        if(canHandle(claim)) {\n            doHandle(claim);\n        } else if(next != null) {\n            next.handle(claim);\n        }else{\n            //FIXME: Something to do.\n        }\n    }\n    protected abstract boolean canHandle(Claim claim);\n    protected abstract void doHandle(Claim claim);\n}\n\n// バイト\npublic class PartTimer extends Responsible {\n    public HeadOfPartTimer(String name){\n        super(name);\n    }   \n    protected boolean canHandle(Claim claim){\n        if(claim.level.lessThan(Claim.ANGRY)){\n            return true;\n        }\n        return false;\n    }\n    protected void doHandle(Claim claim){\n        // 平謝り\n        // オーダーされた商品を持ってくる\n    }\n}\n\n// バイトリーダー\npublic class HeadOfPartTimer extends Responsible {\n    public HeadOfPartTimer(String name){\n        super(name);\n    }   \n    protected boolean canHandle(Claim claim){\n        if(claim.level.lessThan(Claim.SUPER_ANGRY)){\n            return true;\n        }\n        return false;\n    }\n    protected void doHandle(Claim claim){\n        // 平謝り\n        // 次回使える5%引きチケットを渡す\n    }\n}\n\n// 雇われ店長\npublic class StoreManager extends Responsible {\n    public StoreManager(String name){\n        super(name);\n    }   \n    protected boolean canHandle(Claim claim){\n        if(claim.level.lessThan(Claim.SUPER_SUPER_ANGRY)){\n            return true;\n        }\n        return false;\n    }\n    protected void doHandle(Claim claim){\n        throw new UnsupportedOperationException(); \n    }\n}\n\n```\n\n### 14. Command(手順書通りやって)\n\n作業の手順を書いた手順書があります。コピーすれば複数の手順書にできますし、いろいろな人に渡して作業をお願いすることができます。\nCommand パターンは、「手順書」と「依頼」を表すパターンです。手順の内容は実際の手順書によって異なります。\n\n「銀座のコーラを買ってくる」依頼であれば「銀座への行き方」などが手順書に定義されます。「銀座に行く」手順書と「コーラを買う」手順書を分ければ、買い物コマンドを作るだけで銀座での買い物はし放題かもしれません。\nコマンドを実行した結果としてコーラを受け取りたいですし、コーラ以外にも焼きそばやパンも食べたいとなると、戻り値が `void` では受け取れず、また、コーラ買ってくるまでの間他の事をしていたいとなると、非同期での実行が必要になってきます。\n\n適用自体は簡単ですが、要件をよく確認して設計しないといたずらに複雑なコードになるだけなので注意が必要です。\n\n![Command.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6aa75570-79fc-4741-de3a-dad4d82de2ff.png)\n\n### 15. Interpreter(RPGゲームのスクリプト言語)\n\nスクリプト言語がインタプリタによって実行されているかは一旦横においておくことにします。\nデザインパターンとして学ぶべきことは「業務上の課題を解決するためになんらかの文法の言語を作りそれを解析して動かす」パターンということです。\n\nRPGゲームを作る場合を例に考察してみましょう。\nRPGゲームは、街の入り口に立っている町人Aに「ようこそラダトームのまちへ」と喋らせたり、主人公やライバルキャラクターに小芝居させながら大量の会話をさせるなどのイベントシーンが必要です。これらのイベントシーンをプログラマがアセンブラやC言語などのプログラム言語で書くのは非常に大変です。\nゲームの企画やプランナーの人が「talk(charaA, ようこそラダトームのまちへ)」と書いたら町人Aがセリフをしゃべってくれる仕組みがあったらどうでしょうか。いちいちプログラマにお願いして嫌な顔をされながらイベントを作るよりは遥かに簡単そうです。一方のプログラマはバトルプログラムやエフェクトプログラムに集中できそうで win win です。\nこの時に作る `talk()` 等を解析して動かすプログラムを巨大な if 文で作ると大変なので、インタプリタを作って Composite パターンなどに当てはまるように解析して実行していくのがインタプリタパターンです。\n\n昔は毎回スクリプトエンジンを手作りしていましたが最近は[Lua言語](https://ja.wikipedia.org/wiki/Lua)が人気があるようですね。\n\n### 16. Iterator(古い設計。関数型プログラムをしよう)\n\niterator パターンは、配列やリストに含まれる要素に対して何らかの処理を行うパターンです。\n`hasNext()`, `getNext()` などのメソッドを見かけたら iterator パターンでなんらかの集合の要素を取得しているんだなと見てもらえば良いと思いますが、近代言語ではよりよい方法が提供されているので敢えて実装しない方がよいでしょう。\n\n配列操作用のメソッドに関数を渡す事で配列の全ての要素に対して任意の処理を行えます。\n\n```\n例)\nfind(f) : f関数の戻り値が true の要素を返す（１つ）\nfilter(f) : f関数の戻り値が true の要素を返す（複数）\nmap(f) : f関数の戻り値の配列に map する\nreduce(f) : 配列の要素に対してfで与えられる関数を順次実行した結果を返す（１つ）\nsome(f) : f関数の戻り値が true の要素があるか？\nevery(f) : f関数の戻り値がすべて true か？\nflatMap(f) : f関数の戻り値（配列）を全て連結した配列を返す\n...\n```\n\n余計なことは覚えずに、js では Array クラスのメソッド、Java では StreamApi を利用するとよいでしょう。\n\n参考)[MDN Array](https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array)\n\n\n### 17. Mediator(SESと指揮命令)\n\nMediator(仲介役)というとあまり見かけない表現かと思いますが、われわれの仕事現場に目を向けると分かりやすい例があります。\n\nITプロジェクトで協力会社さんに参画頂いた際、参画者の性質を見てAさんは開発、Bさんは試験などおおよその方針を指揮命令者が出していると思います。Mediator パターンで実現したいのはこの指揮命令による秩序です。\n\nただ、SESで参画している協力会社さん同士が直接業務に関する指示を行ってはいけないにも関わらず、指揮命令者の指示を待っていると仕事が進まないので、直接会話して仕事を進めているケースもあるかもしれません。\n\n現実の世界でも必ずしもうまく機能しないケース（指揮命令系統が複雑になるだけで仕事が進まない）もある通り、Mediatorパターンを適用する際には、本当にMediatorが必要なのかをよく考えて適用する必要があるでしょう。\n\n![Mediator.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/37c4a62d-9819-6b98-5c97-a84006ded7df.png)\n\n\n### 18. Memento(記念品よりセーブデータ)\n\n令和の世の中で、Memento(記念品、形見)と言われて日常で馴染み深い人は少数派の様に思います。\nコンピューターゲームを遊んで、次の日その続きから遊ぶために、その時の状態を保存したセーブデータを作ったことがある人はそれなりにいるのではないでしょうか。\n\nMementoパターンは、ある時点での処理の続きを再開できるように必要なデータを保存しておくパターンです。\n\nセーブデータは、次回からゲームを再開するために、その時点での所持金や経験値やレベルなどのプレイヤーの状態を表す変数が保存されますが、その時点での画面の映像などは保存されません。\nMementoパターンでも同様に、プログラムの動作に必要な最小限のデータのみを保存します。\n\n![Memento.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/9eaf0235-01cd-45ca-53b7-213214826d3c.png)\n\n\n### 19. Observer(新刊お知らせ機能)\n\nObserver(観測者)パターンは、言葉の響きからすると観測者が Polling などして何かを観測するように思えますが、実際は、「新刊お知らせ機能」の様に、「読んでる漫画の新刊がでたら通知してくれ」と登録しておくと、新刊が出た際に Observer(観測者)に通知が来るパターンです。\n\nタイマーなどで定期監視をしなくてよいためコンピュータに対する負荷も少なく、「新刊が出た」などのイベントに対して処理を実行できるイベントドリブンの考え方も人間に優しいです。\n\nAngular や Vue や React などに実装されているデータバインディングがあるとほとんど無用になるのですがちょっとうまく動かない時に利用する watch がObserver の考え方と近いと思います。\n\n![Observer.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/5555d727-1135-2d63-f120-ebb4cece5596.png)\n\n\n### 20. State(キャラクタ選択)\n\n執筆時点の流行に乗ると、ELDEN RING での放浪剣士や素寒貧といった素性選択かと思いますが、戦士や魔法使いなどの職業の例えの方が普遍的で分かりやすそうなのでそちらで話を進めます。\n\nプレイヤーの選択により、プレイヤーの操作するキャラクターが「戦士」や「魔法使い」になるゲームがあったとします。「戦士」は剣や盾などを装備しての近接攻撃が得意で、魔法使いは杖やローブなどが装備可能で魔法による遠距離攻撃が得意です。\n\nAボタンやBボタンを押下時のイベント関数に「もし戦士だったら」とか、「もし魔法使いだったら」といったコードを書くのは一見直感的です。\n最初に戦士しかいないところに魔法使いを追加したらその様なコードを書くことも往々にしてあるでしょう。\n\nただこれが、複雑なコマンド入力でキャラクタ固有スキル発動もしたい、職業によって固有のスキルツリーも持ちたいとなってくると「もし戦士だったら」という分岐をどこに書いたらいいかがよく分からなくなってきます。拡張が辛くなってきた時がリファクタリング適正期かと思います。\n\n仕様書も書かずにノリで拡張したコードであれば、新たにプロジェクトに追加されたメンバーに新ジョブ「僧侶」の実装を依頼することも難しいでしょうし、ゲームをやらないメンバーはスキルツリーのコードが職業によって分岐があることに気がつかないかもしれません。\n\nそこで、状態(職業)毎にクラスを定義して各クラスに対して定められたアクションの実装を行えば、自然かつ拡張性の高いクラス定義を行えるという考え方が State パターンです。\n\n例)\n- 攻撃行動\n    - 「戦士という状態」のプレイヤーが攻撃をすれば剣を振る\n    - 「魔法使いという状態」のプレイヤーが攻撃をすれば魔法を詠唱\n- 防御行動\n    - 「戦士という状態」のプレイヤーが防御をすれば盾を構える\n    - 「魔法使いという状態」のプレイヤーが防御をしても何もできない\n- etc...\n\n![State.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/72dab98b-0ef4-8f23-fab0-059266bdfba3.png)\n\n`jobState.attacAction()` でそれぞれの職業に応じた攻撃を行えるといった実装になるため、ここに「騎士」や「僧侶」を追加しても `Player` クラスやその他のコードの変更は不要で、`KnightState` や `ClericState` といった新規追加クラスに対してコードを書けばよいというのも精神衛生上よいです。\n\n職業を状態と捉えるかどうかは議論がありそうですが、デザインパターンの本質としてはパターンを適用することでコードが分かりやすくなるかどうかというところだと思います。\n\n### 21. Strategy(戦略か戦術か、それが問題だ)\n\n戦略を定義したクラスを用意してそれを入れ替えれば、コードの修正範囲は小さいという考え方のパターンですが、ストラテジーパターンで作られているJavaのソートは、皆さんご存知の通り大変冗長なコードになっています。\n戦術レベルの内容を戦略で解決するというデザインが適切ではないというポピュラーな例と言えるでしょう。\n\nStrategy は適用すべきところに適用することにして、ソートは Lambda や Comparator を利用して書くのがよいでしょう。\n\n``` SortSnippet.java\n// 【冗長】昇順ソート戦略\nComparator<String> ascSortStoratagy = new Comparator<String>() {\n    @Override\n    public int compare(String s1, String s2) {\n        return s1.compareTo(s2);\n    }\n};\n\n// 【冗長】降順ソート戦略\nComparator<String> descSortStoratagy = new Comparator<String>() {\n    @Override\n    public int compare(String s1, String s2) {\n        return s2.compareTo(s1);\n    }\n};\n\n// 【冗長】昇順ソート戦略でソート\nList<String> sortedItems = items.stream()\n    .sorted(ascSortStoratagy)   // 別途定義した昇順ストラテジーを指定。インラインでも書けるが冗長\n    .collect(Collectors.toList());\n\n// Lambda でソート\nList<String> sortedItems = items.stream()\n    .sorted((s1, s2) -> s1.compareTo(s2))   // Lambda 式で直接定義\n    .collect(Collectors.toList());\n\n// Comparator でソート\n// クラスのフィールドを比較する場合は、Comparator.comparing を利用する\nList<String> sortedItems = items.stream()\n    .sorted(Comparator.naturalOrder())  // 昇順\n    .collect(Collectors.toList())\n```\n\n(参考)\n[Comparatorを使ってListをソートする方法](https://qiita.com/KevinFQ/items/09c73cc76cb646ae63f4)\n\n### 22. Template Method(学習指導要綱)\n\n日本には様々な学校がありますが、そこで提供される教育はおよそ同じような内容でしょう。\n年間にどれぐらい授業があって、どんなふうに教育しなさい、というのが学習指導要綱として定められているからです。\nその学習指導要綱に沿って各教員が教育を行う、というのが Template Method の考え方に近いでしょう。\n\nところで、複雑すぎる Template Method はシステムの品質を上げません。実装が困難で、実装者による個人差が大きく出てしまうからです。\nTemplate Method を実装することが教員に要求されていますが、実装次第で東大合格者が出たり学級崩壊が起きたり、過労で離任が発生したりもしていることからも分かるでしょう。\n\n本稿を書くにあたって[【総則編】小学校学習指導要領（平成29年告示）解説](https://www.mext.go.jp/component/a_menu/education/micro_detail/__icsFiles/afieldfile/2019/03/18/1387017_001.pdf)を一読しましたが、これは大変だなと思いました。\n\n```java\n// 学習指導要綱\npublic abstract class CurriculumGuideline {\n    // 授業の準備をする\n    public abstract void prepareClassroom();\n    // 授業をする\n    public abstract void doClassroom();\n    // 宿題をつくる\n    public abstract void makeHomework();\n    // 宿題を採点する\n    public abstract void checkHomework();\n\n    // and so on...\n}\n\n// 怠け者先生\npublic class LazyTeacher extends CurriculumGuideline {\n    public abstract void prepareClassroom() {\n        // TODO Auto-generated method stub\n    }\n    public abstract void doClassroom() {\n        // TODO Auto-generated method stub\n    }\n    public abstract void makeHomework() {\n        // TODO Auto-generated method stub\n    }\n    public abstract void checkHomework() {\n        // TODO Auto-generated method stub\n    }\n}\n```\n\n一方で、コンビニやファミレスのアルバイト作業は作業のテンプレート化がうまくできていて結果に差異が少ない様に思えます。たまに例外が発生して twitter などで炎上していますが、作業要項の問題とは考えにくいです。\n\nTemplate Method はシステムを捉えるのに必須な考え方ですが、適用が難しいという印象です。\n\n\n### 23. Visitor(ウーバーとマックデリバリーとヤマトと佐川と…)\n\n家に来そうなVisitor(訪問者)を列挙してみました。\nウーバーが顧客の家を訪問したら『お金をもらって商品を渡す』という行為をします。\n訪問者側に、訪問時の処理を実装するのが Visitor パターンです。\nこの様な実装にしておくと、顧客に断りなく値上げをしたりサービスの質を落とすこともやり放題…ではなく、アルゴリズムをオブジェクトの構造から分離ができますが、少々大掛かりなパターンであまり利用することはない印象です。\n\n![Visitor.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/0c515f36-701e-b175-6739-209c48c1af72.png)\n\n\n## おわりに\n\nちょいちょい時間を見つけて更新していたら１年ぐらいかかりましたが、全部書けてよかったです。\nなんとなく意識高く難しく感じる『デザインパターン』を少しでも身近に感じて頂けたら幸いです。\n\nデザインパターンは偉大な先人達が開発する時の **『ベストプラクティス』** をパターンとして抽出してくれたものなので学びは多いです。\n近代開発からすると、冗長なパターンが多い様な気もしなくはないですが、設計の考え方をうまく学んで、よりよいコードを書くのに役立てて頂けたらいいのかなと思いました。\n\n\n(参考サイト)\n[TECHSCORE デザインパターン](https://www.techscore.com/tech/DesignPattern/index.html/)\n[DESIGN PATTERNS](https://refactoring.guru/design-patterns/)\n\n\n[^1]: 実際は大量のドキュメントを書いたり試験したりもする仕事。\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-11-06T17:14:38+09:00",
    "group": null,
    "id": "485830bcec1f7ce771fd",
    "likes_count": 13,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 14,
    "tags": [
      {
        "name": "初心者",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "設計",
        "versions": []
      },
      {
        "name": "デザインパターン",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      }
    ],
    "title": "日々の暮らしから学ぶデザインパターン超入門",
    "updated_at": "2024-06-29T14:12:01+09:00",
    "url": "https://qiita.com/kaku3/items/485830bcec1f7ce771fd",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2881,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"ビデオゲームじゃなくてもよいです\" class=\"fragment\"></span><a href=\"#%E3%83%93%E3%83%87%E3%82%AA%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%98%E3%82%83%E3%81%AA%E3%81%8F%E3%81%A6%E3%82%82%E3%82%88%E3%81%84%E3%81%A7%E3%81%99\"><i class=\"fa fa-link\"></i></a>ビデオゲームじゃなくてもよいです</h2>\n\n<p>子供の頃にファミコンが世の中に登場しまして、人生の半分ぐらいはゲームと共に過ごした人生だったので、あとになって振り返って見るとそこから学んだことが多いなと振り返るポエムを書きます。</p>\n\n<h2>\n<span id=\"反復すること\" class=\"fragment\"></span><a href=\"#%E5%8F%8D%E5%BE%A9%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8\"><i class=\"fa fa-link\"></i></a>反復すること</h2>\n\n<h3>\n<span id=\"スペランカー\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%83%9A%E3%83%A9%E3%83%B3%E3%82%AB%E3%83%BC\"><i class=\"fa fa-link\"></i></a>スペランカー</h3>\n\n<p><code>スペランカー</code>というゲームをご存知でしょうか？世界一弱い主人公のクソゲーとして各所で紹介されることも多いプラットフォームゲームです。個人的には名作だと思っています。</p>\n\n<p>とにかく足を踏み外して死ぬのが印象的なゲームです。<br>\n死ぬと復活ポイントから再開となり、３回死ぬとゲームオーバーになるのですが、慣れていないうちは、最初にエレベーターに乗って登場してきてそこから降りるのに失敗して即ゲームオーバーとなりました。</p>\n\n<p>なんて理不尽なゲームなんだろうと思いながら、他にやることもないので何度も遊んでいたら、エレベーターから降りることに失敗することはほとんどなくなりました。</p>\n\n<p>エレベーターから降りるジャンプ操作アクションを成功させるためのポイントは以下です。</p>\n\n<ul>\n<li>プレイヤーが死ぬ高低差</li>\n<li>ジャンプボタンでジャンプする距離</li>\n<li>足場を踏み外さない様にする精密な操作</li>\n</ul>\n\n<p>最初は、これらのポイントを丁寧に操作する事で実践していたのですが、反復することで無意識に素早く実践できるようになりました。</p>\n\n<p>スペランカーのゲーム中では、動く床やハシゴからのジャンプや、敵に追われている状態でのジャンプなど、『ジャンプ操作』を駆使して解決すべき課題が数多く登場します。</p>\n\n<h3>\n<span id=\"学び\" class=\"fragment\"></span><a href=\"#%E5%AD%A6%E3%81%B3\"><i class=\"fa fa-link\"></i></a>学び</h3>\n\n<p>ここでの最大の学びは、「反復することによって非線形的にプレイヤースキルは向上する」ということです。『ジャンプ操作』という単純な基本操作を反復により習得することによって、解決できる課題が増えたということです。</p>\n\n<p>プログラミングでは、入門書を読むと、変数や配列、連続、分岐、繰り返し、などの基本的な文法と、クラスやオブジェクトといった概念が登場すると思います。</p>\n\n<p>スペランカーと異なり、下手くそなコードを書いてもその場で死なず、下手くそなコードでも課題解決できる可能性はありますが、大きく複雑な課題を解決できなくてお悩みの方も多いと思います。</p>\n\n<p>基本は反復です。退屈だし、成長を実感できないかもしれませんが、自分が課題と思う点について、コードを読んだり写経したりを地道に繰り返していると、いつの間にか少し大きな課題を解決できるようになるはずです。</p>\n\n<h2>\n<span id=\"人と対峙することスキルを維持すること\" class=\"fragment\"></span><a href=\"#%E4%BA%BA%E3%81%A8%E5%AF%BE%E5%B3%99%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8%E3%82%B9%E3%82%AD%E3%83%AB%E3%82%92%E7%B6%AD%E6%8C%81%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8\"><i class=\"fa fa-link\"></i></a>人と対峙すること・スキルを維持すること</h2>\n\n<h3>\n<span id=\"バーチャファイター\" class=\"fragment\"></span><a href=\"#%E3%83%90%E3%83%BC%E3%83%81%E3%83%A3%E3%83%95%E3%82%A1%E3%82%A4%E3%82%BF%E3%83%BC\"><i class=\"fa fa-link\"></i></a>バーチャファイター</h3>\n\n<p><code>バーチャファイター</code>というゲームをご存知でしょうか？パンチ・キック・ガードボタンとレバーの組合わせで多様な技を繰り出すキャラクターを操作して、コンピュータまたは人と対戦する対戦格闘ゲームです。</p>\n\n<p>上手い人と対戦すると30秒程度で敗北し、お金がとんでもない勢いでなくなっていたので、お金を持ち歩かないようにしていた時期もありました。</p>\n\n<p>ここでの学びは大きく２つあります。<br>\n- 相手を理解する事で勝率が上がる<br>\n- 強さを維持するためには継続的なトレーニングが必要</p>\n\n<h3>\n<span id=\"相手を理解する事で勝率が上がる\" class=\"fragment\"></span><a href=\"#%E7%9B%B8%E6%89%8B%E3%82%92%E7%90%86%E8%A7%A3%E3%81%99%E3%82%8B%E4%BA%8B%E3%81%A7%E5%8B%9D%E7%8E%87%E3%81%8C%E4%B8%8A%E3%81%8C%E3%82%8B\"><i class=\"fa fa-link\"></i></a>相手を理解する事で勝率が上がる</h3>\n\n<p>最初は自分の好きなキャラクターを選んで操作方法を覚えるところから始まりますが、勝てないキャラクターがいた場合には、そのキャラクターの技を覚えたり、さらには、ゲーム機の向こう側にいる人間の「クセ」なども考えて対策を考えます。</p>\n\n<p>好きでもないキャラクターのことや、顔も見たことのない人のクセを考えるのは大変ですが、勝つためには仕方ありません。</p>\n\n<p>ところでこれは、ビジネスの世界でも同じだったりしないでしょうか？<br>\nお客様、上司、同僚、部下、相手のことを覚えた方がより円滑な仕事ができると思いませんか？</p>\n\n<h3>\n<span id=\"強さを維持するためには継続的なトレーニングが必要\" class=\"fragment\"></span><a href=\"#%E5%BC%B7%E3%81%95%E3%82%92%E7%B6%AD%E6%8C%81%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AB%E3%81%AF%E7%B6%99%E7%B6%9A%E7%9A%84%E3%81%AA%E3%83%88%E3%83%AC%E3%83%BC%E3%83%8B%E3%83%B3%E3%82%B0%E3%81%8C%E5%BF%85%E8%A6%81\"><i class=\"fa fa-link\"></i></a>強さを維持するためには継続的なトレーニングが必要</h3>\n\n<p>金銭的理由によりゲームセンターから一時期足が遠のいた時期がありました。<br>\nその後、久しぶりに遊んでみると、見えていた相手の技が見えなくなったり、反射的にキャラクターを動かせなくなっていたりしました。<br>\nリハビリ（反復練習）によりある程度回復しましたので続ければ元に戻ることは想像できましたが、金銭的理由もあり引退を決意しました。</p>\n\n<p>実はこれ、プログラムや設計にも同じことが言えるのではないでしょうか？<br>\n「相手の話を聞いてる最中からプログラムや設計が頭に浮かんでいた」が、現場を離れていたらプログラムが浮かばなくなった、あるいは不鮮明になったということはないでしょうか？</p>\n\n<p>SESで仕事されている方におきましては現場で必要なスキルは様々ですが、現場が変わったら一線級のファイターとして戦える必要があります。プログラミングはお金をかけずにできますので、スキルが錆びない様に休日に好きなものを作るなどしてはいかがでしょうか。</p>\n\n<h2>\n<span id=\"課題の設定\" class=\"fragment\"></span><a href=\"#%E8%AA%B2%E9%A1%8C%E3%81%AE%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>課題の設定</h2>\n\n<h3>\n<span id=\"ドラゴンクエスト\" class=\"fragment\"></span><a href=\"#%E3%83%89%E3%83%A9%E3%82%B4%E3%83%B3%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88\"><i class=\"fa fa-link\"></i></a>ドラゴンクエスト</h3>\n\n<p><code>ドラゴンクエスト</code>というゲームをご存知ない方はあまりいないように思います。10本以上もナンバリングタイトルが出ている国民的RPGですので、人によって思い浮かべる内容が異なるかもしれませんね。</p>\n\n<p>ドラゴンクエスト１では、「勇者ロトの子孫となって竜王を倒して光の玉を取り戻して世界を救う」という非常にシンプルかつ壮大な課題を与えられます。</p>\n\n<p>この課題を達成するために、王様にもらった小銭で武器を買ったり、街の人に話しを聞いたり、街の近くにいるスライムなどを狩って経験値を稼いでレベルを上げたりして、少しずつ世界を冒険していきます。<br>\nスライム狩るのに飽きて、さっさと冒険を進めようとすると強いドラゴンが出てきて瞬殺されて、お金の半分を失って教会から再開することになります。</p>\n\n<p>ここには課題解決に関する重要な学びがあります。<br>\n- 適切なサイズの課題<br>\n- 無謀な課題に取り組んだ結果</p>\n\n<h3>\n<span id=\"適切なサイズの課題\" class=\"fragment\"></span><a href=\"#%E9%81%A9%E5%88%87%E3%81%AA%E3%82%B5%E3%82%A4%E3%82%BA%E3%81%AE%E8%AA%B2%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>適切なサイズの課題</h3>\n\n<p>ドラゴンクエスト１の世界には未知の課題しかありませんでした。<br>\nネットも攻略本もなかった時代でプレイヤーは手探りで冒険を進め、その時のレベルや状況に応じて自分にとって「適切なサイズの課題の設定」を行っていたと思います。</p>\n\n<ul>\n<li>街の外を歩いていたら、スライムと出会った</li>\n<li>戦ってみたらお金と経験値がもらえた、体力が減った</li>\n<li>宿屋ややくそうを効率よく使った</li>\n</ul>\n\n<p>実はこれは、ゲームデザインが大変秀逸で、次にすべき課題をあたかもプレイヤー本人が気づいて考えた様に錯覚できるように、竜王を倒すという最終的な課題以外にも「適切なサイズの課題」と「気づき」が細かく用意されていたと思います。</p>\n\n<p>プロジェクトリーダーが、ドラゴンクエストの様にシンプルかつ壮大な課題を用意して、プロジェクトの状況に応じて「適切なサイズの課題」をメンバーが適切に設定できる状況を作れば、無味乾燥なプロジェクトが有意義な体験あふれる人生のRPGに変わるかもしれません。</p>\n\n<h3>\n<span id=\"無謀な課題に取り組んだ結果\" class=\"fragment\"></span><a href=\"#%E7%84%A1%E8%AC%80%E3%81%AA%E8%AA%B2%E9%A1%8C%E3%81%AB%E5%8F%96%E3%82%8A%E7%B5%84%E3%82%93%E3%81%A0%E7%B5%90%E6%9E%9C\"><i class=\"fa fa-link\"></i></a>無謀な課題に取り組んだ結果</h3>\n\n<p>スライムを倒すのがやっとの状態で無謀にもドラゴンに挑んで瞬殺された場合、経験値は入りませんし、お金が半分になって教会から復活しました。</p>\n\n<p>そこで、色々対策を考えたと思います<br>\n- 冒険範囲を広げる前に「ふっかつのじゅもん」をメモしておく<br>\n- 冒険範囲を広げる前にレベルを過剰に上げる<br>\n- 勝てないと思ったらすぐ逃げる</p>\n\n<p>ビジネスの世界でも「現在のレベルでは解決出来ない課題」というのは存在していると思います。<br>\n仕事で目先の仕事が出来ないのは問題ですが、レベルや装備が足りてなければドラゴンは倒せません。<br>\nドラゴンを倒すという課題を、解決可能なサイズの課題に分解してレベルアップして再戦するとよいと思います。</p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>最近、スマホMMOをやったのですが。<br>\n全部オートで便利でしたが、オートを外すと何をやっていいか全く分かりませんでした。<br>\n分かったことと言えば、お金を払うと有利に進むらしいということぐらいです。</p>\n\n<p>最近の集金スマホゲームもある意味「お金の稼ぎ方」は学べるのですが、課題の解決方法を学べる昔のゲームの方が個人的には好きです。</p>\n",
    "body": "## ビデオゲームじゃなくてもよいです\n子供の頃にファミコンが世の中に登場しまして、人生の半分ぐらいはゲームと共に過ごした人生だったので、あとになって振り返って見るとそこから学んだことが多いなと振り返るポエムを書きます。\n\n## 反復すること\n\n### スペランカー\n`スペランカー`というゲームをご存知でしょうか？世界一弱い主人公のクソゲーとして各所で紹介されることも多いプラットフォームゲームです。個人的には名作だと思っています。\n\nとにかく足を踏み外して死ぬのが印象的なゲームです。\n死ぬと復活ポイントから再開となり、３回死ぬとゲームオーバーになるのですが、慣れていないうちは、最初にエレベーターに乗って登場してきてそこから降りるのに失敗して即ゲームオーバーとなりました。\n\nなんて理不尽なゲームなんだろうと思いながら、他にやることもないので何度も遊んでいたら、エレベーターから降りることに失敗することはほとんどなくなりました。\n\nエレベーターから降りるジャンプ操作アクションを成功させるためのポイントは以下です。\n\n- プレイヤーが死ぬ高低差\n- ジャンプボタンでジャンプする距離\n- 足場を踏み外さない様にする精密な操作\n\n最初は、これらのポイントを丁寧に操作する事で実践していたのですが、反復することで無意識に素早く実践できるようになりました。\n\nスペランカーのゲーム中では、動く床やハシゴからのジャンプや、敵に追われている状態でのジャンプなど、『ジャンプ操作』を駆使して解決すべき課題が数多く登場します。\n\n### 学び\nここでの最大の学びは、「反復することによって非線形的にプレイヤースキルは向上する」ということです。『ジャンプ操作』という単純な基本操作を反復により習得することによって、解決できる課題が増えたということです。\n\nプログラミングでは、入門書を読むと、変数や配列、連続、分岐、繰り返し、などの基本的な文法と、クラスやオブジェクトといった概念が登場すると思います。\n\nスペランカーと異なり、下手くそなコードを書いてもその場で死なず、下手くそなコードでも課題解決できる可能性はありますが、大きく複雑な課題を解決できなくてお悩みの方も多いと思います。\n\n基本は反復です。退屈だし、成長を実感できないかもしれませんが、自分が課題と思う点について、コードを読んだり写経したりを地道に繰り返していると、いつの間にか少し大きな課題を解決できるようになるはずです。\n\n\n## 人と対峙すること・スキルを維持すること\n### バーチャファイター\n`バーチャファイター`というゲームをご存知でしょうか？パンチ・キック・ガードボタンとレバーの組合わせで多様な技を繰り出すキャラクターを操作して、コンピュータまたは人と対戦する対戦格闘ゲームです。\n\n上手い人と対戦すると30秒程度で敗北し、お金がとんでもない勢いでなくなっていたので、お金を持ち歩かないようにしていた時期もありました。\n\nここでの学びは大きく２つあります。\n- 相手を理解する事で勝率が上がる\n- 強さを維持するためには継続的なトレーニングが必要\n\n### 相手を理解する事で勝率が上がる\n最初は自分の好きなキャラクターを選んで操作方法を覚えるところから始まりますが、勝てないキャラクターがいた場合には、そのキャラクターの技を覚えたり、さらには、ゲーム機の向こう側にいる人間の「クセ」なども考えて対策を考えます。\n\n好きでもないキャラクターのことや、顔も見たことのない人のクセを考えるのは大変ですが、勝つためには仕方ありません。\n\nところでこれは、ビジネスの世界でも同じだったりしないでしょうか？\nお客様、上司、同僚、部下、相手のことを覚えた方がより円滑な仕事ができると思いませんか？\n\n### 強さを維持するためには継続的なトレーニングが必要\n金銭的理由によりゲームセンターから一時期足が遠のいた時期がありました。\nその後、久しぶりに遊んでみると、見えていた相手の技が見えなくなったり、反射的にキャラクターを動かせなくなっていたりしました。\nリハビリ（反復練習）によりある程度回復しましたので続ければ元に戻ることは想像できましたが、金銭的理由もあり引退を決意しました。\n\n実はこれ、プログラムや設計にも同じことが言えるのではないでしょうか？\n「相手の話を聞いてる最中からプログラムや設計が頭に浮かんでいた」が、現場を離れていたらプログラムが浮かばなくなった、あるいは不鮮明になったということはないでしょうか？\n\nSESで仕事されている方におきましては現場で必要なスキルは様々ですが、現場が変わったら一線級のファイターとして戦える必要があります。プログラミングはお金をかけずにできますので、スキルが錆びない様に休日に好きなものを作るなどしてはいかがでしょうか。\n\n\n## 課題の設定\n### ドラゴンクエスト\n`ドラゴンクエスト`というゲームをご存知ない方はあまりいないように思います。10本以上もナンバリングタイトルが出ている国民的RPGですので、人によって思い浮かべる内容が異なるかもしれませんね。\n\nドラゴンクエスト１では、「勇者ロトの子孫となって竜王を倒して光の玉を取り戻して世界を救う」という非常にシンプルかつ壮大な課題を与えられます。\n\nこの課題を達成するために、王様にもらった小銭で武器を買ったり、街の人に話しを聞いたり、街の近くにいるスライムなどを狩って経験値を稼いでレベルを上げたりして、少しずつ世界を冒険していきます。\nスライム狩るのに飽きて、さっさと冒険を進めようとすると強いドラゴンが出てきて瞬殺されて、お金の半分を失って教会から再開することになります。\n\nここには課題解決に関する重要な学びがあります。\n- 適切なサイズの課題\n- 無謀な課題に取り組んだ結果\n\n### 適切なサイズの課題\nドラゴンクエスト１の世界には未知の課題しかありませんでした。\nネットも攻略本もなかった時代でプレイヤーは手探りで冒険を進め、その時のレベルや状況に応じて自分にとって「適切なサイズの課題の設定」を行っていたと思います。\n\n- 街の外を歩いていたら、スライムと出会った\n- 戦ってみたらお金と経験値がもらえた、体力が減った\n- 宿屋ややくそうを効率よく使った\n\n実はこれは、ゲームデザインが大変秀逸で、次にすべき課題をあたかもプレイヤー本人が気づいて考えた様に錯覚できるように、竜王を倒すという最終的な課題以外にも「適切なサイズの課題」と「気づき」が細かく用意されていたと思います。\n\nプロジェクトリーダーが、ドラゴンクエストの様にシンプルかつ壮大な課題を用意して、プロジェクトの状況に応じて「適切なサイズの課題」をメンバーが適切に設定できる状況を作れば、無味乾燥なプロジェクトが有意義な体験あふれる人生のRPGに変わるかもしれません。\n\n### 無謀な課題に取り組んだ結果\nスライムを倒すのがやっとの状態で無謀にもドラゴンに挑んで瞬殺された場合、経験値は入りませんし、お金が半分になって教会から復活しました。\n\nそこで、色々対策を考えたと思います\n- 冒険範囲を広げる前に「ふっかつのじゅもん」をメモしておく\n- 冒険範囲を広げる前にレベルを過剰に上げる\n- 勝てないと思ったらすぐ逃げる\n\nビジネスの世界でも「現在のレベルでは解決出来ない課題」というのは存在していると思います。\n仕事で目先の仕事が出来ないのは問題ですが、レベルや装備が足りてなければドラゴンは倒せません。\nドラゴンを倒すという課題を、解決可能なサイズの課題に分解してレベルアップして再戦するとよいと思います。\n\n\n## まとめ\n最近、スマホMMOをやったのですが。\n全部オートで便利でしたが、オートを外すと何をやっていいか全く分かりませんでした。\n分かったことと言えば、お金を払うと有利に進むらしいということぐらいです。\n\n最近の集金スマホゲームもある意味「お金の稼ぎ方」は学べるのですが、課題の解決方法を学べる昔のゲームの方が個人的には好きです。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-10-09T17:00:11+09:00",
    "group": null,
    "id": "0496501dd2aa53958000",
    "likes_count": 33,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 12,
    "tags": [
      {
        "name": "初心者",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "教育",
        "versions": []
      }
    ],
    "title": "人生に必要な知恵はすべてビデオゲームから学んだ",
    "updated_at": "2021-10-09T17:00:11+09:00",
    "url": "https://qiita.com/kaku3/items/0496501dd2aa53958000",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 8659,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>テレワークしてますか？<br>\nMTGもリモートで実施されるようになり、ホワイトボードを使えなくてお困りではないですか？</p>\n\n<p>ということで、ホワイトボードツールに関する考察を書きます。</p>\n\n<h2>\n<span id=\"ホワイトボード\" class=\"fragment\"></span><a href=\"#%E3%83%9B%E3%83%AF%E3%82%A4%E3%83%88%E3%83%9C%E3%83%BC%E3%83%89\"><i class=\"fa fa-link\"></i></a>ホワイトボード</h2>\n\n<p>ホワイトボードに期待される機能は「フリーハンドで図や文字が書ける」かと思います。<br>\nそれであれば、以下のツールを画面共有することでホワイトボードの代用になりそうです。</p>\n\n<ul>\n<li><p>Google スライド<br>\nパワポっぽい操作感で図や文字を共同編集可能。</p></li>\n<li><p><a href=\"https://app.diagrams.net/\" rel=\"nofollow noopener\" target=\"_blank\">Draw.io</a><br>\nステンシルが豊富。パワポより細かい図形描画が簡単にできる。<br>\nVS Code の Extension も存在。</p></li>\n<li><p><a href=\"https://plantuml.com/ja/\" rel=\"nofollow noopener\" target=\"_blank\">PlantUML</a><br>\nシーケンス図などは、手描きするより速く書ける。</p></li>\n<li><p><a href=\"https://drive.mindmup.com/\" rel=\"nofollow noopener\" target=\"_blank\">MindMup 2</a><br>\nブレスト用。ツリーを描くのは簡単だがそれ意外のモノを描くのは大変。</p></li>\n</ul>\n\n<p>ただ個人的には、そもそも<strong>ホワイトボードを使った会議には致命的な問題点</strong>があると思っているのでその点について触れたいと思います。</p>\n\n<h2>\n<span id=\"ホワイトボード会議の致命的な問題点\" class=\"fragment\"></span><a href=\"#%E3%83%9B%E3%83%AF%E3%82%A4%E3%83%88%E3%83%9C%E3%83%BC%E3%83%89%E4%BC%9A%E8%AD%B0%E3%81%AE%E8%87%B4%E5%91%BD%E7%9A%84%E3%81%AA%E5%95%8F%E9%A1%8C%E7%82%B9\"><i class=\"fa fa-link\"></i></a>ホワイトボード会議の致命的な問題点</h2>\n\n<p>こんな経験はありませんか？</p>\n\n<ul>\n<li>ホワイトボードになぐり書きして白熱の議論となった</li>\n<li>これだけ喋れば伝わっただろうという達成感に満ち溢れた</li>\n<li>会議終了時にホワイトボードはきれいに消された</li>\n<li>同時に記憶からも記録からも消された</li>\n<li>写真に撮っておいても無駄だった</li>\n<li>なぐり書きのメモの写真を見返しても何も思い出せなかった</li>\n<li>実際には何も伝わってなかった</li>\n<li>後日同じ様な事を別の人に聞かれて同じ図をホワイトボードに描く事になった</li>\n</ul>\n\n<p>そもそも<strong>記録力ゼロの媒体に対して記憶しておくべき重要な情報を書き込む</strong>ことって徹底的に無駄じゃないですか？</p>\n\n<h2>\n<span id=\"暫定一位ホワイトボードツール\" class=\"fragment\"></span><a href=\"#%E6%9A%AB%E5%AE%9A%E4%B8%80%E4%BD%8D%E3%83%9B%E3%83%AF%E3%82%A4%E3%83%88%E3%83%9C%E3%83%BC%E3%83%89%E3%83%84%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>暫定一位ホワイトボードツール</h2>\n\n<p>この問題点を解決するホワイトボードツール暫定一位は <strong>『エクセル方眼紙』</strong> だと思います。<br>\n図形描画より共同編集の方がウェイトが高い場合は <strong>『スプレッドシート方眼紙』</strong> を利用します。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>『ホワイトボードに期待される機能は「フリーハンドで図や文字が書ける」かと思う。』\n</code></pre></div></div>\n\n<p>上でホワイトボードに対する要件を述べましたが、もう少し整理すると、二次元の平面に対して文字や図を書ければよいという事に気がつきます。</p>\n\n<p>ホワイトボードに自由に二次元で書かれた情報や散漫に会議で議論された内容とは別で、ワードやメモ帳やエバーノートで時間軸に沿って一次元の記録として議事録を残すのが一般的な会議の形式となっています。<br>\nしかし、もしもホワイトボードに書かれた情報が重要な情報なのであれば、その情報が書かれていない議事録は何の意味も持たないということになります。<br>\n結局のところ、本当に必要な記録というのは <strong>『一次元のメモと、ホワイトボードの記憶または写真を元に情報を再整理した何か』</strong> で、再整理するにはMTGと同程度またはそれ以上の時間が必要になりますが、誰がいつ見るかも分からない議事録にそのような工数をかけることもできないというジレンマがあります。</p>\n\n<p>それであれば、例えば仕様MTGであれば、エクセル方眼紙を画面共有してそのまま仕様書として使える様な２次元のメモ、要件定義MTGであれば、要件定義書として使える２次元メモ、を書けばいいのではないでしょうか？</p>\n\n<p>仕様書に書いてしまってその場で合意が取れれば、後から言った言わないで後から議事録をたどる必要もないのではないでしょうか？</p>\n\n<p>エクセル方眼紙以外（部分的には draw.io,PlantUMLでも可）には、そのまま工程のアウトプットにできるツールは存在していないと思うので今の所暫定一位はエクセル方眼紙としました。</p>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>昨今、DXで効率化とよく言われますが、DXで本当に解決すべき課題は何かをきちんと見据えた上でツール選定うべきだと思います。</p>\n\n<p>20年以上前に、<strong>MTGのたびに言うことが変わるクライアント様の案件</strong>をやった時に <strong>『エクセル方眼紙議事録兼仕様書』</strong> は生まれました。議事内容を仕様書に書き直しているその瞬間にもクライアント様の考えは変わっていたのです。<br>\n流行ってるからDXで効率化したかったのではなく、DXでワークフローを変えないと仕事にならなかったので『エクセル方眼紙議事録兼仕様書』を作成しました。</p>\n\n<p>何かの価値を製造するという共通のゴールに向かうためにMTGや議事録や仕様書は存在しているとは思いますが、わたし達は『MTGをしたり』、『議事録を取ったり確認したり』あるいは『仕様書を書くため』に仕事をしているわけではないですよね？</p>\n",
    "body": "## はじめに\n\nテレワークしてますか？\nMTGもリモートで実施されるようになり、ホワイトボードを使えなくてお困りではないですか？\n\nということで、ホワイトボードツールに関する考察を書きます。\n\n\n## ホワイトボード\n\nホワイトボードに期待される機能は「フリーハンドで図や文字が書ける」かと思います。\nそれであれば、以下のツールを画面共有することでホワイトボードの代用になりそうです。\n\n- Google スライド\nパワポっぽい操作感で図や文字を共同編集可能。\n\n- [Draw.io](https://app.diagrams.net/)\nステンシルが豊富。パワポより細かい図形描画が簡単にできる。\nVS Code の Extension も存在。\n\n- [PlantUML](https://plantuml.com/ja/)\nシーケンス図などは、手描きするより速く書ける。\n\n- [MindMup 2](https://drive.mindmup.com/)\nブレスト用。ツリーを描くのは簡単だがそれ意外のモノを描くのは大変。\n\nただ個人的には、そもそも**ホワイトボードを使った会議には致命的な問題点**があると思っているのでその点について触れたいと思います。\n\n\n## ホワイトボード会議の致命的な問題点\n\nこんな経験はありませんか？\n\n- ホワイトボードになぐり書きして白熱の議論となった\n- これだけ喋れば伝わっただろうという達成感に満ち溢れた\n- 会議終了時にホワイトボードはきれいに消された\n- 同時に記憶からも記録からも消された\n- 写真に撮っておいても無駄だった\n- なぐり書きのメモの写真を見返しても何も思い出せなかった\n- 実際には何も伝わってなかった\n- 後日同じ様な事を別の人に聞かれて同じ図をホワイトボードに描く事になった\n\nそもそも**記録力ゼロの媒体に対して記憶しておくべき重要な情報を書き込む**ことって徹底的に無駄じゃないですか？\n\n\n## 暫定一位ホワイトボードツール\n\nこの問題点を解決するホワイトボードツール暫定一位は **『エクセル方眼紙』** だと思います。\n図形描画より共同編集の方がウェイトが高い場合は **『スプレッドシート方眼紙』** を利用します。\n\n```\n『ホワイトボードに期待される機能は「フリーハンドで図や文字が書ける」かと思う。』\n```\n\n上でホワイトボードに対する要件を述べましたが、もう少し整理すると、二次元の平面に対して文字や図を書ければよいという事に気がつきます。\n\nホワイトボードに自由に二次元で書かれた情報や散漫に会議で議論された内容とは別で、ワードやメモ帳やエバーノートで時間軸に沿って一次元の記録として議事録を残すのが一般的な会議の形式となっています。\nしかし、もしもホワイトボードに書かれた情報が重要な情報なのであれば、その情報が書かれていない議事録は何の意味も持たないということになります。\n結局のところ、本当に必要な記録というのは **『一次元のメモと、ホワイトボードの記憶または写真を元に情報を再整理した何か』** で、再整理するにはMTGと同程度またはそれ以上の時間が必要になりますが、誰がいつ見るかも分からない議事録にそのような工数をかけることもできないというジレンマがあります。\n\nそれであれば、例えば仕様MTGであれば、エクセル方眼紙を画面共有してそのまま仕様書として使える様な２次元のメモ、要件定義MTGであれば、要件定義書として使える２次元メモ、を書けばいいのではないでしょうか？\n\n仕様書に書いてしまってその場で合意が取れれば、後から言った言わないで後から議事録をたどる必要もないのではないでしょうか？\n\nエクセル方眼紙以外（部分的には draw.io,PlantUMLでも可）には、そのまま工程のアウトプットにできるツールは存在していないと思うので今の所暫定一位はエクセル方眼紙としました。\n\n\n## おわりに\n\n昨今、DXで効率化とよく言われますが、DXで本当に解決すべき課題は何かをきちんと見据えた上でツール選定うべきだと思います。\n\n20年以上前に、**MTGのたびに言うことが変わるクライアント様の案件**をやった時に **『エクセル方眼紙議事録兼仕様書』** は生まれました。議事内容を仕様書に書き直しているその瞬間にもクライアント様の考えは変わっていたのです。\n流行ってるからDXで効率化したかったのではなく、DXでワークフローを変えないと仕事にならなかったので『エクセル方眼紙議事録兼仕様書』を作成しました。\n\n何かの価値を製造するという共通のゴールに向かうためにMTGや議事録や仕様書は存在しているとは思いますが、わたし達は『MTGをしたり』、『議事録を取ったり確認したり』あるいは『仕様書を書くため』に仕事をしているわけではないですよね？\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-07-03T17:06:48+09:00",
    "group": null,
    "id": "f288e8abc125fc326e63",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "ホワイトボード",
        "versions": []
      },
      {
        "name": "業務効率化",
        "versions": []
      },
      {
        "name": "テレワーク",
        "versions": []
      },
      {
        "name": "エクセル方眼紙",
        "versions": []
      }
    ],
    "title": "テレワークと暫定一位ホワイトボードツールとDX",
    "updated_at": "2021-07-04T20:41:38+09:00",
    "url": "https://qiita.com/kaku3/items/f288e8abc125fc326e63",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1503,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"ありがとう-or-よくやった-or-よかったね\" class=\"fragment\"></span><a href=\"#%E3%81%82%E3%82%8A%E3%81%8C%E3%81%A8%E3%81%86-or-%E3%82%88%E3%81%8F%E3%82%84%E3%81%A3%E3%81%9F-or-%E3%82%88%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%AD\"><i class=\"fa fa-link\"></i></a>ありがとう or よくやった or よかったね</h2>\n\n<p>まだわたしが駆け出しのPMの頃、いやむしろガンガンにプログラムを書きたかったのに無理やりPMもやらされていた頃。小さな会社で他にやる人もおらず仕方なくやっていたのだけれども、あまり感謝を口にされたことはありませんでした。お金もあんまりもらえたことはありませんでした。</p>\n\n<p>その当時、大炎上でどうしょうもないプロジェクトをまとめました。<br>\nその時に言われたのは <strong>「ありがとう」</strong> でも <strong>「よくやった」</strong> でもなく <strong>「よかったね」</strong> でした。<br>\n薄っすらと不満を持ちつつも成果を噛み締めていたのですが、振り返ってみると、これはサーバントリーダーシップみたいなことを体現されてたんだなぁと、折に触れて考えさせられてることを記事にしました。</p>\n\n<h2>\n<span id=\"誰のために働くの\" class=\"fragment\"></span><a href=\"#%E8%AA%B0%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AB%E5%83%8D%E3%81%8F%E3%81%AE\"><i class=\"fa fa-link\"></i></a>誰のために働くの？</h2>\n\n<p>当時のわたしは、炎上しているプロジェクトをまとめるのは「会社のため」だと思っていたので、薄っすらと不満を持ったわけですが、そうではないという示唆に富んだセリフが <strong>「よかったね」</strong> だったと思います。</p>\n\n<p>そもそも日頃から <strong>『会社のため』</strong> と思って働いている人はそんなにいないと思います。<br>\n<strong>『お時給の分はしっかり働きます』</strong> という品格のある想いの方が多いかは分かりませんが、お時給の分働いていない方は正社員として定年まで勤め上げるのは難しい世の中なのかなとは想います。</p>\n\n<p>大炎上したプロジェクトが納品までこぎつけなかった場合、プロジェクトチームのメンバーが苦労して積み上げた物が無に帰します。数ヶ月～数年の間、わたしだけではなくプロジェクトメンバー全員がお時給の分働かなかったことになります。</p>\n\n<p>「会社のため」というと社畜っぽく聞こえますが「同じプロジェクトのメンバーのため」と言うと随分印象が違います。結果は同じなのですが、不思議ですね。<br>\nさらには「大炎上しているプロジェクトをまとめる能力」を身につける事はPMとしては必要な能力であり、それを身につけるために働いたと考えると「自分のため」に働いたとも言えます。<br>\nですが、自分のキャリアパスとして興味ないことを「自分のため」と自発的に自覚して努力するのは相当難しいものです。</p>\n\n<p>これを <strong>「おまえのためだからやれ」</strong> などと直接的に言われても <strong>「は？仰る意味が分かりません」</strong> という話になって大乱闘なブラザーになります。</p>\n\n<h2>\n<span id=\"任せるということ\" class=\"fragment\"></span><a href=\"#%E4%BB%BB%E3%81%9B%E3%82%8B%E3%81%A8%E3%81%84%E3%81%86%E3%81%93%E3%81%A8\"><i class=\"fa fa-link\"></i></a>任せるということ</h2>\n\n<p>駆け出しPMのわたしが大炎上しているプロジェクトを確実にまとめられる保証があったかというと、そんなものはどこにもなかったわけですが、わたしに任せるというのは勇気のいる決断だったのかなと、今にしてみると思います。</p>\n\n<p>プチ炎上させる度に、報連相や見積もりについて指導を頂くことはありましたが、任されている仕事に対して手出しをされたことはなかったと思います。</p>\n\n<p>プロジェクト中に盛大にやらかした事があり、菓子折り持ってお客先に一緒に謝りに行って頂きましたが、この時も無駄に叱責される事もありませんでした。<br>\n叱責された方が楽だよなぁと普通に思いましたが、大変反省しました。</p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>感謝の気持ちは伝えるべきだし「ありがとう」が溢れるプロジェクトは良いプロジェクトだと思います。</p>\n\n<p>ただ、きちんと仕事を任せて、任せた相手の成果と成長を評価する「よかったね」。<br>\nこのケースでは「よくやった」や「ありがとう」は、相手の成果や成長を小さなモノになってしまうのではないかと思いました。</p>\n\n<p>ということで、ありがとうございました。</p>\n",
    "body": "## ありがとう or よくやった or よかったね\n\nまだわたしが駆け出しのPMの頃、いやむしろガンガンにプログラムを書きたかったのに無理やりPMもやらされていた頃。小さな会社で他にやる人もおらず仕方なくやっていたのだけれども、あまり感謝を口にされたことはありませんでした。お金もあんまりもらえたことはありませんでした。\n\nその当時、大炎上でどうしょうもないプロジェクトをまとめました。\nその時に言われたのは **「ありがとう」** でも **「よくやった」** でもなく **「よかったね」** でした。\n薄っすらと不満を持ちつつも成果を噛み締めていたのですが、振り返ってみると、これはサーバントリーダーシップみたいなことを体現されてたんだなぁと、折に触れて考えさせられてることを記事にしました。\n\n\n## 誰のために働くの？\n\n当時のわたしは、炎上しているプロジェクトをまとめるのは「会社のため」だと思っていたので、薄っすらと不満を持ったわけですが、そうではないという示唆に富んだセリフが **「よかったね」** だったと思います。\n\nそもそも日頃から **『会社のため』** と思って働いている人はそんなにいないと思います。\n**『お時給の分はしっかり働きます』** という品格のある想いの方が多いかは分かりませんが、お時給の分働いていない方は正社員として定年まで勤め上げるのは難しい世の中なのかなとは想います。\n\n大炎上したプロジェクトが納品までこぎつけなかった場合、プロジェクトチームのメンバーが苦労して積み上げた物が無に帰します。数ヶ月～数年の間、わたしだけではなくプロジェクトメンバー全員がお時給の分働かなかったことになります。\n\n「会社のため」というと社畜っぽく聞こえますが「同じプロジェクトのメンバーのため」と言うと随分印象が違います。結果は同じなのですが、不思議ですね。\nさらには「大炎上しているプロジェクトをまとめる能力」を身につける事はPMとしては必要な能力であり、それを身につけるために働いたと考えると「自分のため」に働いたとも言えます。\nですが、自分のキャリアパスとして興味ないことを「自分のため」と自発的に自覚して努力するのは相当難しいものです。\n\nこれを **「おまえのためだからやれ」** などと直接的に言われても **「は？仰る意味が分かりません」** という話になって大乱闘なブラザーになります。\n\n\n## 任せるということ\n\n駆け出しPMのわたしが大炎上しているプロジェクトを確実にまとめられる保証があったかというと、そんなものはどこにもなかったわけですが、わたしに任せるというのは勇気のいる決断だったのかなと、今にしてみると思います。\n\nプチ炎上させる度に、報連相や見積もりについて指導を頂くことはありましたが、任されている仕事に対して手出しをされたことはなかったと思います。\n\nプロジェクト中に盛大にやらかした事があり、菓子折り持ってお客先に一緒に謝りに行って頂きましたが、この時も無駄に叱責される事もありませんでした。\n叱責された方が楽だよなぁと普通に思いましたが、大変反省しました。\n\n\n## まとめ\n\n感謝の気持ちは伝えるべきだし「ありがとう」が溢れるプロジェクトは良いプロジェクトだと思います。\n\nただ、きちんと仕事を任せて、任せた相手の成果と成長を評価する「よかったね」。\nこのケースでは「よくやった」や「ありがとう」は、相手の成果や成長を小さなモノになってしまうのではないかと思いました。\n\nということで、ありがとうございました。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-06-26T15:48:12+09:00",
    "group": null,
    "id": "f230afc2e5da2c605edd",
    "likes_count": 16,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 9,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "マネジメント",
        "versions": []
      }
    ],
    "title": "意外と難しい「ありがとう」とサーバントリーダーシップ",
    "updated_at": "2021-06-26T16:00:28+09:00",
    "url": "https://qiita.com/kaku3/items/f230afc2e5da2c605edd",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 3952,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"受託開発の構造的問題\" class=\"fragment\"></span><a href=\"#%E5%8F%97%E8%A8%97%E9%96%8B%E7%99%BA%E3%81%AE%E6%A7%8B%E9%80%A0%E7%9A%84%E5%95%8F%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>受託開発の構造的問題</h2>\n\n<p>受託開発とは、お客様より製品の開発を請け負い対価を頂く開発形態です。<br>\n多くの場合、サービスの開発に対する予算が決まっていて、その予算内に収まる様に開発を行う事がPMの仕事となります。</p>\n\n<p>IT業界では古くから人月という単位で開発コストを扱う風習があります。<br>\n一人の人間を一月動かすのにいくらかかる。このぐらいの開発規模だと何人必要という考え方です。</p>\n\n<p>多くの異論はあるもののこれに変わる考え方は未だ見つかっていない状況です。</p>\n\n<p>さらに困ったことに、わたし達はは１年に１度年を取ります。<br>\n年を取ると、給与はベースアップして欲しいものですが、開発力は案件力によってオーバースペックになったり、加齢とともに下がったりします。</p>\n\n<p>人月ベースの考え方では、同一プロジェクトメンバーで同様のサービス開発を続けていた場合、どこかでコストが予算を上回ってしまい開発を継続できないという問題が発生します。</p>\n\n<h2>\n<span id=\"プロジェクトの錬金術\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E9%8C%AC%E9%87%91%E8%A1%93\"><i class=\"fa fa-link\"></i></a>プロジェクトの錬金術？</h2>\n\n<p>わたし達はその様な問題が起きても事業を継続するために開発コストを下げなければなりません。<br>\n開発のコストを下げる戦略は以下かと思います。</p>\n\n<ol>\n<li>\n<p>類似する開発を受託する</p>\n\n<ul>\n<li>コードの流用などで開発コストを下げる</li>\n<li>ただし、類似製品は商品力が弱いため、予算も大幅に下るリスクがある</li>\n</ul>\n</li>\n<li>\n<p>新しい技術を取り入れる</p>\n\n<ul>\n<li>（学習コスト &lt; 従来の開発コスト）となるような技術を採用する</li>\n<li>枯れてない技術を採用するリスクは高い</li>\n<li>大規模案件では人員を集める難易度が上がる</li>\n</ul>\n</li>\n<li>\n<p>単価の安い若いスタッフを正しく教育する</p>\n\n<ul>\n<li>あるべき姿</li>\n<li>昔は大規模案件が多かったのでやりやすかった</li>\n<li>短期・低予算案件では教育が難しい</li>\n</ul>\n</li>\n</ol>\n\n<p>さて、どの戦略が錬金術でしょうか。</p>\n\n<p><code>1</code>は焼き畑なので違いますね。<br>\n<code>2</code>は悪くないですが、丁度よい技術が存在するか、丁度よい技術を選択できるか、といった外的要因に大きく依存するし、そのプロジェクト限りでサスティナブルな戦略ではないですね。</p>\n\n<p>では、<code>3</code>はどうでしょうか。</p>\n\n<p>人月単位で線表を引く業界で新人を入れたプロジェクトのマネジメントは難易度が高いです。<br>\nしかし、実質0人月の新人をきちんと育て、0.2人月のアウトプットを出せるまでに成長させたとしたら、自分が何もしなくても毎月0.2人月稼いでくれる人が一人できます。また、0.2人月のアウトプットを出せるまでに成長した新人は、独学で成長した人間と違い、更なる若手を育ててくれます。<br>\nこの活動は、コストを下げる活動と言うよりむしろ<strong>錬金術</strong>と言えるでしょう。</p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>PMが実践すべきは<code>3</code>。単価の安い若いスタッフを正しく教育することかと思います。<br>\n※当然<code>1</code>、<code>2</code>も実施可能であれば実施した方がよいです。</p>\n\n<p>毎年斬新なWebサービスがリリースされわたし達の「普通」は更新されます。<br>\n今あるものは新しく作る必要がなく、全く新しいものか、既存のものに機能追加したものを作る必要があり、顧客の要求仕様は肥大化し続けます。</p>\n\n<p>一方で、個人差はありつつもある年齢から加齢とともに開発力は落ちます。<br>\n若手を育てることを放棄するのは緩やかな衰退を意味します。</p>\n\n<p>目先の納期や予算にとらわれ育成に対する時間やコストが捻出できないことが多いかと思いますが、サスティナブルな組織を目指して活動していきましょう。</p>\n",
    "body": "## 受託開発の構造的問題\n\n受託開発とは、お客様より製品の開発を請け負い対価を頂く開発形態です。\n多くの場合、サービスの開発に対する予算が決まっていて、その予算内に収まる様に開発を行う事がPMの仕事となります。\n\nIT業界では古くから人月という単位で開発コストを扱う風習があります。\n一人の人間を一月動かすのにいくらかかる。このぐらいの開発規模だと何人必要という考え方です。\n\n多くの異論はあるもののこれに変わる考え方は未だ見つかっていない状況です。\n\nさらに困ったことに、わたし達はは１年に１度年を取ります。\n年を取ると、給与はベースアップして欲しいものですが、開発力は案件力によってオーバースペックになったり、加齢とともに下がったりします。\n\n人月ベースの考え方では、同一プロジェクトメンバーで同様のサービス開発を続けていた場合、どこかでコストが予算を上回ってしまい開発を継続できないという問題が発生します。\n\n\n## プロジェクトの錬金術？\n\nわたし達はその様な問題が起きても事業を継続するために開発コストを下げなければなりません。\n開発のコストを下げる戦略は以下かと思います。\n\n1. 類似する開発を受託する\n    - コードの流用などで開発コストを下げる\n    - ただし、類似製品は商品力が弱いため、予算も大幅に下るリスクがある\n\n2. 新しい技術を取り入れる\n    - （学習コスト < 従来の開発コスト）となるような技術を採用する\n    - 枯れてない技術を採用するリスクは高い\n    - 大規模案件では人員を集める難易度が上がる\n\n3. 単価の安い若いスタッフを正しく教育する\n    - あるべき姿\n    - 昔は大規模案件が多かったのでやりやすかった\n    - 短期・低予算案件では教育が難しい\n\nさて、どの戦略が錬金術でしょうか。\n\n`1`は焼き畑なので違いますね。\n`2`は悪くないですが、丁度よい技術が存在するか、丁度よい技術を選択できるか、といった外的要因に大きく依存するし、そのプロジェクト限りでサスティナブルな戦略ではないですね。\n\nでは、`3`はどうでしょうか。\n\n人月単位で線表を引く業界で新人を入れたプロジェクトのマネジメントは難易度が高いです。\nしかし、実質0人月の新人をきちんと育て、0.2人月のアウトプットを出せるまでに成長させたとしたら、自分が何もしなくても毎月0.2人月稼いでくれる人が一人できます。また、0.2人月のアウトプットを出せるまでに成長した新人は、独学で成長した人間と違い、更なる若手を育ててくれます。\nこの活動は、コストを下げる活動と言うよりむしろ**錬金術**と言えるでしょう。\n\n\n## まとめ\n\nPMが実践すべきは`3`。単価の安い若いスタッフを正しく教育することかと思います。\n※当然`1`、`2`も実施可能であれば実施した方がよいです。\n\n毎年斬新なWebサービスがリリースされわたし達の「普通」は更新されます。\n今あるものは新しく作る必要がなく、全く新しいものか、既存のものに機能追加したものを作る必要があり、顧客の要求仕様は肥大化し続けます。\n\n一方で、個人差はありつつもある年齢から加齢とともに開発力は落ちます。\n若手を育てることを放棄するのは緩やかな衰退を意味します。\n\n目先の納期や予算にとらわれ育成に対する時間やコストが捻出できないことが多いかと思いますが、サスティナブルな組織を目指して活動していきましょう。\n\n\n\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-06-19T18:14:00+09:00",
    "group": null,
    "id": "b581054ed67c1aa11b0b",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "マネジメント",
        "versions": []
      }
    ],
    "title": "プロジェクトの錬金術師",
    "updated_at": "2021-06-19T18:15:31+09:00",
    "url": "https://qiita.com/kaku3/items/b581054ed67c1aa11b0b",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2024,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"愚者は経験に学び賢者は歴史に学ぶ\" class=\"fragment\"></span><a href=\"#%E6%84%9A%E8%80%85%E3%81%AF%E7%B5%8C%E9%A8%93%E3%81%AB%E5%AD%A6%E3%81%B3%E8%B3%A2%E8%80%85%E3%81%AF%E6%AD%B4%E5%8F%B2%E3%81%AB%E5%AD%A6%E3%81%B6\"><i class=\"fa fa-link\"></i></a>愚者は経験に学び、賢者は歴史に学ぶ</h2>\n\n<p>どうも愚者です。</p>\n\n<p>掲題は、ビスマルク氏が「人の振り見て我が振り直せ」を最高にカッコよく言った歴史上の名言ですね。<br>\n一人の人間に経験できることには限りがあるし、痛みも伴わないし歴史から学ぶのはスマートにも思えます。</p>\n\n<p>ということで賢者と愚者を題材にマネジメントについて雑多に書きたいと思います。</p>\n\n<h2>\n<span id=\"賢者チェック\" class=\"fragment\"></span><a href=\"#%E8%B3%A2%E8%80%85%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF\"><i class=\"fa fa-link\"></i></a>賢者チェック</h2>\n\n<p>以下の様な追加開発案件があったとします。</p>\n\n<p><strong>『A機能に類似した機能を持つB機能を作ってください』</strong></p>\n\n<p>あなたは、どの様に取り組みますか？</p>\n\n<p>a. A機能のソースをコピペ<br>\nb. A機能のソースを理解する<br>\nc. A機能に関連する機能のソースを理解する<br>\nd. ソース全体を理解する<br>\ne. 使ってるライブラリも一通り理解する<br>\nf. 変更部分仕様書を読む/理解する<br>\ng. 仕様書全体を読む/理解する</p>\n\n<p>こうして見ると、『A機能のソースをコピペしてビルドを通してエラーが出なくなるようにして、言われた機能を追加する』のは愚者の行為であり、何も学んでいないという事が分かります。</p>\n\n<p>ITの仕事には納期があるので当然最短ルートを選択するのは理解に苦しくないですが、長いIT人生を見た時に本当に最短ルートか一考してみるのもおもしろいかもしれません。</p>\n\n<h2>\n<span id=\"人の振り見るだけで我が振り直せるの\" class=\"fragment\"></span><a href=\"#%E4%BA%BA%E3%81%AE%E6%8C%AF%E3%82%8A%E8%A6%8B%E3%82%8B%E3%81%A0%E3%81%91%E3%81%A7%E6%88%91%E3%81%8C%E6%8C%AF%E3%82%8A%E7%9B%B4%E3%81%9B%E3%82%8B%E3%81%AE\"><i class=\"fa fa-link\"></i></a>人の振り見るだけで我が振り直せるの？</h2>\n\n<p>何かを見て理解するためには <strong>基本的な知識量と知覚力</strong> が必要です。<br>\nまた、それを自分で使いこなしてアウトプットするためには <strong>反復練習(=経験)</strong> が必要です。</p>\n\n<p>先の例では、移植元ソースを自分で書けるだけのスキルがない場合、単にコピペするだけではなく、写経したり、似た様な機能を考えてA機能を参考にしながら１から作るなどの反復演習をしないと自分でアウトプットできるようにならないと思います。</p>\n\n<p>写経や反復演習は「経験」に属すると思いますが、これは愚直にやるしかないです。<br>\n愚直に続けて、基本的な知識量と知覚力が上がってくれば、ショートカットできるようになり賢者に近づけます。</p>\n\n<h2>\n<span id=\"対人スキルは歴史から習得できない\" class=\"fragment\"></span><a href=\"#%E5%AF%BE%E4%BA%BA%E3%82%B9%E3%82%AD%E3%83%AB%E3%81%AF%E6%AD%B4%E5%8F%B2%E3%81%8B%E3%82%89%E7%BF%92%E5%BE%97%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>対人スキルは歴史から習得できない</h2>\n\n<p>部下のマネジメントには1on1が有効、などの手法は書籍から <strong>知識として</strong> 学ぶことはできる。<br>\n1on1で何をしゃべったらいいの、というのも <strong>知識として</strong> 学ぶことはできるだろう。<br>\nしかし、1on1のゴールは、相手との相互理解であったり、自分や会社の希望と非面接者の希望をすり合わせることだったりするため、ひたすら経験から学ぶ分野と感じる。</p>\n\n<p>自分の発言に対して相手が何を感じるのか、ポジティブ/ネガティブな反応をするのかなどを、多く知っていて相手によって使い分けられることが望ましい。</p>\n\n<p>日常のコミュニケーションでは、場の空気を悪くしてまで自分の意見を通さなければいけないケースは少ないと思うが、仕事でのコミュニケーションは利害関係が異なる人々との意見調整が基本であるため、いわゆるコミュ力と仕事のコミュ力は全く異なる物と考えた方が分かりやすいのではないだろうか。</p>\n\n<p>例えば、顧客は低予算で思ったとおりの物を作って欲しいし、開発側はより具体的な指示がなければ物は作れないし、プログラムを覚えたらより高い給料が欲しい。これらは全部、当然の要求だ。</p>\n\n<p>スタッフに悪い賃金を提示したらいなくなるかもしれないし、交換価値に変わる体験価値を提示したら同じ賃金でも喜んで働くかもしれない。<br>\nこの時、どの様に話しをするかを決定する根拠は <strong>経験</strong> 以外には思いつかない。</p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>賢者・愚者の話をしました。<br>\n学ぶことは、学ぶことの必要性に気づきさえすれば自分の力でできます。<br>\n経験は、<strong>丁度よい機会</strong>がないと自分の力だけではできません。</p>\n\n<p>マネージャのやるべきことは、<strong>体験をつくる</strong> ことだと考えています。</p>\n\n<p>丸投げするのではなく、チームのメンバーには適切なタスクを切り出し正しいフィードバックを与える。正しいコメントを口に出して伝えることで、本人が気づいてない物事を <strong>知覚させて体験の価値を高める</strong>。</p>\n\n<p>自分で気づいた事、学んだこと、体験したことは、自分で一歩を踏み出すための血肉になります。</p>\n\n<p>わたし自身まだまだ学びながら試行錯誤をしておりますが、皆様の毎日の仕事の質を高める一助となれていれば幸いです。</p>\n",
    "body": "## 愚者は経験に学び、賢者は歴史に学ぶ\n\nどうも愚者です。\n\n掲題は、ビスマルク氏が「人の振り見て我が振り直せ」を最高にカッコよく言った歴史上の名言ですね。\n一人の人間に経験できることには限りがあるし、痛みも伴わないし歴史から学ぶのはスマートにも思えます。\n\nということで賢者と愚者を題材にマネジメントについて雑多に書きたいと思います。\n\n## 賢者チェック\n\n以下の様な追加開発案件があったとします。\n\n**『A機能に類似した機能を持つB機能を作ってください』**\n\nあなたは、どの様に取り組みますか？\n\na. A機能のソースをコピペ\nb. A機能のソースを理解する\nc. A機能に関連する機能のソースを理解する\nd. ソース全体を理解する\ne. 使ってるライブラリも一通り理解する\nf. 変更部分仕様書を読む/理解する\ng. 仕様書全体を読む/理解する\n\nこうして見ると、『A機能のソースをコピペしてビルドを通してエラーが出なくなるようにして、言われた機能を追加する』のは愚者の行為であり、何も学んでいないという事が分かります。\n\nITの仕事には納期があるので当然最短ルートを選択するのは理解に苦しくないですが、長いIT人生を見た時に本当に最短ルートか一考してみるのもおもしろいかもしれません。\n\n\n## 人の振り見るだけで我が振り直せるの？\n\n何かを見て理解するためには **基本的な知識量と知覚力** が必要です。\nまた、それを自分で使いこなしてアウトプットするためには **反復練習(=経験)** が必要です。\n\n先の例では、移植元ソースを自分で書けるだけのスキルがない場合、単にコピペするだけではなく、写経したり、似た様な機能を考えてA機能を参考にしながら１から作るなどの反復演習をしないと自分でアウトプットできるようにならないと思います。\n\n写経や反復演習は「経験」に属すると思いますが、これは愚直にやるしかないです。\n愚直に続けて、基本的な知識量と知覚力が上がってくれば、ショートカットできるようになり賢者に近づけます。\n\n\n## 対人スキルは歴史から習得できない\n\n部下のマネジメントには1on1が有効、などの手法は書籍から **知識として** 学ぶことはできる。\n1on1で何をしゃべったらいいの、というのも **知識として** 学ぶことはできるだろう。\nしかし、1on1のゴールは、相手との相互理解であったり、自分や会社の希望と非面接者の希望をすり合わせることだったりするため、ひたすら経験から学ぶ分野と感じる。\n\n自分の発言に対して相手が何を感じるのか、ポジティブ/ネガティブな反応をするのかなどを、多く知っていて相手によって使い分けられることが望ましい。\n\n日常のコミュニケーションでは、場の空気を悪くしてまで自分の意見を通さなければいけないケースは少ないと思うが、仕事でのコミュニケーションは利害関係が異なる人々との意見調整が基本であるため、いわゆるコミュ力と仕事のコミュ力は全く異なる物と考えた方が分かりやすいのではないだろうか。\n\n例えば、顧客は低予算で思ったとおりの物を作って欲しいし、開発側はより具体的な指示がなければ物は作れないし、プログラムを覚えたらより高い給料が欲しい。これらは全部、当然の要求だ。\n\nスタッフに悪い賃金を提示したらいなくなるかもしれないし、交換価値に変わる体験価値を提示したら同じ賃金でも喜んで働くかもしれない。\nこの時、どの様に話しをするかを決定する根拠は **経験** 以外には思いつかない。\n\n\n## まとめ\n\n賢者・愚者の話をしました。\n学ぶことは、学ぶことの必要性に気づきさえすれば自分の力でできます。\n経験は、**丁度よい機会**がないと自分の力だけではできません。\n\nマネージャのやるべきことは、**体験をつくる** ことだと考えています。\n\n丸投げするのではなく、チームのメンバーには適切なタスクを切り出し正しいフィードバックを与える。正しいコメントを口に出して伝えることで、本人が気づいてない物事を **知覚させて体験の価値を高める**。\n\n自分で気づいた事、学んだこと、体験したことは、自分で一歩を踏み出すための血肉になります。\n\nわたし自身まだまだ学びながら試行錯誤をしておりますが、皆様の毎日の仕事の質を高める一助となれていれば幸いです。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-06-12T14:48:07+09:00",
    "group": null,
    "id": "fa7e2838350e2d418607",
    "likes_count": 9,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 4,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "マネジメント",
        "versions": []
      }
    ],
    "title": "愚者のマネジメント",
    "updated_at": "2021-06-12T16:39:11+09:00",
    "url": "https://qiita.com/kaku3/items/fa7e2838350e2d418607",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2963,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"itプロジェクトでなぜドキュメントを書くのか\" class=\"fragment\"></span><a href=\"#it%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%A7%E3%81%AA%E3%81%9C%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88%E3%82%92%E6%9B%B8%E3%81%8F%E3%81%AE%E3%81%8B\"><i class=\"fa fa-link\"></i></a>ITプロジェクトでなぜドキュメントを書くのか？</h2>\n\n<p>ITプロジェクトでの発注者と受注者の関係は以下である。</p>\n\n<p><strong>【発注者はお金を払って物を作ってもらう人、受注者はお金をもらって物を開発する人】</strong></p>\n\n<p>その場合、発注者の意図を正しく理解でき、製造物が正しく動作するとした場合ドキュメントは不要となるはずである。<br>\nフリーランスが受注するケースなどはこれに該当すると思う。</p>\n\n<p>ところが、開発の規模が大きくなったり、システム化する業務が複雑であったりする場合、口頭だけでやりたい事を伝えるのは困難となってくる。<br>\nまた、口頭のみでやり取りした場合、発注者が伝えた通りの物ができているのかを確認する方法もなくなってしまう。<br>\nそこで、契約から納品までを円滑に進めるために合意形成をするため、合意形成をした証拠品としてドキュメントを作成することになったと考える。</p>\n\n<h2>\n<span id=\"合意形成\" class=\"fragment\"></span><a href=\"#%E5%90%88%E6%84%8F%E5%BD%A2%E6%88%90\"><i class=\"fa fa-link\"></i></a>合意形成</h2>\n\n<p>ITプロジェクトのドキュメンテーションについては、IPAによる<a href=\"https://www.ipa.go.jp/sec/softwareengineering/reports/20100331.html\" rel=\"nofollow noopener\" target=\"_blank\">機能要件の合意形成ガイド</a>というガイドラインが存在するが、2010年のもので少々古く読まれている方も少ないと思う。</p>\n\n<p>また、手に馴染んでない細かいルールは実践できない事が多く、結局のところは属人的なルールが蔓延し、実際には会社に存在する過去のドキュメントをベースにプロジェクト毎で、およそ以下のドキュメントを作成することにしていると思う。</p>\n\n<ul>\n<li>要件定義書</li>\n<li>外部設計書</li>\n<li>詳細設計書</li>\n<li>試験項目書</li>\n</ul>\n\n<p>※話を簡単にするためインフラや運用等は除外している</p>\n\n<h2>\n<span id=\"詳細設計書を省略\" class=\"fragment\"></span><a href=\"#%E8%A9%B3%E7%B4%B0%E8%A8%AD%E8%A8%88%E6%9B%B8%E3%82%92%E7%9C%81%E7%95%A5\"><i class=\"fa fa-link\"></i></a>詳細設計書を省略</h2>\n\n<p>合意形成とその証拠品としてのドキュメントとした場合、外部設計を行う人間とプログラム製造を行う人間が同一人物の場合「詳細設計書」は不要となる。同一人物であれば合意形成は不要だからだ。</p>\n\n<p>低予算、短納期の案件に対応するためには大幅なコストダウンを余儀なくされるため「外部設計と実装を出来る人間」がその様な案件に対応し、低予算で案件を受注する事が常態化してくる。</p>\n\n<p>実は、自分が担当する工程以外の工程を学ぶ教育的側面として大きな役割を担っていたが、その点については考慮されず、<a href=\"https://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%A2%E3%83%B3%E3%82%BA%E3%81%AE%E6%82%B2%E5%8A%87\" rel=\"nofollow noopener\" target=\"_blank\">コモンズの悲劇</a>が発生してしまったと考察する。</p>\n\n<h2>\n<span id=\"上級seとpg\" class=\"fragment\"></span><a href=\"#%E4%B8%8A%E7%B4%9Ase%E3%81%A8pg\"><i class=\"fa fa-link\"></i></a>上級SEとPG</h2>\n\n<p>ウォーターフォール開発と呼ばれていた頃には、<strong>上級SEが設計</strong>を行い、<strong>PGが実装</strong>を行っていた。<br>\nしかし、上記の様に詳細設計の工程を飛ばすと、<strong>PGができる仕事がない</strong>状態となる。</p>\n\n<p>それまでは顧客の案件予算内でエンジニアの育成をできていたが、それができない状態となる。</p>\n\n<p>予算が増えない限り、工程の数は増やせない。<br>\nむしろ予算は減る事はあっても増えることはない。<br>\nさて、どうするべきだろう？</p>\n\n<h2>\n<span id=\"a1-オフショア\" class=\"fragment\"></span><a href=\"#a1-%E3%82%AA%E3%83%95%E3%82%B7%E3%83%A7%E3%82%A2\"><i class=\"fa fa-link\"></i></a>A1. オフショア</h2>\n\n<p>製造工程を安価に抑えて、詳細設計の工程を復活させる。<br>\n上級SEを多く抱えている企業であれば、<strong>直近は</strong>可能であろう。<br>\n新たな上級SEをどの様に育成するかが次の課題となると推察する。</p>\n\n<h2>\n<span id=\"a2-ポイントを記載したドキュメント--レビュー\" class=\"fragment\"></span><a href=\"#a2-%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%82%92%E8%A8%98%E8%BC%89%E3%81%97%E3%81%9F%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88--%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC\"><i class=\"fa fa-link\"></i></a>A2. ポイントを記載したドキュメント / レビュー</h2>\n\n<p>詳細に記載した詳細設計書をメンテナンスするのはコストにしかならない。<br>\n『設計者がポイントを記載、実装者が理解を記載するドキュメント』ならどうだろうか？<br>\nレビューして指摘することで設計手法を伝える事はできないだろうか？</p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>抜けもれない手順書を与えると、与えられた側の人間は思考を停止する。思考する必要がないからだ。<br>\n設計ができる上級SEは、プログラムが上手いプログラマーではなく、問題を解決できる開発者だと思う。</p>\n\n<p>思考して問題を解決できた事を確認できるドキュメント、すなわち <strong>上級SE、問題解決できる開発者を育成するためのドキュメント</strong>を作成するのがITプロジェクトのドキュメントではないかと考える。</p>\n",
    "body": "## ITプロジェクトでなぜドキュメントを書くのか？\n\nITプロジェクトでの発注者と受注者の関係は以下である。\n\n**【発注者はお金を払って物を作ってもらう人、受注者はお金をもらって物を開発する人】**\n\nその場合、発注者の意図を正しく理解でき、製造物が正しく動作するとした場合ドキュメントは不要となるはずである。\nフリーランスが受注するケースなどはこれに該当すると思う。\n\nところが、開発の規模が大きくなったり、システム化する業務が複雑であったりする場合、口頭だけでやりたい事を伝えるのは困難となってくる。\nまた、口頭のみでやり取りした場合、発注者が伝えた通りの物ができているのかを確認する方法もなくなってしまう。\nそこで、契約から納品までを円滑に進めるために合意形成をするため、合意形成をした証拠品としてドキュメントを作成することになったと考える。\n\n\n## 合意形成\n\nITプロジェクトのドキュメンテーションについては、IPAによる[機能要件の合意形成ガイド](https://www.ipa.go.jp/sec/softwareengineering/reports/20100331.html\n)というガイドラインが存在するが、2010年のもので少々古く読まれている方も少ないと思う。\n\nまた、手に馴染んでない細かいルールは実践できない事が多く、結局のところは属人的なルールが蔓延し、実際には会社に存在する過去のドキュメントをベースにプロジェクト毎で、およそ以下のドキュメントを作成することにしていると思う。\n\n- 要件定義書\n- 外部設計書\n- 詳細設計書\n- 試験項目書\n\n※話を簡単にするためインフラや運用等は除外している\n\n\n## 詳細設計書を省略\n\n合意形成とその証拠品としてのドキュメントとした場合、外部設計を行う人間とプログラム製造を行う人間が同一人物の場合「詳細設計書」は不要となる。同一人物であれば合意形成は不要だからだ。\n\n低予算、短納期の案件に対応するためには大幅なコストダウンを余儀なくされるため「外部設計と実装を出来る人間」がその様な案件に対応し、低予算で案件を受注する事が常態化してくる。\n\n実は、自分が担当する工程以外の工程を学ぶ教育的側面として大きな役割を担っていたが、その点については考慮されず、[コモンズの悲劇](https://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%A2%E3%83%B3%E3%82%BA%E3%81%AE%E6%82%B2%E5%8A%87)が発生してしまったと考察する。\n\n\n## 上級SEとPG\n\nウォーターフォール開発と呼ばれていた頃には、**上級SEが設計**を行い、**PGが実装**を行っていた。\nしかし、上記の様に詳細設計の工程を飛ばすと、**PGができる仕事がない**状態となる。\n\nそれまでは顧客の案件予算内でエンジニアの育成をできていたが、それができない状態となる。\n\n予算が増えない限り、工程の数は増やせない。\nむしろ予算は減る事はあっても増えることはない。\nさて、どうするべきだろう？\n\n\n## A1. オフショア\n\n製造工程を安価に抑えて、詳細設計の工程を復活させる。\n上級SEを多く抱えている企業であれば、**直近は**可能であろう。\n新たな上級SEをどの様に育成するかが次の課題となると推察する。\n\n\n## A2. ポイントを記載したドキュメント / レビュー\n\n詳細に記載した詳細設計書をメンテナンスするのはコストにしかならない。\n『設計者がポイントを記載、実装者が理解を記載するドキュメント』ならどうだろうか？\nレビューして指摘することで設計手法を伝える事はできないだろうか？\n\n\n## まとめ\n\n抜けもれない手順書を与えると、与えられた側の人間は思考を停止する。思考する必要がないからだ。\n設計ができる上級SEは、プログラムが上手いプログラマーではなく、問題を解決できる開発者だと思う。\n\n思考して問題を解決できた事を確認できるドキュメント、すなわち **上級SE、問題解決できる開発者を育成するためのドキュメント**を作成するのがITプロジェクトのドキュメントではないかと考える。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-06-05T15:30:04+09:00",
    "group": null,
    "id": "f00a0f99b1f1c8200613",
    "likes_count": 4,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 3,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "ドキュメント",
        "versions": []
      },
      {
        "name": "教育",
        "versions": []
      },
      {
        "name": "マネジメント",
        "versions": []
      }
    ],
    "title": "ITプロジェクトでなぜドキュメントを書くのか？",
    "updated_at": "2021-06-05T15:30:04+09:00",
    "url": "https://qiita.com/kaku3/items/f00a0f99b1f1c8200613",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 3225,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>前回、小学校１年生になる息子に向けてさんすう練習用のWebアプリを作りはじめた記事を書きました。<br>\n普通に機能を揃えリリースしたものの、リテンションが上がらない（継続利用されない）という課題が浮き彫りになり、その解決に向けて行った施策について述べています。</p>\n\n<p><qiita-embed-ogp src=\"https://qiita.com/kaku3/items/708aa816191090b31244\"></qiita-embed-ogp></p>\n\n<p>本稿はその続編になりますので、前回の記事を先に読むとよりお楽しみになれるかもしれません。</p>\n\n<h2>\n<span id=\"コンセプトと課題再整理\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%B3%E3%82%BB%E3%83%97%E3%83%88%E3%81%A8%E8%AA%B2%E9%A1%8C%E5%86%8D%E6%95%B4%E7%90%86\"><i class=\"fa fa-link\"></i></a>コンセプトと課題再整理</h2>\n\n<h3>\n<span id=\"ターゲット\" class=\"fragment\"></span><a href=\"#%E3%82%BF%E3%83%BC%E3%82%B2%E3%83%83%E3%83%88\"><i class=\"fa fa-link\"></i></a>ターゲット</h3>\n\n<ul>\n<li>小学校１年生の息子氏</li>\n<li>小学校５年生の息子氏</li>\n<li>ワイフ氏</li>\n</ul>\n\n<h3>\n<span id=\"コンセプト\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%B3%E3%82%BB%E3%83%97%E3%83%88\"><i class=\"fa fa-link\"></i></a>コンセプト</h3>\n\n<ul>\n<li>空き時間で気軽に数字にふれてもらい、さんすうや数字への抵抗感をなくす</li>\n<li>親子で遊べる</li>\n<li>脳トレ</li>\n</ul>\n\n<h3>\n<span id=\"コンテンツ20210428時点\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%8420210428%E6%99%82%E7%82%B9\"><i class=\"fa fa-link\"></i></a>コンテンツ(2021/04/28時点)</h3>\n\n<h4>\n<span id=\"1年生\" class=\"fragment\"></span><a href=\"#1%E5%B9%B4%E7%94%9F\"><i class=\"fa fa-link\"></i></a>1年生</h4>\n\n<ul>\n<li>\n<a href=\"https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-plus-10\" rel=\"nofollow noopener\" target=\"_blank\">たして１０</a> たして10になるすうじをこたえる</li>\n<li>\n<a href=\"https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-plus-single\" rel=\"nofollow noopener\" target=\"_blank\">ヒトケタス</a> ひとけたのすうじを足してこたえにする</li>\n<li>\n<a href=\"https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-minus-20\" rel=\"nofollow noopener\" target=\"_blank\">ひきざん２０</a> 20までのすうじのひきざん</li>\n</ul>\n\n<h4>\n<span id=\"2年生\" class=\"fragment\"></span><a href=\"#2%E5%B9%B4%E7%94%9F\"><i class=\"fa fa-link\"></i></a>2年生</h4>\n\n<ul>\n<li>\n<a href=\"https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-mul-99\" rel=\"nofollow noopener\" target=\"_blank\">かけざん９９</a> かけざん９ｘ９</li>\n</ul>\n\n<h4>\n<span id=\"おまけ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91\"><i class=\"fa fa-link\"></i></a>おまけ</h4>\n\n<ul>\n<li>\n<a href=\"https://kaku3.github.io/e1-math-plus-10/frontend/dist/pixel16\" rel=\"nofollow noopener\" target=\"_blank\">ピクセル１６</a> ドット絵らくがき帳</li>\n<li>\n<a href=\"https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-maze-20\" rel=\"nofollow noopener\" target=\"_blank\">めいろ２０</a> 20階めいろの塔（'80 GAMES）</li>\n</ul>\n\n<h3>\n<span id=\"課題分析\" class=\"fragment\"></span><a href=\"#%E8%AA%B2%E9%A1%8C%E5%88%86%E6%9E%90\"><i class=\"fa fa-link\"></i></a>課題分析</h3>\n\n<p>くしくも緊急事態宣言下のGWで外出もできないので、ある程度まとまった作業時間を確保できる状況でした。</p>\n\n<p>前回は「リテンションが上がらない」とざっくり分析しましたが、正しく状況を分析して施策を打たないとせっかく作業をして機能追加をしても<strong>前回の様に効果が出ない</strong>事も懸念されます。</p>\n\n<p>また <strong>『勉強はやらないといけないもの』</strong> といった概念を持ち込んで検討を始めると、<strong>ベネッセさんのチャレンジや全家研さんのポピーをやる方が効率が良いだろうという結論</strong>に至りそうなので、もう少し詳細に分析する必要がありそうです。</p>\n\n<p>課題は何なのか、わたしのアプリのストロングポイントはどこなのか。</p>\n\n<h3>\n<span id=\"ユーザーと傾向\" class=\"fragment\"></span><a href=\"#%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E3%81%A8%E5%82%BE%E5%90%91\"><i class=\"fa fa-link\"></i></a>ユーザーと傾向</h3>\n\n<table>\n<thead>\n<tr>\n<th>ユーザー</th>\n<th>傾向</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>小学校１年生の息子氏</td>\n<td>- YouTube動画視聴30分の権利を獲るためにプレイ<br>- 「たして１０ 30問モード」4回で30分</td>\n</tr>\n<tr>\n<td>小学校５年生の息子氏</td>\n<td>- 「たして１０ 10問モード」は4秒台を出す程のやりこみ<br>- 他のモードには興味を示さない<br>　- かけざんを作ってほしいとリクエストする<br>　- しかし、作ってもやらない</td>\n</tr>\n<tr>\n<td>ワイフ氏</td>\n<td>- ソシャゲのデイリーボーナス的に一通りのモードを流してプレイ</td>\n</tr>\n</tbody>\n</table>\n\n<p>なるほど。そうか、そういうことか。</p>\n\n<p>わたしは、これらの傾向を念頭におきGWの創作活動の内容を決めましたが、聡明なる読者の皆様におきましては、この表より何か傾向が見えたりアドバイスなどがありましたらコメント欄にてコメントを頂けると幸いです。</p>\n\n<h2>\n<span id=\"新コンテンツ追加\" class=\"fragment\"></span><a href=\"#%E6%96%B0%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E8%BF%BD%E5%8A%A0\"><i class=\"fa fa-link\"></i></a>新コンテンツ追加</h2>\n\n<p><a href=\"https://camo.qiitausercontent.com/afc84b8edc0e510093f02cd332268b56fa43ac2d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38663230383533322d333230312d626563352d333362632d3133333763626236336538322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8f208532-3201-bec5-33bc-1337cbb63e82.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=14c0852d1ff3130a69cd9d93c5eae248\" alt=\"2021-05-08_14h01_04.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8f208532-3201-bec5-33bc-1337cbb63e82.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8f208532-3201-bec5-33bc-1337cbb63e82.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=2eebf5727155f3b934f2c53486fe76b7 1x\" loading=\"lazy\"></a></p>\n\n<p>…またやってしまいました。<br>\n好きなゲームを好きなように作りました。GWだしね！<br>\nマーケティング用語で言うと<a href=\"https://www.contents.digitallab.jp/productout-marketin.html\" rel=\"nofollow noopener\" target=\"_blank\">プロダクトアウト</a>です。</p>\n\n<p>とは言え、今回は完全に無策で企画したわけではありません。</p>\n\n<p>少し前に YouTubeで Jump King というゲームがバズり、それを小５の息子氏が購入していたのを観察しておりこれは需要があると推察しました。マーケティング用語で言うとマーケットインです。</p>\n\n<p><strong>プロダクトアウトでありマーケットインなコンテンツ<br>\nまさにウィンウィン（？）</strong></p>\n\n<p>ということで、Jump King <del>をパクっ</del>にインスパイアされてゲーム制作に取り掛かりました。<br>\n今回は Javascript 2d canvas library の <a href=\"https://konvajs.org/\" rel=\"nofollow noopener\" target=\"_blank\">Konva</a> を使いたいというのも動機の１つでした。</p>\n\n<p>そうこうして出来たのがこちらになります。<br>\n<a href=\"https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-jump-man\" rel=\"nofollow noopener\" target=\"_blank\">JUMP MAN</a> ため押しジャンプゲーム（'80 GAMES）<br>\n※スマホでのみ動作</p>\n\n<p>何一つ真面目に分析していなかったのですが、Jump King 自体は激ムズゲームとしてバズっていたのでスマホのカジュアルゲーム勢には割と向いてないかもしれません。</p>\n\n<h2>\n<span id=\"真面目な実験的施策\" class=\"fragment\"></span><a href=\"#%E7%9C%9F%E9%9D%A2%E7%9B%AE%E3%81%AA%E5%AE%9F%E9%A8%93%E7%9A%84%E6%96%BD%E7%AD%96\"><i class=\"fa fa-link\"></i></a>真面目な実験的施策</h2>\n\n<p>前回の記事でめいろ２０を作成した時に集めたキャラクター素材が余っていたので、コレクション要素を追加することにしました。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/5f0f0d369a7ada74e58e5936feae890ca65866a2/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f66656263633932612d343366332d663964362d346666392d3935373037643338636639652e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ffebcc92a-43f3-f9d6-4ff9-95707d38cf9e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=88157b83190a198d09c5ba0875298d0d\" alt=\"2021-05-08_14h19_54.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/febcc92a-43f3-f9d6-4ff9-95707d38cf9e.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ffebcc92a-43f3-f9d6-4ff9-95707d38cf9e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d5cb3b62a65f5b4e2ce644977e5d42d9 1x\" loading=\"lazy\"></a></p>\n\n<p>さんすうゲームで遊ぶと、プレイアブルキャラクターが増えるという仕組みです。<br>\n実はゲーム本編よりこっちを作る方が大変でした。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/d6c76262fc36291b211bced802c87f96ba7cc917/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63333935313936612d396163322d356164352d646634302d3565656433356565316530322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc395196a-9ac2-5ad5-df40-5eed35ee1e02.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=d425f15242f8284ce5e18a7a201dd1e0\" alt=\"2021-05-08_14h22_44.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c395196a-9ac2-5ad5-df40-5eed35ee1e02.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc395196a-9ac2-5ad5-df40-5eed35ee1e02.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c8733862734d636b7a4d8eeeea0d39f5 1x\" loading=\"lazy\"></a></p>\n\n<p>ワイフ氏にアピールするためソシャゲっぽいエフェクト画面も作成しました。<br>\nこちらは、cssだけで作っています。cssの可能性を感じますね。</p>\n\n<p>(参考)<br>\n<a href=\"https://ics.media/entry/18966/\" rel=\"nofollow noopener\" target=\"_blank\">Chromeの最新機能が楽しいぞ!CSSで円グラフや集中線が描けるconic-gradient入門</a></p>\n\n<p>コレクション要素は全部集めるとモチベーションがなくなるので「たしざん１０　10問モードを1000回プレイ」など無理目な条件を入れるなど、長く遊べる様なインセンティブ設計にしてみました。</p>\n\n<h2>\n<span id=\"真面目な実験的施策の結果\" class=\"fragment\"></span><a href=\"#%E7%9C%9F%E9%9D%A2%E7%9B%AE%E3%81%AA%E5%AE%9F%E9%A8%93%E7%9A%84%E6%96%BD%E7%AD%96%E3%81%AE%E7%B5%90%E6%9E%9C\"><i class=\"fa fa-link\"></i></a>真面目な実験的施策の結果</h2>\n\n<p>小学５年生の息子氏が、２日で「たしざん１０　10問モードを1000回プレイ」を達成するも、かけざんの課題には目もくれないという結果を目の当たりにしました。また、ワイフ氏の行動にはそこそこ、小学１年生息子氏の行動にはまったく影響を与えない、という結果となりました。</p>\n\n<p>コレクション要素はやはり強いです。</p>\n\n<p>集めたキャラでゲームを遊ぶかというと全く遊ばないという結果も観測されました。<br>\n<strong>「利用価値が全く無いにもかかわらず少し努力すれば手に入るモノ」</strong>というのは欲しくなってしまうものなのでしょうね。<br>\nポチゲーでコンプガチャに廃課金するユーザーの行動が垣間見える体験となりました。</p>\n\n<p>できるだけフラットにインセンティブ設計をするように心がけてはいますが、ビックデータでこういう結果をきちんと集計して確認しないと適切なインセンティブの設計ができないなぁと再確認させられました。</p>\n\n<h2>\n<span id=\"真面目なけいさんコンテンツ追加\" class=\"fragment\"></span><a href=\"#%E7%9C%9F%E9%9D%A2%E7%9B%AE%E3%81%AA%E3%81%91%E3%81%84%E3%81%95%E3%82%93%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E8%BF%BD%E5%8A%A0\"><i class=\"fa fa-link\"></i></a>真面目なけいさんコンテンツ追加</h2>\n\n<p>かけざんコンテンツの追加を、マイルストーン的には随分前においていたのですが、<strong>かけざんが全くプレイされない</strong>という現状で追加する意味ないだろうと開発を止めて別の物を作っていました。</p>\n\n<p>とは言えサイトのコンセプトがそろそろボンヤリするなと２コンテンツ追加しました。<br>\nここにもう一つ小さなコンセプトがあるのですが、「暗算」で出来ないとスマホで気軽にできないということで、10台、90台のかけざんの問題と暗算方法の解説をコンテンツとして追加することしました。</p>\n\n<ul>\n<li>3年生\n\n<ul>\n<li>\n<a href=\"https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-mul-1x\" rel=\"nofollow noopener\" target=\"_blank\">かけざん１ｘ</a> １１－１９のすうじのかけざん</li>\n<li>\n<a href=\"https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-mul-9x\" rel=\"nofollow noopener\" target=\"_blank\">かけざん９ｘ</a> ９１－９９のすうじのかけざん</li>\n</ul>\n</li>\n</ul>\n\n<p>小学校当時は理解できなかったのですが、理解できるとすごいなこれと今たのしく練習してます。個人的なお気に入りです。</p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>前回の記事にも書きましたが <strong>個人開発の最大の失敗は開発者自身のモチベーションがなくなり継続開発ができなくなることです。</strong></p>\n\n<p>リポジトリ <code>e1-math-plus-10</code> を作った時点では、リポジトリ名からも分かるように、「小学校１年生のたしざん」しか作る気がなかったのですがもう少しいろいろ作りたいと思ってます。</p>\n\n<p>※ソースは github で公開中</p>\n\n<p><qiita-embed-ogp src=\"https://github.com/kaku3/e1-math-plus-10\"></qiita-embed-ogp></p>\n",
    "body": "## はじめに\n\n前回、小学校１年生になる息子に向けてさんすう練習用のWebアプリを作りはじめた記事を書きました。\n普通に機能を揃えリリースしたものの、リテンションが上がらない（継続利用されない）という課題が浮き彫りになり、その解決に向けて行った施策について述べています。\n\nhttps://qiita.com/kaku3/items/708aa816191090b31244\n\n\n本稿はその続編になりますので、前回の記事を先に読むとよりお楽しみになれるかもしれません。\n\n## コンセプトと課題再整理\n\n### ターゲット\n- 小学校１年生の息子氏\n- 小学校５年生の息子氏\n- ワイフ氏\n\n### コンセプト\n- 空き時間で気軽に数字にふれてもらい、さんすうや数字への抵抗感をなくす\n- 親子で遊べる\n- 脳トレ\n\n### コンテンツ(2021/04/28時点)\n#### 1年生\n- [たして１０](https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-plus-10) たして10になるすうじをこたえる\n- [ヒトケタス](https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-plus-single) ひとけたのすうじを足してこたえにする\n- [ひきざん２０](https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-minus-20) 20までのすうじのひきざん\n\n#### 2年生\n- [かけざん９９](https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-mul-99) かけざん９ｘ９\n\n#### おまけ\n- [ピクセル１６](https://kaku3.github.io/e1-math-plus-10/frontend/dist/pixel16) ドット絵らくがき帳\n- [めいろ２０](https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-maze-20) 20階めいろの塔（'80 GAMES）\n\n### 課題分析\nくしくも緊急事態宣言下のGWで外出もできないので、ある程度まとまった作業時間を確保できる状況でした。\n\n前回は「リテンションが上がらない」とざっくり分析しましたが、正しく状況を分析して施策を打たないとせっかく作業をして機能追加をしても**前回の様に効果が出ない**事も懸念されます。\n\nまた **『勉強はやらないといけないもの』** といった概念を持ち込んで検討を始めると、**ベネッセさんのチャレンジや全家研さんのポピーをやる方が効率が良いだろうという結論**に至りそうなので、もう少し詳細に分析する必要がありそうです。\n\n課題は何なのか、わたしのアプリのストロングポイントはどこなのか。\n\n### ユーザーと傾向\n|ユーザー|傾向|\n|--|--|\n|小学校１年生の息子氏|- YouTube動画視聴30分の権利を獲るためにプレイ<br/>- 「たして１０ 30問モード」4回で30分\n|小学校５年生の息子氏|- 「たして１０ 10問モード」は4秒台を出す程のやりこみ<br />- 他のモードには興味を示さない<br />　- かけざんを作ってほしいとリクエストする<br />　- しかし、作ってもやらない\n|ワイフ氏|- ソシャゲのデイリーボーナス的に一通りのモードを流してプレイ\n\nなるほど。そうか、そういうことか。\n\nわたしは、これらの傾向を念頭におきGWの創作活動の内容を決めましたが、聡明なる読者の皆様におきましては、この表より何か傾向が見えたりアドバイスなどがありましたらコメント欄にてコメントを頂けると幸いです。\n\n## 新コンテンツ追加\n\n![2021-05-08_14h01_04.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8f208532-3201-bec5-33bc-1337cbb63e82.png)\n\n…またやってしまいました。\n好きなゲームを好きなように作りました。GWだしね！\nマーケティング用語で言うと[プロダクトアウト](https://www.contents.digitallab.jp/productout-marketin.html)です。\n\nとは言え、今回は完全に無策で企画したわけではありません。\n\n少し前に YouTubeで Jump King というゲームがバズり、それを小５の息子氏が購入していたのを観察しておりこれは需要があると推察しました。マーケティング用語で言うとマーケットインです。\n\n**プロダクトアウトでありマーケットインなコンテンツ\nまさにウィンウィン（？）**\n\nということで、Jump King ~~をパクっ~~にインスパイアされてゲーム制作に取り掛かりました。\n今回は Javascript 2d canvas library の [Konva](https://konvajs.org/) を使いたいというのも動機の１つでした。\n\nそうこうして出来たのがこちらになります。\n[JUMP MAN](https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-jump-man) ため押しジャンプゲーム（'80 GAMES）\n※スマホでのみ動作\n\n何一つ真面目に分析していなかったのですが、Jump King 自体は激ムズゲームとしてバズっていたのでスマホのカジュアルゲーム勢には割と向いてないかもしれません。\n\n## 真面目な実験的施策\n\n前回の記事でめいろ２０を作成した時に集めたキャラクター素材が余っていたので、コレクション要素を追加することにしました。\n\n![2021-05-08_14h19_54.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/febcc92a-43f3-f9d6-4ff9-95707d38cf9e.png)\n\nさんすうゲームで遊ぶと、プレイアブルキャラクターが増えるという仕組みです。\n実はゲーム本編よりこっちを作る方が大変でした。\n\n![2021-05-08_14h22_44.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c395196a-9ac2-5ad5-df40-5eed35ee1e02.png)\n\nワイフ氏にアピールするためソシャゲっぽいエフェクト画面も作成しました。\nこちらは、cssだけで作っています。cssの可能性を感じますね。\n\n(参考)\n[Chromeの最新機能が楽しいぞ!CSSで円グラフや集中線が描けるconic-gradient入門](https://ics.media/entry/18966/)\n\nコレクション要素は全部集めるとモチベーションがなくなるので「たしざん１０　10問モードを1000回プレイ」など無理目な条件を入れるなど、長く遊べる様なインセンティブ設計にしてみました。\n\n\n## 真面目な実験的施策の結果\n\n小学５年生の息子氏が、２日で「たしざん１０　10問モードを1000回プレイ」を達成するも、かけざんの課題には目もくれないという結果を目の当たりにしました。また、ワイフ氏の行動にはそこそこ、小学１年生息子氏の行動にはまったく影響を与えない、という結果となりました。\n\nコレクション要素はやはり強いです。\n\n集めたキャラでゲームを遊ぶかというと全く遊ばないという結果も観測されました。\n**「利用価値が全く無いにもかかわらず少し努力すれば手に入るモノ」**というのは欲しくなってしまうものなのでしょうね。\nポチゲーでコンプガチャに廃課金するユーザーの行動が垣間見える体験となりました。\n\nできるだけフラットにインセンティブ設計をするように心がけてはいますが、ビックデータでこういう結果をきちんと集計して確認しないと適切なインセンティブの設計ができないなぁと再確認させられました。\n\n## 真面目なけいさんコンテンツ追加\n\nかけざんコンテンツの追加を、マイルストーン的には随分前においていたのですが、**かけざんが全くプレイされない**という現状で追加する意味ないだろうと開発を止めて別の物を作っていました。\n\nとは言えサイトのコンセプトがそろそろボンヤリするなと２コンテンツ追加しました。\nここにもう一つ小さなコンセプトがあるのですが、「暗算」で出来ないとスマホで気軽にできないということで、10台、90台のかけざんの問題と暗算方法の解説をコンテンツとして追加することしました。\n\n- 3年生\n  - [かけざん１ｘ](https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-mul-1x) １１－１９のすうじのかけざん\n  - [かけざん９ｘ](https://kaku3.github.io/e1-math-plus-10/frontend/dist/game-mul-9x) ９１－９９のすうじのかけざん\n\n小学校当時は理解できなかったのですが、理解できるとすごいなこれと今たのしく練習してます。個人的なお気に入りです。\n\n## まとめ\n\n前回の記事にも書きましたが **個人開発の最大の失敗は開発者自身のモチベーションがなくなり継続開発ができなくなることです。**\n\nリポジトリ `e1-math-plus-10` を作った時点では、リポジトリ名からも分かるように、「小学校１年生のたしざん」しか作る気がなかったのですがもう少しいろいろ作りたいと思ってます。\n\n※ソースは github で公開中\n\nhttps://github.com/kaku3/e1-math-plus-10\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-05-08T15:01:08+09:00",
    "group": null,
    "id": "d7f83a3406c168e814e8",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "ゲーム制作",
        "versions": []
      },
      {
        "name": "ポートフォリオ",
        "versions": []
      },
      {
        "name": "個人開発",
        "versions": []
      }
    ],
    "title": "「小１からのさんすうゲーム」で考える個人的DXと継続開発(GW編)",
    "updated_at": "2021-05-08T15:01:08+09:00",
    "url": "https://qiita.com/kaku3/items/d7f83a3406c168e814e8",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1786,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>下の息子が今年４月から小学校１年生になるので、一月程前から算数練習帳アプリをつくっています。<br>\nわが家の教育事情がDX化するし、ついでに nuxt や firebase pwa なんかの勉強もできて、プログラムの規模も小さいから若手向けの教材にもなるしよいことづくめのプロジェクトに思われましたが、リリースして運用してみると様々な課題が出てきましたのでここに記そうと思います。</p>\n\n<ul>\n<li>ソース</li>\n</ul>\n\n<p><a href=\"https://github.com/kaku3/e1-math-plus-10\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kaku3/e1-math-plus-10</a></p>\n\n<ul>\n<li>サイト</li>\n</ul>\n\n<p><qiita-embed-ogp src=\"https://kaku3.github.io/e1-math-plus-10/frontend/dist/\"></qiita-embed-ogp></p>\n\n<h2>\n<span id=\"課題リテンションが上がらない\" class=\"fragment\"></span><a href=\"#%E8%AA%B2%E9%A1%8C%E3%83%AA%E3%83%86%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%8C%E4%B8%8A%E3%81%8C%E3%82%89%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>課題：リテンションが上がらない</h2>\n\n<p>目論見通り、妻が手で紙に書いていた100マス計算は半日程でたしざんウェブアプリとなりました。<br>\n家族は物珍しさからかちょこちょこ触ってくれてました。今思えばこのときが幸せの絶頂だったかもしれません。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/8038efcad4fc86be1c850c9167b35b61b7697b6a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f62336539346337352d646233302d393731372d383463342d6463326232633834633339392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb3e94c75-db30-9717-84c4-dc2b2c84c399.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=35ac5a7bbe1e4ba59bac1049fea000c0\" alt=\"たしざん.png\" title=\"気軽に遊べるたしざん\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b3e94c75-db30-9717-84c4-dc2b2c84c399.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb3e94c75-db30-9717-84c4-dc2b2c84c399.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c48a4d8ccc6b8bb6a80c97acb3b8d412 1x\" loading=\"lazy\"></a></p>\n\n<p>その後firebaseにハイスコア保存処理を追加し他のユーザーとスコアを競える様にしたり、履歴をグラフで見られるようにしたりしてわが家の算数事情は見事にDX化されたように思えました。</p>\n\n<p>ところが、１日もすると下の息子は<strong>「このアプリをやらないとYouTube見せない」</strong>など、アプリ本体とは全く関係のないところで<strong>インセンティブを与えないと</strong>プレイしなくなりました。<br>\nこれでは、単にウェブアプリ化しただけでDX化したとはとても言えないと思いました。</p>\n\n<p>また、上の息子は１日２００回を超える程遊んでいたのですが、足し算１０問の時間が５秒台に差し掛かりスコア更新が滞るようになると遊ばなくなってしまいました。<br>\nこちらの課題については、firebase に4秒台の<strong>捏造スコアを登録する</strong>ことで解決できそうでしたが、人の親としてよろしくないなと思い別の手段を模索することにしました。</p>\n\n<p>また、上の子に本来遊んでもらいたい引き算や掛け算などのモードを追加したのですが、こちらは全く遊ばないという事が分かりました。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/55fcf9e9cae3182d7a7b22bfa012f35db489cefd/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f33343235613638652d346338342d343133392d376162322d6661623764633730666562362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F3425a68e-4c84-4139-7ab2-fab7dc70feb6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f6db3d264b0e6b29a51ca564150ccc43\" alt=\"ひきざん.png\" title=\"全く遊んでもらえないひきざん\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/3425a68e-4c84-4139-7ab2-fab7dc70feb6.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F3425a68e-4c84-4139-7ab2-fab7dc70feb6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ca8b4b92fba764da607186d3d90837bd 1x\" loading=\"lazy\"></a></p>\n\n<p>(課題の本質)</p>\n\n<p><strong>興味のないことはやらない</strong></p>\n\n<h2>\n<span id=\"解決策１デイリー課題\" class=\"fragment\"></span><a href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96%EF%BC%91%E3%83%87%E3%82%A4%E3%83%AA%E3%83%BC%E8%AA%B2%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>解決策１：デイリー課題</h2>\n\n<p>せっかく作ったものを使ってもらえないというのは大変悲しいことです。<br>\nとりあえず簡単に作れる機能を追加して再び興味を持ってもらうことにしました。</p>\n\n<ul>\n<li>カレンダー追加</li>\n<li>プレイ回数に応じて★取得</li>\n<li>コロナ禍でステイホームなので旅行気分を味わえる画像(<a href=\"https://unsplash.com/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://unsplash.com/</a>)</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/96782a365a49a7af59d8b11536fbb76a46abf0b6/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37343564376537612d636262642d323166632d336233382d3339353262373732383462632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F745d7e7a-cbbd-21fc-3b38-3952b77284bc.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f70a726f0333b9ffed6ce08af128ec92\" alt=\"home.png\" title=\"カレンダーと★\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/745d7e7a-cbbd-21fc-3b38-3952b77284bc.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F745d7e7a-cbbd-21fc-3b38-3952b77284bc.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=95dd46b60dd7148dc466c49b65d9def6 1x\" loading=\"lazy\"></a></p>\n\n<p>結果は惨敗です。アプリとしての見た目はよくなりましたが、モチベーションの源泉になることはありませんでした。<br>\n勘のよい皆さんはすでにお気づきかと思いますが、使い道のない★には意味がないのです。<br>\n演出を丁寧に作ることでわずかな驚きを与えることはできるかもしれませんが、本質は変わりません。</p>\n\n<p>これぞまさに<strong>「役には立つ」けど「意味のない」アプリ</strong>ではないかと思いました。</p>\n\n<p>「役に立つ」とか「意味がある」とかはこちらの書籍を読むと理解が深まります。<br>\n<a href=\"https://www.amazon.co.jp/%E3%83%8B%E3%83%A5%E3%83%BC%E3%82%BF%E3%82%A4%E3%83%97%E3%81%AE%E6%99%82%E4%BB%A3-%E6%96%B0%E6%99%82%E4%BB%A3%E3%82%92%E7%94%9F%E3%81%8D%E6%8A%9C%E3%81%8F24%E3%81%AE%E6%80%9D%E8%80%83%E3%83%BB%E8%A1%8C%E5%8B%95%E6%A7%98%E5%BC%8F-%E5%B1%B1%E5%8F%A3-%E5%91%A8/dp/447810834X\" rel=\"nofollow noopener\" target=\"_blank\">ニュータイプの時代 新時代を生き抜く24の思考・行動様式 (日本語) </a></p>\n\n<h2>\n<span id=\"解決策２アプリを起動するモチベーションを別につくる\" class=\"fragment\"></span><a href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96%EF%BC%92%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E8%B5%B7%E5%8B%95%E3%81%99%E3%82%8B%E3%83%A2%E3%83%81%E3%83%99%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E5%88%A5%E3%81%AB%E3%81%A4%E3%81%8F%E3%82%8B\"><i class=\"fa fa-link\"></i></a>解決策２：アプリを起動するモチベーションを別につくる</h2>\n\n<p>アプリ内に何らかの機能を追加し、それがインセンティブとして機能すればアプリを起動するモチベーションにもなるし、計算練習アプリを遊ぶモチベーションにもなります。</p>\n\n<p>ただ、YouTubeは<strong>お金を払わずとも無限に追加されるコンテンツを楽しめるプラットフォーム</strong>だと思うのでこれを超える娯楽を提供することは現実的に考えて不可能かなと思えます。</p>\n\n<p>ピンポイントで子どもたちが興味あるものを提供するしか勝つ道はありません。<br>\nよく観察して、何に興味を持って、どのような行動様式なのかを見抜いて、継続して遊んでもらえるものを作らねばなりません。<br>\n<strong>決して子供たちが「こんな機能があったらめっちゃ勉強するわ」などと言ってくる事はありません。</strong><br>\n顧客の課題を解決するのも、子供たちの課題を解決するのも本質は同じです。<br>\n顧客も子供もバカではありません。課題を認識していて、それが簡単な課題なら、ITでDXを提供などせずとも解決しているのです。<br>\nダイエットすれば痩せると分かっていてもダイエットを続けられないのは「簡単な課題」ではないからです。</p>\n\n<p>ということで、どうやら子供たちは「めいろ」が好きらしいことが分かったので「めいろ」機能を追加することにしました。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/3605b2747ae375d8fbda2395b443716ce35405be/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36626536373366632d313362662d356563342d633933662d3532366265346362346262302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6be673fc-13bf-5ec4-c93f-526be4cb4bb0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ac0714fc8272d33cf8cd5fcbdab8fe2c\" alt=\"maze.png\" title=\"すっかり自分の趣味に走っためいろ\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6be673fc-13bf-5ec4-c93f-526be4cb4bb0.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6be673fc-13bf-5ec4-c93f-526be4cb4bb0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=04a88afba8eff9631661cacf2b944fd3 1x\" loading=\"lazy\"></a></p>\n\n<p>いけません。途中からすっかり楽しくなってしまいました。<br>\n子供の趣向とは全く関係ない、わたしが子供の頃大好きだったゲームを作ってしまいました。</p>\n\n<p>こちらも物珍しく最初は触ってはいましたが、やはり継続しませんでした。</p>\n\n<p>買い物画面で買い物させたり、体力やつるはしなどのリソース管理をシビアに考えさせたり、考えることが多いゲームにすることで遊んでるうちに自然と計算に対する抵抗がなくなればよいななどと余計なことを考えたのが敗因かもしれません。<br>\n作った本人も最初数回は面白く遊んでましたが、途中で辛くなって遊ばなくなりました（苦笑）。</p>\n\n<p>しかし、反省もしてないし後悔もしていません。</p>\n\n<p><strong>個人開発の最大の失敗は開発者自身のモチベーションがなくなり継続開発ができなくなることです。</strong></p>\n\n<p>この開発の結果は散々でしたが、自分で手を動かして作ってみると色々なことをより深く考察できるようになるような気がしています。<br>\n「賢者は歴史から学び愚者は経験から学ぶ」と言いますが、どうやらわたしは賢者ではなさそうです。</p>\n\n<p>インセンティブ設計は「昔ながらのゲーム」を設計するのではなく、<strong>ドーパミンをだらだら垂れ流すような仕組み</strong>を設計しなければならないのでしょうと改めて考えさせられました。</p>\n\n<p><a href=\"https://note.com/jgamifa/n/nce903ffddd11\" rel=\"nofollow noopener\" target=\"_blank\">快楽物質（ドーパミン）とゲーム・ゲーミフィケーションの関係</a></p>\n\n<h2>\n<span id=\"解決策３アイコンエディタ\" class=\"fragment\"></span><a href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96%EF%BC%93%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF\"><i class=\"fa fa-link\"></i></a>解決策３：アイコンエディタ</h2>\n\n<p>どうも、絵を描くのが好きなようなのでアイコンエディタを作ることにしました。<br>\nWebベースだとドラッグイベントを取るのが難しいので高機能にはなりません。</p>\n\n<p>機能が充実してなくてもまぁまぁ使えるとしたら 16x16 程度のアイコンエディタではないか、という整理です。<br>\nまた、与えられたコンテンツを消費するのではなく、自分でクリエイティブな活動を行うというのは子供にとってもよいと考えました。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/ce182ec114b1e0517ac82e1a61e563b40553a2b4/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f66626562633336372d333137382d363631302d376434612d6533386237363938373531342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ffbebc367-3178-6610-7d4a-e38b76987514.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=13c34d08a439c8dcd00a88eab73efa9d\" alt=\"icon-editor.png\" title=\"アイコンエディタ\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/fbebc367-3178-6610-7d4a-e38b76987514.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ffbebc367-3178-6610-7d4a-e38b76987514.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=06a3e37457dc7ad0bd0ea4a40809e736 1x\" loading=\"lazy\"></a></p>\n\n<p>これはどうもそこそこ遊んでいるようでした。</p>\n\n<h2>\n<span id=\"解決策４アバター\" class=\"fragment\"></span><a href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96%EF%BC%94%E3%82%A2%E3%83%90%E3%82%BF%E3%83%BC\"><i class=\"fa fa-link\"></i></a>解決策４：アバター</h2>\n\n<p>アイコンエディタで作成したアイコンでめいろゲームを遊べるようにしたところ、めいろゲームを遊ぶようになりました。<br>\nこれは、諦めずに続けるっていいよねーって思える体験でした。</p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>結局「興味のないことはやらない」という課題を解決するには至ってないのですが、nuxt.js や firebase などを利用すれば本当に簡単に開発できる様になってきています。<br>\n脳内で思考実験を続けていると、自分で考えられる事以上のことを考えられるようにはならないです。<br>\n手を動かして物を作ってユーザーに使ってもらってフィードバックを受ける（実際には使っている様を観察して読み取る）事をしていかないとユーザーに使ってもらえるアプリは作れないのかなと思います。</p>\n\n<p>身の回りの人がハッピーになるような「意味のある物」を作って「意味のある人生」にしていけたらよいなと思います。</p>\n",
    "body": "## はじめに\n\n下の息子が今年４月から小学校１年生になるので、一月程前から算数練習帳アプリをつくっています。\nわが家の教育事情がDX化するし、ついでに nuxt や firebase pwa なんかの勉強もできて、プログラムの規模も小さいから若手向けの教材にもなるしよいことづくめのプロジェクトに思われましたが、リリースして運用してみると様々な課題が出てきましたのでここに記そうと思います。\n\n* ソース\n\n[https://github.com/kaku3/e1-math-plus-10](https://github.com/kaku3/e1-math-plus-10)\n\n* サイト\n\nhttps://kaku3.github.io/e1-math-plus-10/frontend/dist/\n\n\n## 課題：リテンションが上がらない\n\n目論見通り、妻が手で紙に書いていた100マス計算は半日程でたしざんウェブアプリとなりました。\n家族は物珍しさからかちょこちょこ触ってくれてました。今思えばこのときが幸せの絶頂だったかもしれません。\n\n![たしざん.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b3e94c75-db30-9717-84c4-dc2b2c84c399.png \"気軽に遊べるたしざん\")\n\nその後firebaseにハイスコア保存処理を追加し他のユーザーとスコアを競える様にしたり、履歴をグラフで見られるようにしたりしてわが家の算数事情は見事にDX化されたように思えました。\n\nところが、１日もすると下の息子は**「このアプリをやらないとYouTube見せない」**など、アプリ本体とは全く関係のないところで**インセンティブを与えないと**プレイしなくなりました。\nこれでは、単にウェブアプリ化しただけでDX化したとはとても言えないと思いました。\n\nまた、上の息子は１日２００回を超える程遊んでいたのですが、足し算１０問の時間が５秒台に差し掛かりスコア更新が滞るようになると遊ばなくなってしまいました。\nこちらの課題については、firebase に4秒台の**捏造スコアを登録する**ことで解決できそうでしたが、人の親としてよろしくないなと思い別の手段を模索することにしました。\n\nまた、上の子に本来遊んでもらいたい引き算や掛け算などのモードを追加したのですが、こちらは全く遊ばないという事が分かりました。\n\n![ひきざん.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/3425a68e-4c84-4139-7ab2-fab7dc70feb6.png \"全く遊んでもらえないひきざん\")\n\n(課題の本質)\n\n**興味のないことはやらない**\n\n\n## 解決策１：デイリー課題\n\nせっかく作ったものを使ってもらえないというのは大変悲しいことです。\nとりあえず簡単に作れる機能を追加して再び興味を持ってもらうことにしました。\n\n- カレンダー追加\n- プレイ回数に応じて★取得\n- コロナ禍でステイホームなので旅行気分を味わえる画像(https://unsplash.com/)\n\n![home.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/745d7e7a-cbbd-21fc-3b38-3952b77284bc.png \"カレンダーと★\")\n\n結果は惨敗です。アプリとしての見た目はよくなりましたが、モチベーションの源泉になることはありませんでした。\n勘のよい皆さんはすでにお気づきかと思いますが、使い道のない★には意味がないのです。\n演出を丁寧に作ることでわずかな驚きを与えることはできるかもしれませんが、本質は変わりません。\n\nこれぞまさに**「役には立つ」けど「意味のない」アプリ**ではないかと思いました。\n\n「役に立つ」とか「意味がある」とかはこちらの書籍を読むと理解が深まります。\n[ニュータイプの時代 新時代を生き抜く24の思考・行動様式 (日本語) ](https://www.amazon.co.jp/%E3%83%8B%E3%83%A5%E3%83%BC%E3%82%BF%E3%82%A4%E3%83%97%E3%81%AE%E6%99%82%E4%BB%A3-%E6%96%B0%E6%99%82%E4%BB%A3%E3%82%92%E7%94%9F%E3%81%8D%E6%8A%9C%E3%81%8F24%E3%81%AE%E6%80%9D%E8%80%83%E3%83%BB%E8%A1%8C%E5%8B%95%E6%A7%98%E5%BC%8F-%E5%B1%B1%E5%8F%A3-%E5%91%A8/dp/447810834X)\n\n\n## 解決策２：アプリを起動するモチベーションを別につくる\n\nアプリ内に何らかの機能を追加し、それがインセンティブとして機能すればアプリを起動するモチベーションにもなるし、計算練習アプリを遊ぶモチベーションにもなります。\n\nただ、YouTubeは**お金を払わずとも無限に追加されるコンテンツを楽しめるプラットフォーム**だと思うのでこれを超える娯楽を提供することは現実的に考えて不可能かなと思えます。\n\nピンポイントで子どもたちが興味あるものを提供するしか勝つ道はありません。\nよく観察して、何に興味を持って、どのような行動様式なのかを見抜いて、継続して遊んでもらえるものを作らねばなりません。\n**決して子供たちが「こんな機能があったらめっちゃ勉強するわ」などと言ってくる事はありません。**\n顧客の課題を解決するのも、子供たちの課題を解決するのも本質は同じです。\n顧客も子供もバカではありません。課題を認識していて、それが簡単な課題なら、ITでDXを提供などせずとも解決しているのです。\nダイエットすれば痩せると分かっていてもダイエットを続けられないのは「簡単な課題」ではないからです。\n\nということで、どうやら子供たちは「めいろ」が好きらしいことが分かったので「めいろ」機能を追加することにしました。\n\n![maze.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6be673fc-13bf-5ec4-c93f-526be4cb4bb0.png \"すっかり自分の趣味に走っためいろ\")\n\nいけません。途中からすっかり楽しくなってしまいました。\n子供の趣向とは全く関係ない、わたしが子供の頃大好きだったゲームを作ってしまいました。\n\nこちらも物珍しく最初は触ってはいましたが、やはり継続しませんでした。\n\n買い物画面で買い物させたり、体力やつるはしなどのリソース管理をシビアに考えさせたり、考えることが多いゲームにすることで遊んでるうちに自然と計算に対する抵抗がなくなればよいななどと余計なことを考えたのが敗因かもしれません。\n作った本人も最初数回は面白く遊んでましたが、途中で辛くなって遊ばなくなりました（苦笑）。\n\nしかし、反省もしてないし後悔もしていません。\n\n**個人開発の最大の失敗は開発者自身のモチベーションがなくなり継続開発ができなくなることです。**\n\nこの開発の結果は散々でしたが、自分で手を動かして作ってみると色々なことをより深く考察できるようになるような気がしています。\n「賢者は歴史から学び愚者は経験から学ぶ」と言いますが、どうやらわたしは賢者ではなさそうです。\n\nインセンティブ設計は「昔ながらのゲーム」を設計するのではなく、**ドーパミンをだらだら垂れ流すような仕組み**を設計しなければならないのでしょうと改めて考えさせられました。\n\n[快楽物質（ドーパミン）とゲーム・ゲーミフィケーションの関係](https://note.com/jgamifa/n/nce903ffddd11)\n\n\n## 解決策３：アイコンエディタ\n\nどうも、絵を描くのが好きなようなのでアイコンエディタを作ることにしました。\nWebベースだとドラッグイベントを取るのが難しいので高機能にはなりません。\n\n機能が充実してなくてもまぁまぁ使えるとしたら 16x16 程度のアイコンエディタではないか、という整理です。\nまた、与えられたコンテンツを消費するのではなく、自分でクリエイティブな活動を行うというのは子供にとってもよいと考えました。\n\n![icon-editor.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/fbebc367-3178-6610-7d4a-e38b76987514.png \"アイコンエディタ\")\n\nこれはどうもそこそこ遊んでいるようでした。\n\n\n## 解決策４：アバター\n\nアイコンエディタで作成したアイコンでめいろゲームを遊べるようにしたところ、めいろゲームを遊ぶようになりました。\nこれは、諦めずに続けるっていいよねーって思える体験でした。\n\n\n## まとめ\n\n結局「興味のないことはやらない」という課題を解決するには至ってないのですが、nuxt.js や firebase などを利用すれば本当に簡単に開発できる様になってきています。\n脳内で思考実験を続けていると、自分で考えられる事以上のことを考えられるようにはならないです。\n手を動かして物を作ってユーザーに使ってもらってフィードバックを受ける（実際には使っている様を観察して読み取る）事をしていかないとユーザーに使ってもらえるアプリは作れないのかなと思います。\n\n身の回りの人がハッピーになるような「意味のある物」を作って「意味のある人生」にしていけたらよいなと思います。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-04-24T16:34:14+09:00",
    "group": null,
    "id": "708aa816191090b31244",
    "likes_count": 9,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 6,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "個人開発",
        "versions": []
      }
    ],
    "title": "「小１からのさんすうゲーム」で考える個人的DXと継続開発",
    "updated_at": "2021-04-24T16:34:14+09:00",
    "url": "https://qiita.com/kaku3/items/708aa816191090b31244",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2545,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h2 data-sourcepos=\"1:1-1:36\">\n<span id=\"新卒エンジニアのきみに\" class=\"fragment\"></span><a href=\"#%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%8D%E3%81%BF%E3%81%AB\"><i class=\"fa fa-link\"></i></a>新卒エンジニアのきみに</h2>\n<p data-sourcepos=\"3:1-3:68\">エンジニア歴ももうすぐ30年になるんだけれども。</p>\n<p data-sourcepos=\"5:1-5:349\">もともと趣味でプログラムを書いていたし、C言語さえ覚えればあとは一生勉強せずに食っていけると思っていたんだけれども、今ではそんな言語はほとんど見ることも無くて、新しい言語やフレームワークがものすごいペースで登場と退場を繰り返していて。</p>\n<p data-sourcepos=\"7:1-7:117\">時を越えて役に立った、最初から知ってればよかったことを手紙にしておこうと思う。</p>\n<h2 data-sourcepos=\"10:1-10:32\">\n<span id=\"読む9割--書く1割\" class=\"fragment\"></span><a href=\"#%E8%AA%AD%E3%82%809%E5%89%B2--%E6%9B%B8%E3%81%8F1%E5%89%B2\"><i class=\"fa fa-link\"></i></a>読む：9割 / 書く：1割</h2>\n<p data-sourcepos=\"12:1-13:256\">職業エンジニアの仕事としては、プログラムを1から書く(フルスクラッチする)プロジェクトは少ない。<br>\nスタートアップ企業などで1から書くことももちろんあるが、オープンソースや外部ライブラリ・フレームワークを組み合わせてプログラムを作り、全て自分で作らないケースが大半である。</p>\n<p data-sourcepos=\"15:1-15:339\">工夫して自分なりのコードを書くのがプログラミングの醍醐味であるし、達成感も大きいが、全く分からない巨大なスパゲッティーソースから必要な情報を探す能力を上げることも視野に入れよう。結果としてプログラミング上達の近道にもなるから。</p>\n<p data-sourcepos=\"17:1-17:162\">そして、優れたオープンソースやライブラリの大半は海外製なので英語もGoogle翻訳を駆使して読めるようにしておこう。</p>\n<h2 data-sourcepos=\"20:1-20:9\">\n<span id=\"写経\" class=\"fragment\"></span><a href=\"#%E5%86%99%E7%B5%8C\"><i class=\"fa fa-link\"></i></a>写経</h2>\n<p data-sourcepos=\"22:1-22:239\">昔はプログラミングの勉強をしようと思ったら、数千円の書籍を購入する以外に方法がなかったが、今は便利な世の中で github などに優れたソースコードが大量に存在している。</p>\n<p data-sourcepos=\"24:1-24:111\">手頃なサイズで興味のありそうなコードを探して、手で打って動くようにしよう。</p>\n<p data-sourcepos=\"26:1-28:129\">退屈な教科書の様な書籍から得られる情報よりはるかに多くの情報が得られるはずだ。<br>\n英語の文法を何年も習ってるのに、英文を書けるようにならない理由はシンプルで、<strong>書いてないから</strong>だ。<br>\nif文が分からない、for文が分からないと悩むより、<strong>心を無にして写経をする方が救いがある。</strong></p>\n<p data-sourcepos=\"30:1-31:144\">自分で考えたコードは最高にカッコいいし、書いた達成感もあるが、それは自分のモノサシの中での最高だったりする。<br>\n世界の超絶にカッコいいコードをたくさん読んで、自分のモノサシと一般的なモノサシを近づけてほしい。</p>\n<h2 data-sourcepos=\"34:1-34:51\">\n<span id=\"コーディングは外部設計の翻訳作業\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%AF%E5%A4%96%E9%83%A8%E8%A8%AD%E8%A8%88%E3%81%AE%E7%BF%BB%E8%A8%B3%E4%BD%9C%E6%A5%AD\"><i class=\"fa fa-link\"></i></a>コーディングは外部設計の翻訳作業</h2>\n<p data-sourcepos=\"36:1-36:289\">PG（プログラマ）で数年間経験を積んだらSE（システムエンジニア）として外部設計を行うというキャリアパスは一般的だと思うが、コーディングと外部設計が全く別の工程と考えられているケースが多い様に思う。</p>\n<p data-sourcepos=\"38:1-38:114\">「美しく、読みやすいプログラムは？」という問への一般的な回答は以下だと思う。</p>\n<ul data-sourcepos=\"39:1-42:0\">\n<li data-sourcepos=\"39:1-39:44\">適切なコメントが書かれている</li>\n<li data-sourcepos=\"40:1-40:59\">クラス名や関数名や変数名が分かりやすい</li>\n<li data-sourcepos=\"41:1-42:0\">デザインパターンに沿って設計されている</li>\n</ul>\n<p data-sourcepos=\"43:1-44:379\">ところでこの <strong>「適切な」</strong> とか <strong>「分かりやすい]</strong> とかってなんだろう？<br>\n変数名のルールを分解すると「動詞」+「名詞」、キャメルケースなど体裁を整える方法はよく見かけると思うが、これは仕様書で言えば「体言止めで書こう」といったレベルのルールであり、仕様書全体の読みやすさには大きな影響はあるが本質ではないことが理解できると思う。</p>\n<p data-sourcepos=\"46:1-46:320\"><strong>「分かりやすい」</strong> 仕様書は、 <strong>「ストーリーがきちんとできてる」</strong> 仕様書だと思う。粒度の粗い概要などの話題から始まり、章立てが正しく構成され、自然な流れで物事が説明されている仕様書が分かりやすいのではないだろうか？</p>\n<p data-sourcepos=\"48:1-48:228\">業務プログラムのコーディング（主にビジネスロジック部分のコーディング）は、そのストーリーをそのままコンピューターが理解できる言語に翻訳する作業だと思う。</p>\n<p data-sourcepos=\"50:1-52:168\">当然、それだけでモノができるのは「ローコード」「ノーコード」と言われているツールだけであって、外部設計以外にも莫大なコードが存在するが、「ある一定の断面」を切り取った時に、外部設計のストーリーが読み取れる様に書かれていると「分かりやすい」プログラムになると思う。<br>\nソースを読む人間が持っている前提知識は、外部設計や要検定義など前工程の知識しかないはずだから。<br>\n言語を理解していれば読めるハズ、は、日本語が理解できれば、物理や科学の本を読めるハズと言っているのと変わらない。</p>\n<p data-sourcepos=\"54:1-54:241\"><strong>この様に考えて作業をしていれば、外部設計も自然にできるようになっている</strong>はずなので、コーディング作業から外部設計へとキャリアを変えていく時の痛みが少ないと思う。</p>\n<p data-sourcepos=\"56:1-56:216\">デザインパターンに従って、隙きのないクラス設計を行うのは尊いし価値もあるが、外部設計に従ってコーディングすることにも同じくらい価値があると思う。</p>\n<h2 data-sourcepos=\"59:1-59:42\">\n<span id=\"プログラム以外のこともやる\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E4%BB%A5%E5%A4%96%E3%81%AE%E3%81%93%E3%81%A8%E3%82%82%E3%82%84%E3%82%8B\"><i class=\"fa fa-link\"></i></a>プログラム以外のこともやる</h2>\n<p data-sourcepos=\"61:1-61:265\">わたしの場合、小さなゲーム屋にいたので割と何でもやっていた(画面デザインや簡単なアイコン作成、シナリオ、Webライティング、PM…)ので意識せずに視野を広げることができたと思う点がある。</p>\n<p data-sourcepos=\"63:1-64:228\">業務プログラマーをやっているとプロジェクトのゴールは単一であることが多いと思う。<br>\n製造物がプログラムのみで、それが完成すれば試験して納品となるため、「バグの量」「完成までの時間」などが成果物に対する尺度であり、知覚できることが少ない。</p>\n<p data-sourcepos=\"66:1-68:315\">一方、ゲームのプロジェクトはそうではない。<br>\nグラフィッカーは依頼された画像リソースを完成させるのが彼らのゴールであり、彼らのプロジェクトはそこで終わりである。<br>\nサウンドやシナリオも同様であるが、プログラマは、受け取ったリソースをゲーム上で動く形にするのがゴールである。最後にバトンを握って、リソースに不備があると修正依頼を出して嫌な顔をされながら直してもらうことになる。</p>\n<p data-sourcepos=\"70:1-70:237\">マテリアルデザインが業務アプリの世界にも侵食しつつあり、ガチ業務エンジニアのあなた達も、リア充っぽいデザイナー達と仕事をするようになってくることが想像される。</p>\n<p data-sourcepos=\"72:1-73:314\">ここで理解してほしいのは、誰がいいとか悪いとかではなく、<strong>自分と大きく価値観が異なる人間</strong>がプロジェクトに存在すること。<br>\n製品を開発するプロジェクトにおいて、**「プログラムを書くことはごく一部の工程」**であること、プロジェクトには色々な立場の人が参画していること。<strong>自分の立場のみを主張していると、製品の開発などできない</strong>ということ。</p>\n<h2 data-sourcepos=\"76:1-76:72\">\n<span id=\"技術が分からないから管理をやるは超高難易度\" class=\"fragment\"></span><a href=\"#%E6%8A%80%E8%A1%93%E3%81%8C%E5%88%86%E3%81%8B%E3%82%89%E3%81%AA%E3%81%84%E3%81%8B%E3%82%89%E7%AE%A1%E7%90%86%E3%82%92%E3%82%84%E3%82%8B%E3%81%AF%E8%B6%85%E9%AB%98%E9%9B%A3%E6%98%93%E5%BA%A6\"><i class=\"fa fa-link\"></i></a>「技術が分からないから管理をやる」は超高難易度</h2>\n<p data-sourcepos=\"78:1-78:63\">このようなことを考える方は割といると思う。</p>\n<p data-sourcepos=\"80:1-80:288\">「管理」という仕事が仕事を右から左に流すだけの仕事であれば、可能かもしれないが、見積もりやwbsの作成、メンバーのサポートや教育など、どれを取っても基礎的な技術なしで簡単にできるものはないと思う。</p>\n<p data-sourcepos=\"82:1-82:151\">**そもそも、右から左に流すだけの仕事は存在しない。**誰か特定の人間に頼む必要がある仕事ではないからだ。</p>\n<h2 data-sourcepos=\"85:1-85:36\">\n<span id=\"新卒エンジニアのきみに-1\" class=\"fragment\"></span><a href=\"#%E6%96%B0%E5%8D%92%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%8D%E3%81%BF%E3%81%AB-1\"><i class=\"fa fa-link\"></i></a>新卒エンジニアのきみに</h2>\n<p data-sourcepos=\"87:1-88:264\">技術の遷移を見ていると勉強しなくてよくなる日はこなそうです。<br>\n最近のプログラム言語は昔の言語に比べると簡単だし楽しいですし、どうせやらなければいけないことであれば、楽しくやれるようにポジティブに色々なことに取り組んでもらえたらと思います。</p>\n<p data-sourcepos=\"90:1-90:72\">よかったらこちらの記事も合わせてご参照ください：</p>\n<p data-sourcepos=\"92:1-92:50\"><iframe id=\"qiita-embed-content__e7b9fd51bdb1908411e4c8d8ffa69d1e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__e7b9fd51bdb1908411e4c8d8ffa69d1e\" data-content=\"https%3A%2F%2Fqiita.com%2Fkaku3%2Fitems%2Fabe98001f74025cec422\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n</iframe>\n</p>\n",
    "body": "## 新卒エンジニアのきみに\n\nエンジニア歴ももうすぐ30年になるんだけれども。\n\nもともと趣味でプログラムを書いていたし、C言語さえ覚えればあとは一生勉強せずに食っていけると思っていたんだけれども、今ではそんな言語はほとんど見ることも無くて、新しい言語やフレームワークがものすごいペースで登場と退場を繰り返していて。\n\n時を越えて役に立った、最初から知ってればよかったことを手紙にしておこうと思う。\n\n\n## 読む：9割 / 書く：1割\n\n職業エンジニアの仕事としては、プログラムを1から書く(フルスクラッチする)プロジェクトは少ない。\nスタートアップ企業などで1から書くことももちろんあるが、オープンソースや外部ライブラリ・フレームワークを組み合わせてプログラムを作り、全て自分で作らないケースが大半である。\n\n工夫して自分なりのコードを書くのがプログラミングの醍醐味であるし、達成感も大きいが、全く分からない巨大なスパゲッティーソースから必要な情報を探す能力を上げることも視野に入れよう。結果としてプログラミング上達の近道にもなるから。\n\nそして、優れたオープンソースやライブラリの大半は海外製なので英語もGoogle翻訳を駆使して読めるようにしておこう。\n\n\n## 写経\n\n昔はプログラミングの勉強をしようと思ったら、数千円の書籍を購入する以外に方法がなかったが、今は便利な世の中で github などに優れたソースコードが大量に存在している。\n\n手頃なサイズで興味のありそうなコードを探して、手で打って動くようにしよう。\n\n退屈な教科書の様な書籍から得られる情報よりはるかに多くの情報が得られるはずだ。\n英語の文法を何年も習ってるのに、英文を書けるようにならない理由はシンプルで、**書いてないから**だ。\nif文が分からない、for文が分からないと悩むより、**心を無にして写経をする方が救いがある。**\n\n自分で考えたコードは最高にカッコいいし、書いた達成感もあるが、それは自分のモノサシの中での最高だったりする。\n世界の超絶にカッコいいコードをたくさん読んで、自分のモノサシと一般的なモノサシを近づけてほしい。\n\n\n## コーディングは外部設計の翻訳作業\n\nPG（プログラマ）で数年間経験を積んだらSE（システムエンジニア）として外部設計を行うというキャリアパスは一般的だと思うが、コーディングと外部設計が全く別の工程と考えられているケースが多い様に思う。\n\n「美しく、読みやすいプログラムは？」という問への一般的な回答は以下だと思う。\n- 適切なコメントが書かれている\n- クラス名や関数名や変数名が分かりやすい\n- デザインパターンに沿って設計されている\n\nところでこの **「適切な」** とか **「分かりやすい]** とかってなんだろう？\n変数名のルールを分解すると「動詞」+「名詞」、キャメルケースなど体裁を整える方法はよく見かけると思うが、これは仕様書で言えば「体言止めで書こう」といったレベルのルールであり、仕様書全体の読みやすさには大きな影響はあるが本質ではないことが理解できると思う。\n\n**「分かりやすい」** 仕様書は、 **「ストーリーがきちんとできてる」** 仕様書だと思う。粒度の粗い概要などの話題から始まり、章立てが正しく構成され、自然な流れで物事が説明されている仕様書が分かりやすいのではないだろうか？\n\n業務プログラムのコーディング（主にビジネスロジック部分のコーディング）は、そのストーリーをそのままコンピューターが理解できる言語に翻訳する作業だと思う。\n\n当然、それだけでモノができるのは「ローコード」「ノーコード」と言われているツールだけであって、外部設計以外にも莫大なコードが存在するが、「ある一定の断面」を切り取った時に、外部設計のストーリーが読み取れる様に書かれていると「分かりやすい」プログラムになると思う。\nソースを読む人間が持っている前提知識は、外部設計や要検定義など前工程の知識しかないはずだから。\n言語を理解していれば読めるハズ、は、日本語が理解できれば、物理や科学の本を読めるハズと言っているのと変わらない。\n\n**この様に考えて作業をしていれば、外部設計も自然にできるようになっている**はずなので、コーディング作業から外部設計へとキャリアを変えていく時の痛みが少ないと思う。\n\nデザインパターンに従って、隙きのないクラス設計を行うのは尊いし価値もあるが、外部設計に従ってコーディングすることにも同じくらい価値があると思う。\n\n\n## プログラム以外のこともやる\n\nわたしの場合、小さなゲーム屋にいたので割と何でもやっていた(画面デザインや簡単なアイコン作成、シナリオ、Webライティング、PM…)ので意識せずに視野を広げることができたと思う点がある。\n\n業務プログラマーをやっているとプロジェクトのゴールは単一であることが多いと思う。\n製造物がプログラムのみで、それが完成すれば試験して納品となるため、「バグの量」「完成までの時間」などが成果物に対する尺度であり、知覚できることが少ない。\n\n一方、ゲームのプロジェクトはそうではない。\nグラフィッカーは依頼された画像リソースを完成させるのが彼らのゴールであり、彼らのプロジェクトはそこで終わりである。\nサウンドやシナリオも同様であるが、プログラマは、受け取ったリソースをゲーム上で動く形にするのがゴールである。最後にバトンを握って、リソースに不備があると修正依頼を出して嫌な顔をされながら直してもらうことになる。\n\nマテリアルデザインが業務アプリの世界にも侵食しつつあり、ガチ業務エンジニアのあなた達も、リア充っぽいデザイナー達と仕事をするようになってくることが想像される。\n\nここで理解してほしいのは、誰がいいとか悪いとかではなく、**自分と大きく価値観が異なる人間**がプロジェクトに存在すること。\n製品を開発するプロジェクトにおいて、**「プログラムを書くことはごく一部の工程」**であること、プロジェクトには色々な立場の人が参画していること。**自分の立場のみを主張していると、製品の開発などできない**ということ。\n\n\n## 「技術が分からないから管理をやる」は超高難易度\n\nこのようなことを考える方は割といると思う。\n\n「管理」という仕事が仕事を右から左に流すだけの仕事であれば、可能かもしれないが、見積もりやwbsの作成、メンバーのサポートや教育など、どれを取っても基礎的な技術なしで簡単にできるものはないと思う。\n\n**そもそも、右から左に流すだけの仕事は存在しない。**誰か特定の人間に頼む必要がある仕事ではないからだ。\n\n\n## 新卒エンジニアのきみに\n\n技術の遷移を見ていると勉強しなくてよくなる日はこなそうです。\n最近のプログラム言語は昔の言語に比べると簡単だし楽しいですし、どうせやらなければいけないことであれば、楽しくやれるようにポジティブに色々なことに取り組んでもらえたらと思います。\n\nよかったらこちらの記事も合わせてご参照ください：\n\nhttps://qiita.com/kaku3/items/abe98001f74025cec422\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-04-03T16:10:25+09:00",
    "group": null,
    "id": "759c082ddf32dbe5ed48",
    "likes_count": 5,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 4,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "新人プログラマ応援",
        "versions": []
      },
      {
        "name": "新人エンジニア",
        "versions": []
      }
    ],
    "title": "手紙～拝啓新卒エンジニアのきみに～2021",
    "updated_at": "2023-03-25T17:24:30+09:00",
    "url": "https://qiita.com/kaku3/items/759c082ddf32dbe5ed48",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2534,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>realtime database の何が realtime かよく分かってなかったのですが、誰かが更新したデータをクライアント側で <strong>イベントでリアルタイムで受け取れる</strong> と知りましたので早速使ってみました。</p>\n\n<p>※nuxtjs のプロジェクトに機能追加していますのでサンプルコードは nuxtjs 用です。</p>\n\n<p><a href=\"https://kaku3.github.io/e1-math-plus-10/frontend/dist/\" rel=\"nofollow noopener\" target=\"_blank\">小１さんすうゲーム</a></p>\n\n<p><a href=\"https://github.com/kaku3/e1-math-plus-10/blob/master/frontend/components/Chat.vue\" rel=\"nofollow noopener\" target=\"_blank\">Chatソース</a></p>\n\n<p><a href=\"https://camo.qiitausercontent.com/1df47c32acb290b7f1f5e3a93d470c96e8643a58/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63383031636433652d623230332d353066332d613964632d6633646538326130366263392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc801cd3e-b203-50f3-a9dc-f3de82a06bc9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2fa6b0a32f88752816b6d665233b432c\" alt=\"2021-03-27_18h24_43.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c801cd3e-b203-50f3-a9dc-f3de82a06bc9.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc801cd3e-b203-50f3-a9dc-f3de82a06bc9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=712e13820dfb51105eb139e40c628ba6 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"イベント登録読み込み処理\" class=\"fragment\"></span><a href=\"#%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E7%99%BB%E9%8C%B2%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF%E5%87%A6%E7%90%86\"><i class=\"fa fa-link\"></i></a>イベント登録～読み込み処理</h2>\n\n<div class=\"code-frame\" data-lang=\"typescript\">\n<div class=\"code-lang\"><span class=\"bold\">*.ts</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\">// 直近10件を取得</span>\n<span class=\"c1\">// on : イベント登録。データが更新されるたびに実行</span>\n<span class=\"c1\">// once : 1回のみ実行</span>\n\n<span class=\"c1\">// mount 時にイベント登録しておく</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">db</span> <span class=\"o\">=</span> <span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">database</span><span class=\"p\">()</span>\n<span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">ref</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">room</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">orderByChild</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">createdAt</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">limitToLast</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">value</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">obj</span> <span class=\"o\">=</span> <span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">val</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">obj</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">logs</span> <span class=\"o\">=</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">obj</span><span class=\"p\">).</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"nx\">k</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"kd\">const</span> <span class=\"nx\">o</span> <span class=\"o\">=</span> <span class=\"nx\">obj</span><span class=\"p\">[</span><span class=\"nx\">k</span><span class=\"p\">]</span>\n      <span class=\"k\">return</span> <span class=\"nx\">o</span>\n      <span class=\"p\">})</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"データ登録\" class=\"fragment\"></span><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E7%99%BB%E9%8C%B2\"><i class=\"fa fa-link\"></i></a>データ登録</h2>\n\n<div class=\"code-frame\" data-lang=\"typescript\">\n<div class=\"code-lang\"><span class=\"bold\">　*.ts</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nx\">postComment</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">comment</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">room</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// push で登録</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">db</span> <span class=\"o\">=</span> <span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">database</span><span class=\"p\">()</span>\n    <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">ref</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">room</span><span class=\"p\">).</span><span class=\"nx\">push</span><span class=\"p\">({</span>\n      <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">accountStore</span><span class=\"p\">.</span><span class=\"nx\">account</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">,</span>\n      <span class=\"na\">comment</span><span class=\"p\">:</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">comment</span><span class=\"p\">,</span>\n      <span class=\"na\">createdAt</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">()).</span><span class=\"nx\">getTime</span><span class=\"p\">()</span>\n    <span class=\"p\">})</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">comment</span> <span class=\"o\">=</span> <span class=\"dl\">\"\"</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"認証ガバガバ\" class=\"fragment\"></span><a href=\"#%E8%AA%8D%E8%A8%BC%E3%82%AC%E3%83%90%E3%82%AC%E3%83%90\"><i class=\"fa fa-link\"></i></a>認証（ガバガバ）</h2>\n\n<p>realtime database は割と課金が発生しやすいと評判なので認証済みユーザーのみ書き込み可能にする。<br>\nと言っても、ユーザーデータを保存したくないので匿名ログインで対応する。</p>\n\n<ul>\n<li><p>firebaseの管理画面で「匿名」ログインを有効にする<br>\n<a href=\"https://camo.qiitausercontent.com/fbcc17f255e9c79f3a1154cbfaf8e2c6ec41b845/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f61323732663666392d613239382d623638302d306664312d3039616262323439333565612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa272f6f9-a298-b680-0fd1-09abb24935ea.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=11743ab0e1a653aa3b0ccb44ac175c72\" alt=\"2021-03-27_18h43_57.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a272f6f9-a298-b680-0fd1-09abb24935ea.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa272f6f9-a298-b680-0fd1-09abb24935ea.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=3276546d4dd5a239f6faa5e8b0b93665 1x\" loading=\"lazy\"></a></p></li>\n<li><p>middleware でサラッとログインする</p></li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">middleware/authentication.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"nx\">firebase</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@/plugins/firebase</span><span class=\"dl\">'</span>\n\n<span class=\"c1\">// 匿名ログイン</span>\n<span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">auth</span><span class=\"p\">().</span><span class=\"nx\">signInAnonymously</span><span class=\"p\">()</span>\n<span class=\"p\">.</span><span class=\"k\">catch</span><span class=\"p\">((</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`[error] Can not signin anonymouse (</span><span class=\"p\">${</span><span class=\"nx\">error</span><span class=\"p\">.</span><span class=\"nx\">code</span><span class=\"p\">}</span><span class=\"s2\">:</span><span class=\"p\">${</span><span class=\"nx\">error</span><span class=\"p\">.</span><span class=\"nx\">message</span><span class=\"p\">}</span><span class=\"s2\">)`</span><span class=\"p\">);</span>\n<span class=\"p\">})</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"p\">({</span> <span class=\"nx\">route</span><span class=\"p\">,</span> <span class=\"nx\">store</span><span class=\"p\">,</span> <span class=\"nx\">redirect</span> <span class=\"p\">})</span> <span class=\"p\">{</span>\n  <span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">auth</span><span class=\"p\">().</span><span class=\"nx\">onAuthStateChanged</span><span class=\"p\">((</span><span class=\"nx\">user</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 本来はログインしてなければログイン画面に飛ばすなどの処理を書く</span>\n    <span class=\"c1\">// 今回は無条件で匿名ログインするため処理なし</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">user</span><span class=\"p\">)</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n\n</code></pre></div>\n</div>\n\n<ul>\n<li>nuxt.config.js に authentication 処理を追加する</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">nuxt.config.js</span></div>\n<div class=\"highlight\"><pre><code>\n  <span class=\"nx\">router</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nl\">base</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">/e1-math-plus-10/frontend/dist/</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"nx\">middleware</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">authentication</span><span class=\"dl\">'</span><span class=\"p\">]</span> <span class=\"c1\">// ★追加</span>\n  <span class=\"p\">},</span>\n\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"ルール修正\" class=\"fragment\"></span><a href=\"#%E3%83%AB%E3%83%BC%E3%83%AB%E4%BF%AE%E6%AD%A3\"><i class=\"fa fa-link\"></i></a>ルール修正</h2>\n\n<p>若干安全ではないですがとりあえず <code>auth != null</code></p>\n\n<p><a href=\"https://camo.qiitausercontent.com/f7aa0f95b943fdd4aa65ad2f017405166291a942/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f65333665343838632d653237622d303063352d393239302d6562313534663536366262382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe36e488c-e27b-00c5-9290-eb154f566bb8.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f552ecdd5fe7121bd03510284786224d\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e36e488c-e27b-00c5-9290-eb154f566bb8.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe36e488c-e27b-00c5-9290-eb154f566bb8.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=3e4ba104ef3d6f194d6fd21769ed2887 1x\" loading=\"lazy\"></a></p>\n\n<p><a href=\"https://camo.qiitausercontent.com/a2c7e32b4e374417ae99f009008a1eab5026642b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f32396633306661662d663163662d356530392d343462342d6465646461663863623630622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F29f30faf-f1cf-5e09-44b4-deddaf8cb60b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=0b0a9cee2e194f4f2185947f3131f1cd\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/29f30faf-f1cf-5e09-44b4-deddaf8cb60b.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F29f30faf-f1cf-5e09-44b4-deddaf8cb60b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=3f6e656a0966bebd84b2be5fefbb5f43 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"バッジ処理\" class=\"fragment\"></span><a href=\"#%E3%83%90%E3%83%83%E3%82%B8%E5%87%A6%E7%90%86\"><i class=\"fa fa-link\"></i></a>バッジ処理</h2>\n\n<p>バッジでボタンを囲めば、右肩にバッジ表示が出ます。表示条件、表示内容を :content, :value で指定。<br>\nvuetify、簡単できれいでいいですね。</p>\n\n<div class=\"code-frame\" data-lang=\"vue\">\n<div class=\"code-lang\"><span class=\"bold\">　Chat.vue</span></div>\n<div class=\"highlight\"><pre><code>    <span class=\"nt\">&lt;v-badge</span>\n      <span class=\"na\">:content=</span><span class=\"s\">\"unreadCount\"</span>\n      <span class=\"na\">:value=</span><span class=\"s\">\"unreadCount\"</span>\n      <span class=\"na\">bordered</span>\n      <span class=\"na\">color=</span><span class=\"s\">\"info\"</span>\n      <span class=\"na\">overlap</span>\n      <span class=\"na\">class=</span><span class=\"s\">\"toggle-show-icon\"</span>\n    <span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;v-btn</span>\n        <span class=\"na\">fab</span>\n        <span class=\"na\">dark</span>\n        <span class=\"na\">small</span>\n        <span class=\"na\">:color=</span><span class=\"s\">\"showIconColor\"</span>\n        <span class=\"err\">@</span><span class=\"na\">click=</span><span class=\"s\">\"toggleShow()\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;v-icon&gt;</span>mdi-chat<span class=\"nt\">&lt;/v-icon&gt;</span>\n      <span class=\"nt\">&lt;/v-btn&gt;</span>\n    <span class=\"nt\">&lt;/v-badge&gt;</span>\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>サラッと説明しましたが以上となります。<br>\nDBのスキーマ定義なども不要で、適当にデータ投げ込んで適当に通知されて適当にできる、ってぐらい簡単でした。</p>\n",
    "body": "## はじめに\n\nrealtime database の何が realtime かよく分かってなかったのですが、誰かが更新したデータをクライアント側で **イベントでリアルタイムで受け取れる** と知りましたので早速使ってみました。\n\n※nuxtjs のプロジェクトに機能追加していますのでサンプルコードは nuxtjs 用です。\n\n[小１さんすうゲーム](https://kaku3.github.io/e1-math-plus-10/frontend/dist/)\n\n[Chatソース](https://github.com/kaku3/e1-math-plus-10/blob/master/frontend/components/Chat.vue)\n\n![2021-03-27_18h24_43.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c801cd3e-b203-50f3-a9dc-f3de82a06bc9.png)\n\n## イベント登録～読み込み処理\n\n``` *.ts\n// 直近10件を取得\n// on : イベント登録。データが更新されるたびに実行\n// once : 1回のみ実行\n\n// mount 時にイベント登録しておく\n\nconst db = firebase.database()\ndb.ref(this.room)\n  .orderByChild('createdAt')\n  .limitToLast(10)\n  .on(\"value\", (data) => {\n  if(data) {\n    const obj = data.val()\n    if(obj) {\n      this.logs = Object.keys(obj).map(k => {\n      const o = obj[k]\n      return o\n      })\n    }\n  }\n})\n```\n\n## データ登録\n```　*.ts\npostComment() {\n  if(!this.comment) {\n    return\n  }\n  if(this.room) {\n    // push で登録\n    const db = firebase.database()\n    db.ref(this.room).push({\n      name: this.accountStore.account.name,\n      comment: this.comment,\n      createdAt: (new Date()).getTime()\n    })\n  }\n  this.comment = \"\"\n}\n```\n\n## 認証（ガバガバ）\nrealtime database は割と課金が発生しやすいと評判なので認証済みユーザーのみ書き込み可能にする。\nと言っても、ユーザーデータを保存したくないので匿名ログインで対応する。\n\n* firebaseの管理画面で「匿名」ログインを有効にする\n![2021-03-27_18h43_57.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a272f6f9-a298-b680-0fd1-09abb24935ea.png)\n\n* middleware でサラッとログインする\n\n``` middleware/authentication.js\nimport firebase from '@/plugins/firebase'\n\n// 匿名ログイン\nfirebase.auth().signInAnonymously()\n.catch((error) => {\n  console.log(`[error] Can not signin anonymouse (${error.code}:${error.message})`);\n})\n\nexport default function ({ route, store, redirect }) {\n  firebase.auth().onAuthStateChanged((user) => {\n    // 本来はログインしてなければログイン画面に飛ばすなどの処理を書く\n    // 今回は無条件で匿名ログインするため処理なし\n    console.log(user)\n  })\n}\n\n```\n\n* nuxt.config.js に authentication 処理を追加する\n\n``` nuxt.config.js\n\n  router: {\n    base: '/e1-math-plus-10/frontend/dist/',\n    middleware: ['authentication'] // ★追加\n  },\n\n```\n\n## ルール修正\n\n若干安全ではないですがとりあえず `auth != null`\n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e36e488c-e27b-00c5-9290-eb154f566bb8.png)\n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/29f30faf-f1cf-5e09-44b4-deddaf8cb60b.png)\n\n\n## バッジ処理\n\nバッジでボタンを囲めば、右肩にバッジ表示が出ます。表示条件、表示内容を :content, :value で指定。\nvuetify、簡単できれいでいいですね。\n\n```　Chat.vue\n    <v-badge\n      :content=\"unreadCount\"\n      :value=\"unreadCount\"\n      bordered\n      color=\"info\"\n      overlap\n      class=\"toggle-show-icon\"\n    >\n      <v-btn\n        fab\n        dark\n        small\n        :color=\"showIconColor\"\n        @click=\"toggleShow()\">\n        <v-icon>mdi-chat</v-icon>\n      </v-btn>\n    </v-badge>\n```\n\n## おわりに\n\nサラッと説明しましたが以上となります。\nDBのスキーマ定義なども不要で、適当にデータ投げ込んで適当に通知されて適当にできる、ってぐらい簡単でした。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-03-27T18:57:07+09:00",
    "group": null,
    "id": "0543a8b06a933dfea4b6",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 1,
    "tags": [
      {
        "name": "Vue.js",
        "versions": []
      },
      {
        "name": "Firebase",
        "versions": []
      },
      {
        "name": "Vuetify",
        "versions": []
      },
      {
        "name": "Nuxt",
        "versions": []
      }
    ],
    "title": "firebase realtime database でLine的なチャットを実装",
    "updated_at": "2021-03-27T18:57:07+09:00",
    "url": "https://qiita.com/kaku3/items/0543a8b06a933dfea4b6",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1947,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>先週からwebアプリ作ってまして。<br>\n<a href=\"https://qiita.com/kaku3/items/209c22a8638b55d99fc0\" id=\"reference-200d1e2edd0481bfc5d9\">nuxt.js で4月から小学生の息子用に足し算練習webアプリを半日で作成できるか企画</a></p>\n\n<p>ランキング機能あるとモチベーション上がるだろうと思って firebase でさらっとランキング作ったのですが。</p>\n\n<p>ワイフ「上位陣に動きがなくてつまらない」<br>\nワイ「じゃー、デイリーランキング作るわ」</p>\n\n<p>と言うやり取りがありまして。</p>\n\n<p>そんなこともあろうかとスコア登録日時のタイムスタンプを登録してたのでチョロく出来るかと思って２つ返事をしたら、firestore の制限でハマりましたというお話です。</p>\n\n<h2>\n<span id=\"データ構造\" class=\"fragment\"></span><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0\"><i class=\"fa fa-link\"></i></a>データ構造</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>scores [\n  {\n    mode: 'ゲームモード', // 複数のゲームモードのスコアを同じテーブルに格納している\n    name: 'ニックネーム',\n    score: 得点\n    createdAt: 登録日時のタイムスタンプ\n  },\n  ...\n]\n</code></pre></div></div>\n\n<h2>\n<span id=\"日指定しないクエリ\" class=\"fragment\"></span><a href=\"#%E6%97%A5%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%AA%E3%81%84%E3%82%AF%E3%82%A8%E3%83%AA\"><i class=\"fa fa-link\"></i></a>日指定しないクエリ</h2>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">query.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">const</span> <span class=\"nx\">q</span> <span class=\"o\">=</span> <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">collection</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">scores</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">where</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">mode</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">==</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">displayGameMode</span><span class=\"p\">)</span> <span class=\"c1\">// 10秒モード, 30秒モード, 耐久モード</span>\n            <span class=\"p\">.</span><span class=\"nx\">orderBy</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">score</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">orderBy</span><span class=\"p\">)</span> <span class=\"c1\">// 'desc' or 'asc'</span>\n            <span class=\"p\">.</span><span class=\"nx\">limit</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</code></pre></div>\n</div>\n\n<p>複数の項目に対して条件を付ける場合 index を作成する必要があります。<br>\nゲームモードによってスコア昇順 / スコア降順で値を取得したいので2つ index を作成します。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/17fed57b57334fffbcbbf2808bda6e4c921e54de/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38316234333164312d636364372d333038382d343464662d3730356438303336653964362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F81b431d1-ccd7-3088-44df-705d8036e9d6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=fb6139b8b88361cee8014ada373682d4\" alt=\"2021-03-20_18h20_09.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/81b431d1-ccd7-3088-44df-705d8036e9d6.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F81b431d1-ccd7-3088-44df-705d8036e9d6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b95e5405bc3c4dd31715a306686e4344 1x\" loading=\"lazy\"></a></p>\n\n<ul>\n<li>mode Ascending, score Ascending</li>\n<li>mode Ascending, score Descending</li>\n</ul>\n\n<p>mode は [=] の比較でしか使わないので昇順でも降順でも問題ないです。</p>\n\n<p>index を指定していない状態で query を投げるとブラウザのコンソールに警告が出て、リンクを踏むと上のスクリーンショットのページに遷移し index を作成できるのでここは悩まずイケます。</p>\n\n<h2>\n<span id=\"日指定するクエリ\" class=\"fragment\"></span><a href=\"#%E6%97%A5%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B%E3%82%AF%E3%82%A8%E3%83%AA\"><i class=\"fa fa-link\"></i></a>日指定するクエリ</h2>\n\n<p>問題はこちら。<br>\nネットを細切れに検索すると日指定できそうに見え、実際指定できるのですが <strong>他の項目でソートできない</strong> という制限があります。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">query.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\">// 動く</span>\n<span class=\"kd\">const</span> <span class=\"nx\">q</span> <span class=\"o\">=</span> <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">collection</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">scores</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">where</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">mode</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">==</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">displayGameMode</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">where</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">createdAt</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">&gt;=</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">startTime</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">where</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">createdAt</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">endTime</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">limit</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n<span class=\"c1\">// 動く</span>\n<span class=\"kd\">const</span> <span class=\"nx\">q</span> <span class=\"o\">=</span> <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">collection</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">scores</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">where</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">mode</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">==</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">displayGameMode</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">orderBy</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">createdAt</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">desc</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">startAt</span><span class=\"p\">(</span><span class=\"nx\">startTime</span><span class=\"p\">)</span> <span class=\"c1\">// startAt(&gt;=), startAfter(&gt;)</span>\n            <span class=\"p\">.</span><span class=\"nx\">endBefore</span><span class=\"p\">(</span><span class=\"nx\">endTime</span><span class=\"p\">)</span> <span class=\"c1\">// endAt(&lt;), endBefore(&lt;)</span>\n\n<span class=\"c1\">// 動かない</span>\n<span class=\"kd\">const</span> <span class=\"nx\">q</span> <span class=\"o\">=</span> <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">collection</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">scores</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">where</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">mode</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">==</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">displayGameMode</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">where</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">createdAt</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">&gt;=</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">startTime</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">where</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">createdAt</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">endTime</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">orderBy</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">score</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">orderBy</span><span class=\"p\">)</span>  <span class=\"c1\">// ★範囲で取得する値と異なる項目でソートできない</span>\n            <span class=\"p\">.</span><span class=\"nx\">limit</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"回避\" class=\"fragment\"></span><a href=\"#%E5%9B%9E%E9%81%BF\"><i class=\"fa fa-link\"></i></a>回避</h2>\n\n<p>日付に貼り付けて登録も取得も行う様にして、= で比較出来るようにしました。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">query.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\">// 動く</span>\n<span class=\"kd\">const</span> <span class=\"nx\">q</span> <span class=\"o\">=</span> <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">collection</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">scores</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">where</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">mode</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">==</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">displayGameMode</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">where</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">createdAt</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">=</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">startTime</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">orderBy</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">score</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">orderBy</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">limit</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>開発進んでからこういうのに気づくと致命傷だったりするのでお気をつけください。</p>\n",
    "body": "## はじめに\n\n先週からwebアプリ作ってまして。\n[nuxt.js で4月から小学生の息子用に足し算練習webアプリを半日で作成できるか企画](https://qiita.com/kaku3/items/209c22a8638b55d99fc0)\n\nランキング機能あるとモチベーション上がるだろうと思って firebase でさらっとランキング作ったのですが。\n\nワイフ「上位陣に動きがなくてつまらない」\nワイ「じゃー、デイリーランキング作るわ」\n\nと言うやり取りがありまして。\n\nそんなこともあろうかとスコア登録日時のタイムスタンプを登録してたのでチョロく出来るかと思って２つ返事をしたら、firestore の制限でハマりましたというお話です。\n\n## データ構造\n\n```\nscores [\n  {\n    mode: 'ゲームモード', // 複数のゲームモードのスコアを同じテーブルに格納している\n    name: 'ニックネーム',\n    score: 得点\n    createdAt: 登録日時のタイムスタンプ\n  },\n  ...\n]\n```\n\n## 日指定しないクエリ\n\n``` query.js\nconst q = db.collection('scores')\n            .where('mode', '==', this.displayGameMode) // 10秒モード, 30秒モード, 耐久モード\n            .orderBy('score', this.orderBy) // 'desc' or 'asc'\n            .limit(100)\n```\n\n複数の項目に対して条件を付ける場合 index を作成する必要があります。\nゲームモードによってスコア昇順 / スコア降順で値を取得したいので2つ index を作成します。\n\n![2021-03-20_18h20_09.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/81b431d1-ccd7-3088-44df-705d8036e9d6.png)\n\n- mode Ascending, score Ascending\n- mode Ascending, score Descending\n\nmode は [=] の比較でしか使わないので昇順でも降順でも問題ないです。\n\nindex を指定していない状態で query を投げるとブラウザのコンソールに警告が出て、リンクを踏むと上のスクリーンショットのページに遷移し index を作成できるのでここは悩まずイケます。\n\n## 日指定するクエリ\n\n問題はこちら。\nネットを細切れに検索すると日指定できそうに見え、実際指定できるのですが **他の項目でソートできない** という制限があります。\n\n``` query.js\n// 動く\nconst q = db.collection('scores')\n            .where('mode', '==', this.displayGameMode)\n            .where('createdAt', '>=', startTime)\n            .where('createdAt', '<', endTime)\n            .limit(100)\n\n// 動く\nconst q = db.collection('scores')\n            .where('mode', '==', this.displayGameMode)\n            .orderBy('createdAt', 'desc')\n            .startAt(startTime) // startAt(>=), startAfter(>)\n            .endBefore(endTime) // endAt(<), endBefore(<)\n\n// 動かない\nconst q = db.collection('scores')\n            .where('mode', '==', this.displayGameMode)\n            .where('createdAt', '>=', startTime)\n            .where('createdAt', '<', endTime)\n            .orderBy('score', this.orderBy)  // ★範囲で取得する値と異なる項目でソートできない\n            .limit(100)\n\n```\n\n## 回避\n\n日付に貼り付けて登録も取得も行う様にして、= で比較出来るようにしました。\n\n``` query.js\n// 動く\nconst q = db.collection('scores')\n            .where('mode', '==', this.displayGameMode)\n            .where('createdAt', '=', startTime)\n            .orderBy('score', this.orderBy)\n            .limit(100)\n```\n\n## おわりに\n\n開発進んでからこういうのに気づくと致命傷だったりするのでお気をつけください。\n\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-03-20T18:41:14+09:00",
    "group": null,
    "id": "3da923840beba7e1e5aa",
    "likes_count": 3,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 1,
    "tags": [
      {
        "name": "Firebase",
        "versions": []
      },
      {
        "name": "Firestore",
        "versions": []
      }
    ],
    "title": "Cloud Firestore orderBy 制限：範囲で取得する値と異なる項目でソートできない",
    "updated_at": "2021-03-20T18:41:14+09:00",
    "url": "https://qiita.com/kaku3/items/3da923840beba7e1e5aa",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1755,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>4月から小学校に入る息子がいるんですが。<br>\n100マス計算を紙に書いてやってたんでDXしたるわと思いまして。<br>\nnuxt.js なら半日で作れるんじゃないかと思い立って作りました。</p>\n\n<p>思わぬところで色々ハマりまして未完成ですが、一応練習できるとこまでは作れた感じです。<br>\n(3/17 完成:履歴・グラフ・ハイスコアネット保存対応)<br>\n子供向けとか舐めて作らずに大人でも脳トレ的に使える程度に調整しました。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/12c540b5924ac02a98bbf79c9faa677400708ee9/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64633133343365302d356635332d316639382d343632392d3436383934653632363838352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdc1343e0-5f53-1f98-4629-46894e626885.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=1da5080c8d6cb2561073807dcc574ac5\" alt=\"足し算練習帳web.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/dc1343e0-5f53-1f98-4629-46894e626885.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdc1343e0-5f53-1f98-4629-46894e626885.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c195d110682de27362f062a8458d814e 1x\" loading=\"lazy\"></a></p>\n\n<p><a href=\"https://kaku3.github.io/e1-math-plus-10/frontend/dist/\" rel=\"nofollow noopener\" target=\"_blank\">足し算練習webアプリ<del>(未完成)</del></a></p>\n\n<p><a href=\"https://github.com/kaku3/e1-math-plus-10/blob/master/frontend/components/Game.vue\" rel=\"nofollow noopener\" target=\"_blank\">ソースの大半はこちら</a></p>\n\n<h2>\n<span id=\"ポイント\" class=\"fragment\"></span><a href=\"#%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\"><i class=\"fa fa-link\"></i></a>ポイント</h2>\n\n<h3>\n<span id=\"カラー\" class=\"fragment\"></span><a href=\"#%E3%82%AB%E3%83%A9%E3%83%BC\"><i class=\"fa fa-link\"></i></a>カラー</h3>\n\n<p>Vuetify で、マテリアルカラーパレットが定義されていて、適当に作ってもそれっぽくなりました。<br>\n<a href=\"https://vuetifyjs.com/ja/styles/colors/\" rel=\"nofollow noopener\" target=\"_blank\">Colors</a></p>\n\n<h3>\n<span id=\"フォント\" class=\"fragment\"></span><a href=\"#%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88\"><i class=\"fa fa-link\"></i></a>フォント</h3>\n\n<p>google webfont は config ファイルで簡単に追加可能。<br>\nここを頑張るだけでデフォルト感がだいぶなくなる。今回の企画で絶対外せないところ。<br>\n日本語フォントが無くて辛いです。</p>\n\n<p>※<a href=\"https://googlefonts.github.io/japanese/\" rel=\"nofollow noopener\" target=\"_blank\">Google Fonts + 日本語</a>に良さそうなフォントがあったのですが、早期アクセスのはさらっと追加できなかったので見送りました。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">nuxt.config.js</span></div>\n<div class=\"highlight\"><pre><code>  <span class=\"p\">...(</span><span class=\"nx\">略</span><span class=\"p\">)...</span>\n  <span class=\"c1\">// Modules: https://go.nuxtjs.dev/config-modules</span>\n  <span class=\"nx\">modules</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"c1\">// https://go.nuxtjs.dev/axios</span>\n    <span class=\"dl\">'</span><span class=\"s1\">@nuxtjs/axios</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"c1\">// https://go.nuxtjs.dev/pwa</span>\n    <span class=\"dl\">'</span><span class=\"s1\">@nuxtjs/pwa</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"c1\">// https://go.nuxtjs.dev/content</span>\n    <span class=\"dl\">'</span><span class=\"s1\">@nuxt/content</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"dl\">'</span><span class=\"s1\">nuxt-webfontloader</span><span class=\"dl\">'</span>  <span class=\"c1\">// ★追加 yarn add nuxt-webfontloader -D も</span>\n  <span class=\"p\">],</span>\n  <span class=\"c1\">// ★追加</span>\n  <span class=\"nx\">webfontloader</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nl\">google</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"na\">families</span><span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"dl\">'</span><span class=\"s1\">Fredoka+One</span><span class=\"dl\">'</span> <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"vue\">\n<div class=\"code-lang\"><span class=\"bold\">Game.vue</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nt\">&lt;</span><span class=\"k\">style</span><span class=\"nt\">&gt;</span>\n  <span class=\"o\">...(</span><span class=\"nt\">略</span><span class=\"o\">)...</span>\n  <span class=\"nt\">font-family</span><span class=\"o\">:</span> <span class=\"s2\">'Fredoka One'</span><span class=\"o\">;</span>\n<span class=\"nt\">&lt;/</span><span class=\"k\">style</span><span class=\"nt\">&gt;</span>\n</code></pre></div>\n</div>\n\n<h3>\n<span id=\"スコア処理エフェクト\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%82%B3%E3%82%A2%E5%87%A6%E7%90%86%E3%82%A8%E3%83%95%E3%82%A7%E3%82%AF%E3%83%88\"><i class=\"fa fa-link\"></i></a>スコア処理エフェクト</h3>\n\n<p>Vuetify の transition で、v-if / v-show を囲うと、表示/非表示切り替え時にアニメーションを行うようになる。<br>\nモチベーションの観点からエフェクトは超重要だけど、コストかけずに作れるところまで。</p>\n\n<div class=\"code-frame\" data-lang=\"vue\">\n<div class=\"code-lang\"><span class=\"bold\">Game.vue</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nt\">&lt;v-scroll-x-transition&gt;</span> // ★これで囲う。transitionの種類は色々ある\n  <span class=\"nt\">&lt;v-col</span>\n    <span class=\"na\">v-if=</span><span class=\"s\">\"showAddScoreEffect\"</span>\n    <span class=\"na\">cols=</span><span class=\"s\">\"auto\"</span>\n    <span class=\"na\">class=</span><span class=\"s\">\"effect orange--text\"</span>\n  <span class=\"nt\">&gt;</span>\n    +{{addedScore}}\n  <span class=\"nt\">&lt;/v-col&gt;</span>\n<span class=\"nt\">&lt;/v-scroll-x-transition&gt;</span> // ★これで囲う\n</code></pre></div>\n</div>\n\n<h3>\n<span id=\"効果音\" class=\"fragment\"></span><a href=\"#%E5%8A%B9%E6%9E%9C%E9%9F%B3\"><i class=\"fa fa-link\"></i></a>効果音</h3>\n\n<p>ユーザーテスト（）を実施したところ、音を鳴らせと言われたので追加しました。<br>\nナチュラルに要望が贅沢なのはデジタルネイティブって感じですね。<br>\nスマブラみたいなの作れとか言われないだけマシですが。</p>\n\n<p>以下参考に実装しました。<br>\n<a href=\"https://remoter.hatenablog.com/entry/2020/04/14/Nuxt%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%A7mp3%E3%82%92%E5%86%8D%E7%94%9F%E3%81%99%E3%82%8B\" rel=\"nofollow noopener\" target=\"_blank\">Nuxtプロジェクトでmp3を再生する</a></p>\n\n<h3>\n<span id=\"filter--computed\" class=\"fragment\"></span><a href=\"#filter--computed\"><i class=\"fa fa-link\"></i></a>filter / computed</h3>\n\n<p>なんとなくうまく使うと慣れてる様に見えていい気がする。（え</p>\n\n<div class=\"code-frame\" data-lang=\"vue\">\n<div class=\"code-lang\"><span class=\"bold\">Game.vue</span></div>\n<div class=\"highlight\"><pre><code>// 0 = 未解答の時は空欄にしたいので、解答済みフィルタ作成\n<span class=\"nt\">&lt;v-col</span> <span class=\"na\">class=</span><span class=\"s\">\"amber--text answer\"</span> <span class=\"na\">align-self=</span><span class=\"s\">\"center\"</span><span class=\"nt\">&gt;</span>\n  {{answer | answered}}\n<span class=\"nt\">&lt;/v-col&gt;</span>\n\n<span class=\"nt\">&lt;</span><span class=\"k\">script</span><span class=\"nt\">&gt;</span>\n<span class=\"kd\">function</span> <span class=\"nx\">answered</span><span class=\"p\">(</span><span class=\"nx\">v</span><span class=\"p\">:</span> <span class=\"nx\">number</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">v</span> <span class=\"o\">!==</span> <span class=\"mi\">0</span> <span class=\"p\">?</span> <span class=\"nx\">v</span> <span class=\"p\">:</span> <span class=\"dl\">''</span>\n<span class=\"p\">}</span>\n<span class=\"p\">...(</span><span class=\"nx\">略</span><span class=\"p\">)...</span>\n\n  <span class=\"nx\">filters</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nx\">answered</span>\n  <span class=\"p\">}</span>\n\n<span class=\"nt\">&lt;/</span><span class=\"k\">script</span><span class=\"nt\">&gt;</span>\n</code></pre></div>\n</div>\n\n<h3>\n<span id=\"github-pages-での公開\" class=\"fragment\"></span><a href=\"#github-pages-%E3%81%A7%E3%81%AE%E5%85%AC%E9%96%8B\"><i class=\"fa fa-link\"></i></a>github pages での公開</h3>\n\n<h4>\n<span id=\"jekyll\" class=\"fragment\"></span><a href=\"#jekyll\"><i class=\"fa fa-link\"></i></a>jekyll</h4>\n\n<p>404エラーが出て意味がわからなかった。<br>\nアンダースコアで始まるフォルダなど無視されるとのことでした。<br>\n公開対象リポジトリのルートに、<code>.nojekyll</code>ファイルを配置すると回避できる。</p>\n\n<p><a href=\"https://docs.github.com/ja/github/working-with-github-pages/about-github-pages-and-jekyll\" rel=\"nofollow noopener\" target=\"_blank\">GitHub PagesとJekyllについて<br>\n</a></p>\n\n<h4>\n<span id=\"root\" class=\"fragment\"></span><a href=\"#root\"><i class=\"fa fa-link\"></i></a>root</h4>\n\n<p>公開先URLは以下になる。<br>\n{アカウント名}.github.io/リポジトリ名/{path-to-dist}/<br>\n{path-to-dist} フォルダがルートとして動作するように <code>nuxt.config.js</code> を設定する。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">nuxt.config.js</span></div>\n<div class=\"highlight\"><pre><code>  <span class=\"p\">...(</span><span class=\"nx\">略</span><span class=\"p\">)...</span>\n  <span class=\"nx\">router</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// https://kaku3.github.io/e1-math-plus-10/frontend/dist/</span>\n    <span class=\"nl\">base</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">/e1-math-plus-10/frontend/dist/</span><span class=\"dl\">'</span>\n  <span class=\"p\">},</span>\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>休日にサクッとファミリー向けアプリ作ってパパかっこいいと言われたいなと思いましたが、そんなことするより子供と遊べよという気がしないでもないです。</p>\n\n<p>(残処理)<br>\n- <del>ゲームオーバー処理</del> (2021/03/14 更新)<br>\n- <del>firebase に履歴保存</del> (2021/03/17 更新)<br>\n- <del>グラフ表示</del> (2021/03/15 更新)</p>\n\n<p>nuxt.js 興味わきましたらこちらもどうぞ。</p>\n\n<ul>\n<li><a href=\"https://qiita.com/kaku3/items/c4a9f72e73247c776c93\" id=\"reference-e4321d2ec12478778e4c\">【2020年版】Vue + Vuetify + typescript でWeb開発するならNuxt.jsを使おう</a></li>\n<li><a href=\"https://qiita.com/kaku3/items/05a0de729da7faba9ce4\" id=\"reference-1609af71635ef5a6cd34\">【超簡単フロントエンド開発】Storybook6.1 + Nuxtjs (+Vuetify)</a></li>\n</ul>\n",
    "body": "## はじめに\n\n4月から小学校に入る息子がいるんですが。\n100マス計算を紙に書いてやってたんでDXしたるわと思いまして。\nnuxt.js なら半日で作れるんじゃないかと思い立って作りました。\n\n思わぬところで色々ハマりまして未完成ですが、一応練習できるとこまでは作れた感じです。\n(3/17 完成:履歴・グラフ・ハイスコアネット保存対応)\n子供向けとか舐めて作らずに大人でも脳トレ的に使える程度に調整しました。\n\n![足し算練習帳web.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/dc1343e0-5f53-1f98-4629-46894e626885.png)\n\n[足し算練習webアプリ~~(未完成)~~](https://kaku3.github.io/e1-math-plus-10/frontend/dist/)\n\n[ソースの大半はこちら](https://github.com/kaku3/e1-math-plus-10/blob/master/frontend/components/Game.vue)\n\n\n## ポイント\n\n### カラー\n\nVuetify で、マテリアルカラーパレットが定義されていて、適当に作ってもそれっぽくなりました。\n[Colors](https://vuetifyjs.com/ja/styles/colors/)\n\n### フォント\n\ngoogle webfont は config ファイルで簡単に追加可能。\nここを頑張るだけでデフォルト感がだいぶなくなる。今回の企画で絶対外せないところ。\n日本語フォントが無くて辛いです。\n\n※[Google Fonts + 日本語](https://googlefonts.github.io/japanese/)に良さそうなフォントがあったのですが、早期アクセスのはさらっと追加できなかったので見送りました。\n\n``` nuxt.config.js\n  ...(略)...\n  // Modules: https://go.nuxtjs.dev/config-modules\n  modules: [\n    // https://go.nuxtjs.dev/axios\n    '@nuxtjs/axios',\n    // https://go.nuxtjs.dev/pwa\n    '@nuxtjs/pwa',\n    // https://go.nuxtjs.dev/content\n    '@nuxt/content',\n    'nuxt-webfontloader'  // ★追加 yarn add nuxt-webfontloader -D も\n  ],\n  // ★追加\n  webfontloader: {\n    google: {\n      families: [ 'Fredoka+One' ]\n    }\n  },\n```\n\n``` Game.vue\n<style>\n  ...(略)...\n  font-family: 'Fredoka One';\n</style>\n```\n\n### スコア処理エフェクト\n\nVuetify の transition で、v-if / v-show を囲うと、表示/非表示切り替え時にアニメーションを行うようになる。\nモチベーションの観点からエフェクトは超重要だけど、コストかけずに作れるところまで。\n\n``` Game.vue\n<v-scroll-x-transition> // ★これで囲う。transitionの種類は色々ある\n  <v-col\n    v-if=\"showAddScoreEffect\"\n    cols=\"auto\"\n    class=\"effect orange--text\"\n  >\n    +{{addedScore}}\n  </v-col>\n</v-scroll-x-transition> // ★これで囲う\n```\n\n### 効果音\n\nユーザーテスト（）を実施したところ、音を鳴らせと言われたので追加しました。\nナチュラルに要望が贅沢なのはデジタルネイティブって感じですね。\nスマブラみたいなの作れとか言われないだけマシですが。\n\n以下参考に実装しました。\n[Nuxtプロジェクトでmp3を再生する](https://remoter.hatenablog.com/entry/2020/04/14/Nuxt%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%A7mp3%E3%82%92%E5%86%8D%E7%94%9F%E3%81%99%E3%82%8B)\n\n### filter / computed\n\nなんとなくうまく使うと慣れてる様に見えていい気がする。（え\n\n``` Game.vue\n// 0 = 未解答の時は空欄にしたいので、解答済みフィルタ作成\n<v-col class=\"amber--text answer\" align-self=\"center\">\n  {{answer | answered}}\n</v-col>\n\n<script>\nfunction answered(v: number) {\n  return v !== 0 ? v : ''\n}\n...(略)...\n\n  filters: {\n    answered\n  }\n\n</script>\n```\n\n### github pages での公開\n\n#### jekyll\n\n404エラーが出て意味がわからなかった。\nアンダースコアで始まるフォルダなど無視されるとのことでした。\n公開対象リポジトリのルートに、`.nojekyll`ファイルを配置すると回避できる。\n\n[GitHub PagesとJekyllについて\n](https://docs.github.com/ja/github/working-with-github-pages/about-github-pages-and-jekyll)\n\n#### root\n\n公開先URLは以下になる。\n{アカウント名}.github.io/リポジトリ名/{path-to-dist}/\n{path-to-dist} フォルダがルートとして動作するように `nuxt.config.js` を設定する。\n\n``` nuxt.config.js\n  ...(略)...\n  router: {\n    // https://kaku3.github.io/e1-math-plus-10/frontend/dist/\n    base: '/e1-math-plus-10/frontend/dist/'\n  },\n```\n\n\n\n\n## おわりに\n\n休日にサクッとファミリー向けアプリ作ってパパかっこいいと言われたいなと思いましたが、そんなことするより子供と遊べよという気がしないでもないです。\n\n(残処理)\n- ~~ゲームオーバー処理~~ (2021/03/14 更新)\n- ~~firebase に履歴保存~~ (2021/03/17 更新)\n- ~~グラフ表示~~ (2021/03/15 更新)\n\nnuxt.js 興味わきましたらこちらもどうぞ。\n\n- [【2020年版】Vue + Vuetify + typescript でWeb開発するならNuxt.jsを使おう](https://qiita.com/kaku3/items/c4a9f72e73247c776c93)\n- [【超簡単フロントエンド開発】Storybook6.1 + Nuxtjs (+Vuetify)](https://qiita.com/kaku3/items/05a0de729da7faba9ce4)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-03-13T19:14:53+09:00",
    "group": null,
    "id": "209c22a8638b55d99fc0",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "Vue.js",
        "versions": []
      },
      {
        "name": "個人開発",
        "versions": []
      },
      {
        "name": "Vuetify",
        "versions": []
      },
      {
        "name": "Nuxt",
        "versions": []
      }
    ],
    "title": "nuxt.js で4月から小学生の息子用に足し算練習webアプリを半日で作成できるか企画",
    "updated_at": "2021-03-17T02:12:06+09:00",
    "url": "https://qiita.com/kaku3/items/209c22a8638b55d99fc0",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1657,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"記事投稿のススメ\" class=\"fragment\"></span><a href=\"#%E8%A8%98%E4%BA%8B%E6%8A%95%E7%A8%BF%E3%81%AE%E3%82%B9%E3%82%B9%E3%83%A1\"><i class=\"fa fa-link\"></i></a>記事投稿のススメ</h2>\n\n<p>毎週土曜日にQiitaに記事投稿をすることにしてそろそろ半年になりますので、一回振り返りをしてみようと思います。</p>\n\n<p>正直PVはボロカスですが、書いててよかったなと思うことも多いです。<br>\n記事書きたいけど面倒くさい、ネタがないという方のご参考になれば幸いです。</p>\n\n<h2>\n<span id=\"黎明期\" class=\"fragment\"></span><a href=\"#%E9%BB%8E%E6%98%8E%E6%9C%9F\"><i class=\"fa fa-link\"></i></a>黎明期</h2>\n\n<p>記事を書いて view数や LGTMを集めてフォロワーいっぱいのtwitter有名人ぐらいになれたらいいなと不純な動機で書き始めました。</p>\n\n<p>1記事では難しいだろうけど、 <strong>「定期的に更新していればそのうちなんとかなるだろ戦略」</strong> で、クオリティはさておき続けることに重点を起きました。どんな本を読んでも続けるのは大事と書いてあり、大概の人は続かないので続けさえすれば勝てると思い込むことにしました。</p>\n\n<p>1記事書くのにも相当な時間がかかるので、出来上がった記事には愛着も期待もありました。投稿後は view 数が増えてないかとページのリロードをしまくって自分で view数 を稼いでしまう様な状態となりました。<br>\nその後、不正にview数を稼ぐのはよくないと思い、プロフィール→Googleアナリティクス設定を行い、動きもしないリアルタイムレポートとにらめっこする日々が続きました。</p>\n\n<p>渾身の記事を書いて view数が伸びず挫折するのはあるあるかと思いますが、フリーのアプリを作りまくって95%ぐらいが鳴かず飛ばずという経験をしていたので、そこまで打ちひしがれる事もなくとりあえず継続することができました。</p>\n\n<h2>\n<span id=\"過渡期\" class=\"fragment\"></span><a href=\"#%E9%81%8E%E6%B8%A1%E6%9C%9F\"><i class=\"fa fa-link\"></i></a>過渡期</h2>\n\n<p>大した計画もなく始めたのでネタのストックはあっという間に枯渇し、土曜日が近づく毎に恐怖を感じていました。</p>\n\n<ul>\n<li>やばいネタがない</li>\n<li>毎日更新にしなくて本当によかった</li>\n</ul>\n\n<p>やはり続けるコツは、無理のないスケジュールにすることと、全く無計画にしないことだなと思いつつも、ネタ不足は続きます。</p>\n\n<p>この頃にある気づきがありました。</p>\n\n<p><strong>「クオリティはさておきと言ったものの、新しいネタを仕入れないと書くことがない」</strong></p>\n\n<p>わざわざ太字にするまでもない当たり前のことを言ってますが、これは割と重要な気づきでした。<br>\n「勉強しなきゃなー」と思いつつ明確な目的がないから勉強をしないというケースは多々あると思います。</p>\n\n<p><strong>勉強をする明確な目的ができた</strong> 重要な瞬間でした。</p>\n\n<p>view 数を稼ぎたくて、view 数の高い記事をウォッチするようになったのは大きな収穫です。定常的に情報を仕入れるようなったのです。<br>\nとは言え自分にできることにも限界があるので、興味がありつつ短い時間で理解できそうな技術を探して勉強して、土曜日にまとめて記事にする、というスタイルに移行しました。</p>\n\n<ul>\n<li>できなかったことができた</li>\n<li>知らなかったことを知れた</li>\n</ul>\n\n<p>この頃には view数に対する興味は薄れて、割とシンプルな喜びをモチベーションに投稿をするようになりました。<br>\nまた、一人でも二人でも自分の記事を書いて役に立ったと思ってくれた人がいれば充分幸せかなと思うようになりました。</p>\n\n<h2>\n<span id=\"成長期\" class=\"fragment\"></span><a href=\"#%E6%88%90%E9%95%B7%E6%9C%9F\"><i class=\"fa fa-link\"></i></a>成長期</h2>\n\n<p>そして数ヶ月が過ぎた頃、次に上げる副次的な効果が得られるようになったと感じます。</p>\n\n<ul>\n<li>字を書くのが速くなった</li>\n<li>理解をまとめるのが速くなった</li>\n<li>伝えたいことを整理するのが速くなった</li>\n</ul>\n\n<p>日本人なんだから日本語は普通に扱えているつもりでしたが、全然そんな事はありませんでした。<br>\n整理してシンプルに伝える能力を身につける、その能力を維持する、には反復練習が欠かせないと痛感しました。<br>\n格闘ゲームやfpsゲームと同じです。努力して強くなっても、やり続けていないとすぐ弱くなります。</p>\n\n<p>記事を書く時に「めんどくせー」と感じるのは、 <strong>「記事を書くのに充分な能力を持っていなくて試行錯誤で解決すべき点が自分で制御できない程度に存在している」</strong> からではないかと思います。<br>\nなので、継続し反復練習を行う事で基本的な能力が上がれば、制御出来る点も増えて記事を書くことに対する抵抗感は下がっていくはずと思うようになりました。<br>\n実際は気のせいかもしれませんが、 <strong>成長しているっぽい実感</strong> が湧いてくると続けるための大きなモチベーションになります。</p>\n\n<p>文章を書くのが速くなれば、記事を執筆する時間を確保するのがそれだけ容易になります。<br>\n毎週新しい技術を研究できるのは理想的だけど、充分な時間が取れない時はポエムを書く。<br>\nそんな感じでスケジューリングもできるようになってきました。はい。今週は忙しいです。</p>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>「物事を整理してまとめて伝える、または、プログラム等別の成果物としてアウトプットする。」<br>\n記事投稿はほとんどの業務で役に立つ基礎的な能力を身につけることができる活動だと思います。</p>\n\n<p>ぜひやってみてくださいとオススメすることで、自分も続けないとなというモチベーションにしてまとめといたします。</p>\n\n<p>最後まで読んでくださってありがとうございました。よろしければLGTM頂けますと大変励みになります。</p>\n",
    "body": "## 記事投稿のススメ\n\n毎週土曜日にQiitaに記事投稿をすることにしてそろそろ半年になりますので、一回振り返りをしてみようと思います。\n\n正直PVはボロカスですが、書いててよかったなと思うことも多いです。\n記事書きたいけど面倒くさい、ネタがないという方のご参考になれば幸いです。\n\n\n## 黎明期\n\n記事を書いて view数や LGTMを集めてフォロワーいっぱいのtwitter有名人ぐらいになれたらいいなと不純な動機で書き始めました。\n\n1記事では難しいだろうけど、 **「定期的に更新していればそのうちなんとかなるだろ戦略」** で、クオリティはさておき続けることに重点を起きました。どんな本を読んでも続けるのは大事と書いてあり、大概の人は続かないので続けさえすれば勝てると思い込むことにしました。\n\n1記事書くのにも相当な時間がかかるので、出来上がった記事には愛着も期待もありました。投稿後は view 数が増えてないかとページのリロードをしまくって自分で view数 を稼いでしまう様な状態となりました。\nその後、不正にview数を稼ぐのはよくないと思い、プロフィール→Googleアナリティクス設定を行い、動きもしないリアルタイムレポートとにらめっこする日々が続きました。\n\n渾身の記事を書いて view数が伸びず挫折するのはあるあるかと思いますが、フリーのアプリを作りまくって95%ぐらいが鳴かず飛ばずという経験をしていたので、そこまで打ちひしがれる事もなくとりあえず継続することができました。\n\n## 過渡期\n\n大した計画もなく始めたのでネタのストックはあっという間に枯渇し、土曜日が近づく毎に恐怖を感じていました。\n\n- やばいネタがない\n- 毎日更新にしなくて本当によかった\n\nやはり続けるコツは、無理のないスケジュールにすることと、全く無計画にしないことだなと思いつつも、ネタ不足は続きます。\n\nこの頃にある気づきがありました。\n\n**「クオリティはさておきと言ったものの、新しいネタを仕入れないと書くことがない」**\n\nわざわざ太字にするまでもない当たり前のことを言ってますが、これは割と重要な気づきでした。\n「勉強しなきゃなー」と思いつつ明確な目的がないから勉強をしないというケースは多々あると思います。\n\n**勉強をする明確な目的ができた** 重要な瞬間でした。\n\nview 数を稼ぎたくて、view 数の高い記事をウォッチするようになったのは大きな収穫です。定常的に情報を仕入れるようなったのです。\nとは言え自分にできることにも限界があるので、興味がありつつ短い時間で理解できそうな技術を探して勉強して、土曜日にまとめて記事にする、というスタイルに移行しました。\n\n- できなかったことができた\n- 知らなかったことを知れた\n\nこの頃には view数に対する興味は薄れて、割とシンプルな喜びをモチベーションに投稿をするようになりました。\nまた、一人でも二人でも自分の記事を書いて役に立ったと思ってくれた人がいれば充分幸せかなと思うようになりました。\n\n## 成長期\n\nそして数ヶ月が過ぎた頃、次に上げる副次的な効果が得られるようになったと感じます。\n\n- 字を書くのが速くなった\n- 理解をまとめるのが速くなった\n- 伝えたいことを整理するのが速くなった\n\n日本人なんだから日本語は普通に扱えているつもりでしたが、全然そんな事はありませんでした。\n整理してシンプルに伝える能力を身につける、その能力を維持する、には反復練習が欠かせないと痛感しました。\n格闘ゲームやfpsゲームと同じです。努力して強くなっても、やり続けていないとすぐ弱くなります。\n\n記事を書く時に「めんどくせー」と感じるのは、 **「記事を書くのに充分な能力を持っていなくて試行錯誤で解決すべき点が自分で制御できない程度に存在している」** からではないかと思います。\nなので、継続し反復練習を行う事で基本的な能力が上がれば、制御出来る点も増えて記事を書くことに対する抵抗感は下がっていくはずと思うようになりました。\n実際は気のせいかもしれませんが、 **成長しているっぽい実感** が湧いてくると続けるための大きなモチベーションになります。\n\n文章を書くのが速くなれば、記事を執筆する時間を確保するのがそれだけ容易になります。\n毎週新しい技術を研究できるのは理想的だけど、充分な時間が取れない時はポエムを書く。\nそんな感じでスケジューリングもできるようになってきました。はい。今週は忙しいです。\n\n## おわりに\n\n「物事を整理してまとめて伝える、または、プログラム等別の成果物としてアウトプットする。」\n記事投稿はほとんどの業務で役に立つ基礎的な能力を身につけることができる活動だと思います。\n\nぜひやってみてくださいとオススメすることで、自分も続けないとなというモチベーションにしてまとめといたします。\n\n最後まで読んでくださってありがとうございました。よろしければLGTM頂けますと大変励みになります。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-03-06T15:08:39+09:00",
    "group": null,
    "id": "3906ce1faee4e43895c1",
    "likes_count": 3,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "学習",
        "versions": []
      }
    ],
    "title": "プレイングマネージャが記事投稿を半年やってみた振り返り",
    "updated_at": "2021-03-06T15:44:48+09:00",
    "url": "https://qiita.com/kaku3/items/3906ce1faee4e43895c1",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1057,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>技術の進歩は目覚ましいものです。<br>\nWeb記事を検索すると、検索ボリュームの大きい結果から表示されるため、知らず知らずのうちに古い技術を使ってしまうことが多々あります。</p>\n\n<p>そこで、2021年時点で、windows 環境で python でDB操作+OR Mapper した構成を書いておきたいと思います。</p>\n\n<table>\n<thead>\n<tr>\n<th>ツール</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>chocolatey</td>\n<td>Windows用パッケージ管理システム。</td>\n</tr>\n<tr>\n<td>python3.9.2</td>\n<td>python 本体。</td>\n</tr>\n<tr>\n<td>poetry</td>\n<td>python のパッケージ管理システム。<br>pip は requirements.txt を手書きしないとダメだったが、npmやyarn の様に pyproject.toml を自動で更新してくれる。</td>\n</tr>\n<tr>\n<td>mysqlalchemy</td>\n<td>OR Mapper。簡単なクラス定義で簡単にDB操作ができる。</td>\n</tr>\n<tr>\n<td>alembic</td>\n<td>DB 構築/マイグレーションヘルパ。mysqlalchemy のクラス定義に沿ったスキーマをDBに構築。</td>\n</tr>\n</tbody>\n</table>\n\n<p>※以後の説明のコードブロックの null ではじまるファイル名は記事でハイライトされる様に定義したファイル名で実際にはファイルを作っていません。</p>\n\n<h2>\n<span id=\"chocolatey\" class=\"fragment\"></span><a href=\"#chocolatey\"><i class=\"fa fa-link\"></i></a>chocolatey</h2>\n\n<p><a href=\"https://chocolatey.org/\" rel=\"nofollow noopener\" target=\"_blank\">chocolatey</a><br>\nインストーラをダウンロードしてインストールしていたようなパッケージをコマンド一発でインストールできます。</p>\n\n<p>管理者権限で PowerShell を開いて以下コマンド実行でインストールできます。</p>\n\n<div class=\"code-frame\" data-lang=\"powershell\">\n<div class=\"code-lang\"><span class=\"bold\">null.ps1</span></div>\n<div class=\"highlight\"><pre><code><span class=\"n\">Set-ExecutionPolicy</span><span class=\"w\"> </span><span class=\"nx\">Bypass</span><span class=\"w\"> </span><span class=\"nt\">-Scope</span><span class=\"w\"> </span><span class=\"nx\">Process</span><span class=\"w\"> </span><span class=\"nt\">-Force</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">System.Net.ServicePointManager</span><span class=\"p\">]::</span><span class=\"n\">SecurityProtocol</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">System.Net.ServicePointManager</span><span class=\"p\">]::</span><span class=\"n\">SecurityProtocol</span><span class=\"w\"> </span><span class=\"o\">-bor</span><span class=\"w\"> </span><span class=\"nx\">3072</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">iex</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">New-Object</span><span class=\"w\"> </span><span class=\"nx\">System.Net.WebClient</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"nf\">DownloadString</span><span class=\"p\">(</span><span class=\"s1\">'https://chocolatey.org/install.ps1'</span><span class=\"p\">))</span><span class=\"w\">\n</span></code></pre></div>\n</div>\n\n<p>記事を書く時にググると新しいモノが見つかって微妙な気持ちになりますね。。。</p>\n\n<p>scoop は未チェックでした。<br>\n<a href=\"https://tech.guitarrapc.com/entry/2019/12/01/233522\" rel=\"nofollow noopener\" target=\"_blank\">Windows開発環境の構築をChocolateyからscoopに切り替える</a></p>\n\n<h2>\n<span id=\"python\" class=\"fragment\"></span><a href=\"#python\"><i class=\"fa fa-link\"></i></a>python</h2>\n\n<p>chocolatey で簡単にインストールできます。<br>\nバージョン番号を指定しないと、インストール時点の最新版がインストールされます。</p>\n\n<div class=\"code-frame\" data-lang=\"powershell\">\n<div class=\"code-lang\"><span class=\"bold\">null.ps1</span></div>\n<div class=\"highlight\"><pre><code><span class=\"n\">choco</span><span class=\"w\"> </span><span class=\"nx\">install</span><span class=\"w\"> </span><span class=\"nx\">python</span><span class=\"w\">\n</span></code></pre></div>\n</div>\n\n<h2>\n<span id=\"poetry\" class=\"fragment\"></span><a href=\"#poetry\"><i class=\"fa fa-link\"></i></a>poetry</h2>\n\n<p>pip を使ってインストールします。<br>\npip はこれ以後利用しません。</p>\n\n<div class=\"code-frame\" data-lang=\"powershell\">\n<div class=\"code-lang\"><span class=\"bold\">null.ps1</span></div>\n<div class=\"highlight\"><pre><code><span class=\"n\">py</span><span class=\"w\"> </span><span class=\"nt\">-m</span><span class=\"w\"> </span><span class=\"nx\">pip</span><span class=\"w\"> </span><span class=\"nx\">install</span><span class=\"w\"> </span><span class=\"nx\">poetry</span><span class=\"w\">\n</span></code></pre></div>\n</div>\n\n<p>poetry は仮想環境(virtualenv)を利用します。<br>\n以下設定をするとプロジェクト内に.venv ファイルを作成しモジュールの保存も行う様になります。(nodejs の node_modulesの様なフォルダ)<br>\n容量的にはPCに優しくないのですがこの設定をしないとモジュール参照の解決が面倒くさいのでした方がよいかなと思っています。</p>\n\n<div class=\"code-frame\" data-lang=\"powershell\">\n<div class=\"code-lang\"><span class=\"bold\">null.ps1</span></div>\n<div class=\"highlight\"><pre><code><span class=\"n\">poetry</span><span class=\"w\"> </span><span class=\"nx\">config</span><span class=\"w\"> </span><span class=\"nx\">virtualenvs.in-project</span><span class=\"w\"> </span><span class=\"nx\">true</span><span class=\"w\">\n</span></code></pre></div>\n</div>\n\n<h2>\n<span id=\"alembic-sqlalchemy\" class=\"fragment\"></span><a href=\"#alembic-sqlalchemy\"><i class=\"fa fa-link\"></i></a>alembic, SQLAlchemy</h2>\n\n<p>alembic 以前は、SQLAlchemy-Migrate だったそうです。<br>\nSQLAlchemy の記事からたどってくと SQLAlchemy-Migrate にたどり着くのでどちらを使うかはググって判断してください。</p>\n\n<p>poetry で、alembic, sqlalchemy をインストールします。</p>\n\n<div class=\"code-frame\" data-lang=\"powershell\">\n<div class=\"code-lang\"><span class=\"bold\">null.ps1</span></div>\n<div class=\"highlight\"><pre><code><span class=\"n\">poetry</span><span class=\"w\"> </span><span class=\"nx\">init</span><span class=\"w\"> </span><span class=\"c\"># 対話コンソールになるので適宜回答</span><span class=\"w\">\n</span><span class=\"n\">poetry</span><span class=\"w\"> </span><span class=\"nx\">add</span><span class=\"w\"> </span><span class=\"nx\">alembic</span><span class=\"w\"> </span><span class=\"nx\">sqlalchemy</span><span class=\"w\">\n</span></code></pre></div>\n</div>\n\n<h2>\n<span id=\"alembic\" class=\"fragment\"></span><a href=\"#alembic\"><i class=\"fa fa-link\"></i></a>alembic</h2>\n\n<p>SQLAlchemy の class 定義と、DBを突き合わせて、テーブルを構築するのに必要なスクリプトの生成、実行が行えます。</p>\n\n<h3>\n<span id=\"初期化\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E5%8C%96\"><i class=\"fa fa-link\"></i></a>初期化</h3>\n\n<p>最初に alembic init を実行し、DB構築の準備をします。</p>\n\n<div class=\"code-frame\" data-lang=\"powershell\">\n<div class=\"code-lang\"><span class=\"bold\">null.ps1</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c\"># alembic init {フォルダ名}</span><span class=\"w\">\n</span><span class=\"n\">poetry</span><span class=\"w\"> </span><span class=\"nx\">run</span><span class=\"w\"> </span><span class=\"nx\">alembic</span><span class=\"w\"> </span><span class=\"nx\">init</span><span class=\"w\"> </span><span class=\"nx\">migrations</span><span class=\"w\">\n</span></code></pre></div>\n</div>\n\n<p>コマンドを実行すると、DB構築用のスクリプトと、migration 用のスクリプトを保存するフォルダが生成されます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>migrations/\n  versions/\n  env.py\n  README\n  script.py.mako\nalembic.ini\n</code></pre></div></div>\n\n<p>生成された、alembic.ini のDB接続文字列を環境に合わせて修正します。</p>\n\n<div class=\"code-frame\" data-lang=\"ini\">\n<div class=\"code-lang\"><span class=\"bold\">alembic.ini</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c\"># the output encoding used when revision files\n# are written from script.py.mako\n# output_encoding = utf-8\n</span>\n<span class=\"py\">sqlalchemy.url</span> <span class=\"p\">=</span> <span class=\"s\">driver://user:pass@localhost/dbname</span>\n</code></pre></div>\n</div>\n\n<h3>\n<span id=\"orマッパーclass定義\" class=\"fragment\"></span><a href=\"#or%E3%83%9E%E3%83%83%E3%83%91%E3%83%BCclass%E5%AE%9A%E7%BE%A9\"><i class=\"fa fa-link\"></i></a>ORマッパーclass定義</h3>\n\n<p>このままだと、作るテーブルがないので適当にクラス定義します。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>db/\n  models.py\n</code></pre></div></div>\n\n<p>SQLAlchemy の Baseクラスから派生したクラスを定義します。<br>\n全てのテーブルに埋めたい created, modified などのフィールドを含むクラスを <code>__abstract__</code> で定義し、そのクラスより派生すると少し楽になれるかもしれません。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<div class=\"code-lang\"><span class=\"bold\">models.py</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.ext.declarative</span> <span class=\"kn\">import</span> <span class=\"n\">declarative_base</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.schema</span> <span class=\"kn\">import</span> <span class=\"n\">Column</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.schema</span> <span class=\"kn\">import</span> <span class=\"n\">ForeignKey</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.sql.functions</span> <span class=\"kn\">import</span> <span class=\"n\">random</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.sql.schema</span> <span class=\"kn\">import</span> <span class=\"n\">UniqueConstraint</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.sql.sqltypes</span> <span class=\"kn\">import</span> <span class=\"n\">DATETIME</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.types</span> <span class=\"kn\">import</span> <span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">String</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n\n<span class=\"n\">Base</span><span class=\"o\">=</span><span class=\"n\">declarative_base</span><span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">BaseModel</span><span class=\"p\">(</span><span class=\"n\">Base</span><span class=\"p\">):</span>\n    <span class=\"n\">__abstract__</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">autoincrement</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">created</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">DATETIME</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">.</span><span class=\"n\">now</span><span class=\"p\">)</span>\n    <span class=\"n\">modified</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">DATETIME</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">.</span><span class=\"n\">now</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">created</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">.</span><span class=\"n\">now</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">modified</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">.</span><span class=\"n\">now</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n    <span class=\"s\">\"\"\"\n    service users.\n    \"\"\"</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s\">\"users\"</span>\n    <span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">email</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">password</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Match</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s\">\"matches\"</span>\n    <span class=\"n\">seed</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">seed</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"p\">.</span><span class=\"n\">randint</span><span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MatchUser</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n    <span class=\"n\">__table_args__</span><span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"n\">UniqueConstraint</span><span class=\"p\">(</span><span class=\"s\">\"match_id\"</span><span class=\"p\">,</span> <span class=\"s\">\"user_id\"</span><span class=\"p\">),</span> <span class=\"p\">))</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s\">\"match_users\"</span>\n    <span class=\"n\">match_id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s\">\"matches.id\"</span><span class=\"p\">,</span> <span class=\"n\">onupdate</span><span class=\"o\">=</span><span class=\"s\">\"cascade\"</span><span class=\"p\">,</span> <span class=\"n\">ondelete</span><span class=\"o\">=</span><span class=\"s\">\"cascade\"</span><span class=\"p\">))</span>\n    <span class=\"n\">user_id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s\">\"users.id\"</span><span class=\"p\">),</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">match_id</span><span class=\"p\">,</span> <span class=\"n\">user_id</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">match_id</span> <span class=\"o\">=</span> <span class=\"n\">match_id</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">user_id</span> <span class=\"o\">=</span> <span class=\"n\">user_id</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MatchTurn</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s\">\"match_turns\"</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">autoincrement</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">match_id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s\">\"matches.id\"</span><span class=\"p\">,</span> <span class=\"n\">onupdate</span><span class=\"o\">=</span><span class=\"s\">\"cascade\"</span><span class=\"p\">,</span> <span class=\"n\">ondelete</span><span class=\"o\">=</span><span class=\"s\">\"cascade\"</span><span class=\"p\">))</span>\n    <span class=\"n\">no</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">match_id</span><span class=\"p\">,</span> <span class=\"n\">no</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">match_id</span> <span class=\"o\">=</span> <span class=\"n\">match_id</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">no</span> <span class=\"o\">=</span> <span class=\"n\">no</span>\n\n</code></pre></div>\n</div>\n\n<h3>\n<span id=\"model定義を参照する様にmigrationsenvpy-を編集\" class=\"fragment\"></span><a href=\"#model%E5%AE%9A%E7%BE%A9%E3%82%92%E5%8F%82%E7%85%A7%E3%81%99%E3%82%8B%E6%A7%98%E3%81%ABmigrationsenvpy-%E3%82%92%E7%B7%A8%E9%9B%86\"><i class=\"fa fa-link\"></i></a>model定義を参照する様に、migrations/env.py を編集</h3>\n\n<p><code>migrations/env.py</code> を開くと、model の MetaData を定義する様にコメントが記載されているので、定義します。 </p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<div class=\"code-lang\"><span class=\"bold\">migrations/env.py</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\"># ★before\n# add your model's MetaData object here\n# for 'autogenerate' support\n# from myapp import mymodel\n# target_metadata = mymodel.Base.metadata\n</span><span class=\"n\">target_metadata</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n</code></pre></div>\n</div>\n\n<p>　↓先程定義した model のメタデータを定義</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code># ★after\n# add your model's MetaData object here\nfrom db.models import Base\ntarget_metadata = Base.metadata\n</code></pre></div></div>\n\n<h3>\n<span id=\"upgrade-作成\" class=\"fragment\"></span><a href=\"#upgrade-%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>upgrade 作成</h3>\n\n<p>alembic revision でDB接続し、現在のDBのスキーマと <code>models.py</code>の内容を比較して、スキーマ最新化に必要なスクリプトを作成し、<code>migrations/versions</code> に保存します。</p>\n\n<div class=\"code-frame\" data-lang=\"powershell\">\n<div class=\"code-lang\"><span class=\"bold\">null.ps1</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c\"># alembic revision --autogenerate -m {任意のバージョン番号}</span><span class=\"w\">\n</span><span class=\"n\">poetry</span><span class=\"w\"> </span><span class=\"nx\">run</span><span class=\"w\"> </span><span class=\"nx\">alembic</span><span class=\"w\"> </span><span class=\"nx\">revision</span><span class=\"w\"> </span><span class=\"nt\">--autogenerate</span><span class=\"w\"> </span><span class=\"nt\">-m</span><span class=\"w\"> </span><span class=\"nx\">v0.01</span><span class=\"w\">\n</span></code></pre></div>\n</div>\n\n<h3>\n<span id=\"upgrade-実行\" class=\"fragment\"></span><a href=\"#upgrade-%E5%AE%9F%E8%A1%8C\"><i class=\"fa fa-link\"></i></a>upgrade 実行</h3>\n\n<p>alembic upgrade コマンドで、DBのスキーマを任意のバージョンにします。</p>\n\n<div class=\"code-frame\" data-lang=\"powershell\">\n<div class=\"code-lang\"><span class=\"bold\">null.ps1</span></div>\n<div class=\"highlight\"><pre><code><span class=\"n\">poetry</span><span class=\"w\"> </span><span class=\"nx\">run</span><span class=\"w\"> </span><span class=\"nx\">alembic</span><span class=\"w\"> </span><span class=\"nx\">upgrade</span><span class=\"w\"> </span><span class=\"nx\">head</span><span class=\"w\">\n</span></code></pre></div>\n</div>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>細切れ記事は色々あるのですが、まとめ記事はないのでまとめました。<br>\nこれだけ色々なものを入れたにも関わらず、割と短い記事で書き終わって、随分便利な世の中になってるなぁと思いました。<br>\nJava で同じアウトプットの記事を書こうと思ったら eclipse のインストールや設定も細かく解説が必要で、<a href=\"/IT\" class=\"user-mention js-hovercard\" title=\"IT\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"IT\">@IT</a>あたりで全10回構成の記事にする物量になりそうだなと、なぜかムーアの法則に思いをはぜました。</p>\n",
    "body": "## はじめに\n技術の進歩は目覚ましいものです。\nWeb記事を検索すると、検索ボリュームの大きい結果から表示されるため、知らず知らずのうちに古い技術を使ってしまうことが多々あります。\n\nそこで、2021年時点で、windows 環境で python でDB操作+OR Mapper した構成を書いておきたいと思います。\n\n|ツール   |説明  |\n|---|---|\n|chocolatey | Windows用パッケージ管理システム。\n|python3.9.2 | python 本体。\n|poetry | python のパッケージ管理システム。<br/ >pip は requirements.txt を手書きしないとダメだったが、npmやyarn の様に pyproject.toml を自動で更新してくれる。\n|mysqlalchemy | OR Mapper。簡単なクラス定義で簡単にDB操作ができる。\n|alembic | DB 構築/マイグレーションヘルパ。mysqlalchemy のクラス定義に沿ったスキーマをDBに構築。\n\n※以後の説明のコードブロックの null ではじまるファイル名は記事でハイライトされる様に定義したファイル名で実際にはファイルを作っていません。\n\n## chocolatey\n\n[chocolatey](https://chocolatey.org/)\nインストーラをダウンロードしてインストールしていたようなパッケージをコマンド一発でインストールできます。\n\n管理者権限で PowerShell を開いて以下コマンド実行でインストールできます。\n\n``` null.ps1\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\n```\n\n記事を書く時にググると新しいモノが見つかって微妙な気持ちになりますね。。。\n\nscoop は未チェックでした。\n[Windows開発環境の構築をChocolateyからscoopに切り替える](https://tech.guitarrapc.com/entry/2019/12/01/233522)\n\n## python\n\nchocolatey で簡単にインストールできます。\nバージョン番号を指定しないと、インストール時点の最新版がインストールされます。\n\n``` null.ps1\nchoco install python\n```\n\n## poetry\n\npip を使ってインストールします。\npip はこれ以後利用しません。\n\n``` null.ps1\npy -m pip install poetry\n```\n\npoetry は仮想環境(virtualenv)を利用します。\n以下設定をするとプロジェクト内に.venv ファイルを作成しモジュールの保存も行う様になります。(nodejs の node_modulesの様なフォルダ)\n容量的にはPCに優しくないのですがこの設定をしないとモジュール参照の解決が面倒くさいのでした方がよいかなと思っています。\n\n``` null.ps1\npoetry config virtualenvs.in-project true\n```\n\n## alembic, SQLAlchemy\n\nalembic 以前は、SQLAlchemy-Migrate だったそうです。\nSQLAlchemy の記事からたどってくと SQLAlchemy-Migrate にたどり着くのでどちらを使うかはググって判断してください。\n\npoetry で、alembic, sqlalchemy をインストールします。\n\n``` null.ps1\npoetry init # 対話コンソールになるので適宜回答\npoetry add alembic sqlalchemy\n```\n\n## alembic\n\nSQLAlchemy の class 定義と、DBを突き合わせて、テーブルを構築するのに必要なスクリプトの生成、実行が行えます。\n\n### 初期化\n\n最初に alembic init を実行し、DB構築の準備をします。\n\n``` null.ps1\n# alembic init {フォルダ名}\npoetry run alembic init migrations\n```\n\nコマンドを実行すると、DB構築用のスクリプトと、migration 用のスクリプトを保存するフォルダが生成されます。\n\n```\nmigrations/\n  versions/\n  env.py\n  README\n  script.py.mako\nalembic.ini\n```\n\n生成された、alembic.ini のDB接続文字列を環境に合わせて修正します。\n\n``` alembic.ini\n# the output encoding used when revision files\n# are written from script.py.mako\n# output_encoding = utf-8\n\nsqlalchemy.url = driver://user:pass@localhost/dbname\n```\n\n### ORマッパーclass定義\n\nこのままだと、作るテーブルがないので適当にクラス定義します。\n\n```\ndb/\n  models.py\n```\n\nSQLAlchemy の Baseクラスから派生したクラスを定義します。\n全てのテーブルに埋めたい created, modified などのフィールドを含むクラスを `__abstract__` で定義し、そのクラスより派生すると少し楽になれるかもしれません。\n\n``` models.py\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.schema import Column\nfrom sqlalchemy.schema import ForeignKey\nfrom sqlalchemy.sql.functions import random\nfrom sqlalchemy.sql.schema import UniqueConstraint\nfrom sqlalchemy.sql.sqltypes import DATETIME\nfrom sqlalchemy.types import Integer, String\n\nfrom datetime import datetime\n\nBase=declarative_base()\n\nclass BaseModel(Base):\n    __abstract__ = True\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    created = Column(DATETIME, default=datetime.now)\n    modified = Column(DATETIME, default=datetime.now)\n\n    def __init__(self):\n        self.created = datetime.now\n        self.modified = datetime.now\n\nclass User(BaseModel):\n    \"\"\"\n    service users.\n    \"\"\"\n    __tablename__ = \"users\"\n    email = Column(String(255), unique=True)\n    password = Column(String(255))\n\n    def __init__(self, email, password):\n        self.email = email\n        self.password = password\n\nclass Match(BaseModel):\n    __tablename__ = \"matches\"\n    seed = Column(Integer, nullable=False)\n\n    def __init__(self):\n        self.seed = random.randint()\n\nclass MatchUser(BaseModel):\n    __table_args__= ((UniqueConstraint(\"match_id\", \"user_id\"), ))\n    __tablename__ = \"match_users\"\n    match_id = Column(Integer, ForeignKey(\"matches.id\", onupdate=\"cascade\", ondelete=\"cascade\"))\n    user_id = Column(Integer, ForeignKey(\"users.id\"), nullable=False)\n\n    def __init__(self, match_id, user_id):\n        self.match_id = match_id\n        self.user_id = user_id\n\nclass MatchTurn(BaseModel):\n    __tablename__ = \"match_turns\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    match_id = Column(Integer, ForeignKey(\"matches.id\", onupdate=\"cascade\", ondelete=\"cascade\"))\n    no = Column(Integer, nullable=False)\n\n    def __init__(self, match_id, no):\n        self.match_id = match_id\n        self.no = no\n\n```\n\n### model定義を参照する様に、migrations/env.py を編集\n\n`migrations/env.py` を開くと、model の MetaData を定義する様にコメントが記載されているので、定義します。 \n\n``` migrations/env.py\n# ★before\n# add your model's MetaData object here\n# for 'autogenerate' support\n# from myapp import mymodel\n# target_metadata = mymodel.Base.metadata\ntarget_metadata = None\n```\n\n　↓先程定義した model のメタデータを定義\n\n```\n# ★after\n# add your model's MetaData object here\nfrom db.models import Base\ntarget_metadata = Base.metadata\n```\n\n### upgrade 作成\n\nalembic revision でDB接続し、現在のDBのスキーマと `models.py`の内容を比較して、スキーマ最新化に必要なスクリプトを作成し、`migrations/versions` に保存します。\n\n``` null.ps1\n# alembic revision --autogenerate -m {任意のバージョン番号}\npoetry run alembic revision --autogenerate -m v0.01\n```\n\n### upgrade 実行\n\nalembic upgrade コマンドで、DBのスキーマを任意のバージョンにします。\n\n``` null.ps1\npoetry run alembic upgrade head\n```\n\n## おわりに\n\n細切れ記事は色々あるのですが、まとめ記事はないのでまとめました。\nこれだけ色々なものを入れたにも関わらず、割と短い記事で書き終わって、随分便利な世の中になってるなぁと思いました。\nJava で同じアウトプットの記事を書こうと思ったら eclipse のインストールや設定も細かく解説が必要で、@ITあたりで全10回構成の記事にする物量になりそうだなと、なぜかムーアの法則に思いをはぜました。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-02-27T15:37:16+09:00",
    "group": null,
    "id": "7b03e8428430c7857b03",
    "likes_count": 3,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 2,
    "tags": [
      {
        "name": "Python",
        "versions": []
      },
      {
        "name": "sqlalchemy",
        "versions": []
      },
      {
        "name": "Database",
        "versions": []
      },
      {
        "name": "Alembic",
        "versions": []
      },
      {
        "name": "Poetry",
        "versions": []
      }
    ],
    "title": "【2021年版】python で ORM で DB操作",
    "updated_at": "2021-02-27T17:07:14+09:00",
    "url": "https://qiita.com/kaku3/items/7b03e8428430c7857b03",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 4094,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"pmとしてのわたし\" class=\"fragment\"></span><a href=\"#pm%E3%81%A8%E3%81%97%E3%81%A6%E3%81%AE%E3%82%8F%E3%81%9F%E3%81%97\"><i class=\"fa fa-link\"></i></a>PMとしてのわたし</h2>\n\n<p>昔々、ゲームが作りたくて街の小さなゲーム屋に就職しまして。<br>\n小さなゲーム屋だったので、企画やプログラム書く傍ら顧客窓口や進行管理なんかもやらされましてPM歴は20年ぐらいになるのですが、体系立てて「PMとは」みたいなことは学んだことがないです。</p>\n\n<p>厳密には、「月何コマでxxxxx円」の様な外部セミナーでPMの授業を受けたことはあるので、体系立てて学んだ事がないわけではないです。ただ、講師が開始早々「正解はない」と言い放ち書籍を棒読みしてましたので、これはノーカウントにしています。</p>\n\n<p>そんなわたしに宛てて、PMの仕事について手紙を送ります。</p>\n\n<h2>\n<span id=\"pmがマネジメントするものは\" class=\"fragment\"></span><a href=\"#pm%E3%81%8C%E3%83%9E%E3%83%8D%E3%82%B8%E3%83%A1%E3%83%B3%E3%83%88%E3%81%99%E3%82%8B%E3%82%82%E3%81%AE%E3%81%AF\"><i class=\"fa fa-link\"></i></a>PMがマネジメントするものは？</h2>\n\n<p>多分、明文化できる「正解はない」というのは正解で <strong>「問題解決力」</strong> や <strong>「対応力」</strong> といったスキルを身につけるというのが大事なのかなと今は考えています。</p>\n\n<p>これは基本的な管理手法を学ぶ意味がないのではなく、管理手法は学んだ上でそれぞれのプロジェクトにどうやって対応していくのか、という手法を更新し続ける必要があるという考えです。</p>\n\n<p>PMがマネジメントするのは <strong>「プロジェクト」</strong> ではなくて <strong>「プロジェクトを形成する人々」</strong> と考えるとシンプルかと思っています。一つ一つのプロジェクトで参加メンバーは新しくなっていくのだから、古いルールを適用し続けてもうまくいかなくなる、というのは想像に難しくないと思います。</p>\n\n<p>※「サーバント・リーダーシップ」という考え方も「プロジェクトを形成する人々」に対する考え方で「プロジェクト」に対する考え方ではないですよね？</p>\n\n<h2>\n<span id=\"プロジェクト管理\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E7%AE%A1%E7%90%86\"><i class=\"fa fa-link\"></i></a>プロジェクト管理？</h2>\n\n<p>「プロジェクトを形成する人々（顧客も含めたプロジェクトメンバー）」ではなく「プロジェクト」という形のないものを管理対象とすると定量的に管理ができて簡単に見えます。</p>\n\n<ul>\n<li>納品物を定義</li>\n<li>各工程の作業を人月単位で工数見積</li>\n<li>WBS提出</li>\n<li>進捗報告</li>\n</ul>\n\n<p>多くのPMが「プロジェクト管理」として考えるのがこれかと思いますが、この中に「マネジメント」出来る要素があるか考えてみてください。</p>\n\n<p>どうでしょうか？</p>\n\n<p>一見、きちんと定義されているようで、何らかの問題が発生した時の対処方法が何一つ定義されていないです。<br>\n問題に対処できない手法は、 <strong>管理手法としては片手落ち</strong> だと思いますが、これ以上の考察がされることはあまりないように思います。</p>\n\n<p>「ポピュラーな対処方法」は作業見積にバッファを載せたり、帳尻が合わなかったら顧客と日程を調整する、あるいは、栄養剤を差し入れる、現場を怒鳴り散らす、でしょうか。</p>\n\n<h2>\n<span id=\"プロジェクトマネジメント\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%83%9E%E3%83%8D%E3%82%B8%E3%83%A1%E3%83%B3%E3%83%88\"><i class=\"fa fa-link\"></i></a>プロジェクトマネジメント？</h2>\n\n<p>IT業界の標準見積単位は「人月」です。<br>\n何十年もその単位の不備は指摘されつつも、それに変わる単位が発明されていないのが現状です。</p>\n\n<p>プロジェクトに参加するメンバーが未経験の新人でも経験10年のベテランでも経験内容によらず１ヶ月稼働すれば１人月でカウントです。</p>\n\n<p>この様な状況で「理想的なメンバー」を想像したり予算を考慮したりして適当に係数をかけて工数見積を行うのが慣例です。あとは「充分なバッファを取って見積もりしたから現場でなんとかしろ」というのはマネジメントと言えるのでしょうか？</p>\n\n<p>予算が潤沢な頃のプロジェクトであれば、プロジェクトチームが大きく予算にも余裕があったので、その様な計算式や手法でも問題がなかった（１人月以上働ける人間に負荷をかけることで問題が顕在化しなかった）けれども、未経験者は経験を積めないまま年を重ることになり、問題が悪化した状態で先送りされた様に思います。</p>\n\n<p>これを鑑みると「構成されたプロジェクトメンバーに合わせて最適な形で課題を切り出して、人月ベースではないスケジュールを策定していく」ことでカイゼンが期待されると想像されますが、これって、単に <strong>「スクラム」</strong> で提唱されている理念を指していると思います。</p>\n\n<p>人月に変わる単位は多分出てこないし、そこを考えてもあまり意味がないので、スクラムやアジャイルという開発手法が体系化されたのかもしれません。</p>\n\n<p>個人的には、スクラムでマネジメントすればうまくいくのではなく、理念を理解しないでスプリントとかPOとか形だけ真似してもうまくいかないし、逆に解決すべき課題の認識さえあってれば、スクラムにこだわる必要はないと考えています。</p>\n\n<h2>\n<span id=\"業界の大いなる流れ育成から即戦力へ傾倒\" class=\"fragment\"></span><a href=\"#%E6%A5%AD%E7%95%8C%E3%81%AE%E5%A4%A7%E3%81%84%E3%81%AA%E3%82%8B%E6%B5%81%E3%82%8C%E8%82%B2%E6%88%90%E3%81%8B%E3%82%89%E5%8D%B3%E6%88%A6%E5%8A%9B%E3%81%B8%E5%82%BE%E5%80%92\"><i class=\"fa fa-link\"></i></a>業界の大いなる流れ：育成から即戦力へ傾倒</h2>\n\n<p>不景気により予算が縮小され、大きなプロジェクトを形成することが難しくなりました。<br>\nちょっとした遅延が、即致命傷になります。</p>\n\n<p>「プロジェクト管理」をしていたPMでは、即戦力以外のメンバーではプロジェクトを完遂することができないので当然の流れかと思います。</p>\n\n<p>そして、その様な状況を目の当たりにしている若い世代が「責任は取りたくない、管理職になりたくない」と考えるのもやはり当然の流れかと思います。</p>\n\n<h2>\n<span id=\"拝啓pmの君へ\" class=\"fragment\"></span><a href=\"#%E6%8B%9D%E5%95%93pm%E3%81%AE%E5%90%9B%E3%81%B8\"><i class=\"fa fa-link\"></i></a>拝啓PMの君へ</h2>\n\n<p>業界の大いなる流れは変わらないと思います。<br>\n緩やかに、ひょっとしたら急激に状況は悪くなっていくかもしれません。</p>\n\n<p>わたしも、状況を悪くするのに無意識に加担しているかもしれないけれど、できることは頑張りたいと思います。</p>\n\n<p>PMをやれって言われてしばらくは嫌で仕方なかったと思うけど、よい経験になったと感謝する日が来ます。<br>\n今PMをやっているあなたが、「プロジェクトを形成する人々」をよりよい未来に導く様にマネジメントをしたら、違う未来になるかもしれないと期待しています。</p>\n",
    "body": "## PMとしてのわたし\n\n昔々、ゲームが作りたくて街の小さなゲーム屋に就職しまして。\n小さなゲーム屋だったので、企画やプログラム書く傍ら顧客窓口や進行管理なんかもやらされましてPM歴は20年ぐらいになるのですが、体系立てて「PMとは」みたいなことは学んだことがないです。\n\n厳密には、「月何コマでxxxxx円」の様な外部セミナーでPMの授業を受けたことはあるので、体系立てて学んだ事がないわけではないです。ただ、講師が開始早々「正解はない」と言い放ち書籍を棒読みしてましたので、これはノーカウントにしています。\n\nそんなわたしに宛てて、PMの仕事について手紙を送ります。\n\n\n## PMがマネジメントするものは？\n\n多分、明文化できる「正解はない」というのは正解で **「問題解決力」** や **「対応力」** といったスキルを身につけるというのが大事なのかなと今は考えています。\n\nこれは基本的な管理手法を学ぶ意味がないのではなく、管理手法は学んだ上でそれぞれのプロジェクトにどうやって対応していくのか、という手法を更新し続ける必要があるという考えです。\n\nPMがマネジメントするのは **「プロジェクト」** ではなくて **「プロジェクトを形成する人々」** と考えるとシンプルかと思っています。一つ一つのプロジェクトで参加メンバーは新しくなっていくのだから、古いルールを適用し続けてもうまくいかなくなる、というのは想像に難しくないと思います。\n\n※「サーバント・リーダーシップ」という考え方も「プロジェクトを形成する人々」に対する考え方で「プロジェクト」に対する考え方ではないですよね？\n\n\n## プロジェクト管理？\n\n「プロジェクトを形成する人々（顧客も含めたプロジェクトメンバー）」ではなく「プロジェクト」という形のないものを管理対象とすると定量的に管理ができて簡単に見えます。\n\n- 納品物を定義\n- 各工程の作業を人月単位で工数見積\n- WBS提出\n- 進捗報告\n\n多くのPMが「プロジェクト管理」として考えるのがこれかと思いますが、この中に「マネジメント」出来る要素があるか考えてみてください。\n\nどうでしょうか？\n\n一見、きちんと定義されているようで、何らかの問題が発生した時の対処方法が何一つ定義されていないです。\n問題に対処できない手法は、 **管理手法としては片手落ち** だと思いますが、これ以上の考察がされることはあまりないように思います。\n\n「ポピュラーな対処方法」は作業見積にバッファを載せたり、帳尻が合わなかったら顧客と日程を調整する、あるいは、栄養剤を差し入れる、現場を怒鳴り散らす、でしょうか。\n\n\n## プロジェクトマネジメント？\n\nIT業界の標準見積単位は「人月」です。\n何十年もその単位の不備は指摘されつつも、それに変わる単位が発明されていないのが現状です。\n\nプロジェクトに参加するメンバーが未経験の新人でも経験10年のベテランでも経験内容によらず１ヶ月稼働すれば１人月でカウントです。\n\nこの様な状況で「理想的なメンバー」を想像したり予算を考慮したりして適当に係数をかけて工数見積を行うのが慣例です。あとは「充分なバッファを取って見積もりしたから現場でなんとかしろ」というのはマネジメントと言えるのでしょうか？\n\n予算が潤沢な頃のプロジェクトであれば、プロジェクトチームが大きく予算にも余裕があったので、その様な計算式や手法でも問題がなかった（１人月以上働ける人間に負荷をかけることで問題が顕在化しなかった）けれども、未経験者は経験を積めないまま年を重ることになり、問題が悪化した状態で先送りされた様に思います。\n\nこれを鑑みると「構成されたプロジェクトメンバーに合わせて最適な形で課題を切り出して、人月ベースではないスケジュールを策定していく」ことでカイゼンが期待されると想像されますが、これって、単に **「スクラム」** で提唱されている理念を指していると思います。\n\n人月に変わる単位は多分出てこないし、そこを考えてもあまり意味がないので、スクラムやアジャイルという開発手法が体系化されたのかもしれません。\n\n個人的には、スクラムでマネジメントすればうまくいくのではなく、理念を理解しないでスプリントとかPOとか形だけ真似してもうまくいかないし、逆に解決すべき課題の認識さえあってれば、スクラムにこだわる必要はないと考えています。\n\n\n## 業界の大いなる流れ：育成から即戦力へ傾倒\n\n不景気により予算が縮小され、大きなプロジェクトを形成することが難しくなりました。\nちょっとした遅延が、即致命傷になります。\n\n「プロジェクト管理」をしていたPMでは、即戦力以外のメンバーではプロジェクトを完遂することができないので当然の流れかと思います。\n\nそして、その様な状況を目の当たりにしている若い世代が「責任は取りたくない、管理職になりたくない」と考えるのもやはり当然の流れかと思います。\n\n\n## 拝啓PMの君へ\n\n業界の大いなる流れは変わらないと思います。\n緩やかに、ひょっとしたら急激に状況は悪くなっていくかもしれません。\n\nわたしも、状況を悪くするのに無意識に加担しているかもしれないけれど、できることは頑張りたいと思います。\n\nPMをやれって言われてしばらくは嫌で仕方なかったと思うけど、よい経験になったと感謝する日が来ます。\n今PMをやっているあなたが、「プロジェクトを形成する人々」をよりよい未来に導く様にマネジメントをしたら、違う未来になるかもしれないと期待しています。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-02-20T15:51:00+09:00",
    "group": null,
    "id": "f8b82dde01aceac71603",
    "likes_count": 5,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 3,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "プロジェクト管理",
        "versions": []
      },
      {
        "name": "プロジェクトマネジメント",
        "versions": []
      }
    ],
    "title": "手紙～拝啓PMの君へ～",
    "updated_at": "2021-02-21T03:03:23+09:00",
    "url": "https://qiita.com/kaku3/items/f8b82dde01aceac71603",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1429,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>teraterm から rlogin に乗り換えて快適に使っていたんですが、vscode の方が快適に思えたので記事書きます。</p>\n\n<p>(メリット)</p>\n\n<ul>\n<li>ssh コマンドを普通に使える</li>\n<li>リモートのファイルを普通にvs code で編集できる</li>\n<li>フォルダエクスプローラも普通に使える</li>\n<li>ドラッグ＆ドロップでファイルのアップロードができる</li>\n<li>ファイルのダウンロードもできる</li>\n</ul>\n\n<p>(デメリット)</p>\n\n<ul>\n<li>巨大なログファイルなどは開けない</li>\n</ul>\n\n<p>viとヒュージョンされているエキスパートな方にはあまりメリットを感じないかもしれませんが、ライトユーザーには魅力的な環境かと思います。</p>\n\n<p>（接続画面）<br>\n<a href=\"https://camo.qiitausercontent.com/dc4f320b98a927e8ae0719433022f2fd22a7b915/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f31656666653465342d353838642d613762362d376332302d3031303463306135323463632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F1effe4e4-588d-a7b6-7c20-0104c0a524cc.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f098ed6f2c1b10eab1fb69cf7e3b8bb5\" alt=\"remote-ssh.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/1effe4e4-588d-a7b6-7c20-0104c0a524cc.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F1effe4e4-588d-a7b6-7c20-0104c0a524cc.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d1b6c180330721475f6e43e0af0c8594 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"インストール\" class=\"fragment\"></span><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>インストール</h2>\n\n<ul>\n<li><p><a href=\"https://azure.microsoft.com/ja-jp/products/visual-studio-code/\" rel=\"nofollow noopener\" target=\"_blank\">Visual Studio Code</a><br>\nサイトでインストーラーを入手してインストール</p></li>\n<li><p><a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh\" rel=\"nofollow noopener\" target=\"_blank\">Remote - SSH</a><br>\nvscode の拡張機能よりインストール</p></li>\n</ul>\n\n<p>インストールは以上です。</p>\n\n<h2>\n<span id=\"接続\" class=\"fragment\"></span><a href=\"#%E6%8E%A5%E7%B6%9A\"><i class=\"fa fa-link\"></i></a>接続</h2>\n\n<p>手頃なVMをお持ちならそちらに接続してみてください。<br>\n手頃なVMがなかったのであまり意味がないですが Vagrant の VMに接続してます。</p>\n\n<h3>\n<span id=\"事前準備\" class=\"fragment\"></span><a href=\"#%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>事前準備</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code># 手頃な VM 起動\nvagrant init generic/ubuntu2004\nvagrant up\n\n# 設定確認\nvagrant ssh-config\n</code></pre></div></div>\n\n<p>※ssh-config で表示される以下の内容を、Remote - SSH に設定します</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>  HostName 127.0.0.1\n  User vagrant\n  Port 2200\n  IdentityFile remote-ssh/.vagrant/machines/default/virtualbox/private_key\n</code></pre></div></div>\n\n<h3>\n<span id=\"接続設定\" class=\"fragment\"></span><a href=\"#%E6%8E%A5%E7%B6%9A%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>接続設定</h3>\n\n<ol>\n<li>ウィンドウ左下の Remote - SSH アイコンをクリック</li>\n<li>Remote-SSH: Open Configuration File... を選択</li>\n<li>c:\\Users{ユーザー名}.ssh\\config に設定を記述</li>\n</ol>\n\n<p><a href=\"https://camo.qiitausercontent.com/cff638774dd477b74ddc535c1ad4a2803e9f5a8d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f66353063613165332d613065632d613666632d653935332d6361353565306234313263392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff50ca1e3-a0ec-a6fc-e953-ca55e0b412c9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=26e5fce1ef573b90e25dcb19c8405053\" alt=\"ssh設定.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f50ca1e3-a0ec-a6fc-e953-ca55e0b412c9.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff50ca1e3-a0ec-a6fc-e953-ca55e0b412c9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=929e617b9cc18431ded8970826f061d1 1x\" loading=\"lazy\"></a></p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>Host Local VM # 設定名\n  HostName 127.0.0.1  # IP\n  Port 2200 # Port\n  User vagrant # ユーザー名\n  IdentityFile absolute-path/to/ssh-private-key # ssh 鍵パス\n</code></pre></div></div>\n\n<h3>\n<span id=\"接続-1\" class=\"fragment\"></span><a href=\"#%E6%8E%A5%E7%B6%9A-1\"><i class=\"fa fa-link\"></i></a>接続</h3>\n\n<ol>\n<li>ウィンドウ左下の Remote - SSH アイコンをクリック</li>\n<li>以下いずれかを選択\n\n<ul>\n<li>Remote-SSH: Connect Current Window to Host... (このウィンドウで接続)</li>\n<li>Remote-SSH: Connect to Host... (別のウィンドウで接続)</li>\n</ul>\n</li>\n<li>接続設定で作成した設定を選択</li>\n</ol>\n\n<p>以上となります。</p>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>RLogin と WinScp に VS Code がくっついたような快適さです。<br>\n導入もさほど難しくありませんので、よろしければ使ってみてください。</p>\n\n<p>個人的には、仕様書や手順書も vs code で書いていたりしていまして、ほぼすべての業務が vs code で完結する日が来たらいいなと妄想しています。</p>\n",
    "body": "## はじめに\n\nteraterm から rlogin に乗り換えて快適に使っていたんですが、vscode の方が快適に思えたので記事書きます。\n\n(メリット)\n\n- ssh コマンドを普通に使える\n- リモートのファイルを普通にvs code で編集できる\n- フォルダエクスプローラも普通に使える\n- ドラッグ＆ドロップでファイルのアップロードができる\n- ファイルのダウンロードもできる\n\n\n(デメリット)\n\n- 巨大なログファイルなどは開けない\n\nviとヒュージョンされているエキスパートな方にはあまりメリットを感じないかもしれませんが、ライトユーザーには魅力的な環境かと思います。\n\n（接続画面）\n![remote-ssh.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/1effe4e4-588d-a7b6-7c20-0104c0a524cc.png)\n\n\n## インストール\n\n- [Visual Studio Code](https://azure.microsoft.com/ja-jp/products/visual-studio-code/)\nサイトでインストーラーを入手してインストール\n\n- [Remote - SSH](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh)\nvscode の拡張機能よりインストール\n\nインストールは以上です。\n\n## 接続\n\n手頃なVMをお持ちならそちらに接続してみてください。\n手頃なVMがなかったのであまり意味がないですが Vagrant の VMに接続してます。\n\n### 事前準備\n\n```\n# 手頃な VM 起動\nvagrant init generic/ubuntu2004\nvagrant up\n\n# 設定確認\nvagrant ssh-config\n```\n\n※ssh-config で表示される以下の内容を、Remote - SSH に設定します\n\n```\n  HostName 127.0.0.1\n  User vagrant\n  Port 2200\n  IdentityFile remote-ssh/.vagrant/machines/default/virtualbox/private_key\n```\n\n### 接続設定\n\n1. ウィンドウ左下の Remote - SSH アイコンをクリック\n2. Remote-SSH: Open Configuration File... を選択\n3. c:\\Users\\{ユーザー名}\\.ssh\\config に設定を記述\n\n![ssh設定.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f50ca1e3-a0ec-a6fc-e953-ca55e0b412c9.png)\n\n```\nHost Local VM # 設定名\n  HostName 127.0.0.1  # IP\n  Port 2200 # Port\n  User vagrant # ユーザー名\n  IdentityFile absolute-path/to/ssh-private-key # ssh 鍵パス\n```\n\n### 接続\n\n1. ウィンドウ左下の Remote - SSH アイコンをクリック\n2. 以下いずれかを選択\n    - Remote-SSH: Connect Current Window to Host... (このウィンドウで接続)\n    - Remote-SSH: Connect to Host... (別のウィンドウで接続)\n3. 接続設定で作成した設定を選択\n\n以上となります。\n\n## おわりに\n\nRLogin と WinScp に VS Code がくっついたような快適さです。\n導入もさほど難しくありませんので、よろしければ使ってみてください。\n\n個人的には、仕様書や手順書も vs code で書いていたりしていまして、ほぼすべての業務が vs code で完結する日が来たらいいなと妄想しています。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-02-13T15:26:47+09:00",
    "group": null,
    "id": "dce7c3e0f9e123f22c4b",
    "likes_count": 4,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 2,
    "tags": [
      {
        "name": "Terminal",
        "versions": []
      },
      {
        "name": "teraterm",
        "versions": []
      },
      {
        "name": "Rlogin",
        "versions": []
      },
      {
        "name": "VSCode",
        "versions": []
      },
      {
        "name": "Remote-SSH",
        "versions": []
      }
    ],
    "title": "【2021年版】オススメターミナルソフトは teraterm でも RLogin でもなくて vscode + Remote - SSH",
    "updated_at": "2021-02-13T15:26:47+09:00",
    "url": "https://qiita.com/kaku3/items/dce7c3e0f9e123f22c4b",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 12528,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>Nuxt.js と storybook6.1 インストールまでは割とさっくり動きましたが、Storyshots 実行に必要な手順が現時点では不安定な様なので記事にしました。<br>\n※そのうち直ると思われますが import 文などなどが動かなかったり、公式の手順が微妙だったりしてハマります。</p>\n\n<h2>\n<span id=\"storyshots-とは\" class=\"fragment\"></span><a href=\"#storyshots-%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>StoryShots とは</h2>\n\n<p>Storybook で作成した Stories の jsdom スナップショットを取得・比較してくれる Storybook の addon です。<br>\n変更したつもりがないところまで変更されていたのに気づくのに便利そうです。</p>\n\n<p><a href=\"https://www.npmjs.com/package/@storybook/addon-storyshots\" rel=\"nofollow noopener\" target=\"_blank\">StoryShots</a></p>\n\n<h2>\n<span id=\"インストール\" class=\"fragment\"></span><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>インストール</h2>\n\n<p>以下の手順で導入します。</p>\n\n<ol>\n<li>nuxt app 作成</li>\n<li>Storybook インストール</li>\n<li>StoryShots addon インストール</li>\n</ol>\n\n<h3>\n<span id=\"nuxt-app-作成\" class=\"fragment\"></span><a href=\"#nuxt-app-%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>nuxt app 作成</h3>\n\n<p><code>npx create-nuxt-app {projectName}</code> で作成します。</p>\n\n<p>対話式コンソールに回答してプロジェクトを作成します。<br>\nポイントは StoryShots ではテストに Jest を利用するので、Testing framework に Jest を選択することです。</p>\n\n<p>今回は <code>sample</code> というプロジェクトを作成することにします。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>npx create-nuxt-app sample\n? Project name: sample\n? Programming language: TypeScript \n? Package manager: Yarn\n? UI framework: None\n? Nuxt.js modules: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection)\n? Linting tools: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection)\n? Testing framework: Jest\n? Rendering mode: Single Page App    \n? Deployment target: Static (Static/JAMStack hosting)\n? Development tools: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection)\n? Continuous integration: None\n? Version control system: None\n</code></pre></div></div>\n\n<ul>\n<li class=\"task-list-item\">\n<input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled>nuxt app が起動するか？(<a href=\"http://localhost:3000\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://localhost:3000</a> にアクセスしてページを確認)</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>cd sample\nyarn dev\n</code></pre></div></div>\n\n<p><a href=\"https://camo.qiitausercontent.com/9352eb13257cbc4aeff4647429da7e99d7c2bb81/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63353362373930352d373630642d376134322d336263372d3139656137313031306665642e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc53b7905-760d-7a42-3bc7-19ea71010fed.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=97f319e235740518bd0be15ee100c37d\" alt=\"00-nuxt.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c53b7905-760d-7a42-3bc7-19ea71010fed.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc53b7905-760d-7a42-3bc7-19ea71010fed.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ecbd79827f177e14a61cab0081abffb3 1x\" loading=\"lazy\"></a></p>\n\n<h3>\n<span id=\"storybook-インストール\" class=\"fragment\"></span><a href=\"#storybook-%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>Storybook インストール</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>cd sample\nnpx sb init\n</code></pre></div></div>\n\n<ul>\n<li class=\"task-list-item\">\n<input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled>フォルダ<code>.storybook/</code>, <code>stories/</code> が生成されているか？</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>sample/\n  .storybook/  # ★\n  stories/     # ★\n  components/\n  ...\n</code></pre></div></div>\n\n<ul>\n<li class=\"task-list-item\">\n<input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled>storybook が起動するか？(<a href=\"http://localhost:6006\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://localhost:6006</a> にアクセスしてページを確認)</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>yarn storybook\n</code></pre></div></div>\n\n<p><a href=\"https://camo.qiitausercontent.com/0edf2f085ee64bb17753a0e6a203fdb6f3c8eca0/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f66396464383234352d396463622d343932332d383064312d3132623938333464313662302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff9dd8245-9dcb-4923-80d1-12b9834d16b0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e3921af7cdb3f72b20a33ec34de9f1c6\" alt=\"10-storybook.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f9dd8245-9dcb-4923-80d1-12b9834d16b0.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff9dd8245-9dcb-4923-80d1-12b9834d16b0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=8eb41e1f00298264f30248dae2f41d70 1x\" loading=\"lazy\"></a></p>\n\n<p>※実際の開発は components/ フォルダ以下での開発になるので、.storybook/main.js の書き換えが必要になるが、今回は動作確認を目的としているので、stories フォルダに生成されるサンプルの story を storyshots でスナップショットを取る方針とする。</p>\n\n<h3>\n<span id=\"introductionstoriesmdx-の記述を大きく削除\" class=\"fragment\"></span><a href=\"#introductionstoriesmdx-%E3%81%AE%E8%A8%98%E8%BF%B0%E3%82%92%E5%A4%A7%E3%81%8D%E3%81%8F%E5%89%8A%E9%99%A4\"><i class=\"fa fa-link\"></i></a>Introduction.stories.mdx の記述を大きく削除</h3>\n\n<p>上記スクリーンショットの通り、豪華なページとなっており、これを Storyshots で動作させるのは少々面倒。<br>\n開発では、基本的な mdx のコードが書ければ支障がないため動作しないコードを削除する。</p>\n\n<p>(削除対象)</p>\n\n<ul>\n<li>svg import</li>\n<li>style 定義</li>\n<li>html コード</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\">\n<div class=\"code-lang\"><span class=\"bold\">削除後-Introduction.stories.mdx</span></div>\n<div class=\"highlight\"><pre><code>import { Meta } from '@storybook/addon-docs/blocks';\n\n&lt;Meta title=\"Example/Introduction\" /&gt;\n\n# Welcome to Storybook\n\nStorybook helps you build UI components in isolation from your app's business logic, data, and context.\nThat makes it easy to develop hard-to-reach states. Save these UI states as **stories** to revisit during development, testing, or QA.\n\nBrowse example stories now by navigating to them in the sidebar.\nView their code in the `src/stories` directory to learn how they work.\nWe recommend building UIs with a [**component-driven**](https://componentdriven.org) process starting with atomic components and ending with pages.\n\n</code></pre></div>\n</div>\n\n<h3>\n<span id=\"storyshots-インストール\" class=\"fragment\"></span><a href=\"#storyshots-%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>StoryShots インストール</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>cd sample\nyarn add @storybook/addon-storyshots -D\n</code></pre></div></div>\n\n<h4>\n<span id=\"storyshots-を実行するテストコードを記述公式サイト通り\" class=\"fragment\"></span><a href=\"#storyshots-%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B%E3%83%86%E3%82%B9%E3%83%88%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E8%A8%98%E8%BF%B0%E5%85%AC%E5%BC%8F%E3%82%B5%E3%82%A4%E3%83%88%E9%80%9A%E3%82%8A\"><i class=\"fa fa-link\"></i></a>StoryShots を実行するテストコードを記述(公式サイト通り)</h4>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">　test/Storyshot.spec.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"nx\">initStoryshots</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@storybook/addon-storyshots</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"nx\">initStoryshots</span><span class=\"p\">();</span>\n</code></pre></div>\n</div>\n\n<p>※デフォルトで入っている<code>test/Logo.spec.js</code>は消しておいた方がトラブルシューティングがしやすいです。</p>\n\n<h4>\n<span id=\"jestconfigjs-を修正\" class=\"fragment\"></span><a href=\"#jestconfigjs-%E3%82%92%E4%BF%AE%E6%AD%A3\"><i class=\"fa fa-link\"></i></a>jest.config.js を修正</h4>\n\n<ul>\n<li>mdx の transpile でエラーになる</li>\n<li>css の import でエラーになる</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>module.exports = {\n  moduleNameMapper: {\n    '^@/(.*)$': '&lt;rootDir&gt;/$1',\n    '^~/(.*)$': '&lt;rootDir&gt;/$1',\n    '^vue$': 'vue/dist/vue.common.js',\n    '\\\\.(css|scss)$': 'jest-css-modules', // ★追加(css, scss の import処理)\n  },\n  moduleFileExtensions: [\n    'ts',\n    'js',\n    'vue',\n    'json'\n  ],\n  transform: {\n    '^.+\\\\.mdx?$': '@storybook/addon-docs/jest-transform-mdx',  // ★追加(mdx処理)\n    \"^.+\\\\.ts$\": \"ts-jest\",\n    '^.+\\\\.js$': 'babel-jest',\n    '.*\\\\.(vue)$': 'vue-jest'\n  },\n  collectCoverage: true,\n  collectCoverageFrom: [\n    '&lt;rootDir&gt;/components/**/*.vue',\n    '&lt;rootDir&gt;/pages/**/*.vue'\n  ]\n}\n</code></pre></div></div>\n\n<p>対応モジュールもインストール</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>cd sample\nyarn add -D jest-css-modules\nyarn add -D @storybook/addon-docs/jest-transform-mdx\n</code></pre></div></div>\n\n<h4>\n<span id=\"babelrc-修正\" class=\"fragment\"></span><a href=\"#babelrc-%E4%BF%AE%E6%AD%A3\"><i class=\"fa fa-link\"></i></a>.babelrc 修正</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>{\n  \"env\": {\n    \"test\": {\n      \"presets\": [\n        [\n          \"@babel/preset-env\",\n          {\n            \"targets\": {\n              \"node\": \"current\"\n            }\n          }\n        ]\n      ],\n      // ★追加(import -&gt; require変換)\n      \"plugins\": [\n        \"@babel/plugin-transform-modules-commonjs\",\n      ]\n    }\n  }\n}\n</code></pre></div></div>\n\n<ul>\n<li class=\"task-list-item\">\n<input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled>StoryShots が実行出来るか確認</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>yarn test\n</code></pre></div></div>\n\n<p>※2回実行して以下の様なログが出ていれば成功。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>  Storyshots\n    Example/Button\n      √ Primary (28 ms)\n      √ Secondary (7 ms)\n      √ Large (6 ms)\n      √ Small (6 ms)\n    Example/Header\n      √ Logged In (30 ms)\n      √ Logged Out (27 ms)\n    Example/Page\n      √ Logged In (25 ms)\n      √ Logged Out (25 ms)\n</code></pre></div></div>\n\n<p>※Vueファイルで大量のエラーが出るが、Storybookのサンプルの問題なので今回はスルー。</p>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>Storyshots は簡単で便利という記事が多くて、簡単にやったら時間が足りなくて大変でしたので作業整理も兼ねて記事にしました。<br>\nぶっちゃけ、まだ便利さを実感できていないのですが、ちょっと設定を追加しておくと後で便利になるならやっておいて損はないと思ってます。<br>\n後で作業される方のお役に立てれば幸いです。</p>\n",
    "body": "## はじめに\n\nNuxt.js と storybook6.1 インストールまでは割とさっくり動きましたが、Storyshots 実行に必要な手順が現時点では不安定な様なので記事にしました。\n※そのうち直ると思われますが import 文などなどが動かなかったり、公式の手順が微妙だったりしてハマります。\n\n## StoryShots とは\n\nStorybook で作成した Stories の jsdom スナップショットを取得・比較してくれる Storybook の addon です。\n変更したつもりがないところまで変更されていたのに気づくのに便利そうです。\n\n[StoryShots](https://www.npmjs.com/package/@storybook/addon-storyshots)\n\n## インストール\n\n以下の手順で導入します。\n\n1. nuxt app 作成\n2. Storybook インストール\n3. StoryShots addon インストール\n\n### nuxt app 作成\n\n`npx create-nuxt-app {projectName}` で作成します。\n\n対話式コンソールに回答してプロジェクトを作成します。\nポイントは StoryShots ではテストに Jest を利用するので、Testing framework に Jest を選択することです。\n\n今回は `sample` というプロジェクトを作成することにします。\n\n```\nnpx create-nuxt-app sample\n? Project name: sample\n? Programming language: TypeScript \n? Package manager: Yarn\n? UI framework: None\n? Nuxt.js modules: (Press <space> to select, <a> to toggle all, <i> to invert selection)\n? Linting tools: (Press <space> to select, <a> to toggle all, <i> to invert selection)\n? Testing framework: Jest\n? Rendering mode: Single Page App    \n? Deployment target: Static (Static/JAMStack hosting)\n? Development tools: (Press <space> to select, <a> to toggle all, <i> to invert selection)\n? Continuous integration: None\n? Version control system: None\n```\n\n- [ ] nuxt app が起動するか？(http://localhost:3000 にアクセスしてページを確認)\n\n```\ncd sample\nyarn dev\n```\n\n![00-nuxt.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c53b7905-760d-7a42-3bc7-19ea71010fed.png)\n\n### Storybook インストール\n\n```\ncd sample\nnpx sb init\n```\n\n- [ ] フォルダ`.storybook/`, `stories/` が生成されているか？\n\n```\nsample/\n  .storybook/  # ★\n  stories/     # ★\n  components/\n  ...\n```\n\n- [ ] storybook が起動するか？(http://localhost:6006 にアクセスしてページを確認)\n\n```\nyarn storybook\n```\n\n![10-storybook.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f9dd8245-9dcb-4923-80d1-12b9834d16b0.png)\n\n※実際の開発は components/ フォルダ以下での開発になるので、.storybook/main.js の書き換えが必要になるが、今回は動作確認を目的としているので、stories フォルダに生成されるサンプルの story を storyshots でスナップショットを取る方針とする。\n\n### Introduction.stories.mdx の記述を大きく削除\n\n上記スクリーンショットの通り、豪華なページとなっており、これを Storyshots で動作させるのは少々面倒。\n開発では、基本的な mdx のコードが書ければ支障がないため動作しないコードを削除する。\n\n(削除対象)\n\n- svg import\n- style 定義\n- html コード\n\n``` 削除後-Introduction.stories.mdx\nimport { Meta } from '@storybook/addon-docs/blocks';\n\n<Meta title=\"Example/Introduction\" />\n\n# Welcome to Storybook\n\nStorybook helps you build UI components in isolation from your app's business logic, data, and context.\nThat makes it easy to develop hard-to-reach states. Save these UI states as **stories** to revisit during development, testing, or QA.\n\nBrowse example stories now by navigating to them in the sidebar.\nView their code in the `src/stories` directory to learn how they work.\nWe recommend building UIs with a [**component-driven**](https://componentdriven.org) process starting with atomic components and ending with pages.\n\n```\n\n### StoryShots インストール\n\n```\ncd sample\nyarn add @storybook/addon-storyshots -D\n```\n\n#### StoryShots を実行するテストコードを記述(公式サイト通り)\n\n```　test/Storyshot.spec.js\nimport initStoryshots from '@storybook/addon-storyshots';\n\ninitStoryshots();\n```\n\n※デフォルトで入っている`test/Logo.spec.js`は消しておいた方がトラブルシューティングがしやすいです。\n\n#### jest.config.js を修正\n\n- mdx の transpile でエラーになる\n- css の import でエラーになる\n\n```\nmodule.exports = {\n  moduleNameMapper: {\n    '^@/(.*)$': '<rootDir>/$1',\n    '^~/(.*)$': '<rootDir>/$1',\n    '^vue$': 'vue/dist/vue.common.js',\n    '\\\\.(css|scss)$': 'jest-css-modules', // ★追加(css, scss の import処理)\n  },\n  moduleFileExtensions: [\n    'ts',\n    'js',\n    'vue',\n    'json'\n  ],\n  transform: {\n    '^.+\\\\.mdx?$': '@storybook/addon-docs/jest-transform-mdx',  // ★追加(mdx処理)\n    \"^.+\\\\.ts$\": \"ts-jest\",\n    '^.+\\\\.js$': 'babel-jest',\n    '.*\\\\.(vue)$': 'vue-jest'\n  },\n  collectCoverage: true,\n  collectCoverageFrom: [\n    '<rootDir>/components/**/*.vue',\n    '<rootDir>/pages/**/*.vue'\n  ]\n}\n```\n\n対応モジュールもインストール\n\n```\ncd sample\nyarn add -D jest-css-modules\nyarn add -D @storybook/addon-docs/jest-transform-mdx\n```\n\n#### .babelrc 修正\n\n```\n{\n  \"env\": {\n    \"test\": {\n      \"presets\": [\n        [\n          \"@babel/preset-env\",\n          {\n            \"targets\": {\n              \"node\": \"current\"\n            }\n          }\n        ]\n      ],\n      // ★追加(import -> require変換)\n      \"plugins\": [\n        \"@babel/plugin-transform-modules-commonjs\",\n      ]\n    }\n  }\n}\n```\n\n- [ ] StoryShots が実行出来るか確認\n\n```\nyarn test\n```\n\n※2回実行して以下の様なログが出ていれば成功。\n\n```\n  Storyshots\n    Example/Button\n      √ Primary (28 ms)\n      √ Secondary (7 ms)\n      √ Large (6 ms)\n      √ Small (6 ms)\n    Example/Header\n      √ Logged In (30 ms)\n      √ Logged Out (27 ms)\n    Example/Page\n      √ Logged In (25 ms)\n      √ Logged Out (25 ms)\n```\n\n※Vueファイルで大量のエラーが出るが、Storybookのサンプルの問題なので今回はスルー。\n\n## おわりに\n\nStoryshots は簡単で便利という記事が多くて、簡単にやったら時間が足りなくて大変でしたので作業整理も兼ねて記事にしました。\nぶっちゃけ、まだ便利さを実感できていないのですが、ちょっと設定を追加しておくと後で便利になるならやっておいて損はないと思ってます。\n後で作業される方のお役に立てれば幸いです。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-02-06T16:03:24+09:00",
    "group": null,
    "id": "434ad11e74a6bc152dad",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 1,
    "tags": [
      {
        "name": "storybook",
        "versions": []
      },
      {
        "name": "Nuxt",
        "versions": []
      },
      {
        "name": "storyshots",
        "versions": []
      }
    ],
    "title": "【最小手順2021/01】Nuxt.js + Storybook6.1 + Storyshots",
    "updated_at": "2021-02-06T16:03:57+09:00",
    "url": "https://qiita.com/kaku3/items/434ad11e74a6bc152dad",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2085,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>以前に、こんな記事を書きました。  </p>\n\n<p><a href=\"https://qiita.com/kaku3/items/05a0de729da7faba9ce4\" id=\"reference-47837f5f03ab50212af7\">【超簡単フロントエンド開発】Storybook6.1 + Nuxtjs (+Vuetify)</a></p>\n\n<p>が、導入後色々あって超簡単に使うには少しコツが必要でしたのでフォローアップ記事を書きます。</p>\n\n<h2>\n<span id=\"storybook-実行時-v-data-table等一部-vuetify-コンポーネントが利用できない\" class=\"fragment\"></span><a href=\"#storybook-%E5%AE%9F%E8%A1%8C%E6%99%82-v-data-table%E7%AD%89%E4%B8%80%E9%83%A8-vuetify-%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%8C%E5%88%A9%E7%94%A8%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>Storybook 実行時 v-data-table等、一部 Vuetify コンポーネントが利用できない</h2>\n\n<p>storybook 実行時に Vuetify が見えていないのが原因。<br>\n以下2点追加する。</p>\n\n<ol>\n<li>plugins フォルダに storybook から参照用に vuetify object を作る</li>\n</ol>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">[nuxt-root]/plugins/vuetify.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"nx\">Vue</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">vue</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"nx\">Vuetify</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">vuetify</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"dl\">'</span><span class=\"s1\">vuetify/dist/vuetify.min.css</span><span class=\"dl\">'</span>\n\n<span class=\"nx\">Vue</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">Vuetify</span><span class=\"p\">)</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">opts</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"k\">new</span> <span class=\"nx\">Vuetify</span><span class=\"p\">(</span><span class=\"nx\">opts</span><span class=\"p\">)</span>\n</code></pre></div>\n</div>\n\n<ol>\n<li>stories.js で template に vuetify を注入する</li>\n</ol>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">[your-component-path]/[your-component-name].stories.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\">// [your-component-path] / [your-component-name] 部分は、実際のコンポーネント名に置き換えてください。</span>\n<span class=\"k\">import</span> <span class=\"nx\">vuetify</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@plugins/vuetify</span><span class=\"dl\">'</span> <span class=\"c1\">// ★追加</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">action</span><span class=\"p\">,</span> <span class=\"nx\">configureActions</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@storybook/addon-actions</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"p\">[</span><span class=\"nx\">your</span><span class=\"o\">-</span><span class=\"nx\">component</span><span class=\"o\">-</span><span class=\"nx\">name</span><span class=\"p\">]</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">./[your-component-name]</span><span class=\"dl\">'</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Template</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">args</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">argTypes</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">({</span>\n  <span class=\"nx\">vuetify</span><span class=\"p\">,</span> <span class=\"c1\">// ★追加</span>\n  <span class=\"na\">props</span><span class=\"p\">:</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">argTypes</span><span class=\"p\">),</span>\n  <span class=\"na\">components</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"p\">[</span><span class=\"nx\">your</span><span class=\"o\">-</span><span class=\"nx\">component</span><span class=\"o\">-</span><span class=\"nx\">name</span><span class=\"p\">]</span> <span class=\"p\">},</span>\n  <span class=\"na\">template</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;[your-component-name] v-bind=\"$props\" /&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">Default</span> <span class=\"o\">=</span> <span class=\"nx\">Template</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">({})</span>\n<span class=\"nx\">Default</span><span class=\"p\">.</span><span class=\"nx\">args</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n</code></pre></div>\n</div>\n\n<p>(参考：神がワークアラウンドを提示しているissue)<br>\n<a href=\"https://github.com/storybookjs/storybook/issues/13532\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/storybookjs/storybook/issues/13532</a></p>\n\n<h2>\n<span id=\"storybook-実行時-などのパスが解決できない\" class=\"fragment\"></span><a href=\"#storybook-%E5%AE%9F%E8%A1%8C%E6%99%82-%E3%81%AA%E3%81%A9%E3%81%AE%E3%83%91%E3%82%B9%E3%81%8C%E8%A7%A3%E6%B1%BA%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>storybook 実行時、@/ などのパスが解決できない</h2>\n\n<p>Storybook の設定ファイル main.js に webpack 設定が書ける。<br>\n必要なパスを追加する。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">[nuxt-root]/.stories/main.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"dl\">\"</span><span class=\"s2\">stories</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">../stories/**/*.stories.mdx</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">../stories/**/*.stories.@(js|jsx|ts|tsx)</span><span class=\"dl\">\"</span>\n  <span class=\"p\">],</span>\n  <span class=\"dl\">\"</span><span class=\"s2\">addons</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">@storybook/addon-links</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">@storybook/addon-essentials</span><span class=\"dl\">\"</span>\n  <span class=\"p\">],</span>\n  <span class=\"c1\">// Storybook側での webpack 設定に設定を追加できるように hook が用意されている。</span>\n  <span class=\"c1\">// ★追加 --&gt;</span>\n  <span class=\"na\">webpackFinal</span><span class=\"p\">:</span> <span class=\"k\">async</span> <span class=\"p\">(</span><span class=\"nx\">config</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">configType</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">.</span><span class=\"nx\">alias</span> <span class=\"o\">=</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">assign</span><span class=\"p\">(</span><span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">.</span><span class=\"nx\">alias</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n      <span class=\"dl\">'</span><span class=\"s1\">@</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">(</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">..</span><span class=\"dl\">'</span><span class=\"p\">),</span>\n\n  <span class=\"p\">})</span>\n  <span class=\"c1\">// ★&lt;-- 追加</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"テスト用のデータを-storiesjs-に定義するのが面倒くさい\" class=\"fragment\"></span><a href=\"#%E3%83%86%E3%82%B9%E3%83%88%E7%94%A8%E3%81%AE%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92-storiesjs-%E3%81%AB%E5%AE%9A%E7%BE%A9%E3%81%99%E3%82%8B%E3%81%AE%E3%81%8C%E9%9D%A2%E5%80%92%E3%81%8F%E3%81%95%E3%81%84\"><i class=\"fa fa-link\"></i></a>テスト用のデータを .stories.js に定義するのが面倒くさい</h2>\n\n<p>backend を FastAPI(Python)で作成する、または OpenAPI を手書きするなどして openapi.json を用意する。</p>\n\n<p>openapi-sampler を利用して json の雛形を取得し、テストデータを埋める。</p>\n\n<h3>\n<span id=\"事前準備\" class=\"fragment\"></span><a href=\"#%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>事前準備</h3>\n\n<ol>\n<li>json-loader 追加</li>\n</ol>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>yarn add json-loader json-import-loader -D \n</code></pre></div></div>\n\n<ol>\n<li>json を load 出来るように main.js 修正</li>\n</ol>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">[nuxt-root]/.stories/main.js</span></div>\n<div class=\"highlight\"><pre><code>  <span class=\"nx\">webpackFinal</span><span class=\"p\">:</span> <span class=\"k\">async</span> <span class=\"p\">(</span><span class=\"nx\">config</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">configType</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// ★追加</span>\n    <span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">rules</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">({</span>\n      <span class=\"na\">test</span><span class=\"p\">:</span> <span class=\"sr\">/</span><span class=\"se\">\\.</span><span class=\"sr\">json$/</span><span class=\"p\">,</span>\n      <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">javascript/dynamic</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"c1\">// only for webpack 4+</span>\n      <span class=\"na\">use</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"na\">loader</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">json-import-loader</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n          <span class=\"na\">options</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"na\">processPath</span><span class=\"p\">:</span> <span class=\"nx\">path</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">path</span><span class=\"p\">,</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span> <span class=\"na\">loader</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">json-loader</span><span class=\"dl\">'</span> <span class=\"p\">}</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">})</span>\n    <span class=\"p\">...</span>\n</code></pre></div>\n</div>\n\n<h3>\n<span id=\"テストデータ定義例\" class=\"fragment\"></span><a href=\"#%E3%83%86%E3%82%B9%E3%83%88%E3%83%87%E3%83%BC%E3%82%BF%E5%AE%9A%E7%BE%A9%E4%BE%8B\"><i class=\"fa fa-link\"></i></a>テストデータ定義例</h3>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">SampleGenerator.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">const</span> <span class=\"nx\">json</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./openapi.json</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">OpenAPIsampler</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">openapi-sampler</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n\n<span class=\"kd\">class</span> <span class=\"nx\">SampleGenerator</span> <span class=\"p\">{</span>\n\n  <span class=\"kd\">static</span> <span class=\"nx\">getSample</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 任意のスキーマのデータを返却</span>\n    <span class=\"c1\">// 実際は faker なども使って定義：https://www.npmjs.com/package/faker</span>\n    <span class=\"k\">return</span> <span class=\"nx\">OpenAPIsampler</span><span class=\"p\">.</span><span class=\"nx\">sample</span><span class=\"p\">(</span><span class=\"nx\">json</span><span class=\"p\">.</span><span class=\"nx\">components</span><span class=\"p\">.</span><span class=\"nx\">schemas</span><span class=\"p\">.</span><span class=\"nx\">sample</span><span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"nx\">SampleGenerator</span>\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">[your-component-path]/[your-component-name].stories.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"nx\">vuetify</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@plugins/vuetify</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">action</span><span class=\"p\">,</span> <span class=\"nx\">configureActions</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@storybook/addon-actions</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"nx\">SampleComponent</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">SampleComponent</span><span class=\"dl\">'</span>\n\n<span class=\"k\">import</span> <span class=\"nx\">SG</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@test-data/SampleGenerator</span><span class=\"dl\">'</span> <span class=\"c1\">//★ 追加</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Template</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">args</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">argTypes</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">({</span>\n  <span class=\"nx\">vuetify</span><span class=\"p\">,</span>\n  <span class=\"na\">props</span><span class=\"p\">:</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">argTypes</span><span class=\"p\">),</span>\n  <span class=\"na\">components</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"nx\">SampleComponent</span> <span class=\"p\">},</span>\n  <span class=\"na\">template</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;SampleComponent v-bind=\"$props\" /&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">Default</span> <span class=\"o\">=</span> <span class=\"nx\">Template</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">({})</span>\n<span class=\"nx\">Default</span><span class=\"p\">.</span><span class=\"nx\">args</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">sample</span><span class=\"p\">:</span> <span class=\"nx\">SG</span><span class=\"p\">.</span><span class=\"nx\">getSample</span><span class=\"p\">()</span>    <span class=\"c1\">//★ 追加</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>Storybook開発で一見手間が増えている様に見えますが、動作するモックと仕様書と自動リグレッションテスト用のデータを同時に作成していて、ある意味 <strong>アジャイルの風</strong>を感じました。</p>\n\n<p>設計者・開発者・試験担当者の境界が曖昧になっていますが、低予算・短納期のプロジェクトの場合全て一人でやることも想定されますし、エクセルの仕様書や試験項目を作るよりは動くモック、動く試験データもできるのでよいのかなと思いました。</p>\n",
    "body": "\n## はじめに\n\n以前に、こんな記事を書きました。  \n\n[【超簡単フロントエンド開発】Storybook6.1 + Nuxtjs (+Vuetify)](https://qiita.com/kaku3/items/05a0de729da7faba9ce4)\n\nが、導入後色々あって超簡単に使うには少しコツが必要でしたのでフォローアップ記事を書きます。\n\n## Storybook 実行時 v-data-table等、一部 Vuetify コンポーネントが利用できない\n\nstorybook 実行時に Vuetify が見えていないのが原因。\n以下2点追加する。\n\n1. plugins フォルダに storybook から参照用に vuetify object を作る\n\n``` [nuxt-root]/plugins/vuetify.js\nimport Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport 'vuetify/dist/vuetify.min.css'\n\nVue.use(Vuetify)\n\nconst opts = {}\n\nexport default new Vuetify(opts)\n```\n\n2. stories.js で template に vuetify を注入する\n\n``` [your-component-path]/[your-component-name].stories.js\n// [your-component-path] / [your-component-name] 部分は、実際のコンポーネント名に置き換えてください。\nimport vuetify from '@plugins/vuetify' // ★追加\nimport { action, configureActions } from '@storybook/addon-actions'\nimport [your-component-name] from './[your-component-name]'\n\nconst Template = (args, { argTypes }) => ({\n  vuetify, // ★追加\n  props: Object.keys(argTypes),\n  components: { [your-component-name] },\n  template: '<[your-component-name] v-bind=\"$props\" />',\n})\n\nexport const Default = Template.bind({})\nDefault.args = {}\n```\n(参考：神がワークアラウンドを提示しているissue)\nhttps://github.com/storybookjs/storybook/issues/13532\n\n## storybook 実行時、@/ などのパスが解決できない\n\nStorybook の設定ファイル main.js に webpack 設定が書ける。\n必要なパスを追加する。\n\n``` [nuxt-root]/.stories/main.js\nmodule.exports = {\n  \"stories\": [\n    \"../stories/**/*.stories.mdx\",\n    \"../stories/**/*.stories.@(js|jsx|ts|tsx)\"\n  ],\n  \"addons\": [\n    \"@storybook/addon-links\",\n    \"@storybook/addon-essentials\"\n  ],\n  // Storybook側での webpack 設定に設定を追加できるように hook が用意されている。\n  // ★追加 -->\n  webpackFinal: async (config, { configType }) => {\n    config.resolve.alias = Object.assign(config.resolve.alias, {\n      '@': path.resolve(__dirname, '..'),\n\n  })\n  // ★<-- 追加\n}\n```\n\n## テスト用のデータを .stories.js に定義するのが面倒くさい\n\nbackend を FastAPI(Python)で作成する、または OpenAPI を手書きするなどして openapi.json を用意する。\n\nopenapi-sampler を利用して json の雛形を取得し、テストデータを埋める。\n\n### 事前準備\n\n1. json-loader 追加\n\n```\nyarn add json-loader json-import-loader -D \n```\n\n2. json を load 出来るように main.js 修正\n\n``` [nuxt-root]/.stories/main.js\n  webpackFinal: async (config, { configType }) => {\n    // ★追加\n    config.module.rules.push({\n      test: /\\.json$/,\n      type: 'javascript/dynamic', // only for webpack 4+\n      use: [\n        {\n          loader: 'json-import-loader',\n          options: {\n            processPath: path => path,\n          }\n        },\n        { loader: 'json-loader' }\n      ]\n    })\n    ...\n```\n\n### テストデータ定義例\n\n``` SampleGenerator.js\nconst json = require('./openapi.json')\nconst OpenAPIsampler = require('openapi-sampler')\n\nclass SampleGenerator {\n\n  static getSample() {\n    // 任意のスキーマのデータを返却\n    // 実際は faker なども使って定義：https://www.npmjs.com/package/faker\n    return OpenAPIsampler.sample(json.components.schemas.sample)\n  }\n}\nmodule.exports = SampleGenerator\n```\n\n``` [your-component-path]/[your-component-name].stories.js\nimport vuetify from '@plugins/vuetify'\nimport { action, configureActions } from '@storybook/addon-actions'\nimport SampleComponent from 'SampleComponent'\n\nimport SG from '@test-data/SampleGenerator' //★ 追加\n\nconst Template = (args, { argTypes }) => ({\n  vuetify,\n  props: Object.keys(argTypes),\n  components: { SampleComponent },\n  template: '<SampleComponent v-bind=\"$props\" />',\n})\n\nexport const Default = Template.bind({})\nDefault.args = {\n  sample: SG.getSample()    //★ 追加\n}\n```\n\n## おわりに\n\nStorybook開発で一見手間が増えている様に見えますが、動作するモックと仕様書と自動リグレッションテスト用のデータを同時に作成していて、ある意味 **アジャイルの風**を感じました。\n\n設計者・開発者・試験担当者の境界が曖昧になっていますが、低予算・短納期のプロジェクトの場合全て一人でやることも想定されますし、エクセルの仕様書や試験項目を作るよりは動くモック、動く試験データもできるのでよいのかなと思いました。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-01-30T16:14:00+09:00",
    "group": null,
    "id": "f9240bd7e95185b58401",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "OpenAPI",
        "versions": []
      },
      {
        "name": "storybook",
        "versions": []
      },
      {
        "name": "Vuetify",
        "versions": []
      },
      {
        "name": "Nuxt",
        "versions": []
      }
    ],
    "title": "【超簡単フロントエンド開発】Storybook6.1 + Nuxtjs (+Vuetify) : フォローアップ",
    "updated_at": "2021-01-30T16:28:09+09:00",
    "url": "https://qiita.com/kaku3/items/f9240bd7e95185b58401",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 924,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>以前から vscode + Markdown Preview Enhanced(MPE) を愛用していましたが、<code>@import機能</code>で <strong>手順書問題で頻出一位の課題(自分調べ)を解決</strong>できそうなので記事を書きました。</p>\n\n<h2>\n<span id=\"手順書問題一位の課題\" class=\"fragment\"></span><a href=\"#%E6%89%8B%E9%A0%86%E6%9B%B8%E5%95%8F%E9%A1%8C%E4%B8%80%E4%BD%8D%E3%81%AE%E8%AA%B2%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>手順書問題一位の課題</h2>\n\n<p><strong>『実際の設定ファイルと、手順書の内容があってない』</strong>(自分調べ)</p>\n\n<p>複雑な要因が絡み合って長年決定的な解決方法がない課題と認識しています。</p>\n\n<ol>\n<li>ドキュメントにコストかけられない問題</li>\n<li>実装者が、実装で不都合があると設定項目が増えたり変更されたりする</li>\n<li>ドキュメント担当者は変更に気づかない</li>\n<li>slack などで通知されても、別の作業をやってて更新忘れる</li>\n<li>人間なのでそもそもミスする</li>\n</ol>\n\n<p>これって <strong>『実装者が実際に最後にコミットした設定ファイル』</strong>をドキュメントにそのまま取り込めるなら <strong>「ドキュメントに反映する」作業自体がなくなる</strong>ので全て解決しませんか？<br>\n※そもそも動かないファイルがコミットされているなら、それは別途話し合いが必要<br>\n※本番用のファイルは間違っても<code>@import</code>しないでください</p>\n\n<h2>\n<span id=\"手順書ツール比較\" class=\"fragment\"></span><a href=\"#%E6%89%8B%E9%A0%86%E6%9B%B8%E3%83%84%E3%83%BC%E3%83%AB%E6%AF%94%E8%BC%83\"><i class=\"fa fa-link\"></i></a>手順書ツール比較</h2>\n\n<p>ポピュラーな、テキスト、ワード、エクセルおよび、MPEを主観で比較してみました。</p>\n\n<table>\n<thead>\n<tr>\n<th>機能</th>\n<th>テキスト</th>\n<th>ワード</th>\n<th>エクセル</th>\n<th>MPE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>記述の簡単さ</td>\n<td>◎</td>\n<td>△</td>\n<td>△</td>\n<td>◎</td>\n</tr>\n<tr>\n<td>git保存</td>\n<td>◎</td>\n<td>△</td>\n<td>△</td>\n<td>◎</td>\n</tr>\n<tr>\n<td>章立</td>\n<td>△</td>\n<td>○</td>\n<td>△</td>\n<td>○</td>\n</tr>\n<tr>\n<td>目次</td>\n<td>×</td>\n<td>○</td>\n<td>×</td>\n<td>○(Create TOC)</td>\n</tr>\n<tr>\n<td>図</td>\n<td>×</td>\n<td>○</td>\n<td>○</td>\n<td>○</td>\n</tr>\n<tr>\n<td>図形</td>\n<td>×</td>\n<td>△</td>\n<td>○</td>\n<td>◎(draw.io)</td>\n</tr>\n<tr>\n<td>UML</td>\n<td>×</td>\n<td>△</td>\n<td>△</td>\n<td>◎(PlantUML)</td>\n</tr>\n<tr>\n<td>更新もれ対策</td>\n<td>×</td>\n<td>×</td>\n<td>×</td>\n<td>◎(<code>@import</code>)</td>\n</tr>\n</tbody>\n</table>\n\n<p>実際に試験済みのファイルとdraw.ioの図形の取り込みができる事で、ワードやテキストベースの手順書に大きくリードした様に思います。</p>\n\n<h2>\n<span id=\"markdown-preview-enhancedmpe\" class=\"fragment\"></span><a href=\"#markdown-preview-enhancedmpe\"><i class=\"fa fa-link\"></i></a>Markdown Preview Enhanced(MPE)</h2>\n\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced\" rel=\"nofollow noopener\" target=\"_blank\">拡張機能：Markdown Preview Enhanced</a><br>\n<a href=\"https://shd101wyy.github.io/markdown-preview-enhanced/#/\" rel=\"nofollow noopener\" target=\"_blank\">公式サイト</a></p>\n\n<p>MPEは、vs code の拡張機能です。<br>\nMarkdown で書いたドキュメントをプレビューする機能ですが、通常の Markdown よりも機能が増えたものになります。<br>\n今回は、手順書を書くのに役に立つと思われる以下2点の機能を紹介します。</p>\n\n<ol>\n<li>less による styling</li>\n<li>\n<code>@import</code>によるファイル取り込み</li>\n</ol>\n\n<h2>\n<span id=\"less-による-styling\" class=\"fragment\"></span><a href=\"#less-%E3%81%AB%E3%82%88%E3%82%8B-styling\"><i class=\"fa fa-link\"></i></a>less による styling</h2>\n\n<p>通常の Makdown は章番号がつきません。これは手順書や仕様書として致命的だと思います。<br>\nMPE では出力スタイルを定義できるので、章に対して章番号をつけるスタイルにすることが可能です。</p>\n\n<p>以下の less ファイルをファイルの先頭で import すれば、章番号が付与されます。</p>\n\n<div class=\"code-frame\" data-lang=\"less\">\n<div class=\"code-lang\"><span class=\"bold\">style.less</span></div>\n<div class=\"highlight\"><pre><code>.markdown-preview.markdown-preview {\n\n    font-family: Meiryo, メイリオ;\n\n    p {\n        margin-bottom: .25rem;\n        line-height: 1.4;\n        font-size: .95rem;\n        color: #444;\n        text-indent: .5rem;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5 {\n        margin-bottom: .25rem;\n        padding-bottom: 0;\n        color: #222;\n    }\n\n    h1 {\n        font-size: 1.5rem;\n        font-weight: normal;\n        counter-reset: h2SectionCounter;\n    }\n\n    h2 {\n        font-size: 1.2rem;\n\n        &amp;:not(.toc) {\n            counter-increment: h2SectionCounter;\n            counter-reset: h3SectionCounter;\n        }\n    }\n\n    h3 {\n        font-size: 1.1rem;\n        counter-increment: h3SectionCounter;\n        counter-reset: h4SectionCounter;\n    }\n\n    h4 {\n        font-size: 1.1rem;\n        counter-increment: h4SectionCounter;\n        counter-reset: h5SectionCounter;\n    }\n\n    h5 {\n        font-size: 1rem;\n        counter-increment: h5SectionCounter;\n    }\n\n    h2:not(.toc):before {\n        content: counter(h2SectionCounter) \".\";\n    }\n\n    h3:before {\n        content: counter(h2SectionCounter) \".\"counter(h3SectionCounter) \".\";\n    }\n\n    h4:before {\n        content: counter(h2SectionCounter) \".\"counter(h3SectionCounter) \".\"counter(h4SectionCounter) \".\";\n    }\n\n    h5:before {\n        content: counter(h2SectionCounter) \".\"counter(h3SectionCounter) \".\"counter(h4SectionCounter) \".\"counter(h5SectionCounter) \".\";\n    }\n}\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"importによるファイル取り込み\" class=\"fragment\"></span><a href=\"#import%E3%81%AB%E3%82%88%E3%82%8B%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%8F%96%E3%82%8A%E8%BE%BC%E3%81%BF\"><i class=\"fa fa-link\"></i></a><code>@import</code>によるファイル取り込み</h2>\n\n<p><code>@import \"file-path\"</code> で簡単に取り込めます。<br>\n実際にはここで紹介しているファイル以外にも取り込めますので、興味ある方は公式サイトを見てみてください。</p>\n\n<p><a href=\"https://shd101wyy.github.io/markdown-preview-enhanced/#/file-imports\" rel=\"nofollow noopener\" target=\"_blank\">File Imports</a></p>\n\n<h2>\n<span id=\"サンプル\" class=\"fragment\"></span><a href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\"><i class=\"fa fa-link\"></i></a>サンプル</h2>\n\n<p>以下目次作成、ファイル取り込みについて記載したサンプルのmarkdownを出力したpng(pdf出力もできます)とソースを以下に記載します。<br>\n※サンプル中のコードブロックは、[```] を[''']に置換してます。</p>\n\n<h3>\n<span id=\"サンプル出力\" class=\"fragment\"></span><a href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E5%87%BA%E5%8A%9B\"><i class=\"fa fa-link\"></i></a>サンプル出力</h3>\n\n<p><a href=\"https://camo.qiitausercontent.com/defab3fb9d4ade7c8f1dca96bae044b89a3c04c3/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f31643231346137662d623531612d383562612d373732372d3664666432306662386164652e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F1d214a7f-b51a-85ba-7727-6dfd20fb8ade.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ff1f161b0c3cb37d1fef6fe8cd1ec09f\" alt=\"sample.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/1d214a7f-b51a-85ba-7727-6dfd20fb8ade.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F1d214a7f-b51a-85ba-7727-6dfd20fb8ade.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=839a234da0ea3f15b5f072935d25becf 1x\" loading=\"lazy\"></a></p>\n\n<h3>\n<span id=\"フォルダ構成\" class=\"fragment\"></span><a href=\"#%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E6%A7%8B%E6%88%90\"><i class=\"fa fa-link\"></i></a>フォルダ構成</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>│  sample.md\n│  style.less\n│  _environment.md\n│\n├─configs\n│      sample.yaml\n│\n├─csvs\n│      sample.csv\n│\n├─draws\n│      sample.drawio.png\n│\n├─images\n│      drawio-convert.png\n│      drawio-drawio-png.png\n│      drawio-editor.png\n│      mpe-create-toc.png\n│\n└─scripts\n        sample.sh\n</code></pre></div></div>\n\n<h3>\n<span id=\"ソース\" class=\"fragment\"></span><a href=\"#%E3%82%BD%E3%83%BC%E3%82%B9\"><i class=\"fa fa-link\"></i></a>ソース</h3>\n\n<div class=\"code-frame\" data-lang=\"gcc-machine-description\">\n<div class=\"code-lang\"><span class=\"bold\">sample.md</span></div>\n<div class=\"highlight\"><pre><code>@import \"./style.less\"\n\n# Markdown Preview Enhanced 便利機能\n\n&lt;!-- @import \"[TOC]\" {cmd=\"toc\" depthFrom=2 depthTo=6 orderedList=true} --&gt;\n\n&lt;!-- code_chunk_output --&gt;\n\n1. [自動更新目次](#自動更新目次)\n2. [ファイルの挿入(基本)](#ファイルの挿入基本)\n3. [drawio図形の挿入](#drawio図形の挿入)\n4. [設定ファイルの挿入](#設定ファイルの挿入)\n5. [PlantUML図形の挿入](#plantuml図形の挿入)\n6. [Markdownの挿入](#markdownの挿入)\n\n&lt;!-- /code_chunk_output --&gt;\n\n## 自動更新目次\n\n1. `ctrl + shift + p` でコマンドパレットを表示\n2. Markdown Preview Enhanced: Create TOC を選択\n@import \"./images/mpe-create-toc.png\"\n3. カーソル行に以下の行が挿入され、以後自動更新される\n'''\n&lt;!-- @import \"[TOC]\" {cmd=\"toc\" depthFrom=1 depthTo=6 orderedList=false} --&gt;\n'''\n4. depthFrom=1 で生成するが、`#`のタイトルも目次対象となるので、depthFrom=2 に修正する\n\n## ファイルの挿入(基本)\n\n`@import \"ファイル名\"`で挿入する。\n拡張子に合わせて、画像、図、表、コードブロックとして取り込まれる。\n\n例) `@import \"./images/mpe-create-toc.png\"`\n@import \"./images/mpe-create-toc.png\"\n\n例) `@import \"./csvs/sample.csv\"`\n@import \"./csvs/sample.csv\"\n\n## drawio図形の挿入\n\ndrawioファイルは mpe では直接取り込む事ができないが、【drawio.png】 は画像として取り込む事ができる。\n手順書の冒頭には概要図を描く事が多いので大変重宝する。\n\n1. [Draw.io Integration](https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio)をインストール\n2. 拡張子 .dio ファイルを作成する(例：test.dio)\n3. VSCode で開くとdrawioの図形エディタが表示される\n@import \"./images/drawio-editor.png\"\n4. drawio.png に変換する\n@import \"./images/drawio-convert.png\"\n@import \"./images/drawio-draio-png.png\"\n5. 他画像と同様に、import する。\n@import \"./draws/sample.drawio.png\"\n\n## 設定ファイルの挿入\n\nsh や js ファイル等一部のファイルは import した際にコードとして認識してしまい内容が表示されない。\nimport 時に、コードブロックであることを明記および行番号の表示有無も指定して挿入する。\n\n例)`@import \"./scripts/sample.sh\" {code_block=true class=\"line-numbers\"}`\n@import \"./scripts/sample.sh\" {code_block=true class=\"line-numbers\"}\n\n例)`@import \"./configs/sample.yaml\" {code_block=true class=\"line-numbers\"}`\n@import \"./configs/sample.yaml\" {code_block=true class=\"line-numbers\"}\n\n## PlantUML図形の挿入\n\n他ファイル同様、import 文で挿入可能であるが、`puml`で始まるコードブロックを記述することで直接記述も可能。\n\n'''puml\nactor sample\nparticipant A as \"要素A\"\nparticipant B as \"要素B\"\n\nsample -&gt; A : コメント1\nA -&gt; B : コメント2\nA &lt;-- B : 戻り値1\nsample &lt;-- A : 戻り値1\n'''\n\n## Markdownの挿入\n\n他ファイル同様、import 文で挿入可能。そのまま文章として展開される。\n\n例) `@import \"./_environment.md\"`\n@import \"./_environment.md\"\n\n例) `@import \"./_environment.md\" {code_block=true}`\n@import \"./_environment.md\" {code_block=true}\n\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>今後ドキュメント作成にかけられるコストは削減され続けるだろうと想像しています。<br>\n不要なドキュメントも存在はしていると思いますが、<strong>『必要最低限の正しいドキュメント』</strong>を作成しないと、目に見えづらい（＝正当なコストとしてお客様に請求しにくい）コストを激増させるリスクが生じます。（コミュニケーション・保守/運用・教育・…）</p>\n\n<p>開発プロセス全体で見て、トータルのコストを下げる<strong>『必要最低限の正しいドキュメント』</strong>の模索は続けたいと思います。</p>\n\n<h2>\n<span id=\"おまけトラブルシューティング\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91%E3%83%88%E3%83%A9%E3%83%96%E3%83%AB%E3%82%B7%E3%83%A5%E3%83%BC%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0\"><i class=\"fa fa-link\"></i></a>おまけ：トラブルシューティング</h2>\n\n<h3>\n<span id=\"pdf出力中華フォントになる\" class=\"fragment\"></span><a href=\"#pdf%E5%87%BA%E5%8A%9B%E4%B8%AD%E8%8F%AF%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%AB%E3%81%AA%E3%82%8B\"><i class=\"fa fa-link\"></i></a>PDF出力：中華フォントになる</h3>\n\n<p>style.less でフォント指定をしておき、Chorme(Puppeteer)→PDF で出力</p>\n\n<h3>\n<span id=\"pdf出力コードブロックの背景が白になる\" class=\"fragment\"></span><a href=\"#pdf%E5%87%BA%E5%8A%9B%E3%82%B3%E3%83%BC%E3%83%89%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%AE%E8%83%8C%E6%99%AF%E3%81%8C%E7%99%BD%E3%81%AB%E3%81%AA%E3%82%8B\"><i class=\"fa fa-link\"></i></a>PDF出力：コードブロックの背景が白になる</h3>\n\n<p>style.less に以下追加</p>\n\n<div class=\"code-frame\" data-lang=\"less\">\n<div class=\"code-lang\"><span class=\"bold\">style.less</span></div>\n<div class=\"highlight\"><pre><code>html {\n    -webkit-print-color-adjust: exact;\n}\n</code></pre></div>\n</div>\n\n<h3>\n<span id=\"plantumlの画像が出力できない\" class=\"fragment\"></span><a href=\"#plantuml%E3%81%AE%E7%94%BB%E5%83%8F%E3%81%8C%E5%87%BA%E5%8A%9B%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>PlantUMLの画像が出力できない</h3>\n\n<p>graphviz がインストールされていないかも？</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>choco install graphviz\n</code></pre></div></div>\n",
    "body": "## はじめに\n以前から vscode + Markdown Preview Enhanced(MPE) を愛用していましたが、`@import機能`で **手順書問題で頻出一位の課題(自分調べ)を解決**できそうなので記事を書きました。\n\n## 手順書問題一位の課題\n**『実際の設定ファイルと、手順書の内容があってない』**(自分調べ)\n\n複雑な要因が絡み合って長年決定的な解決方法がない課題と認識しています。\n\n1. ドキュメントにコストかけられない問題\n1. 実装者が、実装で不都合があると設定項目が増えたり変更されたりする\n1. ドキュメント担当者は変更に気づかない\n1. slack などで通知されても、別の作業をやってて更新忘れる\n1. 人間なのでそもそもミスする\n\nこれって **『実装者が実際に最後にコミットした設定ファイル』**をドキュメントにそのまま取り込めるなら **「ドキュメントに反映する」作業自体がなくなる**ので全て解決しませんか？\n※そもそも動かないファイルがコミットされているなら、それは別途話し合いが必要\n※本番用のファイルは間違っても`@import`しないでください\n\n## 手順書ツール比較\n\nポピュラーな、テキスト、ワード、エクセルおよび、MPEを主観で比較してみました。\n\n|機能|テキスト|ワード|エクセル|MPE\n|---|---|---|---|---|\n|記述の簡単さ|◎|△|△|◎\n|git保存|◎|△|△|◎\n|章立|△|○|△|○\n|目次|×|○|×|○(Create TOC)\n|図|×|○|○|○|\n|図形|×|△|○|◎(draw.io)\n|UML|×|△|△|◎(PlantUML)\n|更新もれ対策|×|×|×|◎(`@import`)\n\n実際に試験済みのファイルとdraw.ioの図形の取り込みができる事で、ワードやテキストベースの手順書に大きくリードした様に思います。\n\n## Markdown Preview Enhanced(MPE)\n\n[拡張機能：Markdown Preview Enhanced](https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced)\n[公式サイト](https://shd101wyy.github.io/markdown-preview-enhanced/#/)\n\nMPEは、vs code の拡張機能です。\nMarkdown で書いたドキュメントをプレビューする機能ですが、通常の Markdown よりも機能が増えたものになります。\n今回は、手順書を書くのに役に立つと思われる以下2点の機能を紹介します。\n\n1. less による styling\n1. `@import`によるファイル取り込み\n\n## less による styling\n\n通常の Makdown は章番号がつきません。これは手順書や仕様書として致命的だと思います。\nMPE では出力スタイルを定義できるので、章に対して章番号をつけるスタイルにすることが可能です。\n\n以下の less ファイルをファイルの先頭で import すれば、章番号が付与されます。\n\n``` style.less\n.markdown-preview.markdown-preview {\n\n    font-family: Meiryo, メイリオ;\n\n    p {\n        margin-bottom: .25rem;\n        line-height: 1.4;\n        font-size: .95rem;\n        color: #444;\n        text-indent: .5rem;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5 {\n        margin-bottom: .25rem;\n        padding-bottom: 0;\n        color: #222;\n    }\n\n    h1 {\n        font-size: 1.5rem;\n        font-weight: normal;\n        counter-reset: h2SectionCounter;\n    }\n\n    h2 {\n        font-size: 1.2rem;\n\n        &:not(.toc) {\n            counter-increment: h2SectionCounter;\n            counter-reset: h3SectionCounter;\n        }\n    }\n\n    h3 {\n        font-size: 1.1rem;\n        counter-increment: h3SectionCounter;\n        counter-reset: h4SectionCounter;\n    }\n\n    h4 {\n        font-size: 1.1rem;\n        counter-increment: h4SectionCounter;\n        counter-reset: h5SectionCounter;\n    }\n\n    h5 {\n        font-size: 1rem;\n        counter-increment: h5SectionCounter;\n    }\n\n    h2:not(.toc):before {\n        content: counter(h2SectionCounter) \".\";\n    }\n\n    h3:before {\n        content: counter(h2SectionCounter) \".\"counter(h3SectionCounter) \".\";\n    }\n\n    h4:before {\n        content: counter(h2SectionCounter) \".\"counter(h3SectionCounter) \".\"counter(h4SectionCounter) \".\";\n    }\n\n    h5:before {\n        content: counter(h2SectionCounter) \".\"counter(h3SectionCounter) \".\"counter(h4SectionCounter) \".\"counter(h5SectionCounter) \".\";\n    }\n}\n```\n\n## `@import`によるファイル取り込み\n\n`@import \"file-path\"` で簡単に取り込めます。\n実際にはここで紹介しているファイル以外にも取り込めますので、興味ある方は公式サイトを見てみてください。\n\n[File Imports](https://shd101wyy.github.io/markdown-preview-enhanced/#/file-imports)\n\n## サンプル\n\n以下目次作成、ファイル取り込みについて記載したサンプルのmarkdownを出力したpng(pdf出力もできます)とソースを以下に記載します。\n※サンプル中のコードブロックは、[```] を[''']に置換してます。\n\n### サンプル出力\n![sample.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/1d214a7f-b51a-85ba-7727-6dfd20fb8ade.png)\n\n\n### フォルダ構成\n```\n│  sample.md\n│  style.less\n│  _environment.md\n│\n├─configs\n│      sample.yaml\n│\n├─csvs\n│      sample.csv\n│\n├─draws\n│      sample.drawio.png\n│\n├─images\n│      drawio-convert.png\n│      drawio-drawio-png.png\n│      drawio-editor.png\n│      mpe-create-toc.png\n│\n└─scripts\n        sample.sh\n```\n\n\n### ソース\n``` sample.md\n@import \"./style.less\"\n\n# Markdown Preview Enhanced 便利機能\n\n<!-- @import \"[TOC]\" {cmd=\"toc\" depthFrom=2 depthTo=6 orderedList=true} -->\n\n<!-- code_chunk_output -->\n\n1. [自動更新目次](#自動更新目次)\n2. [ファイルの挿入(基本)](#ファイルの挿入基本)\n3. [drawio図形の挿入](#drawio図形の挿入)\n4. [設定ファイルの挿入](#設定ファイルの挿入)\n5. [PlantUML図形の挿入](#plantuml図形の挿入)\n6. [Markdownの挿入](#markdownの挿入)\n\n<!-- /code_chunk_output -->\n\n## 自動更新目次\n\n1. `ctrl + shift + p` でコマンドパレットを表示\n2. Markdown Preview Enhanced: Create TOC を選択\n@import \"./images/mpe-create-toc.png\"\n3. カーソル行に以下の行が挿入され、以後自動更新される\n'''\n<!-- @import \"[TOC]\" {cmd=\"toc\" depthFrom=1 depthTo=6 orderedList=false} -->\n'''\n4. depthFrom=1 で生成するが、`#`のタイトルも目次対象となるので、depthFrom=2 に修正する\n\n## ファイルの挿入(基本)\n\n`@import \"ファイル名\"`で挿入する。\n拡張子に合わせて、画像、図、表、コードブロックとして取り込まれる。\n\n例) `@import \"./images/mpe-create-toc.png\"`\n@import \"./images/mpe-create-toc.png\"\n\n例) `@import \"./csvs/sample.csv\"`\n@import \"./csvs/sample.csv\"\n\n## drawio図形の挿入\n\ndrawioファイルは mpe では直接取り込む事ができないが、【drawio.png】 は画像として取り込む事ができる。\n手順書の冒頭には概要図を描く事が多いので大変重宝する。\n\n1. [Draw.io Integration](https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio)をインストール\n2. 拡張子 .dio ファイルを作成する(例：test.dio)\n3. VSCode で開くとdrawioの図形エディタが表示される\n@import \"./images/drawio-editor.png\"\n4. drawio.png に変換する\n@import \"./images/drawio-convert.png\"\n@import \"./images/drawio-draio-png.png\"\n5. 他画像と同様に、import する。\n@import \"./draws/sample.drawio.png\"\n\n## 設定ファイルの挿入\n\nsh や js ファイル等一部のファイルは import した際にコードとして認識してしまい内容が表示されない。\nimport 時に、コードブロックであることを明記および行番号の表示有無も指定して挿入する。\n\n例)`@import \"./scripts/sample.sh\" {code_block=true class=\"line-numbers\"}`\n@import \"./scripts/sample.sh\" {code_block=true class=\"line-numbers\"}\n\n例)`@import \"./configs/sample.yaml\" {code_block=true class=\"line-numbers\"}`\n@import \"./configs/sample.yaml\" {code_block=true class=\"line-numbers\"}\n\n## PlantUML図形の挿入\n\n他ファイル同様、import 文で挿入可能であるが、`puml`で始まるコードブロックを記述することで直接記述も可能。\n\n'''puml\nactor sample\nparticipant A as \"要素A\"\nparticipant B as \"要素B\"\n\nsample -> A : コメント1\nA -> B : コメント2\nA <-- B : 戻り値1\nsample <-- A : 戻り値1\n'''\n\n## Markdownの挿入\n\n他ファイル同様、import 文で挿入可能。そのまま文章として展開される。\n\n例) `@import \"./_environment.md\"`\n@import \"./_environment.md\"\n\n例) `@import \"./_environment.md\" {code_block=true}`\n@import \"./_environment.md\" {code_block=true}\n\n```\n\n## おわりに\n\n今後ドキュメント作成にかけられるコストは削減され続けるだろうと想像しています。\n不要なドキュメントも存在はしていると思いますが、**『必要最低限の正しいドキュメント』**を作成しないと、目に見えづらい（＝正当なコストとしてお客様に請求しにくい）コストを激増させるリスクが生じます。（コミュニケーション・保守/運用・教育・…）\n\n開発プロセス全体で見て、トータルのコストを下げる**『必要最低限の正しいドキュメント』**の模索は続けたいと思います。\n\n\n## おまけ：トラブルシューティング\n\n### PDF出力：中華フォントになる\n\nstyle.less でフォント指定をしておき、Chorme(Puppeteer)→PDF で出力\n\n### PDF出力：コードブロックの背景が白になる\n\nstyle.less に以下追加\n\n``` style.less\nhtml {\n    -webkit-print-color-adjust: exact;\n}\n```\n\n### PlantUMLの画像が出力できない\n\ngraphviz がインストールされていないかも？\n\n```\nchoco install graphviz\n```\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-01-23T16:28:42+09:00",
    "group": null,
    "id": "219c57207346658608b3",
    "likes_count": 14,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 20,
    "tags": [
      {
        "name": "Markdown",
        "versions": []
      },
      {
        "name": "手順書",
        "versions": []
      },
      {
        "name": "PlantUML",
        "versions": []
      },
      {
        "name": "Draw.io",
        "versions": []
      }
    ],
    "title": "【更新もれ問題解決】手順書を書くなら Markdown Preview Enhanced を使おう",
    "updated_at": "2021-01-23T17:09:46+09:00",
    "url": "https://qiita.com/kaku3/items/219c57207346658608b3",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 6242,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>オレオレ証明書使ってますか？無料でssl通信ができて便利ですよね。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/f7ee043208d656494fceea3d727b219f70ac251e/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f30323666393563312d383730642d656131312d623838352d6134343963336134363561642e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F026f95c1-870d-ea11-b885-a449c3a465ad.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=c5154717eb2cfb072efc3899e35b2ace\" alt=\"ssl-1.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/026f95c1-870d-ea11-b885-a449c3a465ad.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F026f95c1-870d-ea11-b885-a449c3a465ad.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=25c4f7d55df84cad052ba1bdd96daa1a 1x\" loading=\"lazy\"></a></p>\n\n<p>便利にオレオレしてたのですが、開発用 vm 内に docker コンテナを2つ起動してコンテナ間で https 通信させようとしたら <strong>「怪しい証明局が署名した証明書やろ」</strong> って怒られたので対処方法を記載しておきます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\">\n<div class=\"code-lang\"><span class=\"bold\">error.log</span></div>\n<div class=\"highlight\"><pre><code># 怪しい証明局が署名したやろエラー\nx509: certificate signed by unknown authority\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"怪しくないオレオレ証明書発行\" class=\"fragment\"></span><a href=\"#%E6%80%AA%E3%81%97%E3%81%8F%E3%81%AA%E3%81%84%E3%82%AA%E3%83%AC%E3%82%AA%E3%83%AC%E8%A8%BC%E6%98%8E%E6%9B%B8%E7%99%BA%E8%A1%8C\"><i class=\"fa fa-link\"></i></a>怪しくないオレオレ証明書発行</h2>\n\n<p>手順は以下となります。<br>\n- オレオレ証明局を作成<br>\n- 作成した「オレオレ証明局」を開発用 vm に「信頼できる証明局」として登録<br>\n- 「オレオレ証明局」が署名した「オレオレ証明書」を発行</p>\n\n<p>若干めんどくさそうに見えますが、mkcert を利用すると非常に簡単です。<br>\n<a href=\"https://github.com/FiloSottile/mkcert\" rel=\"nofollow noopener\" target=\"_blank\">mkcert</a></p>\n\n<p><a href=\"https://camo.qiitausercontent.com/dbc258345934329a2c47235bf2ea72ed422473d3/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38343338306661612d626139642d383638632d353533372d6665316236653138386662612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F84380faa-ba9d-868c-5537-fe1b6e188fba.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=aedd1af603b6d47a6886f5abdf388b1b\" alt=\"ssl-2.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/84380faa-ba9d-868c-5537-fe1b6e188fba.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F84380faa-ba9d-868c-5537-fe1b6e188fba.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b9159c48bffadc6ae663b4b8ff100e1b 1x\" loading=\"lazy\"></a></p>\n\n<h3>\n<span id=\"mkcert-インストール\" class=\"fragment\"></span><a href=\"#mkcert-%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>mkcert インストール</h3>\n\n<div class=\"code-frame\" data-lang=\"shell\">\n<div class=\"code-lang\"><span class=\"bold\">install.sh</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c\"># https://github.com/FiloSottile/mkcert/releases より最新版をダウンロードして実行権限追加</span>\n<span class=\"c\"># ubntu の場合</span>\nwget https://github.com/FiloSottile/mkcert/releases/mkcert-v1.4.3-darwin-amd64\n<span class=\"nb\">mv </span>mkcert-v1.4.3-darwin-amd64 mkcert\n<span class=\"nb\">chmod</span> +x mkcert\n</code></pre></div>\n</div>\n\n<h3>\n<span id=\"etchosts-にドメイン登録\" class=\"fragment\"></span><a href=\"#etchosts-%E3%81%AB%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E7%99%BB%E9%8C%B2\"><i class=\"fa fa-link\"></i></a>/etc/hosts にドメイン登録</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>127.0.0.1 {domain}\n</code></pre></div></div>\n\n<p>※2021/01/23追記：/etc/hosts にドメイン登録した状態で、<code>mkcert -install</code> しないとダメなようでした。</p>\n\n<h3>\n<span id=\"オレオレ証明局を作成--信頼できる証明局として登録\" class=\"fragment\"></span><a href=\"#%E3%82%AA%E3%83%AC%E3%82%AA%E3%83%AC%E8%A8%BC%E6%98%8E%E5%B1%80%E3%82%92%E4%BD%9C%E6%88%90--%E4%BF%A1%E9%A0%BC%E3%81%A7%E3%81%8D%E3%82%8B%E8%A8%BC%E6%98%8E%E5%B1%80%E3%81%A8%E3%81%97%E3%81%A6%E7%99%BB%E9%8C%B2\"><i class=\"fa fa-link\"></i></a>オレオレ証明局を作成 + 「信頼できる証明局」として登録</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>mkcert -install\n</code></pre></div></div>\n\n<h3>\n<span id=\"オレオレ証明局が署名したオレオレ証明書を発行\" class=\"fragment\"></span><a href=\"#%E3%82%AA%E3%83%AC%E3%82%AA%E3%83%AC%E8%A8%BC%E6%98%8E%E5%B1%80%E3%81%8C%E7%BD%B2%E5%90%8D%E3%81%97%E3%81%9F%E3%82%AA%E3%83%AC%E3%82%AA%E3%83%AC%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%82%92%E7%99%BA%E8%A1%8C\"><i class=\"fa fa-link\"></i></a>「オレオレ証明局」が署名した「オレオレ証明書」を発行</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>mkcert -key-file key.pem -cert-file cert.pem {domain}\n</code></pre></div></div>\n\n<h2>\n<span id=\"コンテナ起動時に自己証明局をマウント\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E8%B5%B7%E5%8B%95%E6%99%82%E3%81%AB%E8%87%AA%E5%B7%B1%E8%A8%BC%E6%98%8E%E5%B1%80%E3%82%92%E3%83%9E%E3%82%A6%E3%83%B3%E3%83%88\"><i class=\"fa fa-link\"></i></a>コンテナ起動時に自己証明局をマウント</h2>\n\n<p>この状態で dockerコンテナ間で https 通信を行うと、オレオレ証明局が「信頼できる証明局」として認識されていない状態になり、<strong>「怪しい証明局が署名した証明書やろ」</strong> エラーとなります。</p>\n\n<p>これを回避するために、VM の「信頼できる認証局」をコンテナにマウントします。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/b3d2979a7c330c60ae94e396863416b2755f3e57/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f31366564353035392d356666632d333133342d303461392d6530376437383764656331372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F16ed5059-5ffc-3134-04a9-e07d787dec17.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=44f7a93ce352b154e3654b1a5f6d219d\" alt=\"ssl-3.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/16ed5059-5ffc-3134-04a9-e07d787dec17.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F16ed5059-5ffc-3134-04a9-e07d787dec17.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=0c7ac8530437c24698df22d231617aee 1x\" loading=\"lazy\"></a></p>\n\n<p>本番環境ではSSL証明書発行業者によって署名されたSSL証明書を利用するため、この処理は不要となります。<br>\n通常のdocker-compose.yaml ではなく、docker-compose.override.yaml に記載しておき、本番環境には docker-compose.override.yaml をコピーしない様にします。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>{docker-compose folder}/\n │ docker-compose.yaml\n └ docker-compose.override.yaml # 追加\n</code></pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"yaml\">\n<div class=\"code-lang\"><span class=\"bold\">docker-compose.override.yaml</span></div>\n<div class=\"highlight\"><pre><code>  <span class=\"c1\"># mount 設定を追加</span>\n  <span class=\"na\">volumes</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt</span>\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"shell\">\n<div class=\"code-lang\"><span class=\"bold\">docker-run.sh</span></div>\n<div class=\"highlight\"><pre><code>docker run .... <span class=\"nt\">-v</span> /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>昔は大変面倒だったことが、簡単にできるようになってきました。<br>\nプロジェクトのスリム化が進むと共にフロントエンジニアやインフラエンジニアの境界が曖昧になってきていますので、なるべく簡単に色々な作業をこなせるようにしてより多くの要件を満たせるようにしたいものです。</p>\n",
    "body": "## はじめに\n\nオレオレ証明書使ってますか？無料でssl通信ができて便利ですよね。\n\n![ssl-1.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/026f95c1-870d-ea11-b885-a449c3a465ad.png)\n\n便利にオレオレしてたのですが、開発用 vm 内に docker コンテナを2つ起動してコンテナ間で https 通信させようとしたら **「怪しい証明局が署名した証明書やろ」** って怒られたので対処方法を記載しておきます。\n\n``` error.log\n# 怪しい証明局が署名したやろエラー\nx509: certificate signed by unknown authority\n```\n\n## 怪しくないオレオレ証明書発行\n\n手順は以下となります。\n- オレオレ証明局を作成\n- 作成した「オレオレ証明局」を開発用 vm に「信頼できる証明局」として登録\n- 「オレオレ証明局」が署名した「オレオレ証明書」を発行\n\n若干めんどくさそうに見えますが、mkcert を利用すると非常に簡単です。\n[mkcert](https://github.com/FiloSottile/mkcert)\n\n![ssl-2.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/84380faa-ba9d-868c-5537-fe1b6e188fba.png)\n\n\n### mkcert インストール\n``` install.sh\n# https://github.com/FiloSottile/mkcert/releases より最新版をダウンロードして実行権限追加\n# ubntu の場合\nwget https://github.com/FiloSottile/mkcert/releases/mkcert-v1.4.3-darwin-amd64\nmv mkcert-v1.4.3-darwin-amd64 mkcert\nchmod +x mkcert\n```\n\n### /etc/hosts にドメイン登録\n\n```\n127.0.0.1 {domain}\n```\n※2021/01/23追記：/etc/hosts にドメイン登録した状態で、`mkcert -install` しないとダメなようでした。\n\n### オレオレ証明局を作成 + 「信頼できる証明局」として登録\n\n```\nmkcert -install\n```\n\n### 「オレオレ証明局」が署名した「オレオレ証明書」を発行\n\n```\nmkcert -key-file key.pem -cert-file cert.pem {domain}\n```\n\n## コンテナ起動時に自己証明局をマウント\n\nこの状態で dockerコンテナ間で https 通信を行うと、オレオレ証明局が「信頼できる証明局」として認識されていない状態になり、**「怪しい証明局が署名した証明書やろ」** エラーとなります。\n\nこれを回避するために、VM の「信頼できる認証局」をコンテナにマウントします。\n\n![ssl-3.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/16ed5059-5ffc-3134-04a9-e07d787dec17.png)\n\n本番環境ではSSL証明書発行業者によって署名されたSSL証明書を利用するため、この処理は不要となります。\n通常のdocker-compose.yaml ではなく、docker-compose.override.yaml に記載しておき、本番環境には docker-compose.override.yaml をコピーしない様にします。\n\n```\n{docker-compose folder}/\n │ docker-compose.yaml\n └ docker-compose.override.yaml # 追加\n```\n\n``` docker-compose.override.yaml\n  # mount 設定を追加\n  volumes:\n    - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt\n```\n\n``` docker-run.sh\ndocker run .... -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt\n```\n\n## おわりに\n\n昔は大変面倒だったことが、簡単にできるようになってきました。\nプロジェクトのスリム化が進むと共にフロントエンジニアやインフラエンジニアの境界が曖昧になってきていますので、なるべく簡単に色々な作業をこなせるようにしてより多くの要件を満たせるようにしたいものです。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-01-16T16:49:51+09:00",
    "group": null,
    "id": "e06a02ae1068de5c0663",
    "likes_count": 8,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 8,
    "tags": [
      {
        "name": "Docker",
        "versions": []
      },
      {
        "name": "SSL証明書",
        "versions": []
      },
      {
        "name": "オレオレ証明書",
        "versions": []
      },
      {
        "name": "オレオレ認証局",
        "versions": []
      },
      {
        "name": "mkcert",
        "versions": []
      }
    ],
    "title": "【図解付き】開発用オレオレ認証局SSL通信(+dockerコンテナ対応) : 2021",
    "updated_at": "2021-01-23T16:32:19+09:00",
    "url": "https://qiita.com/kaku3/items/e06a02ae1068de5c0663",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 4370,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>いくつかのプロジェクトに参画していると、知らないうちに開発環境が散らかっていて困りませんか？<br>\n開発環境に直接DBを入れた結果、無限に捨てられない過去プロジェクトの何かが残り続けてしまったり。<br>\napacheやnginxのバーチャルホストが無限に増えたり。</p>\n\n<p>Vagrantで使い捨てVM開発環境を作ればそんなお悩みもさくっと解決です。</p>\n\n<h2>\n<span id=\"vagrant-で-vm-起動\" class=\"fragment\"></span><a href=\"#vagrant-%E3%81%A7-vm-%E8%B5%B7%E5%8B%95\"><i class=\"fa fa-link\"></i></a>Vagrant で VM 起動</h2>\n\n<p>例えば、ubuntu20.04 の VM を起動して利用するのであれば以下の手順となります</p>\n\n<p>1 vagrant cloud で box ファイルを探す<br>\n2-a 任意のフォルダで vagrant init {box名} を実行して Vagrantfile を作成<br>\n2-b または、Vagrantfile の config.vm.box を編集 (config.vm.box = {box名})<br>\n3 vagrant up で起動</p>\n\n<div class=\"code-frame\" data-lang=\"batchfile\">\n<div class=\"code-lang\"><span class=\"bold\">vagrant-init-up.cmd</span></div>\n<div class=\"highlight\"><pre><code># 初期化\n<span class=\"kd\">vagrant</span> <span class=\"kd\">init</span> <span class=\"kd\">generic</span><span class=\"na\">/ubuntu</span><span class=\"m\">2004</span>\n# 起動\n<span class=\"kd\">vagrant</span> <span class=\"kd\">up</span>\n# <span class=\"kd\">ssh</span> ログイン\n<span class=\"kd\">vagrant</span> <span class=\"kd\">ssh</span>\n</code></pre></div>\n</div>\n\n<p><a href=\"https://camo.qiitausercontent.com/63a2935588508f33ee4109902d73f6227c995418/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f33616164386435662d323732652d626436392d303130362d6262626235316637613862312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F3aad8d5f-272e-bd69-0106-bbbb51f7a8b1.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=0eb4455e1014227d2c1f2c17dc143631\" alt=\"vagrant.drawio.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/3aad8d5f-272e-bd69-0106-bbbb51f7a8b1.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F3aad8d5f-272e-bd69-0106-bbbb51f7a8b1.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f64e66b2be093094c252a0b442b8bdad 1x\" loading=\"lazy\"></a></p>\n\n<p>VirtualBox で VM を作ると初期化や設定がめんどくさかったのですが、そこを全て Vagrant が引き受けてくれている感じです。</p>\n\n<p>また、同じOSのVMを何個も作る場合は、boxes/ フォルダにダウンロードされているためダウンロード処理も行われず高速でVMの起動ができるようになります。</p>\n\n<h2>\n<span id=\"設定ファイルvagrantfile\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%ABvagrantfile\"><i class=\"fa fa-link\"></i></a>設定ファイル(Vagrantfile)</h2>\n\n<p>vagrant init をすると ruby のファイルで大量に英文コメントが書かれた Vagrantfile が作成されますが、実際には init の引数で指定した box ファイルが指定されているだけです。<br>\nVagrantfile の設定で、VM の ip address を変更したり、初回起動時に shell や ansible を動作させることもできます。<br>\nプロジェクトで必要な MySQL, JDK, ... といったアプリケーションやミドルウェアのインストールを行う様にしておくとよいでしょう。</p>\n\n<p>(コードハイライトが効くように拡張子を .rbにしていますが、実際は拡張子なしのファイルになります)</p>\n\n<ul>\n<li>説明コメントなし</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"ruby\">\n<div class=\"code-lang\"><span class=\"bold\">Vagrantfile-no-comment.rb</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\"># -*- mode: ruby -*-</span>\n<span class=\"c1\"># vi: set ft=ruby :</span>\n\n<span class=\"no\">Vagrant</span><span class=\"p\">.</span><span class=\"nf\">configure</span><span class=\"p\">(</span><span class=\"s2\">\"2\"</span><span class=\"p\">)</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">config</span><span class=\"o\">|</span>\n  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">vm</span><span class=\"p\">.</span><span class=\"nf\">box</span> <span class=\"o\">=</span> <span class=\"s2\">\"generic/ubuntu2004\"</span>\n<span class=\"k\">end</span>\n\n</code></pre></div>\n</div>\n\n<ul>\n<li>説明コメントあり</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"ruby\">\n<div class=\"code-lang\"><span class=\"bold\">Vagrantfile.rb</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\"># -*- mode: ruby -*-</span>\n<span class=\"c1\"># vi: set ft=ruby :</span>\n\n<span class=\"c1\"># All Vagrant configuration is done below. The \"2\" in Vagrant.configure</span>\n<span class=\"c1\"># configures the configuration version (we support older styles for</span>\n<span class=\"c1\"># backwards compatibility). Please don't change it unless you know what</span>\n<span class=\"c1\"># you're doing.</span>\n<span class=\"no\">Vagrant</span><span class=\"p\">.</span><span class=\"nf\">configure</span><span class=\"p\">(</span><span class=\"s2\">\"2\"</span><span class=\"p\">)</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">config</span><span class=\"o\">|</span>\n  <span class=\"c1\"># The most common configuration options are documented and commented below.</span>\n  <span class=\"c1\"># For a complete reference, please see the online documentation at</span>\n  <span class=\"c1\"># https://docs.vagrantup.com.</span>\n\n  <span class=\"c1\"># Every Vagrant development environment requires a box. You can search for</span>\n  <span class=\"c1\"># boxes at https://vagrantcloud.com/search.</span>\n  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">vm</span><span class=\"p\">.</span><span class=\"nf\">box</span> <span class=\"o\">=</span> <span class=\"s2\">\"generic/ubuntu2004\"</span>\n\n  <span class=\"c1\"># Disable automatic box update checking. If you disable this, then</span>\n  <span class=\"c1\"># boxes will only be checked for updates when the user runs</span>\n  <span class=\"c1\"># `vagrant box outdated`. This is not recommended.</span>\n  <span class=\"c1\"># config.vm.box_check_update = false</span>\n\n  <span class=\"c1\"># Create a forwarded port mapping which allows access to a specific port</span>\n  <span class=\"c1\"># within the machine from a port on the host machine. In the example below,</span>\n  <span class=\"c1\"># accessing \"localhost:8080\" will access port 80 on the guest machine.</span>\n  <span class=\"c1\"># NOTE: This will enable public access to the opened port</span>\n  <span class=\"c1\"># config.vm.network \"forwarded_port\", guest: 80, host: 8080</span>\n\n  <span class=\"c1\"># Create a forwarded port mapping which allows access to a specific port</span>\n  <span class=\"c1\"># within the machine from a port on the host machine and only allow access</span>\n  <span class=\"c1\"># via 127.0.0.1 to disable public access</span>\n  <span class=\"c1\"># config.vm.network \"forwarded_port\", guest: 80, host: 8080, host_ip: \"127.0.0.1\"</span>\n\n  <span class=\"c1\"># Create a private network, which allows host-only access to the machine</span>\n  <span class=\"c1\"># using a specific IP.</span>\n  <span class=\"c1\"># config.vm.network \"private_network\", ip: \"192.168.33.10\"</span>\n\n  <span class=\"c1\"># Create a public network, which generally matched to bridged network.</span>\n  <span class=\"c1\"># Bridged networks make the machine appear as another physical device on</span>\n  <span class=\"c1\"># your network.</span>\n  <span class=\"c1\"># config.vm.network \"public_network\"</span>\n\n  <span class=\"c1\"># Share an additional folder to the guest VM. The first argument is</span>\n  <span class=\"c1\"># the path on the host to the actual folder. The second argument is</span>\n  <span class=\"c1\"># the path on the guest to mount the folder. And the optional third</span>\n  <span class=\"c1\"># argument is a set of non-required options.</span>\n  <span class=\"c1\"># config.vm.synced_folder \"../data\", \"/vagrant_data\"</span>\n\n  <span class=\"c1\"># Provider-specific configuration so you can fine-tune various</span>\n  <span class=\"c1\"># backing providers for Vagrant. These expose provider-specific options.</span>\n  <span class=\"c1\"># Example for VirtualBox:</span>\n  <span class=\"c1\">#</span>\n  <span class=\"c1\"># config.vm.provider \"virtualbox\" do |vb|</span>\n  <span class=\"c1\">#   # Display the VirtualBox GUI when booting the machine</span>\n  <span class=\"c1\">#   vb.gui = true</span>\n  <span class=\"c1\">#</span>\n  <span class=\"c1\">#   # Customize the amount of memory on the VM:</span>\n  <span class=\"c1\">#   vb.memory = \"1024\"</span>\n  <span class=\"c1\"># end</span>\n  <span class=\"c1\">#</span>\n  <span class=\"c1\"># View the documentation for the provider you are using for more</span>\n  <span class=\"c1\"># information on available options.</span>\n\n  <span class=\"c1\"># Enable provisioning with a shell script. Additional provisioners such as</span>\n  <span class=\"c1\"># Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the</span>\n  <span class=\"c1\"># documentation for more information about their specific syntax and use.</span>\n  <span class=\"c1\"># config.vm.provision \"shell\", inline: &lt;&lt;-SHELL</span>\n  <span class=\"c1\">#   apt-get update</span>\n  <span class=\"c1\">#   apt-get install -y apache2</span>\n  <span class=\"c1\"># SHELL</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"使用中の-vm-の共有\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E7%94%A8%E4%B8%AD%E3%81%AE-vm-%E3%81%AE%E5%85%B1%E6%9C%89\"><i class=\"fa fa-link\"></i></a>使用中の vm の共有</h2>\n\n<p>コマンドで、その時点の snapshot の box ファイルを作ることができます。<br>\nこのファイルを boxファイルとして起動する Vagrantfile を作成することで vm を共有できます。</p>\n\n<p>(保存)</p>\n\n<div class=\"code-frame\" data-lang=\"batchfile\">\n<div class=\"code-lang\"><span class=\"bold\">　package.cmd</span></div>\n<div class=\"highlight\"><pre><code># <span class=\"kd\">vm</span> を止める\n<span class=\"kd\">vagrant</span> <span class=\"kd\">halt</span>\n# <span class=\"kd\">package</span>.box ファイルを作る\n<span class=\"kd\">vagrant</span> <span class=\"kd\">package</span>\n</code></pre></div>\n</div>\n\n<p>(実行)</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code># package.box を自分の端末に登録\nvagrant box add {任意のbox名} package.box\n\n# 実行\nvagrant init {任意のbox名}\nvagrant up\n</code></pre></div></div>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>サクッと共有できる開発環境を作るという点では Vagrant の出番はまだまだあるかと思い、よく分からなそうなところを簡単に書いてみました。導入の検討のきっかけになれば幸いです。</p>\n\n<p>実際の導入については参考になる記事が多くあると思いますのでそちらをご参照ください。</p>\n\n<p><a href=\"https://qiita.com/daichi87gi/items/d5da33c76295ee32a735\" id=\"reference-faa3d30e89b12be240f7\">Vagrant入門から実践まで</a></p>\n",
    "body": "## はじめに\nいくつかのプロジェクトに参画していると、知らないうちに開発環境が散らかっていて困りませんか？\n開発環境に直接DBを入れた結果、無限に捨てられない過去プロジェクトの何かが残り続けてしまったり。\napacheやnginxのバーチャルホストが無限に増えたり。\n\nVagrantで使い捨てVM開発環境を作ればそんなお悩みもさくっと解決です。\n\n## Vagrant で VM 起動\n例えば、ubuntu20.04 の VM を起動して利用するのであれば以下の手順となります\n\n1 vagrant cloud で box ファイルを探す\n2-a 任意のフォルダで vagrant init {box名} を実行して Vagrantfile を作成\n2-b または、Vagrantfile の config.vm.box を編集 (config.vm.box = {box名})\n3 vagrant up で起動\n\n``` vagrant-init-up.cmd\n# 初期化\nvagrant init generic/ubuntu2004\n# 起動\nvagrant up\n# ssh ログイン\nvagrant ssh\n```\n\n![vagrant.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/3aad8d5f-272e-bd69-0106-bbbb51f7a8b1.png)\n\nVirtualBox で VM を作ると初期化や設定がめんどくさかったのですが、そこを全て Vagrant が引き受けてくれている感じです。\n\nまた、同じOSのVMを何個も作る場合は、boxes/ フォルダにダウンロードされているためダウンロード処理も行われず高速でVMの起動ができるようになります。\n\n\n## 設定ファイル(Vagrantfile)\n\nvagrant init をすると ruby のファイルで大量に英文コメントが書かれた Vagrantfile が作成されますが、実際には init の引数で指定した box ファイルが指定されているだけです。\nVagrantfile の設定で、VM の ip address を変更したり、初回起動時に shell や ansible を動作させることもできます。\nプロジェクトで必要な MySQL, JDK, ... といったアプリケーションやミドルウェアのインストールを行う様にしておくとよいでしょう。\n\n(コードハイライトが効くように拡張子を .rbにしていますが、実際は拡張子なしのファイルになります)\n\n* 説明コメントなし\n\n``` Vagrantfile-no-comment.rb\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"generic/ubuntu2004\"\nend\n\n```\n\n* 説明コメントあり\n\n``` Vagrantfile.rb\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n# All Vagrant configuration is done below. The \"2\" in Vagrant.configure\n# configures the configuration version (we support older styles for\n# backwards compatibility). Please don't change it unless you know what\n# you're doing.\nVagrant.configure(\"2\") do |config|\n  # The most common configuration options are documented and commented below.\n  # For a complete reference, please see the online documentation at\n  # https://docs.vagrantup.com.\n\n  # Every Vagrant development environment requires a box. You can search for\n  # boxes at https://vagrantcloud.com/search.\n  config.vm.box = \"generic/ubuntu2004\"\n\n  # Disable automatic box update checking. If you disable this, then\n  # boxes will only be checked for updates when the user runs\n  # `vagrant box outdated`. This is not recommended.\n  # config.vm.box_check_update = false\n\n  # Create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine. In the example below,\n  # accessing \"localhost:8080\" will access port 80 on the guest machine.\n  # NOTE: This will enable public access to the opened port\n  # config.vm.network \"forwarded_port\", guest: 80, host: 8080\n\n  # Create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine and only allow access\n  # via 127.0.0.1 to disable public access\n  # config.vm.network \"forwarded_port\", guest: 80, host: 8080, host_ip: \"127.0.0.1\"\n\n  # Create a private network, which allows host-only access to the machine\n  # using a specific IP.\n  # config.vm.network \"private_network\", ip: \"192.168.33.10\"\n\n  # Create a public network, which generally matched to bridged network.\n  # Bridged networks make the machine appear as another physical device on\n  # your network.\n  # config.vm.network \"public_network\"\n\n  # Share an additional folder to the guest VM. The first argument is\n  # the path on the host to the actual folder. The second argument is\n  # the path on the guest to mount the folder. And the optional third\n  # argument is a set of non-required options.\n  # config.vm.synced_folder \"../data\", \"/vagrant_data\"\n\n  # Provider-specific configuration so you can fine-tune various\n  # backing providers for Vagrant. These expose provider-specific options.\n  # Example for VirtualBox:\n  #\n  # config.vm.provider \"virtualbox\" do |vb|\n  #   # Display the VirtualBox GUI when booting the machine\n  #   vb.gui = true\n  #\n  #   # Customize the amount of memory on the VM:\n  #   vb.memory = \"1024\"\n  # end\n  #\n  # View the documentation for the provider you are using for more\n  # information on available options.\n\n  # Enable provisioning with a shell script. Additional provisioners such as\n  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the\n  # documentation for more information about their specific syntax and use.\n  # config.vm.provision \"shell\", inline: <<-SHELL\n  #   apt-get update\n  #   apt-get install -y apache2\n  # SHELL\nend\n```\n\n\n## 使用中の vm の共有\n\nコマンドで、その時点の snapshot の box ファイルを作ることができます。\nこのファイルを boxファイルとして起動する Vagrantfile を作成することで vm を共有できます。\n\n(保存)\n\n```　package.cmd\n# vm を止める\nvagrant halt\n# package.box ファイルを作る\nvagrant package\n```\n\n(実行)\n\n```\n# package.box を自分の端末に登録\nvagrant box add {任意のbox名} package.box\n\n# 実行\nvagrant init {任意のbox名}\nvagrant up\n```\n\n## おわりに\n\nサクッと共有できる開発環境を作るという点では Vagrant の出番はまだまだあるかと思い、よく分からなそうなところを簡単に書いてみました。導入の検討のきっかけになれば幸いです。\n\n実際の導入については参考になる記事が多くあると思いますのでそちらをご参照ください。\n\n[Vagrant入門から実践まで](https://qiita.com/daichi87gi/items/d5da33c76295ee32a735)\n\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-01-10T16:08:18+09:00",
    "group": null,
    "id": "858e110c1221924a2f76",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 1,
    "tags": [
      {
        "name": "開発環境",
        "versions": []
      },
      {
        "name": "Vagrant",
        "versions": []
      },
      {
        "name": "VirtualBox",
        "versions": []
      }
    ],
    "title": "職業プログラマ向け：Vagrantではじめる快適開発環境生活",
    "updated_at": "2021-01-10T16:08:18+09:00",
    "url": "https://qiita.com/kaku3/items/858e110c1221924a2f76",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1120,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>Storybook が大変便利と聞いて使い始めましたが、2020年8月にVer6.0 にアップデートしてドキュメントが充実しておらず困った点をメモしておきます。</p>\n\n<h2>\n<span id=\"nuxt-store\" class=\"fragment\"></span><a href=\"#nuxt-store\"><i class=\"fa fa-link\"></i></a>Nuxt store</h2>\n\n<p>Nuxt の store はフォルダに配置したファイルを自動で認識してくれるモジュールモードで利用するのが便利ですが、storybookでは認識してくれません。</p>\n\n<ul>\n<li>store フォルダに以下配置</li>\n</ul>\n\n<p>typescript での store の書き方は色々あるが以下が一番シンプルに思える(2021/1/9時点)</p>\n\n<div class=\"code-frame\" data-lang=\"typescript\">\n<div class=\"code-lang\"><span class=\"bold\">store/SampleStore.ts</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Module</span><span class=\"p\">,</span> <span class=\"nx\">VuexModule</span><span class=\"p\">,</span> <span class=\"nx\">Mutation</span><span class=\"p\">,</span> <span class=\"nx\">Action</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">vuex-module-decorators</span><span class=\"dl\">'</span>\n\n<span class=\"p\">@</span><span class=\"nd\">Module</span><span class=\"p\">({</span>\n  <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SampleStore</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">stateFactory</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"na\">namespaced</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n<span class=\"p\">})</span>\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"kd\">class</span> <span class=\"nx\">SampleStore</span> <span class=\"kd\">extends</span> <span class=\"nx\">VuexModule</span> <span class=\"p\">{</span>\n\n  <span class=\"nl\">someValue</span><span class=\"p\">:</span> <span class=\"nx\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n  <span class=\"p\">@</span><span class=\"nd\">Mutation</span>\n  <span class=\"p\">...(</span><span class=\"nx\">略</span><span class=\"p\">)</span>\n\n  <span class=\"p\">@</span><span class=\"nd\">Action</span>\n  <span class=\"p\">...(</span><span class=\"nx\">略</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<h3>\n<span id=\"対応\" class=\"fragment\"></span><a href=\"#%E5%AF%BE%E5%BF%9C\"><i class=\"fa fa-link\"></i></a>対応</h3>\n\n<h4>\n<span id=\"1-store-を使える様にpreviewjs-に-vuex-追加\" class=\"fragment\"></span><a href=\"#1-store-%E3%82%92%E4%BD%BF%E3%81%88%E3%82%8B%E6%A7%98%E3%81%ABpreviewjs-%E3%81%AB-vuex-%E8%BF%BD%E5%8A%A0\"><i class=\"fa fa-link\"></i></a>1. store を使える様に、preview.js に Vuex 追加</h4>\n\n<p>以下はVuetify利用時の preview.js</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">storybook/preview.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"nx\">Vue</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">vue</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"nx\">Vuex</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">vuex</span><span class=\"dl\">'</span> <span class=\"c1\">// ★追加</span>\n<span class=\"k\">import</span> <span class=\"nx\">Vuetify</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">vuetify</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"dl\">'</span><span class=\"s1\">vuetify/dist/vuetify.css</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"nx\">colors</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">vuetify/es5/util/colors</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"dl\">'</span><span class=\"s1\">@mdi/font/css/materialdesignicons.css</span><span class=\"dl\">'</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">vuetifyOptions</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n<span class=\"nx\">Vue</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">Vuex</span><span class=\"p\">)</span> <span class=\"c1\">// ★追加</span>\n\n<span class=\"nx\">Vue</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">Vuetify</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// customVariables: ['../src/assets/variables.scss'], // 必要な場合</span>\n  <span class=\"na\">theme</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">dark</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n    <span class=\"na\">themes</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"na\">dark</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">primary</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">blue</span><span class=\"p\">.</span><span class=\"nx\">darken2</span><span class=\"p\">,</span>\n        <span class=\"na\">accent</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">grey</span><span class=\"p\">.</span><span class=\"nx\">darken3</span><span class=\"p\">,</span>\n        <span class=\"na\">secondary</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">amber</span><span class=\"p\">.</span><span class=\"nx\">darken3</span><span class=\"p\">,</span>\n        <span class=\"na\">info</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">teal</span><span class=\"p\">.</span><span class=\"nx\">lighten1</span><span class=\"p\">,</span>\n        <span class=\"na\">warning</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">amber</span><span class=\"p\">.</span><span class=\"nx\">base</span><span class=\"p\">,</span>\n        <span class=\"na\">error</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">deepOrange</span><span class=\"p\">.</span><span class=\"nx\">accent4</span><span class=\"p\">,</span>\n        <span class=\"na\">success</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">green</span><span class=\"p\">.</span><span class=\"nx\">accent3</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"na\">icons</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">iconfont</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">mdi</span><span class=\"dl\">'</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">decorators</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"p\">{</span> <span class=\"na\">vuetify</span><span class=\"p\">:</span> <span class=\"k\">new</span> <span class=\"nx\">Vuetify</span><span class=\"p\">(</span><span class=\"nx\">vuetifyOptions</span><span class=\"p\">),</span> <span class=\"na\">template</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;v-app&gt;&lt;story/&gt;&lt;/v-app&gt;</span><span class=\"dl\">'</span> <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n\n</code></pre></div>\n</div>\n\n<h4>\n<span id=\"2-storeを参照するコンポーネントの-storiesjs-でダミーのストアを作成し-template-に渡す\" class=\"fragment\"></span><a href=\"#2-store%E3%82%92%E5%8F%82%E7%85%A7%E3%81%99%E3%82%8B%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%AE-storiesjs-%E3%81%A7%E3%83%80%E3%83%9F%E3%83%BC%E3%81%AE%E3%82%B9%E3%83%88%E3%82%A2%E3%82%92%E4%BD%9C%E6%88%90%E3%81%97-template-%E3%81%AB%E6%B8%A1%E3%81%99\"><i class=\"fa fa-link\"></i></a>2. storeを参照するコンポーネントの stories.js で、ダミーのストアを作成し template に渡す</h4>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">components/SampleComponent.stories.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"nx\">Vuex</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">vuex</span><span class=\"dl\">'</span>\n\n<span class=\"k\">import</span> <span class=\"nx\">SampleComponent</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">./SampleComponent</span><span class=\"dl\">'</span>\n\n<span class=\"k\">import</span> <span class=\"nx\">SampleStore</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">../store/SampleStore</span><span class=\"dl\">'</span> <span class=\"c1\">// @/が解決できていないので相対パス</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"p\">{</span>\n  <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SampleComponent</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">argTypes</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n  <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// ★追加</span>\n<span class=\"kd\">const</span> <span class=\"nx\">store</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Vuex</span><span class=\"p\">.</span><span class=\"nx\">Store</span><span class=\"p\">({</span>\n  <span class=\"c1\">// 2021/01/30 修正：module モードの時は、modules</span>\n  <span class=\"na\">modules</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nx\">SampleStore</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\">// いつものテンプレート</span>\n<span class=\"kd\">const</span> <span class=\"nx\">Template</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">args</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">argTypes</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">({</span>\n  <span class=\"na\">props</span><span class=\"p\">:</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">argTypes</span><span class=\"p\">),</span>\n  <span class=\"na\">components</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"nx\">SampleComponent</span> <span class=\"p\">},</span>\n  <span class=\"na\">template</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;SampleComponent v-bind=\"$props\" /&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">store</span><span class=\"p\">:</span> <span class=\"nx\">store</span> <span class=\"c1\">// ★追加</span>\n<span class=\"p\">})</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">Default</span> <span class=\"o\">=</span> <span class=\"nx\">Template</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">({})</span>\n<span class=\"nx\">Default</span><span class=\"p\">.</span><span class=\"nx\">args</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"v-data-table\" class=\"fragment\"></span><a href=\"#v-data-table\"><i class=\"fa fa-link\"></i></a>v-data-table</h2>\n\n<p>v-data-table を利用しているコンポーネントは以下の様なエラーが発生しレンダリングされません。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>Cannot read property 'mobile' of undefined\nTypeError: Cannot read property 'mobile' of undefined\n</code></pre></div></div>\n\n<h3>\n<span id=\"対応-1\" class=\"fragment\"></span><a href=\"#%E5%AF%BE%E5%BF%9C-1\"><i class=\"fa fa-link\"></i></a>対応</h3>\n\n<p>github で issue が上がっています。(2021/1/9)<br>\n神々による対応が一日でも早く終る様に祈り中です。<br>\n<a href=\"https://github.com/storybookjs/storybook/issues/13532\" rel=\"nofollow noopener\" target=\"_blank\">Internal vuetify methods error #13532</a></p>\n\n<p>(2021/01/30追記)<br>\n神々によってワークアラウンドが提示されてました！感謝しかありません。<br>\n他にも情報追加しましたので、詳細は別記事に記載しました。</p>\n\n<p><a href=\"https://qiita.com/kaku3/items/f9240bd7e95185b58401\" id=\"reference-46e9ff4a7f98c982d9d0\">【超簡単フロントエンド開発】Storybook6.1 + Nuxtjs (+Vuetify) : フォローアップ</a></p>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>Nuxt + Vuetify + Storybook での開発では、ドキュメント製造、コミュニーケーション、および <strong>教育</strong> のコストを大きく下げる開発様式が提案されている様に思えます。<br>\nStorybook を利用する方が増える様に知識を共有していければと思います。</p>\n",
    "body": "## はじめに\n\nStorybook が大変便利と聞いて使い始めましたが、2020年8月にVer6.0 にアップデートしてドキュメントが充実しておらず困った点をメモしておきます。\n\n## Nuxt store\n\nNuxt の store はフォルダに配置したファイルを自動で認識してくれるモジュールモードで利用するのが便利ですが、storybookでは認識してくれません。\n\n- store フォルダに以下配置\n\ntypescript での store の書き方は色々あるが以下が一番シンプルに思える(2021/1/9時点)\n \n``` store/SampleStore.ts\nimport { Module, VuexModule, Mutation, Action } from 'vuex-module-decorators'\n\n@Module({\n  name: 'SampleStore',\n  stateFactory: true,\n  namespaced: true\n})\nexport default class SampleStore extends VuexModule {\n\n  someValue: int = 0\n\n  @Mutation\n  ...(略)\n\n  @Action\n  ...(略)\n}\n```\n\n### 対応\n\n#### 1. store を使える様に、preview.js に Vuex 追加\n\n以下はVuetify利用時の preview.js\n\n``` .storybook/preview.js\nimport Vue from 'vue'\nimport Vuex from 'vuex' // ★追加\nimport Vuetify from 'vuetify'\nimport 'vuetify/dist/vuetify.css'\nimport colors from 'vuetify/es5/util/colors'\nimport '@mdi/font/css/materialdesignicons.css'\n\nconst vuetifyOptions = {}\n\nVue.use(Vuex) // ★追加\n\nVue.use(Vuetify, {\n  // customVariables: ['../src/assets/variables.scss'], // 必要な場合\n  theme: {\n    dark: false,\n    themes: {\n      dark: {\n        primary: colors.blue.darken2,\n        accent: colors.grey.darken3,\n        secondary: colors.amber.darken3,\n        info: colors.teal.lighten1,\n        warning: colors.amber.base,\n        error: colors.deepOrange.accent4,\n        success: colors.green.accent3\n      }\n    }\n  },\n  icons: {\n    iconfont: 'mdi'\n  }\n})\n\nexport const decorators = [\n  () => {\n    return (\n      { vuetify: new Vuetify(vuetifyOptions), template: '<v-app><story/></v-app>' }\n    )\n  }\n]\n\n```\n\n#### 2. storeを参照するコンポーネントの stories.js で、ダミーのストアを作成し template に渡す\n\n``` components/SampleComponent.stories.js\nimport Vuex from 'vuex'\n\nimport SampleComponent from './SampleComponent'\n\nimport SampleStore from '../store/SampleStore' // @/が解決できていないので相対パス\n\nexport default {\n  title: 'SampleComponent',\n  argTypes: {\n  },\n}\n\n// ★追加\nconst store = new Vuex.Store({\n  // 2021/01/30 修正：module モードの時は、modules\n  modules: {\n    SampleStore\n  }\n})\n\n// いつものテンプレート\nconst Template = (args, { argTypes }) => ({\n  props: Object.keys(argTypes),\n  components: { SampleComponent },\n  template: '<SampleComponent v-bind=\"$props\" />',\n  store: store // ★追加\n})\n\nexport const Default = Template.bind({})\nDefault.args = {}\n\n```\n\n## v-data-table\n\nv-data-table を利用しているコンポーネントは以下の様なエラーが発生しレンダリングされません。\n\n```\nCannot read property 'mobile' of undefined\nTypeError: Cannot read property 'mobile' of undefined\n```\n\n### 対応\n\ngithub で issue が上がっています。(2021/1/9)\n神々による対応が一日でも早く終る様に祈り中です。\n[Internal vuetify methods error #13532](https://github.com/storybookjs/storybook/issues/13532)\n\n(2021/01/30追記)\n神々によってワークアラウンドが提示されてました！感謝しかありません。\n他にも情報追加しましたので、詳細は別記事に記載しました。\n\n[【超簡単フロントエンド開発】Storybook6.1 + Nuxtjs (+Vuetify) : フォローアップ](https://qiita.com/kaku3/items/f9240bd7e95185b58401)\n\n## おわりに\n\nNuxt + Vuetify + Storybook での開発では、ドキュメント製造、コミュニーケーション、および **教育** のコストを大きく下げる開発様式が提案されている様に思えます。\nStorybook を利用する方が増える様に知識を共有していければと思います。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2021-01-09T14:32:45+09:00",
    "group": null,
    "id": "01e107e434b5e9361a5f",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "store",
        "versions": []
      },
      {
        "name": "storybook",
        "versions": []
      },
      {
        "name": "Vuetify",
        "versions": []
      },
      {
        "name": "Nuxt",
        "versions": []
      }
    ],
    "title": "Storybook6.1 トラブルシューティング(Nuxt store, v-data-table)",
    "updated_at": "2021-01-30T18:04:27+09:00",
    "url": "https://qiita.com/kaku3/items/01e107e434b5e9361a5f",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1900,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>Nuxtjs は/pages フォルダにvueファイルを置けば勝手にページのルーティングをしてくれる。<br>\nVuetify を使えばマテリアルデザインのきれいなコンポーネントがすぐに使える。<br>\nstorybookを使って開発、デバッグをすれば再利用性の高いコンポーネントカタログも充実する。</p>\n\n<p>実に便利な世の中になったものだなと。</p>\n\n<p>そこで開発者に<strong>「ではいい感じにあとよろ！」</strong>と開発を依頼したところ<br>\n<strong>「仕様が分かりません」</strong> と言われてしまったのだが、図にまとめるとこんな状況だったと思う。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/71d55aa3c8ac053520fe8db408b1605bc75cba35/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37333632663765372d636661342d366337392d386234312d3834313731623364373336302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7362f7e7-cfa4-6c79-8b41-84171b3d7360.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=1b8e9744c3bbeefd74c11ba071cabce3\" alt=\"before.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7362f7e7-cfa4-6c79-8b41-84171b3d7360.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7362f7e7-cfa4-6c79-8b41-84171b3d7360.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d4e359a8964f42827db1410aa1f42a90 1x\" loading=\"lazy\"></a></p>\n\n<p>…手元にいい感じの自動生成ドキュメントが手に入ったので見落としてしまったが、これは確かにわけがわからない。カイゼンしなければ。</p>\n\n<p>(カイゼンの考察ポイント)</p>\n\n<ul>\n<li>ドキュメントで指示を出す</li>\n<li>更新が面倒なドキュメントはメンテナンスされないのでできるだけ簡単に作る</li>\n</ul>\n\n<h2>\n<span id=\"figma--adobe-xd-却下\" class=\"fragment\"></span><a href=\"#figma--adobe-xd-%E5%8D%B4%E4%B8%8B\"><i class=\"fa fa-link\"></i></a>Figma / Adobe XD (却下)</h2>\n\n<p>プロトタイピングツール２大巨頭。<br>\nMaterial Design UIkit を拾ってきてポコポコ並べればだいたい完成するし、画面遷移も表現できる。これは良さそうに思えて作成してみたが、以下の理由で却下した。</p>\n\n<ul>\n<li>要件がふわっとしている中、きちんとデザインをするのはコストがかかる</li>\n<li>伝えたいのは機能</li>\n<li>画面デザインにそこまでこだわりがない</li>\n<li>最終的な実装を反映するのが面倒くさい</li>\n</ul>\n\n<h2>\n<span id=\"空の-vue-ファイル--仕様を書いた-stories-ファイルを配置採用\" class=\"fragment\"></span><a href=\"#%E7%A9%BA%E3%81%AE-vue-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB--%E4%BB%95%E6%A7%98%E3%82%92%E6%9B%B8%E3%81%84%E3%81%9F-stories-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E9%85%8D%E7%BD%AE%E6%8E%A1%E7%94%A8\"><i class=\"fa fa-link\"></i></a>空の vue ファイル + 仕様を書いた stories ファイルを配置(採用)</h2>\n\n<p>実際のコンポーネント開発フォルダに、空の vue ファイルと、その時点で決まっている仕様を書いた stories ファイルを配置する。</p>\n\n<p>mdx ファイルには一部プログラムが含まれるが、markdown が書ければ非プログラマでも問題なく書けると思う。</p>\n\n<p>設計者は仕様変更があった場合 .mdx ファイルを更新する。gitにソースと合わせてコミットされるため、<strong>いつの間にかエクセルの画面設計書が更新されたが開発者に伝えられず</strong>仕様が実装に反映されないという事故を回避しやすくなると思われる。<br>\nまた、stories ファイルは <strong>画面のリグレッション試験にもそのまま使える</strong> ハズなので全体の工数としては下がる事が期待できる。</p>\n\n<p>以下にサンプルファイルを示す。</p>\n\n<div class=\"code-frame\" data-lang=\"vue\">\n<div class=\"code-lang\"><span class=\"bold\">AppHeader.vue</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nt\">&lt;</span><span class=\"k\">template</span><span class=\"nt\">&gt;</span>\n  <span class=\"c\">&lt;!-- nuxt では/components フォルダ以下に配置するだけでコンポネントとして認識される。 --&gt;</span>\n<span class=\"nt\">&lt;/</span><span class=\"k\">template</span><span class=\"nt\">&gt;</span>\n\n<span class=\"nt\">&lt;</span><span class=\"k\">script</span> <span class=\"na\">lang=</span><span class=\"s\">\"ts\"</span><span class=\"nt\">&gt;</span>\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">Vue</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span>\n\n<span class=\"p\">})</span>\n<span class=\"nt\">&lt;/</span><span class=\"k\">script</span><span class=\"nt\">&gt;</span>\n\n<span class=\"nt\">&lt;</span><span class=\"k\">style</span><span class=\"nt\">&gt;</span>\n\n<span class=\"nt\">&lt;/</span><span class=\"k\">style</span><span class=\"nt\">&gt;</span>\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"text\">\n<div class=\"code-lang\"><span class=\"bold\">AppHeader.stories.mdx</span></div>\n<div class=\"highlight\"><pre><code>import { Meta, Story, Preview } from '@storybook/addon-docs/blocks'\nimport AppHeader from './AppHeader.vue'\nimport * as stories from './AppHeader.stories.js'\n\n&lt;Meta title=\"Molecules/navigation/AppHeader\" component={AppHeader} /&gt;\n\n# AppHeader\n\nアプリケーションヘッダ。\nv-app-bar で製造\n\n## 表示項目\n\n### 共通\n\n- drawerToggleIcon : ハンバーガメニュー。ドロワー開閉\n- title : アプリタイトル\n\n### ログイン時\n\n- user.id : ユーザー名\n- logout button : ログアウトボタン。クリックでログアウトする。\n\n### 非ログイン時\n\nなし\n\n&lt;Preview&gt;\n  &lt;Story story={stories.Signin} /&gt;\n  &lt;Story story={stories.Signout} /&gt;\n&lt;/Preview&gt;\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">AppHeader.stories.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">action</span><span class=\"p\">,</span> <span class=\"nx\">configureActions</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@storybook/addon-actions</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">AppHeader</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">./AppHeader</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// コンポーネント名だけ変えてコピペで使う。</span>\n<span class=\"kd\">const</span> <span class=\"nx\">Template</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">args</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">argTypes</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">({</span>\n  <span class=\"na\">props</span><span class=\"p\">:</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">argTypes</span><span class=\"p\">),</span>\n  <span class=\"na\">components</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"nx\">AppHeader</span> <span class=\"p\">},</span>\n  <span class=\"na\">template</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;AppHeader v-bind=\"$props\" /&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">// コンポーネント固有コード</span>\n<span class=\"kd\">const</span> <span class=\"nx\">args</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SAMPLE</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">user</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n  <span class=\"na\">drawer</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n  <span class=\"na\">clipped</span><span class=\"p\">:</span> <span class=\"kc\">false</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// ストーリー毎に定義</span>\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">Signin</span> <span class=\"o\">=</span> <span class=\"nx\">Template</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">({});</span>\n<span class=\"nx\">Signin</span><span class=\"p\">.</span><span class=\"nx\">args</span> <span class=\"o\">=</span> <span class=\"nx\">args</span>\n<span class=\"nx\">Signin</span><span class=\"p\">.</span><span class=\"nx\">args</span><span class=\"p\">.</span><span class=\"nx\">user</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">test-login-user</span><span class=\"dl\">'</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// ストーリー毎に定義</span>\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">Signout</span> <span class=\"o\">=</span> <span class=\"nx\">Template</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">({});</span>\n<span class=\"nx\">Signout</span><span class=\"p\">.</span><span class=\"nx\">args</span> <span class=\"o\">=</span> <span class=\"nx\">args</span>\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"plant-uml-で画面フローを定義採用\" class=\"fragment\"></span><a href=\"#plant-uml-%E3%81%A7%E7%94%BB%E9%9D%A2%E3%83%95%E3%83%AD%E3%83%BC%E3%82%92%E5%AE%9A%E7%BE%A9%E6%8E%A1%E7%94%A8\"><i class=\"fa fa-link\"></i></a>plant UML で画面フローを定義(採用)</h2>\n\n<p>plant UML 以外の候補は以下。</p>\n\n<ul>\n<li>Excel / Powerpoint / draw.io\n→ 線をつなぐのがめんどくさいので却下</li>\n<li>UIflow\n→ 最初は爆速で書けるが「思った場所に思った画面を配置できない」ため却下</li>\n<li>マインドマップ\n→ 爆速で書けるが書いた本人以外読めない</li>\n</ul>\n\n<h3>\n<span id=\"plant-uml-での画面フロー\" class=\"fragment\"></span><a href=\"#plant-uml-%E3%81%A7%E3%81%AE%E7%94%BB%E9%9D%A2%E3%83%95%E3%83%AD%E3%83%BC\"><i class=\"fa fa-link\"></i></a>plant UML での画面フロー</h3>\n\n<p>UMLの図には画面フローなどという図はないが、マークダウンである程度の自由度を持って図が書け、線をつなぐのが簡単なので仕様変更にも強く更新が容易と判断した。</p>\n\n<p>今回採用した記述ルールは以下。</p>\n\n<table>\n<thead>\n<tr>\n<th>図形</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>frame</td>\n<td>ページ定義に使う。</td>\n</tr>\n<tr>\n<td>card</td>\n<td>ページ内に配置するcardコンポーネント定義に使う。</td>\n</tr>\n<tr>\n<td>interface</td>\n<td>actionの終端としてapi呼び出しを行っている箇所の定義に使う。</td>\n</tr>\n</tbody>\n</table>\n\n<p>ログイン画面からホーム画面への遷移を例として以下に示す。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/d96bfd86211d77689fe7d935e3470f187fd3e6a8/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36613533663961652d333262392d356637372d346239332d3136353265313033303765652e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6a53f9ae-32b9-5f77-4b93-1652e10307ee.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2fb0a204e1f2496463849b0ade3e70a0\" alt=\"画面遷移図.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6a53f9ae-32b9-5f77-4b93-1652e10307ee.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6a53f9ae-32b9-5f77-4b93-1652e10307ee.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=39aa7c66c22e41fb61fe17f8785bca6d 1x\" loading=\"lazy\"></a></p>\n\n<p>設計側が考慮する点が増える様に見えるが、<strong>「思ってたんとちゃう」</strong> 実装になる可能性が減ることを期待したい。<br>\nまた、力尽きて stories.mdx を書けなくてもなんとか大事なことだけ伝えられるのではないかと妄想をしている。</p>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>ということでカイゼンしました(?)</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/33eb8921af1ab248157b704f2ba277983b5f4a7f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f65303161643038392d366163622d373166642d396332302d6563363539303439623761312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe01ad089-6acb-71fd-9c20-ec659049b7a1.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=69f930b562fe720efc9c3721a4e77d42\" alt=\"after.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e01ad089-6acb-71fd-9c20-ec659049b7a1.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe01ad089-6acb-71fd-9c20-ec659049b7a1.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=21dae298faf3393b9e4fa67041dd6fd2 1x\" loading=\"lazy\"></a></p>\n\n<p>今後ますます低予算の案件が増え、小規模化かつ流動的なチームで開発をしていくことが予想されます。<br>\n色々便利なツールが無料で入手可能です。それらをうまく使いこなして、<strong>全体の最適化</strong>を図りつつ無理なく開発が行える様に模索を続けたいと思います。</p>\n\n<p>よりよい方法があればコメント頂けますと助かります。</p>\n",
    "body": "\n## はじめに\nNuxtjs は/pages フォルダにvueファイルを置けば勝手にページのルーティングをしてくれる。\nVuetify を使えばマテリアルデザインのきれいなコンポーネントがすぐに使える。\nstorybookを使って開発、デバッグをすれば再利用性の高いコンポーネントカタログも充実する。\n\n実に便利な世の中になったものだなと。\n\nそこで開発者に**「ではいい感じにあとよろ！」**と開発を依頼したところ\n**「仕様が分かりません」** と言われてしまったのだが、図にまとめるとこんな状況だったと思う。\n\n![before.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7362f7e7-cfa4-6c79-8b41-84171b3d7360.png)\n\n…手元にいい感じの自動生成ドキュメントが手に入ったので見落としてしまったが、これは確かにわけがわからない。カイゼンしなければ。\n\n(カイゼンの考察ポイント)\n\n* ドキュメントで指示を出す\n* 更新が面倒なドキュメントはメンテナンスされないのでできるだけ簡単に作る\n\n\n## Figma / Adobe XD (却下)\n\nプロトタイピングツール２大巨頭。\nMaterial Design UIkit を拾ってきてポコポコ並べればだいたい完成するし、画面遷移も表現できる。これは良さそうに思えて作成してみたが、以下の理由で却下した。\n\n- 要件がふわっとしている中、きちんとデザインをするのはコストがかかる\n- 伝えたいのは機能\n- 画面デザインにそこまでこだわりがない\n- 最終的な実装を反映するのが面倒くさい\n\n\n## 空の vue ファイル + 仕様を書いた stories ファイルを配置(採用)\n\n実際のコンポーネント開発フォルダに、空の vue ファイルと、その時点で決まっている仕様を書いた stories ファイルを配置する。\n\nmdx ファイルには一部プログラムが含まれるが、markdown が書ければ非プログラマでも問題なく書けると思う。\n\n設計者は仕様変更があった場合 .mdx ファイルを更新する。gitにソースと合わせてコミットされるため、**いつの間にかエクセルの画面設計書が更新されたが開発者に伝えられず**仕様が実装に反映されないという事故を回避しやすくなると思われる。\nまた、stories ファイルは **画面のリグレッション試験にもそのまま使える** ハズなので全体の工数としては下がる事が期待できる。\n\n以下にサンプルファイルを示す。\n\n``` AppHeader.vue\n<template>\n  <!-- nuxt では/components フォルダ以下に配置するだけでコンポネントとして認識される。 -->\n</template>\n\n<script lang=\"ts\">\nexport default Vue.extend({\n\n})\n</script>\n\n<style>\n\n</style>\n```\n\n``` AppHeader.stories.mdx\nimport { Meta, Story, Preview } from '@storybook/addon-docs/blocks'\nimport AppHeader from './AppHeader.vue'\nimport * as stories from './AppHeader.stories.js'\n\n<Meta title=\"Molecules/navigation/AppHeader\" component={AppHeader} />\n\n# AppHeader\n\nアプリケーションヘッダ。\nv-app-bar で製造\n\n## 表示項目\n\n### 共通\n\n- drawerToggleIcon : ハンバーガメニュー。ドロワー開閉\n- title : アプリタイトル\n\n### ログイン時\n\n- user.id : ユーザー名\n- logout button : ログアウトボタン。クリックでログアウトする。\n\n### 非ログイン時\n\nなし\n\n<Preview>\n  <Story story={stories.Signin} />\n  <Story story={stories.Signout} />\n</Preview>\n```\n\n``` AppHeader.stories.js\nimport { action, configureActions } from '@storybook/addon-actions';\nimport AppHeader from './AppHeader';\n\n// コンポーネント名だけ変えてコピペで使う。\nconst Template = (args, { argTypes }) => ({\n  props: Object.keys(argTypes),\n  components: { AppHeader },\n  template: '<AppHeader v-bind=\"$props\" />',\n});\n\n// コンポーネント固有コード\nconst args = {\n  title: 'SAMPLE',\n  user: null,\n  drawer: false,\n  clipped: false\n}\n\n// ストーリー毎に定義\nexport const Signin = Template.bind({});\nSignin.args = args\nSignin.args.user = {\n  id: 'test-login-user'\n}\n\n// ストーリー毎に定義\nexport const Signout = Template.bind({});\nSignout.args = args\n```\n\n## plant UML で画面フローを定義(採用)\n\nplant UML 以外の候補は以下。\n\n- Excel / Powerpoint / draw.io\n→ 線をつなぐのがめんどくさいので却下\n- UIflow\n→ 最初は爆速で書けるが「思った場所に思った画面を配置できない」ため却下\n- マインドマップ\n→ 爆速で書けるが書いた本人以外読めない\n\n### plant UML での画面フロー\n\nUMLの図には画面フローなどという図はないが、マークダウンである程度の自由度を持って図が書け、線をつなぐのが簡単なので仕様変更にも強く更新が容易と判断した。\n\n今回採用した記述ルールは以下。\n\n|図形   |説明   |\n|---|---|\n|frame |ページ定義に使う。 |\n|card |ページ内に配置するcardコンポーネント定義に使う。 |\n|interface |actionの終端としてapi呼び出しを行っている箇所の定義に使う。 |\n\nログイン画面からホーム画面への遷移を例として以下に示す。\n\n![画面遷移図.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6a53f9ae-32b9-5f77-4b93-1652e10307ee.png)\n\n\n設計側が考慮する点が増える様に見えるが、**「思ってたんとちゃう」** 実装になる可能性が減ることを期待したい。\nまた、力尽きて stories.mdx を書けなくてもなんとか大事なことだけ伝えられるのではないかと妄想をしている。\n\n## おわりに\n\nということでカイゼンしました(?)\n\n![after.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e01ad089-6acb-71fd-9c20-ec659049b7a1.png)\n\n今後ますます低予算の案件が増え、小規模化かつ流動的なチームで開発をしていくことが予想されます。\n色々便利なツールが無料で入手可能です。それらをうまく使いこなして、**全体の最適化**を図りつつ無理なく開発が行える様に模索を続けたいと思います。\n\nよりよい方法があればコメント頂けますと助かります。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-12-26T17:22:21+09:00",
    "group": null,
    "id": "800c81244e29201dafe8",
    "likes_count": 8,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 6,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "フロントエンド",
        "versions": []
      },
      {
        "name": "storybook",
        "versions": []
      },
      {
        "name": "Vuetify",
        "versions": []
      },
      {
        "name": "Nuxt",
        "versions": []
      }
    ],
    "title": "Nuxtjs(Vue + Vuetify) + storybook 開発における画面設計書について考える",
    "updated_at": "2020-12-26T17:22:21+09:00",
    "url": "https://qiita.com/kaku3/items/800c81244e29201dafe8",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 3627,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>Web界隈は一つ案件が終わって戻ってくると、びっくりするくらい便利なものが開発されていて竜宮城から帰ってきておじいさんになった気分になりますね。</p>\n\n<p>先週はNuxtjsの記事を書きましたが、Storybookも使った方がよさそうなので今週は<a href=\"https://storybook.js.org/\" rel=\"nofollow noopener\" target=\"_blank\">Storybook</a>の記事を書きます。<br>\nStorybook は 2020年8月に6系になって<strong>大変シンプルになりましたが</strong> 大幅に変更になって古い記事が罠となってしまっているので<strong>Google検索する時は「１ヶ月以内」</strong>で期間指定するのがよさそうです。</p>\n\n<h2>\n<span id=\"storybook-とは\" class=\"fragment\"></span><a href=\"#storybook-%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>Storybook とは</h2>\n\n<blockquote>\n<p>Storybook is an open source tool for developing UI components in isolation for React, Vue, Angular, and more. It makes building stunning UIs organized and efficient.</p>\n</blockquote>\n\n<p>一言でいうと UI Component をコンポーネント単位で開発するのを簡単にするツールです。<br>\n画面を見た方が理解が早いと思いますので、仮のアプリのヘッダコンポーネントの「ログイン状態」と「非ログイン状態」をStorybookで開発中の画面を載せました。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/9aa5231eb431e7ab3922d9b1df67f9277715e8bb/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f61336433356432392d666130352d356434382d386461612d3136333338386435643062392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa3d35d29-fa05-5d48-8daa-163388d5d0b9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=23e0e0d2bfa7f8fc0a842a6ac191b6cb\" alt=\"signin.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a3d35d29-fa05-5d48-8daa-163388d5d0b9.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa3d35d29-fa05-5d48-8daa-163388d5d0b9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=eb87f53c6ba5acec0d0702942439a6a2 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/221118c1009b93b4cfb472caa8ae85d0df1589eb/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36353063653639642d326633662d356236392d643965322d6263616163643338316531352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F650ce69d-2f3f-5b69-d9e2-bcaacd381e15.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=50cb1cdd04165ac24f767f681931363f\" alt=\"signout.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/650ce69d-2f3f-5b69-d9e2-bcaacd381e15.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F650ce69d-2f3f-5b69-d9e2-bcaacd381e15.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=4f30255d2e24fe3b438dc94061c899a2 1x\" loading=\"lazy\"></a></p>\n\n<p>開発中のコンポーネントの並び<sup id=\"fnref1\"><a href=\"#fn1\" title=\"実際はファイル名もファイルの場所も制限はない。メンテナンス性を鑑みるとパスを書かないでよい場所に配置するのがよさそう。\">1</a></sup>に {Component名}.stories.js を配置して簡単な設定を書くだけでスクリーンショット通りのプロパティエディタ付きのプレビューが表示されます。</p>\n\n<ul>\n<li>簡単な設定</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">AppHeader.stories.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"nx\">AppHeader</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">./AppHeader</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// 左メニューに表示する項目</span>\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"p\">{</span>\n  <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">Melecules/header/AppHeader</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">argTypes</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// property editor をスライダーなどにしたい場合はここに設定を記述</span>\n  <span class=\"p\">},</span>\n<span class=\"p\">};</span>\n\n<span class=\"c1\">// プレビュー用テンプレート：コピペで利用</span>\n<span class=\"kd\">const</span> <span class=\"nx\">Template</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">args</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">argTypes</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">({</span>\n  <span class=\"na\">props</span><span class=\"p\">:</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">argTypes</span><span class=\"p\">),</span>\n  <span class=\"na\">components</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"nx\">AppHeader</span> <span class=\"p\">},</span>\n  <span class=\"na\">template</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;AppHeader v-bind=\"$props\" /&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n<span class=\"p\">});</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">args</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">test</span><span class=\"dl\">'</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// Signin 状態。user object を指定</span>\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">Signin</span> <span class=\"o\">=</span> <span class=\"nx\">Template</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">({});</span>\n<span class=\"nx\">Signin</span><span class=\"p\">.</span><span class=\"nx\">args</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"p\">...</span><span class=\"nx\">args</span><span class=\"p\">,</span> <span class=\"p\">...{</span>\n  <span class=\"na\">user</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">aaaa</span><span class=\"dl\">'</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}}</span>\n\n<span class=\"c1\">// Signout 状態。user object = null を指定</span>\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">Signout</span> <span class=\"o\">=</span> <span class=\"nx\">Template</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">({});</span>\n<span class=\"nx\">Signout</span><span class=\"p\">.</span><span class=\"nx\">args</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"p\">...</span><span class=\"nx\">args</span><span class=\"p\">,</span> <span class=\"p\">...{</span>\n  <span class=\"na\">user</span><span class=\"p\">:</span> <span class=\"kc\">null</span>\n<span class=\"p\">}}</span>\n\n</code></pre></div>\n</div>\n\n<p>ログイン/非ログイン状態のUIの開発は面倒な制御が入って面倒だったと思いますが、コンポーネント単位で簡単に動作確認しながら開発できれば随分簡単になりますよね？</p>\n\n<h2>\n<span id=\"導入\" class=\"fragment\"></span><a href=\"#%E5%B0%8E%E5%85%A5\"><i class=\"fa fa-link\"></i></a>導入</h2>\n\n<p>まずは、Vue, React, ... のプロジェクトを作って下さい。本記事では Nuxtjs (+ Vuetify) のプロジェクトを対象に解説します。</p>\n\n<p>Nuxtjs のプロジェクトを作ってない方はこちらも参照ください。<br>\n<a href=\"https://qiita.com/kaku3/items/c4a9f72e73247c776c93\" id=\"reference-c39b03b821a79afc75ff\">【2020年版】Vue + Vuetify + typescript でWeb開発するならNuxt.jsを使おう</a></p>\n\n<p>プロジェクトが用意できたら、以下コマンドを実行してください。</p>\n\n<h3>\n<span id=\"storybook-インストール\" class=\"fragment\"></span><a href=\"#storybook-%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>Storybook インストール</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>cd {projectFolder}\nnpx sb init\n</code></pre></div></div>\n\n<p>プロジェクトフォルダ内に以下フォルダができます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>{projectFolder}/\n  .storybook/ # 設定が入っているフォルダ\n    main.js # addon 設定などする\n    preview.js # preview 設定などする。Vuetify を利用する場合はまるっと入れ替える\n  storybook/ # サンプルコンポーネントとストーリーが入っている。捨てても良いがコピペ元として重宝する\n</code></pre></div></div>\n\n<h3>\n<span id=\"storybook-実行\" class=\"fragment\"></span><a href=\"#storybook-%E5%AE%9F%E8%A1%8C\"><i class=\"fa fa-link\"></i></a>Storybook 実行</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>yarn storybook\n</code></pre></div></div>\n\n<p>インストールが済んだ状態で実行すると storybook/ フォルダのサンプルが表示される状態で、Storybookが実行され、<a href=\"http://localhost:6006\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://localhost:6006</a> がブラウザで自動で開かれます。</p>\n\n<h3>\n<span id=\"mainjs-の-stories-フォルダを変更\" class=\"fragment\"></span><a href=\"#mainjs-%E3%81%AE-stories-%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%82%92%E5%A4%89%E6%9B%B4\"><i class=\"fa fa-link\"></i></a>main.js の stories フォルダを変更</h3>\n\n<p>storybook から components に変更することで、開発中のコンポーネントのフォルダを Storybook の参照対象とします。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">main.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"dl\">\"</span><span class=\"s2\">stories</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"c1\">// storybook -&gt; components に変更</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">../components/**/*.stories.mdx</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">../components/**/*.stories.@(js|jsx|ts|tsx)</span><span class=\"dl\">\"</span>\n  <span class=\"p\">],</span>\n  <span class=\"dl\">\"</span><span class=\"s2\">addons</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">@storybook/addon-links</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">@storybook/addon-essentials</span><span class=\"dl\">\"</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n\n</code></pre></div>\n</div>\n\n<p>古い記事を見ると色々な addon を足すと便利と書いてありますが addon-essentials に色々入ってる様ですので必要になったタイミングで色々足すとよいと思います。</p>\n\n<h3>\n<span id=\"previewjs-を差し替えvuetify利用時のみ\" class=\"fragment\"></span><a href=\"#previewjs-%E3%82%92%E5%B7%AE%E3%81%97%E6%9B%BF%E3%81%88vuetify%E5%88%A9%E7%94%A8%E6%99%82%E3%81%AE%E3%81%BF\"><i class=\"fa fa-link\"></i></a>preview.js を差し替え(Vuetify利用時のみ)</h3>\n\n<p>質素なファイルが入っているので、Vuetify を利用するように修正します。<br>\nアイコンがレンダリングされなかったので、@mdi/font のインストールもしています。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>yarn add @mdi/font -D\n</code></pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">preview.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"nx\">Vue</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">vue</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"nx\">Vuetify</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">vuetify</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"dl\">'</span><span class=\"s1\">vuetify/dist/vuetify.css</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"nx\">colors</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">vuetify/es5/util/colors</span><span class=\"dl\">'</span>\n<span class=\"k\">import</span> <span class=\"dl\">'</span><span class=\"s1\">@mdi/font/css/materialdesignicons.css</span><span class=\"dl\">'</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">vuetifyOptions</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n<span class=\"nx\">Vue</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">Vuetify</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n  <span class=\"na\">theme</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">dark</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n    <span class=\"na\">themes</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"na\">dark</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">primary</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">blue</span><span class=\"p\">.</span><span class=\"nx\">darken2</span><span class=\"p\">,</span>\n        <span class=\"na\">accent</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">grey</span><span class=\"p\">.</span><span class=\"nx\">darken3</span><span class=\"p\">,</span>\n        <span class=\"na\">secondary</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">amber</span><span class=\"p\">.</span><span class=\"nx\">darken3</span><span class=\"p\">,</span>\n        <span class=\"na\">info</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">teal</span><span class=\"p\">.</span><span class=\"nx\">lighten1</span><span class=\"p\">,</span>\n        <span class=\"na\">warning</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">amber</span><span class=\"p\">.</span><span class=\"nx\">base</span><span class=\"p\">,</span>\n        <span class=\"na\">error</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">deepOrange</span><span class=\"p\">.</span><span class=\"nx\">accent4</span><span class=\"p\">,</span>\n        <span class=\"na\">success</span><span class=\"p\">:</span> <span class=\"nx\">colors</span><span class=\"p\">.</span><span class=\"nx\">green</span><span class=\"p\">.</span><span class=\"nx\">accent3</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"na\">icons</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">iconfont</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">mdi</span><span class=\"dl\">'</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">parameters</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">backgrounds</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span> <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">Sample BG 1</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">#CCCCCC</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"na\">default</span><span class=\"p\">:</span> <span class=\"kc\">true</span> <span class=\"p\">},</span>\n      <span class=\"p\">{</span> <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">Sample BG 2</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">#000000</span><span class=\"dl\">'</span> <span class=\"p\">},</span>\n    <span class=\"p\">],</span>\n  <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">decorators</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n    <span class=\"p\">{</span> <span class=\"na\">vuetify</span><span class=\"p\">:</span> <span class=\"k\">new</span> <span class=\"nx\">Vuetify</span><span class=\"p\">(</span><span class=\"nx\">vuetifyOptions</span><span class=\"p\">),</span> <span class=\"na\">template</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;v-app&gt;&lt;story/&gt;&lt;/v-app&gt;</span><span class=\"dl\">'</span> <span class=\"p\">}</span>\n  <span class=\"p\">)}</span>\n<span class=\"p\">]</span>\n</code></pre></div>\n</div>\n\n<h3>\n<span id=\"components-フォルダに-storiesjs-を配置\" class=\"fragment\"></span><a href=\"#components-%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%81%AB-storiesjs-%E3%82%92%E9%85%8D%E7%BD%AE\"><i class=\"fa fa-link\"></i></a>components フォルダに *.stories.js を配置</h3>\n\n<p>サンプルを参考に stories.js ファイルを作成して配置してください。<br>\n設定は以上となります。<strong>Webを検索すると色々出てきますが、以上です。</strong><br>\nWebpack の config をいじったり、.storybook/ に存在しないファイルを追加する必要はないです。</p>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>コンポーネント単位開発は人類の夢（大げさ）でしたが、分割の粒度で宗教戦争が起こったり、かえって管理が煩雑になったりデメリットが目立つ事が多かった様に思います。<br>\nただ、このレベルでサポートされるようになってくれば、コンポーネント開発のメリットを享受できたり、デザイナーとの分業も視野に入れられたりするのかなと感じました。<br>\n導入も本当に簡単ですので是非試してみて下さい。</p>\n\n<p>(おまけ)<br>\nNuxtjsではコンポーネントの依存関係を自動で解決してくれるため、comonents の注入を書かなくてよかったのですが Storybook は解決してくれなかったため対応が必要なのが残念でしたが、そのうち対応されることを祈ってます。</p>\n\n<div class=\"code-frame\" data-lang=\"vue\">\n<div class=\"code-lang\"><span class=\"bold\">parent.vue</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nt\">&lt;</span><span class=\"k\">script</span> <span class=\"na\">lang=</span><span class=\"s\">\"ts\"</span><span class=\"nt\">&gt;</span>\n<span class=\"c1\">// Storybook のためだけに追記</span>\n<span class=\"k\">import</span> <span class=\"nx\">C</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">components/C.vue</span><span class=\"dl\">'</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">Vue</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span>\n  <span class=\"c1\">// Storybook のためだけに追記</span>\n  <span class=\"na\">components</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nx\">C</span>\n  <span class=\"p\">}</span>\n  <span class=\"c1\">// ...</span>\n<span class=\"p\">}</span>\n<span class=\"nt\">&lt;/</span><span class=\"k\">script</span><span class=\"nt\">&gt;</span>\n</code></pre></div>\n</div>\n\n<div class=\"footnotes\">\n<hr>\n<ol>\n\n<li id=\"fn1\">\n<p>実際はファイル名もファイルの場所も制限はない。メンテナンス性を鑑みるとパスを書かないでよい場所に配置するのがよさそう。 <a href=\"#fnref1\">↩</a></p>\n</li>\n\n</ol>\n</div>\n",
    "body": "## はじめに\nWeb界隈は一つ案件が終わって戻ってくると、びっくりするくらい便利なものが開発されていて竜宮城から帰ってきておじいさんになった気分になりますね。\n\n先週はNuxtjsの記事を書きましたが、Storybookも使った方がよさそうなので今週は[Storybook](https://storybook.js.org/)の記事を書きます。\nStorybook は 2020年8月に6系になって**大変シンプルになりましたが** 大幅に変更になって古い記事が罠となってしまっているので**Google検索する時は「１ヶ月以内」**で期間指定するのがよさそうです。\n\n\n## Storybook とは\n\n> Storybook is an open source tool for developing UI components in isolation for React, Vue, Angular, and more. It makes building stunning UIs organized and efficient.\n\n一言でいうと UI Component をコンポーネント単位で開発するのを簡単にするツールです。\n画面を見た方が理解が早いと思いますので、仮のアプリのヘッダコンポーネントの「ログイン状態」と「非ログイン状態」をStorybookで開発中の画面を載せました。\n\n![signin.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a3d35d29-fa05-5d48-8daa-163388d5d0b9.png)\n![signout.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/650ce69d-2f3f-5b69-d9e2-bcaacd381e15.png)\n\n開発中のコンポーネントの並び[^1]に {Component名}.stories.js を配置して簡単な設定を書くだけでスクリーンショット通りのプロパティエディタ付きのプレビューが表示されます。\n\n* 簡単な設定\n\n``` AppHeader.stories.js\nimport AppHeader from './AppHeader';\n\n// 左メニューに表示する項目\nexport default {\n  title: 'Melecules/header/AppHeader',\n  argTypes: {\n    // property editor をスライダーなどにしたい場合はここに設定を記述\n  },\n};\n\n// プレビュー用テンプレート：コピペで利用\nconst Template = (args, { argTypes }) => ({\n  props: Object.keys(argTypes),\n  components: { AppHeader },\n  template: '<AppHeader v-bind=\"$props\" />',\n});\n\nconst args = {\n  title: 'test'\n}\n\n// Signin 状態。user object を指定\nexport const Signin = Template.bind({});\nSignin.args = { ...args, ...{\n  user: {\n    id: 'aaaa'\n  }\n}}\n\n// Signout 状態。user object = null を指定\nexport const Signout = Template.bind({});\nSignout.args = { ...args, ...{\n  user: null\n}}\n\n```\n\nログイン/非ログイン状態のUIの開発は面倒な制御が入って面倒だったと思いますが、コンポーネント単位で簡単に動作確認しながら開発できれば随分簡単になりますよね？\n\n\n## 導入\n\nまずは、Vue, React, ... のプロジェクトを作って下さい。本記事では Nuxtjs (+ Vuetify) のプロジェクトを対象に解説します。\n\nNuxtjs のプロジェクトを作ってない方はこちらも参照ください。\n[【2020年版】Vue + Vuetify + typescript でWeb開発するならNuxt.jsを使おう](https://qiita.com/kaku3/items/c4a9f72e73247c776c93)\n\nプロジェクトが用意できたら、以下コマンドを実行してください。\n\n### Storybook インストール\n\n```\ncd {projectFolder}\nnpx sb init\n```\n\nプロジェクトフォルダ内に以下フォルダができます。\n\n```\n{projectFolder}/\n  .storybook/ # 設定が入っているフォルダ\n    main.js # addon 設定などする\n    preview.js # preview 設定などする。Vuetify を利用する場合はまるっと入れ替える\n  storybook/ # サンプルコンポーネントとストーリーが入っている。捨てても良いがコピペ元として重宝する\n```\n\n### Storybook 実行\n\n```\nyarn storybook\n```\n\nインストールが済んだ状態で実行すると storybook/ フォルダのサンプルが表示される状態で、Storybookが実行され、http://localhost:6006 がブラウザで自動で開かれます。\n\n\n### main.js の stories フォルダを変更\n\nstorybook から components に変更することで、開発中のコンポーネントのフォルダを Storybook の参照対象とします。\n\n``` main.js\nmodule.exports = {\n  \"stories\": [\n    // storybook -> components に変更\n    \"../components/**/*.stories.mdx\",\n    \"../components/**/*.stories.@(js|jsx|ts|tsx)\"\n  ],\n  \"addons\": [\n    \"@storybook/addon-links\",\n    \"@storybook/addon-essentials\"\n  ]\n}\n\n```\n\n古い記事を見ると色々な addon を足すと便利と書いてありますが addon-essentials に色々入ってる様ですので必要になったタイミングで色々足すとよいと思います。\n\n### preview.js を差し替え(Vuetify利用時のみ)\n\n質素なファイルが入っているので、Vuetify を利用するように修正します。\nアイコンがレンダリングされなかったので、@mdi/font のインストールもしています。\n\n```\nyarn add @mdi/font -D\n```\n\n``` preview.js\nimport Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport 'vuetify/dist/vuetify.css'\nimport colors from 'vuetify/es5/util/colors'\nimport '@mdi/font/css/materialdesignicons.css'\n\nconst vuetifyOptions = {}\n\nVue.use(Vuetify, {\n  theme: {\n    dark: false,\n    themes: {\n      dark: {\n        primary: colors.blue.darken2,\n        accent: colors.grey.darken3,\n        secondary: colors.amber.darken3,\n        info: colors.teal.lighten1,\n        warning: colors.amber.base,\n        error: colors.deepOrange.accent4,\n        success: colors.green.accent3\n      }\n    }\n  },\n  icons: {\n    iconfont: 'mdi'\n  }\n})\n\nexport const parameters = {\n  backgrounds: {\n    value: [\n      { name: 'Sample BG 1', value: '#CCCCCC', default: true },\n      { name: 'Sample BG 2', value: '#000000' },\n    ],\n  },\n}\n\nexport const decorators = [\n  () => {\n    return (\n    { vuetify: new Vuetify(vuetifyOptions), template: '<v-app><story/></v-app>' }\n  )}\n]\n```\n\n\n### components フォルダに *.stories.js を配置\n\nサンプルを参考に stories.js ファイルを作成して配置してください。\n設定は以上となります。**Webを検索すると色々出てきますが、以上です。**\nWebpack の config をいじったり、.storybook/ に存在しないファイルを追加する必要はないです。\n\n\n## おわりに\n\nコンポーネント単位開発は人類の夢（大げさ）でしたが、分割の粒度で宗教戦争が起こったり、かえって管理が煩雑になったりデメリットが目立つ事が多かった様に思います。\nただ、このレベルでサポートされるようになってくれば、コンポーネント開発のメリットを享受できたり、デザイナーとの分業も視野に入れられたりするのかなと感じました。\n導入も本当に簡単ですので是非試してみて下さい。\n\n(おまけ)\nNuxtjsではコンポーネントの依存関係を自動で解決してくれるため、comonents の注入を書かなくてよかったのですが Storybook は解決してくれなかったため対応が必要なのが残念でしたが、そのうち対応されることを祈ってます。\n\n``` parent.vue\n<script lang=\"ts\">\n// Storybook のためだけに追記\nimport C from 'components/C.vue'\n\nexport default Vue.extend({\n  // Storybook のためだけに追記\n  components: {\n    C\n  }\n  // ...\n}\n</script>\n```\n\n[^1]: 実際はファイル名もファイルの場所も制限はない。メンテナンス性を鑑みるとパスを書かないでよい場所に配置するのがよさそう。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-12-19T16:17:12+09:00",
    "group": null,
    "id": "05a0de729da7faba9ce4",
    "likes_count": 4,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 1,
    "tags": [
      {
        "name": "Vue.js",
        "versions": []
      },
      {
        "name": "storybook",
        "versions": []
      },
      {
        "name": "Vuetify",
        "versions": []
      },
      {
        "name": "Nuxt",
        "versions": []
      }
    ],
    "title": "【超簡単フロントエンド開発】Storybook6.1 + Nuxtjs (+Vuetify)",
    "updated_at": "2020-12-19T17:45:48+09:00",
    "url": "https://qiita.com/kaku3/items/05a0de729da7faba9ce4",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2338,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"q-why-use-nuxtjs\" class=\"fragment\"></span><a href=\"#q-why-use-nuxtjs\"><i class=\"fa fa-link\"></i></a>Q. Why Use Nuxt.js</h2>\n\n<p>A.チョロいから。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>プログラマーの3大美徳\n\n1. 怠慢(Laziness)\n2. 短気(Impatience)\n3. 傲慢(Hubris)\n</code></pre></div></div>\n\n<p>Vue と Vuetify と typescript で開発を覚えればもうしばらくは新しいこと覚えなくていいかなと思っていたのですが。<br>\nreact もちょっと触っておよそ似たようなもんかなーあとは趣味の問題かなーと思っていたのですが、Vue + Vuetify(他UIフレームワーク) + ... で開発するんだったらNuxtにした方がチョロいと思ったので、怠慢であるために記事を書きます。</p>\n\n<h2>\n<span id=\"nuxtjs-とは\" class=\"fragment\"></span><a href=\"#nuxtjs-%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>Nuxt.js とは</h2>\n\n<p>サーバサイドレンダリングがなんちゃらとか説明がありますが、よく使うもの全部入りのVue.jsと思うと分かりやすいかもしれません。<br>\n単に全部入りなだけではなく、router がフォルダ構成より自動生成される気の利いた機能なども付いてます。<br>\nこのためだけに使ってもいいと思います。</p>\n\n<p>●pages フォルダ以下の構成が、そのまま URL構成になる例</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>pages/\n  index.vue\n  login.vue\n  users/\n    index.vue\n    new.vue\n    _id/\n      edit.vue\n      index.vue\n</code></pre></div></div>\n\n<p>　↓　以下URLが自動生成される。スーパー便利です。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>http://localhost/\nhttp://localhost/login\nhttp://localhost/users\nhttp://localhost/users/new\nhttp://localhost/users/xxxx\nhttp://localhost/users/xxxx/edit\n</code></pre></div></div>\n\n<h2>\n<span id=\"導入\" class=\"fragment\"></span><a href=\"#%E5%B0%8E%E5%85%A5\"><i class=\"fa fa-link\"></i></a>導入</h2>\n\n<p>node を持っていれば導入は非常に簡単です。<br>\n動くバージョンを探し当てるところで苦労しましたが、12.20.0 で動作確認できました。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code># Windows 環境\nnodist + 12.20.0\nnodist 12.20.0\n</code></pre></div></div>\n\n<p>以下コマンドでプロジェクトを作成。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>npx create-nuxt-app sample  \n</code></pre></div></div>\n\n<p>あとは対話式コンソールで質問に答えていけばプロジェクトが作成できます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>create-nuxt-app v3.4.0\n✨  Generating Nuxt.js project in sample\n</code></pre></div></div>\n\n<h3>\n<span id=\"プロジェクト名\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E5%90%8D\"><i class=\"fa fa-link\"></i></a>プロジェクト名</h3>\n\n<p>プロジェクト名でフォルダが作成されます。英語にしておくのが無難。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>? Project name: sample\n</code></pre></div></div>\n\n<h3>\n<span id=\"言語\" class=\"fragment\"></span><a href=\"#%E8%A8%80%E8%AA%9E\"><i class=\"fa fa-link\"></i></a>言語</h3>\n\n<p>Typescript または Javascript</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>? Programming language: (Use arrow keys)\n  JavaScript\n&gt; TypeScript\n</code></pre></div></div>\n\n<h3>\n<span id=\"パッケージマネージャ\" class=\"fragment\"></span><a href=\"#%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%A3\"><i class=\"fa fa-link\"></i></a>パッケージマネージャ</h3>\n\n<p>yarn または npm</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>? Package manager: (Use arrow keys)\n&gt; Yarn\n  Npm\n</code></pre></div></div>\n\n<h3>\n<span id=\"ui-framework\" class=\"fragment\"></span><a href=\"#ui-framework\"><i class=\"fa fa-link\"></i></a>UI framework</h3>\n\n<p>モダンなUI framework はだいたい選べる様に見えました。ナウいと評判のTailwind CSS もいます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>? UI framework: (Use arrow keys)\n  None\n  Ant Design Vue\n  Bootstrap Vue\n  Buefy\n  Bulma\n  Chakra UI\n  Element\n  Framevuerk\n  iView\n  Tachyons\n  Tailwind CSS\n  Vuesax\n&gt; Vuetify.js\n\n</code></pre></div></div>\n\n<h3>\n<span id=\"nuxtjs-モジュール\" class=\"fragment\"></span><a href=\"#nuxtjs-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>Nuxt.js モジュール</h3>\n\n<p>Axios と PWA が選べるのが気が利いてる感じでした。</p>\n\n<p>Content は markdown ベースでページ作成ができる機能。<br>\nabout ページなどで猛威を発揮しそうです。<br>\n<a href=\"https://content.nuxtjs.org/ja\" rel=\"nofollow noopener\" target=\"_blank\">nuxt/content</a></p>\n\n<blockquote>\n<p>開発モードでのビックリするほど高速なホットリロード<br>\nMarkdownの中でVueコンポーネントを利用できます<br>\n全文検索<br>\n静的サイト生成(SSG)のサポート <code>nuxt generate</code><br>\n強力なクエリビルダーAPI (MongoDBライク)<br>\nPrismJSを利用した、Markdown内コードブロックのシンタックスハイライト<br>\n目次の自動生成<br>\nMarkdown, CSV, YAML, JSON(5)、XMLを適切に処理します<br>\nhooksによる拡張</p>\n</blockquote>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>? Nuxt.js modules: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection)\n&gt;( ) Axios\n ( ) Progressive Web App (PWA)\n ( ) Content\n</code></pre></div></div>\n\n<h3>\n<span id=\"lintツール\" class=\"fragment\"></span><a href=\"#lint%E3%83%84%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>Lintツール</h3>\n\n<p>お好きなLintツールを選べます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>? Linting tools: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection)\n (*) ESLint\n&gt;(*) Prettier\n ( ) Lint staged files\n ( ) StyleLint        \n ( ) Commitlint\n\n</code></pre></div></div>\n\n<h3>\n<span id=\"testフレームワーク\" class=\"fragment\"></span><a href=\"#test%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF\"><i class=\"fa fa-link\"></i></a>Testフレームワーク</h3>\n\n<p>お好きなTestフレームワークを選べます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>? Testing framework: (Use arrow keys)\n&gt; None\n  Jest\n  AVA\n  WebdriverIO\n</code></pre></div></div>\n\n<h3>\n<span id=\"rendering-モード\" class=\"fragment\"></span><a href=\"#rendering-%E3%83%A2%E3%83%BC%E3%83%89\"><i class=\"fa fa-link\"></i></a>Rendering モード</h3>\n\n<p>全力でSPAを選択。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>? Rendering mode: (Use arrow keys)\n  Universal (SSR / SSG)\n&gt; Single Page App\n\n</code></pre></div></div>\n\n<h3>\n<span id=\"deploy-先\" class=\"fragment\"></span><a href=\"#deploy-%E5%85%88\"><i class=\"fa fa-link\"></i></a>Deploy 先</h3>\n\n<p>全力でStaticを選択。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>? Deployment target: (Use arrow keys)\n  Server (Node.js hosting)\n&gt; Static (Static/JAMStack hosting) \n</code></pre></div></div>\n\n<h3>\n<span id=\"開発ツール\" class=\"fragment\"></span><a href=\"#%E9%96%8B%E7%99%BA%E3%83%84%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>開発ツール</h3>\n\n<p>javascript の時は jsconfig.json を選択しておくとよさそう。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>? Development tools: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection)\n&gt;( ) jsconfig.json (Recommended for VS Code if you're not using typescript)\n ( ) Semantic Pull Requests\n ( ) Dependabot (For auto-updating dependencies, GitHub only)\n</code></pre></div></div>\n\n<h3>\n<span id=\"ci\" class=\"fragment\"></span><a href=\"#ci\"><i class=\"fa fa-link\"></i></a>CI</h3>\n\n<p>なしにしました。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>? Continuous integration: (Use arrow keys)\n&gt; None\n  GitHub Actions (GitHub only) \n</code></pre></div></div>\n\n<h3>\n<span id=\"vcs\" class=\"fragment\"></span><a href=\"#vcs\"><i class=\"fa fa-link\"></i></a>VCS</h3>\n\n<p>git にしました。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>? Version control system: (Use arrow keys)\n&gt; Git\n  None  \n</code></pre></div></div>\n\n<h3>\n<span id=\"設定まとめ\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>設定まとめ</h3>\n\n<p>内容を確認して、リターンキー押下でプロジェクト作成開始</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>✨  Generating Nuxt.js project in sample\n? Project name: sample\n? Programming language: TypeScript \n? Package manager: Yarn\n? UI framework: Vuetify.js\n? Nuxt.js modules: Axios\n? Linting tools: ESLint, Prettier    \n? Testing framework: None\n? Rendering mode: Single Page App    \n? Deployment target: Static (Static/JAMStack hosting)\n? Development tools: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection)\n? Continuous integration: None\n? Version control system: Git  \n</code></pre></div></div>\n\n<h3>\n<span id=\"プロジェクト作成完了\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E4%BD%9C%E6%88%90%E5%AE%8C%E4%BA%86\"><i class=\"fa fa-link\"></i></a>プロジェクト作成完了</h3>\n\n<p>コンソールに以下表示されたら作成完了です。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>�🎉  Successfully created project sample\n\n  To get started:\n\n        cd sample\n        yarn dev\n\n  To build &amp; start for production:\n\n        cd sample\n        yarn build\n        yarn start\n\n\n  For TypeScript users.\n</code></pre></div></div>\n\n<h2>\n<span id=\"実行\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E8%A1%8C\"><i class=\"fa fa-link\"></i></a>実行</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>cd sample\nyarn dev\n\nyarn run v1.17.3\n$ nuxt-ts\n\n   ╭───────────────────────────────────────╮\n   │                                       │\n   │   Nuxt @ v2.14.11                     │\n   │                                       │\n   │   ▸ Environment: development          │\n   │   ▸ Rendering:   client-side          │\n   │   ▸ Target:      static               │\n   │                                       │\n   │   Listening: http://localhost:3000/   │\n   │                                       │\n   ╰───────────────────────────────────────╯\n\ni Preparing project for development                                                                                                                                     16:46:38\ni Initial build may take a while                                                                                                                                        16:46:38\n√ Builder initialized                                                                                                                                                   16:46:38\n√ Nuxt files generated                                                                                                                                                  16:46:38\n\n√ Client\n  Compiled successfully in 8.53s\n\ni Waiting for file changes                                                                                                                                              16:46:49\ni Memory usage: 414 MB (RSS: 512 MB)                                                                                                                                    16:46:49\ni Listening on: http://localhost:3000/                                                                                                                                  16:46:49  \nNo issues found.\n</code></pre></div></div>\n\n<p>ブラウザで <a href=\"http://localhost:3000/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://localhost:3000/</a> へアクセスし以下の画面が表示されたら成功です。お疲れさまでした。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/0b25969a07283c9f3fd590162d720441dcc5a8f1/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64643661336462622d376139612d396232382d643062342d6633613366643132333737662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdd6a3dbb-7a9a-9b28-d0b4-f3a3fd12377f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=9e1dddf6c7a881fde2ec7254d9fa4d0d\" alt=\"nuxt.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/dd6a3dbb-7a9a-9b28-d0b4-f3a3fd12377f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdd6a3dbb-7a9a-9b28-d0b4-f3a3fd12377f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=96c3df8e541600ee89fb01698c6e1790 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>新しくプロジェクト作るのが面倒くさくてなんとなくググったら圧倒的に便利なものが見つかり、面倒から解放されました。<br>\nこれからも惰性で仕事をせずに<strong>怠慢に</strong>仕事をしていきたいと思います。</p>\n",
    "body": "## Q. Why Use Nuxt.js\n\nA.チョロいから。\n\n```\nプログラマーの3大美徳\n\n1. 怠慢(Laziness)\n2. 短気(Impatience)\n3. 傲慢(Hubris)\n```\n\nVue と Vuetify と typescript で開発を覚えればもうしばらくは新しいこと覚えなくていいかなと思っていたのですが。\nreact もちょっと触っておよそ似たようなもんかなーあとは趣味の問題かなーと思っていたのですが、Vue + Vuetify(他UIフレームワーク) + ... で開発するんだったらNuxtにした方がチョロいと思ったので、怠慢であるために記事を書きます。\n\n## Nuxt.js とは\n\nサーバサイドレンダリングがなんちゃらとか説明がありますが、よく使うもの全部入りのVue.jsと思うと分かりやすいかもしれません。\n単に全部入りなだけではなく、router がフォルダ構成より自動生成される気の利いた機能なども付いてます。\nこのためだけに使ってもいいと思います。\n\n●pages フォルダ以下の構成が、そのまま URL構成になる例\n\n```\npages/\n  index.vue\n  login.vue\n  users/\n    index.vue\n    new.vue\n    _id/\n      edit.vue\n      index.vue\n```\n\n　↓　以下URLが自動生成される。スーパー便利です。\n\n```\nhttp://localhost/\nhttp://localhost/login\nhttp://localhost/users\nhttp://localhost/users/new\nhttp://localhost/users/xxxx\nhttp://localhost/users/xxxx/edit\n```\n\n## 導入\n\nnode を持っていれば導入は非常に簡単です。\n動くバージョンを探し当てるところで苦労しましたが、12.20.0 で動作確認できました。\n\n```\n# Windows 環境\nnodist + 12.20.0\nnodist 12.20.0\n```\n\n以下コマンドでプロジェクトを作成。\n\n```\nnpx create-nuxt-app sample  \n```\n\nあとは対話式コンソールで質問に答えていけばプロジェクトが作成できます。\n\n```\ncreate-nuxt-app v3.4.0\n✨  Generating Nuxt.js project in sample\n```\n\n\n### プロジェクト名\n\nプロジェクト名でフォルダが作成されます。英語にしておくのが無難。\n\n```\n? Project name: sample\n```\n\n\n### 言語\nTypescript または Javascript\n\n```\n? Programming language: (Use arrow keys)\n  JavaScript\n> TypeScript\n```\n\n\n### パッケージマネージャ\nyarn または npm\n\n```\n? Package manager: (Use arrow keys)\n> Yarn\n  Npm\n```\n\n\n### UI framework\n\nモダンなUI framework はだいたい選べる様に見えました。ナウいと評判のTailwind CSS もいます。\n\n```\n? UI framework: (Use arrow keys)\n  None\n  Ant Design Vue\n  Bootstrap Vue\n  Buefy\n  Bulma\n  Chakra UI\n  Element\n  Framevuerk\n  iView\n  Tachyons\n  Tailwind CSS\n  Vuesax\n> Vuetify.js\n\n```\n\n\n### Nuxt.js モジュール\n\nAxios と PWA が選べるのが気が利いてる感じでした。\n\nContent は markdown ベースでページ作成ができる機能。\nabout ページなどで猛威を発揮しそうです。\n[nuxt/content](https://content.nuxtjs.org/ja)\n> 開発モードでのビックリするほど高速なホットリロード\nMarkdownの中でVueコンポーネントを利用できます\n全文検索\n静的サイト生成(SSG)のサポート `nuxt generate`\n強力なクエリビルダーAPI (MongoDBライク)\nPrismJSを利用した、Markdown内コードブロックのシンタックスハイライト\n目次の自動生成\nMarkdown, CSV, YAML, JSON(5)、XMLを適切に処理します\nhooksによる拡張\n\n\n```\n? Nuxt.js modules: (Press <space> to select, <a> to toggle all, <i> to invert selection)\n>( ) Axios\n ( ) Progressive Web App (PWA)\n ( ) Content\n```\n\n\n### Lintツール\n\nお好きなLintツールを選べます。\n\n```\n? Linting tools: (Press <space> to select, <a> to toggle all, <i> to invert selection)\n (*) ESLint\n>(*) Prettier\n ( ) Lint staged files\n ( ) StyleLint        \n ( ) Commitlint\n\n```\n\n\n### Testフレームワーク\n\nお好きなTestフレームワークを選べます。\n\n```\n? Testing framework: (Use arrow keys)\n> None\n  Jest\n  AVA\n  WebdriverIO\n```\n\n\n### Rendering モード\n\n全力でSPAを選択。\n\n```\n? Rendering mode: (Use arrow keys)\n  Universal (SSR / SSG)\n> Single Page App\n\n```\n\n\n### Deploy 先\n\n全力でStaticを選択。\n\n```\n? Deployment target: (Use arrow keys)\n  Server (Node.js hosting)\n> Static (Static/JAMStack hosting) \n```\n\n\n### 開発ツール\n\njavascript の時は jsconfig.json を選択しておくとよさそう。\n\n```\n? Development tools: (Press <space> to select, <a> to toggle all, <i> to invert selection)\n>( ) jsconfig.json (Recommended for VS Code if you're not using typescript)\n ( ) Semantic Pull Requests\n ( ) Dependabot (For auto-updating dependencies, GitHub only)\n```\n\n\n### CI\n\nなしにしました。\n\n```\n? Continuous integration: (Use arrow keys)\n> None\n  GitHub Actions (GitHub only) \n```\n\n\n### VCS\n\ngit にしました。\n\n```\n? Version control system: (Use arrow keys)\n> Git\n  None  \n```\n\n### 設定まとめ\n\n内容を確認して、リターンキー押下でプロジェクト作成開始\n\n```\n✨  Generating Nuxt.js project in sample\n? Project name: sample\n? Programming language: TypeScript \n? Package manager: Yarn\n? UI framework: Vuetify.js\n? Nuxt.js modules: Axios\n? Linting tools: ESLint, Prettier    \n? Testing framework: None\n? Rendering mode: Single Page App    \n? Deployment target: Static (Static/JAMStack hosting)\n? Development tools: (Press <space> to select, <a> to toggle all, <i> to invert selection)\n? Continuous integration: None\n? Version control system: Git  \n```\n\n### プロジェクト作成完了\n\nコンソールに以下表示されたら作成完了です。\n\n```\n�🎉  Successfully created project sample\n\n  To get started:\n\n        cd sample\n        yarn dev\n\n  To build & start for production:\n\n        cd sample\n        yarn build\n        yarn start\n\n\n  For TypeScript users.\n```\n\n## 実行\n\n```\ncd sample\nyarn dev\n\nyarn run v1.17.3\n$ nuxt-ts\n\n   ╭───────────────────────────────────────╮\n   │                                       │\n   │   Nuxt @ v2.14.11                     │\n   │                                       │\n   │   ▸ Environment: development          │\n   │   ▸ Rendering:   client-side          │\n   │   ▸ Target:      static               │\n   │                                       │\n   │   Listening: http://localhost:3000/   │\n   │                                       │\n   ╰───────────────────────────────────────╯\n\ni Preparing project for development                                                                                                                                     16:46:38\ni Initial build may take a while                                                                                                                                        16:46:38\n√ Builder initialized                                                                                                                                                   16:46:38\n√ Nuxt files generated                                                                                                                                                  16:46:38\n\n√ Client\n  Compiled successfully in 8.53s\n\ni Waiting for file changes                                                                                                                                              16:46:49\ni Memory usage: 414 MB (RSS: 512 MB)                                                                                                                                    16:46:49\ni Listening on: http://localhost:3000/                                                                                                                                  16:46:49  \nNo issues found.\n```\n\nブラウザで http://localhost:3000/ へアクセスし以下の画面が表示されたら成功です。お疲れさまでした。\n\n![nuxt.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/dd6a3dbb-7a9a-9b28-d0b4-f3a3fd12377f.png)\n\n\n## まとめ\n\n新しくプロジェクト作るのが面倒くさくてなんとなくググったら圧倒的に便利なものが見つかり、面倒から解放されました。\nこれからも惰性で仕事をせずに**怠慢に**仕事をしていきたいと思います。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-12-13T17:02:22+09:00",
    "group": null,
    "id": "c4a9f72e73247c776c93",
    "likes_count": 6,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 5,
    "tags": [
      {
        "name": "TypeScript",
        "versions": []
      },
      {
        "name": "Vue.js",
        "versions": []
      },
      {
        "name": "Vuetify",
        "versions": []
      },
      {
        "name": "Nuxt",
        "versions": []
      }
    ],
    "title": "【2020年版】Vue + Vuetify + typescript でWeb開発するならNuxt.jsを使おう",
    "updated_at": "2020-12-13T17:02:22+09:00",
    "url": "https://qiita.com/kaku3/items/c4a9f72e73247c776c93",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2199,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>業務アプリといえばVB6やMFCで作られたバタ臭いUIのツールだったのが25年くらい前？<br>\nそれはダサいなと、.netでWinFormsが登場したのが20年くらい前？<br>\nWPFやxamlがひっそりと流行らなかったりしつつ、とにもかくにも「業務アプリはおしゃれである必要はない」という謎の常識があったように思う。<br>\nそんな時代の画面定義と言えば、Excel方眼紙に罫線で描いたUI≒完成品のUIであったので、業務SEはデザインなど意識することなく三種の神器（ワード、Excel、パワポ）さえ使えてればよかった。</p>\n\n<p>時は流れて2020年。</p>\n\n<p>スマホが普及しTikTok, Instagram を始めとするモバイルアプリや、AmazonやNetflixの様なWebサービスなども登場し、一般の人々が<strong>優れたUIのサービス</strong>を利用することが当たり前となった。<br>\nこれにより、業務アプリもWebサービスとして提供される事が多くなり、BtoCとBtoBの境目が曖昧になり<strong>業務アプリが使いづらい</strong>ことに疑問を持つ人々が現れてしまった。（たぶん）</p>\n\n<p>よって、BtoB業務アプリを作っている企業でもそれなりのデザインの業務アプリを開発することが必要になってくるが、デザイナーを雇うのは以下の理由により難しい。</p>\n\n<ul>\n<li>デザイン必須の案件がない/取りに行かない（にわとりたまご問題）</li>\n<li>プログラマとデザイナは人種が違うので、１人だけ雇っても継続しない（めちゃくちゃいずらい）</li>\n</ul>\n\n<p>であれば、業務SEのあなたに<strong>「もっといい感じの画面デザインをするように」</strong>と命令される未来が来るのは想像に苦しくないと思う。<br>\nしかし、パワポやExcelでいい感じのUI/UXデザインをするのは、<strong>2030年にガソリン車販売が廃止になるのに、超ハイスペックなガソリン車を頑張って金型から作るようなこと</strong>だと思う。<br>\n今するべきは電気自動車を作ることではないだろうか。すなわち今までのやり方を捨ててでも、新しく効率がよく、世界から受け入れられる方法を採択することではないだろうか。</p>\n\n<h2>\n<span id=\"figma-の紹介プレゼン資料をつくってみた\" class=\"fragment\"></span><a href=\"#figma-%E3%81%AE%E7%B4%B9%E4%BB%8B%E3%83%97%E3%83%AC%E3%82%BC%E3%83%B3%E8%B3%87%E6%96%99%E3%82%92%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F\"><i class=\"fa fa-link\"></i></a>Figma の紹介プレゼン資料をつくってみた</h2>\n\n<p>前置きが長くなりましたが、ようやくFigma触りました。<br>\nbootstrap のUI Kit を使って画面デザインをしたところ、Excel方眼紙の1/2ぐらいの工数で作れる様な感触がありました。<br>\n似たような設定画面が大量にある場合はもっと工数が減ると思います。</p>\n\n<p>プレゼン資料も作れないかと調べたら、プレゼンテーション用のテンプレがあったので作ってみました。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/d821f6a98b6dea3f98742664428916b2dcc54713/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38306332623837632d393530362d303035302d323639382d6562303837303435316565392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F80c2b87c-9506-0050-2698-eb0870451ee9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f412ee346fcd5e5bb7f983baa915d124\" alt=\"01_タイトル.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/80c2b87c-9506-0050-2698-eb0870451ee9.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F80c2b87c-9506-0050-2698-eb0870451ee9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=7f8d0707b334c07af277f482e3cd0ab4 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/8b47b1a68ae5c30c4d5e0095b5b7d322425bd16a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f32373037333264632d323265632d623137302d333631622d6131303666303031383039662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F270732dc-22ec-b170-361b-a106f001809f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=6680b49ccac425b1b2e718829b028c29\" alt=\"02_背景.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/270732dc-22ec-b170-361b-a106f001809f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F270732dc-22ec-b170-361b-a106f001809f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=6553b5c8771fb915ef22813c86e8e9b2 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/512291108806b91c58b50690dfcacd2838a5b127/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f61336639623930332d386336302d373034612d336563622d3364633861663465613436622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa3f9b903-8c60-704a-3ecb-3dc8af4ea46b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=54c88eb5753f5009bc89dc7ec776bcc0\" alt=\"03_Why Figma.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a3f9b903-8c60-704a-3ecb-3dc8af4ea46b.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa3f9b903-8c60-704a-3ecb-3dc8af4ea46b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=6368fba77e53757cbd397f9a26384b55 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/4b6a1079e71cbc381b8e84f94325569eb20c18bb/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64656564623032622d323737352d383535612d663231652d3235316432643538633834322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdeedb02b-2775-855a-f21e-251d2d58c842.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=a3435cde473fb506dfd362c8b5601db7\" alt=\"04_How to start.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/deedb02b-2775-855a-f21e-251d2d58c842.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdeedb02b-2775-855a-f21e-251d2d58c842.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c3966a6811d18e7e6ad23b7fbff1edbf 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/03e9b2e9969960f41d0c45d08038e4599fa506b3/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37363933303465322d336262652d616534622d613730342d3664303565653862633962322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F769304e2-3bbe-ae4b-a704-6d05ee8bc9b2.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=fb50893f81652cc8ff69c5a2a0a52547\" alt=\"05_Get templates.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/769304e2-3bbe-ae4b-a704-6d05ee8bc9b2.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F769304e2-3bbe-ae4b-a704-6d05ee8bc9b2.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=3e35b6aafe603eda72256db9f27c13f1 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/00f1c01092d553c7ba39d3e4cf7e4d7181568603/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63336138616534662d303033312d346334352d636436362d3932336164373432653339322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc3a8ae4f-0031-4c45-cd66-923ad742e392.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=1fd7b8544617b40598b3495908c333a1\" alt=\"06_Figmation.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c3a8ae4f-0031-4c45-cd66-923ad742e392.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc3a8ae4f-0031-4c45-cd66-923ad742e392.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=1d1e5167732052af37296d191c73d7f6 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/6d155e9246ec1c020945eb45ae3e914d361103f4/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f31393066336563392d313137632d626435632d613265642d6564356237336331366631342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F190f3ec9-117c-bd5c-a2ed-ed5b73c16f14.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=dcaa1ec2dddb38f9c73a7e00bcd0883c\" alt=\"07_ショートカットキー.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/190f3ec9-117c-bd5c-a2ed-ed5b73c16f14.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F190f3ec9-117c-bd5c-a2ed-ed5b73c16f14.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=188c67a6ec56aac3d56096818ab6b8d8 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>雑にfigmaでプレゼン資料を作りましたが、パワポより垢抜けた資料が簡単に作れたと思います。<br>\nAutolayout, constraints あたりで苦しむ可能性はありますが、慣れれば生産性が大きく向上すると思います。<br>\nもはや<strong>DXによる働き方改革</strong>と言ってもいいのではないでしょうか。</p>\n",
    "body": "## はじめに\n\n業務アプリといえばVB6やMFCで作られたバタ臭いUIのツールだったのが25年くらい前？\nそれはダサいなと、.netでWinFormsが登場したのが20年くらい前？\nWPFやxamlがひっそりと流行らなかったりしつつ、とにもかくにも「業務アプリはおしゃれである必要はない」という謎の常識があったように思う。\nそんな時代の画面定義と言えば、Excel方眼紙に罫線で描いたUI≒完成品のUIであったので、業務SEはデザインなど意識することなく三種の神器（ワード、Excel、パワポ）さえ使えてればよかった。\n\n時は流れて2020年。\n\nスマホが普及しTikTok, Instagram を始めとするモバイルアプリや、AmazonやNetflixの様なWebサービスなども登場し、一般の人々が**優れたUIのサービス**を利用することが当たり前となった。\nこれにより、業務アプリもWebサービスとして提供される事が多くなり、BtoCとBtoBの境目が曖昧になり**業務アプリが使いづらい**ことに疑問を持つ人々が現れてしまった。（たぶん）\n\nよって、BtoB業務アプリを作っている企業でもそれなりのデザインの業務アプリを開発することが必要になってくるが、デザイナーを雇うのは以下の理由により難しい。\n\n* デザイン必須の案件がない/取りに行かない（にわとりたまご問題）\n* プログラマとデザイナは人種が違うので、１人だけ雇っても継続しない（めちゃくちゃいずらい）\n\nであれば、業務SEのあなたに**「もっといい感じの画面デザインをするように」**と命令される未来が来るのは想像に苦しくないと思う。\nしかし、パワポやExcelでいい感じのUI/UXデザインをするのは、**2030年にガソリン車販売が廃止になるのに、超ハイスペックなガソリン車を頑張って金型から作るようなこと**だと思う。\n今するべきは電気自動車を作ることではないだろうか。すなわち今までのやり方を捨ててでも、新しく効率がよく、世界から受け入れられる方法を採択することではないだろうか。\n\n## Figma の紹介プレゼン資料をつくってみた\n\n前置きが長くなりましたが、ようやくFigma触りました。\nbootstrap のUI Kit を使って画面デザインをしたところ、Excel方眼紙の1/2ぐらいの工数で作れる様な感触がありました。\n似たような設定画面が大量にある場合はもっと工数が減ると思います。\n\nプレゼン資料も作れないかと調べたら、プレゼンテーション用のテンプレがあったので作ってみました。\n\n![01_タイトル.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/80c2b87c-9506-0050-2698-eb0870451ee9.png)\n![02_背景.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/270732dc-22ec-b170-361b-a106f001809f.png)\n![03_Why Figma.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a3f9b903-8c60-704a-3ecb-3dc8af4ea46b.png)\n![04_How to start.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/deedb02b-2775-855a-f21e-251d2d58c842.png)\n![05_Get templates.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/769304e2-3bbe-ae4b-a704-6d05ee8bc9b2.png)\n![06_Figmation.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c3a8ae4f-0031-4c45-cd66-923ad742e392.png)\n![07_ショートカットキー.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/190f3ec9-117c-bd5c-a2ed-ed5b73c16f14.png)\n\n## おわりに\n\n雑にfigmaでプレゼン資料を作りましたが、パワポより垢抜けた資料が簡単に作れたと思います。\nAutolayout, constraints あたりで苦しむ可能性はありますが、慣れれば生産性が大きく向上すると思います。\nもはや**DXによる働き方改革**と言ってもいいのではないでしょうか。\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-12-05T17:36:20+09:00",
    "group": null,
    "id": "215dbabf8b72f8fd60a1",
    "likes_count": 4,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 3,
    "tags": [
      {
        "name": "UI",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "業務改善",
        "versions": []
      },
      {
        "name": "figma",
        "versions": []
      }
    ],
    "title": "業務SEなあなたにFigmaのススメ",
    "updated_at": "2020-12-05T17:36:20+09:00",
    "url": "https://qiita.com/kaku3/items/215dbabf8b72f8fd60a1",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 3503,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>先週、QiitaにAsanaすごい便利という記事を書きました。<br>\n<a href=\"https://qiita.com/kaku3/items/99db85f64fbe1296d9fe\" id=\"reference-4dded5a5aadcbf1f14a6\">【Asana】ペアチケッティングしたらものすごい効果があった話</a></p>\n\n<p>が、その後 ClickUp というプロジェクト管理ツールがあるのを知りまして少し試したところ、Asanaで不満に思っていた点がおよそ解消されていた上に地味に快適だったので、<del>ClickUp では残念ながらリアルタイムで全ユーザーがチケットの更新確認はできませんが、</del>乗り換えることにしました。<br>\n(2020/11/30追記 : リアルタイム更新確認できました。ペアチケッティングし放題です)</p>\n\n<p>一週間使ってみて、日々の基本的な管理工数が大幅に下がった様に思えたので、今週は ClickUp の記事を書きたいと思います。</p>\n\n<p><a href=\"https://clickup.com/onboarding\" rel=\"nofollow noopener\" target=\"_blank\">ClickUp</a></p>\n\n<h2>\n<span id=\"asana無料-で不満だったけど-clickup無料-で解決している点\" class=\"fragment\"></span><a href=\"#asana%E7%84%A1%E6%96%99-%E3%81%A7%E4%B8%8D%E6%BA%80%E3%81%A0%E3%81%A3%E3%81%9F%E3%81%91%E3%81%A9-clickup%E7%84%A1%E6%96%99-%E3%81%A7%E8%A7%A3%E6%B1%BA%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E7%82%B9\"><i class=\"fa fa-link\"></i></a>Asana(無料) で不満だったけど ClickUp(無料) で解決している点</h2>\n\n<ul>\n<li>\n<del>Gantt が無料</del>(2021/05/08追記 : Gantt は100回使うと有料になってました)</li>\n<li>List の概念が快適</li>\n<li>Workspace / Folder / List 単位で閲覧制限ができる</li>\n<li>ステータスの概念がある</li>\n<li>プロジェクトを横断してチケットを見れる</li>\n</ul>\n\n<p>ClickUpはたまにバグっぽい挙動も見られたりしましたが、操作感はAsanaとほぼ同じでした。<br>\nただ、全体的な機能としては向上している印象でした。</p>\n\n<p>また、Workloadとpdf出力等が有料という絶妙な設定で、主に<strong>DXしない</strong>偉い人向けの機能が有料になっている印象でした。現場は回るけど報告がめんどくさいなんとかしたいってなるとお金がかかる感じでした。</p>\n\n<h2>\n<span id=\"gantt-が無料--プロジェクトを横断してチケットを見れる\" class=\"fragment\"></span><a href=\"#gantt-%E3%81%8C%E7%84%A1%E6%96%99--%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E6%A8%AA%E6%96%AD%E3%81%97%E3%81%A6%E3%83%81%E3%82%B1%E3%83%83%E3%83%88%E3%82%92%E8%A6%8B%E3%82%8C%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Gantt が無料 / プロジェクトを横断してチケットを見れる</h2>\n\n<p>Asanaでは、instagantt 連携でガントチャートを見ることもできました。(3プロジェクトまで無料)<br>\nただし、Sectionの処理がうまく表現できていないのかカンバンのプロジェクトをガントチャート表示すると進行に合わせてグダグダになってしまってい実用的とは言えない状態でした。</p>\n\n<p>ClickUpではステータスでカンバンを実現しており、ガントチャート表示に影響せず実用レベルに思えました。</p>\n\n<p>また、Workspace や Folder 等の選択範囲以下のガントチャートやカレンダーが見られる仕様が、プロジェクト掛け持ち勢にとっては最高に便利でした。<br>\nプロジェクト単位でFolderを作成しておけば、Workspaceを選択した際に、プロジェクトを横断したガントチャートやカレンダーが確認できます。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/6d0a0b791f9f310fd1a053bf957bd22b330743b8/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f62326538383465632d653339642d336337632d663965342d3061323730633139376535632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb2e884ec-e39d-3c7c-f9e4-0a270c197e5c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=4debbc048e8bd7bfc44d6a703b7528cf\" alt=\"00_gantt.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b2e884ec-e39d-3c7c-f9e4-0a270c197e5c.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb2e884ec-e39d-3c7c-f9e4-0a270c197e5c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=9d010b21d996dcfae7d792d53fc504dc 1x\" loading=\"lazy\"></a></p>\n\n<p><a href=\"https://camo.qiitausercontent.com/9d0b41b5afee65b520a6a0ed37753ceeb78c479b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f34643662623261652d643662312d666237362d373439642d3463336434363861353565662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F4d6bb2ae-d6b1-fb76-749d-4c3d468a55ef.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=01383a14c5436c77dfe7b4e34855f134\" alt=\"00_calendar.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/4d6bb2ae-d6b1-fb76-749d-4c3d468a55ef.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F4d6bb2ae-d6b1-fb76-749d-4c3d468a55ef.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b9c20e3147c569aeabf90f28410855c8 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"list-の概念が快適\" class=\"fragment\"></span><a href=\"#list-%E3%81%AE%E6%A6%82%E5%BF%B5%E3%81%8C%E5%BF%AB%E9%81%A9\"><i class=\"fa fa-link\"></i></a>List の概念が快適</h2>\n\n<p>個人的には、調査チケットが解決済みになってからしばらくして「あの調査内容なんだっけ？」となった時にチケットを発掘できなくて困る経験がよくありました。<br>\n調査が完了したチケットは調査Listに移動してClosedにし、調査Listのみ「Closed のチケットも表示」とするとこの問題が解決されて快適でした。<br>\nまた、QAなど回答がもらえる時期が不明瞭なもの、保留、見積、など一回スコープ外に消えてから時間をおいて再度問い合わせが来るタスクも別Listに入れるのが快適そうです。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/888ec51802d6084c1b8ff02ba99cbb98bf4e6f1d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f35663461376635622d373765342d353561382d623834372d3835323132653261366331392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F5f4a7f5b-77e4-55a8-b847-85212e2a6c19.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=baaf86e85c49e7495578bb8677da871e\" alt=\"02_list.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/5f4a7f5b-77e4-55a8-b847-85212e2a6c19.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F5f4a7f5b-77e4-55a8-b847-85212e2a6c19.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=32aebaedf9f455edaa3381383c7213cc 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"workspace--folder--list-単位で閲覧制限ができる\" class=\"fragment\"></span><a href=\"#workspace--folder--list-%E5%8D%98%E4%BD%8D%E3%81%A7%E9%96%B2%E8%A6%A7%E5%88%B6%E9%99%90%E3%81%8C%E3%81%A7%E3%81%8D%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Workspace / Folder / List 単位で閲覧制限ができる</h2>\n\n<p>共有をする際に、Folder やListを共有すればそれ以外のFolderやListは表示されず安全に共有できます。<br>\nAsanaではこれができなかったため、社外のユーザーと気軽に共有ができませんでした。</p>\n\n<h2>\n<span id=\"ステータスの概念がある\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%BF%E3%82%B9%E3%81%AE%E6%A6%82%E5%BF%B5%E3%81%8C%E3%81%82%E3%82%8B\"><i class=\"fa fa-link\"></i></a>ステータスの概念がある</h2>\n\n<p>Redmine に慣れ親しんだユーザーであれば移行しやすいと思いますし、実際便利でした。<br>\nステータスの種類は、Normal, Kanban, Scram 等から選択可。Customで自分で設定も可能です。</p>\n\n<p>変にいじらない方が自動で標準化されて良さそうに思います。</p>\n\n<p>※スクリーンショットは Scrum のもの</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/47ecc6087de3b3b5d7a69580fee964edce3b8628/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38633337653636642d663837662d303738362d333132322d3939613736613736666662642e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8c37e66d-f87f-0786-3122-99a76a76ffbd.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=fdad663629803df21f2da8dcf8ad57b4\" alt=\"01_status.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8c37e66d-f87f-0786-3122-99a76a76ffbd.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8c37e66d-f87f-0786-3122-99a76a76ffbd.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=8fd59482f12003895f73710bfcf7ea0c 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>本文では紹介しませんでしたが、Asana他からのチケットインポート機能も充実しており、移行は一瞬でした。<br>\n他にもTimeTrackingや、チケットとbitbucket のコミット連携など、細かく行き届いた機能も盛りだくさんです。</p>\n\n<p>Redmineで消耗しているけどJiraにお金が払えない、Bitbucketの課題管理は重いしイマイチだった、trello も使ってみたけどカンバンが意識高すぎて長続きしなかった、ToDoとか細かくアプリ使ってるけど全部まとめたい、などなどありましたら、ぜひ試してみて頂きたいです。</p>\n\n<p><a href=\"https://clickup.com/onboarding\" rel=\"nofollow noopener\" target=\"_blank\">ClickUp</a></p>\n",
    "body": "## はじめに\n先週、QiitaにAsanaすごい便利という記事を書きました。\n[【Asana】ペアチケッティングしたらものすごい効果があった話](https://qiita.com/kaku3/items/99db85f64fbe1296d9fe)\n\nが、その後 ClickUp というプロジェクト管理ツールがあるのを知りまして少し試したところ、Asanaで不満に思っていた点がおよそ解消されていた上に地味に快適だったので、~~ClickUp では残念ながらリアルタイムで全ユーザーがチケットの更新確認はできませんが、~~乗り換えることにしました。\n(2020/11/30追記 : リアルタイム更新確認できました。ペアチケッティングし放題です)\n\n一週間使ってみて、日々の基本的な管理工数が大幅に下がった様に思えたので、今週は ClickUp の記事を書きたいと思います。\n\n[ClickUp](https://clickup.com/onboarding)\n\n\n## Asana(無料) で不満だったけど ClickUp(無料) で解決している点\n\n- ~~Gantt が無料~~(2021/05/08追記 : Gantt は100回使うと有料になってました)\n- List の概念が快適\n- Workspace / Folder / List 単位で閲覧制限ができる\n- ステータスの概念がある\n- プロジェクトを横断してチケットを見れる\n\nClickUpはたまにバグっぽい挙動も見られたりしましたが、操作感はAsanaとほぼ同じでした。\nただ、全体的な機能としては向上している印象でした。\n\nまた、Workloadとpdf出力等が有料という絶妙な設定で、主に**DXしない**偉い人向けの機能が有料になっている印象でした。現場は回るけど報告がめんどくさいなんとかしたいってなるとお金がかかる感じでした。\n\n\n## Gantt が無料 / プロジェクトを横断してチケットを見れる\n\nAsanaでは、instagantt 連携でガントチャートを見ることもできました。(3プロジェクトまで無料)\nただし、Sectionの処理がうまく表現できていないのかカンバンのプロジェクトをガントチャート表示すると進行に合わせてグダグダになってしまってい実用的とは言えない状態でした。\n\nClickUpではステータスでカンバンを実現しており、ガントチャート表示に影響せず実用レベルに思えました。\n\nまた、Workspace や Folder 等の選択範囲以下のガントチャートやカレンダーが見られる仕様が、プロジェクト掛け持ち勢にとっては最高に便利でした。\nプロジェクト単位でFolderを作成しておけば、Workspaceを選択した際に、プロジェクトを横断したガントチャートやカレンダーが確認できます。\n\n![00_gantt.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b2e884ec-e39d-3c7c-f9e4-0a270c197e5c.png)\n\n![00_calendar.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/4d6bb2ae-d6b1-fb76-749d-4c3d468a55ef.png)\n\n\n## List の概念が快適\n\n個人的には、調査チケットが解決済みになってからしばらくして「あの調査内容なんだっけ？」となった時にチケットを発掘できなくて困る経験がよくありました。\n調査が完了したチケットは調査Listに移動してClosedにし、調査Listのみ「Closed のチケットも表示」とするとこの問題が解決されて快適でした。\nまた、QAなど回答がもらえる時期が不明瞭なもの、保留、見積、など一回スコープ外に消えてから時間をおいて再度問い合わせが来るタスクも別Listに入れるのが快適そうです。\n\n![02_list.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/5f4a7f5b-77e4-55a8-b847-85212e2a6c19.png)\n\n\n## Workspace / Folder / List 単位で閲覧制限ができる\n\n共有をする際に、Folder やListを共有すればそれ以外のFolderやListは表示されず安全に共有できます。\nAsanaではこれができなかったため、社外のユーザーと気軽に共有ができませんでした。\n\n\n## ステータスの概念がある\n\nRedmine に慣れ親しんだユーザーであれば移行しやすいと思いますし、実際便利でした。\nステータスの種類は、Normal, Kanban, Scram 等から選択可。Customで自分で設定も可能です。\n\n変にいじらない方が自動で標準化されて良さそうに思います。\n\n※スクリーンショットは Scrum のもの\n\n![01_status.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8c37e66d-f87f-0786-3122-99a76a76ffbd.png)\n\n\n## おわりに\n\n本文では紹介しませんでしたが、Asana他からのチケットインポート機能も充実しており、移行は一瞬でした。\n他にもTimeTrackingや、チケットとbitbucket のコミット連携など、細かく行き届いた機能も盛りだくさんです。\n\nRedmineで消耗しているけどJiraにお金が払えない、Bitbucketの課題管理は重いしイマイチだった、trello も使ってみたけどカンバンが意識高すぎて長続きしなかった、ToDoとか細かくアプリ使ってるけど全部まとめたい、などなどありましたら、ぜひ試してみて頂きたいです。\n\n[ClickUp](https://clickup.com/onboarding)\n",
    "coediting": false,
    "comments_count": 1,
    "created_at": "2020-11-28T16:39:40+09:00",
    "group": null,
    "id": "1a846d04ffbc5fbbace1",
    "likes_count": 9,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 3,
    "tags": [
      {
        "name": "プロジェクト管理",
        "versions": []
      },
      {
        "name": "asana",
        "versions": []
      },
      {
        "name": "ClickUp",
        "versions": []
      }
    ],
    "title": "【無料プロジェクト管理ツール】ClickUpが最高過ぎて、Asanaの記事を書いたばかりだけど一瞬で乗り換えた話",
    "updated_at": "2021-05-08T13:04:15+09:00",
    "url": "https://qiita.com/kaku3/items/1a846d04ffbc5fbbace1",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 5936,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"普通は相手に伝わらない\" class=\"fragment\"></span><a href=\"#%E6%99%AE%E9%80%9A%E3%81%AF%E7%9B%B8%E6%89%8B%E3%81%AB%E4%BC%9D%E3%82%8F%E3%82%89%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>普通は相手に伝わらない</h2>\n\n<p>起票されたチケットが分かりにくい、という問題はありませんか？</p>\n\n<p>(よくある問題)<br>\n* タイトルが分かりにくい<br>\n* 本文が分かりにくい<br>\n* 何を言いたいか分からない</p>\n\n<p>学校教育を振り返ってみると <strong>「相手に伝える文章」</strong> を書く機会というのはほとんどなく、伝える機会があったとしても、日本語が伝わっていない事を指摘するのは空気が悪くなる気がするのか <strong>「的確な指摘をする」</strong> 機会もほとんどなかった様に思えます。</p>\n\n<p>つまりは、何らかのカイゼン活動を行わなければ、以下の様な状態になるのは <strong>『普通』</strong> です。</p>\n\n<p><strong>『レビューイの文章も分からないけれど、レビュアーの指摘も分からない』</strong></p>\n\n<ul>\n<li>レビューイは『相手に伝える文章の書き方』を知らない</li>\n<li>レビュアーは『的確に指摘をする方法』を知らない</li>\n</ul>\n\n<h2>\n<span id=\"意味のないレビュー\" class=\"fragment\"></span><a href=\"#%E6%84%8F%E5%91%B3%E3%81%AE%E3%81%AA%E3%81%84%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC\"><i class=\"fa fa-link\"></i></a>意味のないレビュー</h2>\n\n<p><strong>「意味が分からないクソな文章だ、俺ならこう書く」</strong></p>\n\n<p>あれこれとポイントを伝えようと試みたが、相手が腹落ちしない顔をしていて一向に修正される気配がないため、罵詈雑言を並べた挙げ句、レビュー時間の残り時間を鑑みて自分で <strong>「原型をとどめていない」</strong> サンプルを作成して提示すると、以下の状態になります。</p>\n\n<ul>\n<li>レビューイの経験値は貯まらない</li>\n<li>レビュアーのストレスは溜まる</li>\n</ul>\n\n<p>このレビューは全く効果も意味もありません。</p>\n\n<h2>\n<span id=\"原型をとどめていない理由\" class=\"fragment\"></span><a href=\"#%E5%8E%9F%E5%9E%8B%E3%82%92%E3%81%A8%E3%81%A9%E3%82%81%E3%81%A6%E3%81%84%E3%81%AA%E3%81%84%E7%90%86%E7%94%B1\"><i class=\"fa fa-link\"></i></a>「原型をとどめていない」理由</h2>\n\n<p><strong>「書いてあるべきこと」</strong> と <strong>「書かれていること」</strong> が乖離しているから。</p>\n\n<p>「読みやすい文書」の基本的な構造についてはウェブサイトや書籍で学べると思いますが、「書いてあるべきこと」を理解できるようになるための書籍というのはなかなか存在していない様に思えています。</p>\n\n<p>(参考サイト / 書籍)<br>\n* <a href=\"https://www.hyuki.com/wl/\" rel=\"nofollow noopener\" target=\"_blank\">文章教室――読みやすい文章を書くために――</a><br>\n* <a href=\"https://www.amazon.co.jp/%E4%B8%80%E7%95%AA%E4%BC%9D%E3%82%8F%E3%82%8B%E8%AA%AC%E6%98%8E%E3%81%AE%E9%A0%86%E7%95%AA-%E7%94%B0%E4%B8%AD%E8%80%95%E6%AF%94%E5%8F%A4/dp/4894519836\" rel=\"nofollow noopener\" target=\"_blank\">一番伝わる説明の順番</a></p>\n\n<h2>\n<span id=\"伝わる文書の本質\" class=\"fragment\"></span><a href=\"#%E4%BC%9D%E3%82%8F%E3%82%8B%E6%96%87%E6%9B%B8%E3%81%AE%E6%9C%AC%E8%B3%AA\"><i class=\"fa fa-link\"></i></a>「伝わる文書」の本質</h2>\n\n<p>「書いてあるべきこと」を理解できる書籍が存在しないのは、文書のフォーマットや順番に比べて一般化して伝えるのが遥かに難しいことだからではないかと想像しています。</p>\n\n<p>「報告書」のフォーマットは一般化できるけれども、<strong>報告する相手によって「書いてあるべきこと」は異なっています</strong>。同じ進捗報告でも、経営層に報告するのか、プロジェクトのメンバーに報告するのかで、内容は全く異なります。</p>\n\n<p>わたしは、この差異は、形（フォーマット）を覚えるのではなく、提出する相手を理解することで埋められるのではないかと思っています。経営したことなどないので経営層を真に理解することなどはできませんが、「報告書」という限られた接点においては、経営層が必要なものを推理することも可能だと思います。</p>\n\n<p>伝わる文書の本質は <strong>「伝える相手が理解できること」</strong> で、そのような文書を書くためには <strong>「伝える相手を理解すること」</strong> だと思います。</p>\n\n<h2>\n<span id=\"思考の流れを伝える--観察する\" class=\"fragment\"></span><a href=\"#%E6%80%9D%E8%80%83%E3%81%AE%E6%B5%81%E3%82%8C%E3%82%92%E4%BC%9D%E3%81%88%E3%82%8B--%E8%A6%B3%E5%AF%9F%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>思考の流れを伝える / 観察する</h2>\n\n<p>前述の通り、<strong>「的確な指摘ができない」</strong> 上に <strong>「原型をとどめていない」</strong> レビュー結果を返すのは不毛です。なぜか伝わった気になって次回直ってないとガッカリするのも不毛です。</p>\n\n<p>ということで、ここまできてようやくタイトル回収になります。</p>\n\n<p><a href=\"https://asana.com/ja\" rel=\"nofollow noopener\" target=\"_blank\">Asana</a></p>\n\n<p>Asanaのチケットはリアルタイムに更新され、全員が更新されているのを同時に確認できます。これを利用して以下の様なスタイルでレビューを行うことで思考を伝えることができるのではないかと考え実施しました。</p>\n\n<ol>\n<li>レビュアーはレビューイに「チケット修正を行うから観察する様に」指示します</li>\n<li>レビュアーは見られていることを意識して、なるべく最適な手順でチケットを修正します</li>\n<li>レビューイはレビュアーに観察して感じたことを伝えます</li>\n</ol>\n\n<p>レビューイは「何を」「どの順番で」直しているのか、つまりはレビュアーの思考の流れを確認できます。<br>\nおそらく、タイトルの見やすさ、読む人が知りたいこと、文章の構成等々、様々なノウハウが入り混じった、<strong>指摘では伝えきれない量の情報</strong> がそこには含まれていると思います。<br>\nレビューイより観察して感じたことを言語化して伝えさせることで、レビュアーは『レビューイの理解』を理解でき、より適切な指摘ができる可能性が高まります。</p>\n\n<p>また、レビューイの観察行為は、伝える相手を理解しようとする行為そのものであり、<strong>「相手を理解する」という難しい概念を理解したり体験したり</strong>するのに役立つと思います。</p>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>テレワークになってコミュニケーションが難しいと言われますが、VS Code の Live Share など、隣に座ってペアプロするより効率がよいツールもあるのかなと思っています。</p>\n\n<p>Asanaとチケットは一例であり、Googleスプレッドシートの仕様書やGoogleスライドのプレゼンテーション資料などでも同じことができると思います。<br>\n※タイトルで【Asana】を強調しているのは、Asana推し（笑）であったり、身近な細かいテーマで実践ができる可能性が高いと思ったからです。</p>\n\n<p>大事なのはお互いがお互いを理解して共に成長していくことだと思います。<br>\n<strong>コミュニケーションの質</strong>を高めて快適なテレワークライフをエンジョイできればと思います。</p>\n",
    "body": "## 普通は相手に伝わらない\n起票されたチケットが分かりにくい、という問題はありませんか？\n\n(よくある問題)\n* タイトルが分かりにくい\n* 本文が分かりにくい\n* 何を言いたいか分からない\n\n学校教育を振り返ってみると **「相手に伝える文章」** を書く機会というのはほとんどなく、伝える機会があったとしても、日本語が伝わっていない事を指摘するのは空気が悪くなる気がするのか **「的確な指摘をする」** 機会もほとんどなかった様に思えます。\n\nつまりは、何らかのカイゼン活動を行わなければ、以下の様な状態になるのは **『普通』** です。\n\n**『レビューイの文章も分からないけれど、レビュアーの指摘も分からない』**\n\n* レビューイは『相手に伝える文章の書き方』を知らない\n* レビュアーは『的確に指摘をする方法』を知らない\n\n\n## 意味のないレビュー\n\n**「意味が分からないクソな文章だ、俺ならこう書く」**\n\nあれこれとポイントを伝えようと試みたが、相手が腹落ちしない顔をしていて一向に修正される気配がないため、罵詈雑言を並べた挙げ句、レビュー時間の残り時間を鑑みて自分で **「原型をとどめていない」** サンプルを作成して提示すると、以下の状態になります。\n\n* レビューイの経験値は貯まらない\n* レビュアーのストレスは溜まる\n\nこのレビューは全く効果も意味もありません。\n\n\n## 「原型をとどめていない」理由\n\n**「書いてあるべきこと」** と **「書かれていること」** が乖離しているから。\n\n「読みやすい文書」の基本的な構造についてはウェブサイトや書籍で学べると思いますが、「書いてあるべきこと」を理解できるようになるための書籍というのはなかなか存在していない様に思えています。\n\n(参考サイト / 書籍)\n* [文章教室――読みやすい文章を書くために――](https://www.hyuki.com/wl/)\n* [一番伝わる説明の順番](https://www.amazon.co.jp/%E4%B8%80%E7%95%AA%E4%BC%9D%E3%82%8F%E3%82%8B%E8%AA%AC%E6%98%8E%E3%81%AE%E9%A0%86%E7%95%AA-%E7%94%B0%E4%B8%AD%E8%80%95%E6%AF%94%E5%8F%A4/dp/4894519836)\n\n## 「伝わる文書」の本質\n\n「書いてあるべきこと」を理解できる書籍が存在しないのは、文書のフォーマットや順番に比べて一般化して伝えるのが遥かに難しいことだからではないかと想像しています。\n\n「報告書」のフォーマットは一般化できるけれども、**報告する相手によって「書いてあるべきこと」は異なっています**。同じ進捗報告でも、経営層に報告するのか、プロジェクトのメンバーに報告するのかで、内容は全く異なります。\n\nわたしは、この差異は、形（フォーマット）を覚えるのではなく、提出する相手を理解することで埋められるのではないかと思っています。経営したことなどないので経営層を真に理解することなどはできませんが、「報告書」という限られた接点においては、経営層が必要なものを推理することも可能だと思います。\n\n伝わる文書の本質は **「伝える相手が理解できること」** で、そのような文書を書くためには **「伝える相手を理解すること」** だと思います。\n\n\n## 思考の流れを伝える / 観察する\n\n前述の通り、**「的確な指摘ができない」** 上に **「原型をとどめていない」** レビュー結果を返すのは不毛です。なぜか伝わった気になって次回直ってないとガッカリするのも不毛です。\n\nということで、ここまできてようやくタイトル回収になります。\n\n[Asana](https://asana.com/ja)\n\nAsanaのチケットはリアルタイムに更新され、全員が更新されているのを同時に確認できます。これを利用して以下の様なスタイルでレビューを行うことで思考を伝えることができるのではないかと考え実施しました。\n\n1. レビュアーはレビューイに「チケット修正を行うから観察する様に」指示します\n1. レビュアーは見られていることを意識して、なるべく最適な手順でチケットを修正します\n1. レビューイはレビュアーに観察して感じたことを伝えます\n\nレビューイは「何を」「どの順番で」直しているのか、つまりはレビュアーの思考の流れを確認できます。\nおそらく、タイトルの見やすさ、読む人が知りたいこと、文章の構成等々、様々なノウハウが入り混じった、**指摘では伝えきれない量の情報** がそこには含まれていると思います。\nレビューイより観察して感じたことを言語化して伝えさせることで、レビュアーは『レビューイの理解』を理解でき、より適切な指摘ができる可能性が高まります。\n\nまた、レビューイの観察行為は、伝える相手を理解しようとする行為そのものであり、**「相手を理解する」という難しい概念を理解したり体験したり**するのに役立つと思います。\n\n\n## おわりに\n\nテレワークになってコミュニケーションが難しいと言われますが、VS Code の Live Share など、隣に座ってペアプロするより効率がよいツールもあるのかなと思っています。\n\nAsanaとチケットは一例であり、Googleスプレッドシートの仕様書やGoogleスライドのプレゼンテーション資料などでも同じことができると思います。\n※タイトルで【Asana】を強調しているのは、Asana推し（笑）であったり、身近な細かいテーマで実践ができる可能性が高いと思ったからです。\n\n大事なのはお互いがお互いを理解して共に成長していくことだと思います。\n**コミュニケーションの質**を高めて快適なテレワークライフをエンジョイできればと思います。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-11-21T15:48:17+09:00",
    "group": null,
    "id": "99db85f64fbe1296d9fe",
    "likes_count": 3,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "レビュー",
        "versions": []
      },
      {
        "name": "ペアプロ",
        "versions": []
      },
      {
        "name": "asana",
        "versions": []
      }
    ],
    "title": "【Asana】ペアチケッティングしたらものすごい効果があった話",
    "updated_at": "2020-11-21T15:48:17+09:00",
    "url": "https://qiita.com/kaku3/items/99db85f64fbe1296d9fe",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1316,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"react--vuejs--angular--jquery\" class=\"fragment\"></span><a href=\"#react--vuejs--angular--jquery\"><i class=\"fa fa-link\"></i></a>React / Vue.js / Angular / jQuery</h2>\n\n<p>Angularjsが出た時に、jQueryでもういいじゃん新しい言語覚えるのめんどくせーよと思いながらやってみたら、超便利で新しい言語ちゃんと覚えないとダメだなと改心したのが遠い分昔。</p>\n\n<p>その後、Angularの頻繁なバージョンアップに嫌気がさしVue.jsを使ってみたら、Angularより随分整理されてて簡単でびっくりしたのが少し昔。<br>\nVuetify とセットで利用するとほとんどコードを書かずにやりたいことができるし、typescript を使うと記述もシンプルで安全だし、もうこれで新しい言語覚えなくてもいいかと油断したのが少し前。</p>\n\n<p>とは言え、Reactも触っておいた方がいいかなと触ったら、他のフレームワークとは<strong>概念が違い</strong>戸惑ったけれども<strong>超簡単</strong>でびっくりしたのが今日。</p>\n\n<p>触ってみたいけど難しそうだなと思ってる方は是非触ってみてください。</p>\n\n<h1>\n<span id=\"特に便利と思ったところ\" class=\"fragment\"></span><a href=\"#%E7%89%B9%E3%81%AB%E4%BE%BF%E5%88%A9%E3%81%A8%E6%80%9D%E3%81%A3%E3%81%9F%E3%81%A8%E3%81%93%E3%82%8D\"><i class=\"fa fa-link\"></i></a>特に便利と思ったところ</h1>\n\n<h2>\n<span id=\"jsxtsx\" class=\"fragment\"></span><a href=\"#jsxtsx\"><i class=\"fa fa-link\"></i></a>jsx/tsx</h2>\n\n<p>js/ts に html を直接埋められる。</p>\n\n<p>以下のコードは等価。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">createElement.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">const</span> <span class=\"nx\">header</span> <span class=\"o\">=</span> <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">createElement</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">header</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n  <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">createElement</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">h1</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">Hello</span><span class=\"dl\">\"</span><span class=\"p\">)</span>\n<span class=\"p\">);</span>\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"jsx\">\n<div class=\"code-lang\"><span class=\"bold\">createElement.jsx</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">const</span> <span class=\"nx\">header</span> <span class=\"o\">=</span> <span class=\"p\">&lt;</span><span class=\"nt\">header</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>Hello<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">header</span><span class=\"p\">&gt;</span>\n</code></pre></div>\n</div>\n\n<p><code>React.createElement</code>の様な書き方しかできないなら<code>Vue.js</code>圧勝かなと思ったけれども、そんなことはなかった。Flutterもこの辺融通効くようにならないかな…。</p>\n\n<p>ベタのhtmlに近い形で記述できるVue.jsの方がデザイナとの協業に強いと思っていたのだけど、<a href=\"https://storybook.js.org/\" rel=\"nofollow noopener\" target=\"_blank\">Storybook</a>を併用して開発すれば問題ないようにも思えた。</p>\n\n<h2>\n<span id=\"function-component\" class=\"fragment\"></span><a href=\"#function-component\"><i class=\"fa fa-link\"></i></a>Function Component</h2>\n\n<p>状態を持たないコンポーネントは class ではなく、function で定義できる。<br>\nFlutter の、StatefulWidget / StatelessWidget をすごくシンプルにした感じ。</p>\n\n<p>以下のコードは等価。</p>\n\n<div class=\"code-frame\" data-lang=\"jsx\">\n<div class=\"code-lang\"><span class=\"bold\">class-component.jsx</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">class</span> <span class=\"nx\">Square</span> <span class=\"kd\">extends</span> <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">Component</span> <span class=\"p\">{</span>\n  <span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">button</span>\n        <span class=\"na\">className</span><span class=\"p\">=</span><span class=\"s\">\"square\"</span>\n        <span class=\"na\">onClick</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">onClick</span><span class=\"p\">()</span><span class=\"si\">}</span>\n      <span class=\"p\">&gt;</span>\n        <span class=\"si\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"si\">}</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">button</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"jsx\">\n<div class=\"code-lang\"><span class=\"bold\">function-component.jsx</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">function</span> <span class=\"nx\">Square</span><span class=\"p\">(</span><span class=\"nx\">props</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">button</span> <span class=\"na\">className</span><span class=\"p\">=</span><span class=\"s\">\"square\"</span> <span class=\"na\">onClick</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">onClick</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n      <span class=\"si\">{</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"si\">}</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">button</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<p>記述がシンプルなだけでなく、このコンポーネントは状態を持たないことが読み手に一瞬で伝わるのが素晴らしいと思った。</p>\n\n<h2>\n<span id=\"チュートリアル\" class=\"fragment\"></span><a href=\"#%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB\"><i class=\"fa fa-link\"></i></a>チュートリアル</h2>\n\n<p>React公式のチュートリアルが、ステップバイステップでサンプルコードを修正していくものとなっており、Reactの素晴らしさを簡単に理解できる作りとなっていた。</p>\n\n<p><a href=\"https://ja.reactjs.org/tutorial/tutorial.html\" rel=\"nofollow noopener\" target=\"_blank\">チュートリアル：React の導入</a></p>\n\n<h3>\n<span id=\"準備\" class=\"fragment\"></span><a href=\"#%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>準備</h3>\n\n<p>チュートリアルのソースコードは code pen にあるため、ローカルの開発環境作成は必須ではない。<br>\nローカルの開発環境を作成する場合、node と create-react-app のインストールを行う。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>choco install nodist\nnodist + 10.23.0\nnodist 10.23.0\nnpm i -g create-react-app\n</code></pre></div></div>\n\n<p>2020/11/14時点では、node 8, 10, 12 で動作すると記載があったが、8.17.0, 12.19.0 では動作しなかった。</p>\n\n<h3>\n<span id=\"プロジェクト作成と実行\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E4%BD%9C%E6%88%90%E3%81%A8%E5%AE%9F%E8%A1%8C\"><i class=\"fa fa-link\"></i></a>プロジェクト作成と実行</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code># js版作成\nnpx create-react-app my-app\n# ts版作成\nnpx create-react-app my-app --typescript\n# 実行\nyarn start\n</code></pre></div></div>\n\n<p>以後は、src以下のファイルを全部消して、チュートリアルの指示通りファイルを作成し、一つずつ修正をしていけば完了します。</p>\n\n<p>コンポーネント単位でファイルを分けるなども簡単にできました。</p>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>とにかく<strong>超簡単</strong>でした。<br>\nvue-cli もそうであるが、webpack.config を手で書かなくて良くなったので誰でも気軽に始められるのでぜひお試しください。</p>\n\n<p>以下の記事もあわせて読んでおくとよいと思います。</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\" rel=\"nofollow noopener\" target=\"_blank\">MDN web docs : Reactをはじめる</a></li>\n<li><a href=\"https://qiita.com/seya/items/8814e905693f00cdade2\" id=\"reference-951dd2daa39f8586eb9c\">フロントエンドのコンポーネント設計に立ち向かう</a></li>\n<li><a href=\"https://qiita.com/teradonburi/items/6828635d2e70dba6637d\" id=\"reference-b873af1d29a87566616c\">綺麗なReactコンポーネント設計でモノリシックなコンポーネントを爆殺する</a></li>\n</ul>\n",
    "body": "## React / Vue.js / Angular / jQuery\nAngularjsが出た時に、jQueryでもういいじゃん新しい言語覚えるのめんどくせーよと思いながらやってみたら、超便利で新しい言語ちゃんと覚えないとダメだなと改心したのが遠い分昔。\n\nその後、Angularの頻繁なバージョンアップに嫌気がさしVue.jsを使ってみたら、Angularより随分整理されてて簡単でびっくりしたのが少し昔。\nVuetify とセットで利用するとほとんどコードを書かずにやりたいことができるし、typescript を使うと記述もシンプルで安全だし、もうこれで新しい言語覚えなくてもいいかと油断したのが少し前。\n\nとは言え、Reactも触っておいた方がいいかなと触ったら、他のフレームワークとは**概念が違い**戸惑ったけれども**超簡単**でびっくりしたのが今日。\n\n触ってみたいけど難しそうだなと思ってる方は是非触ってみてください。\n\n\n# 特に便利と思ったところ\n\n## jsx/tsx\n\njs/ts に html を直接埋められる。\n\n以下のコードは等価。\n\n``` createElement.js\nconst header = React.createElement(\"header\", null,\n  React.createElement(\"h1\", null, \"Hello\")\n);\n```\n``` createElement.jsx\nconst header = <header>\n    <h1>Hello</h1>\n</header>\n```\n\n`React.createElement`の様な書き方しかできないなら`Vue.js`圧勝かなと思ったけれども、そんなことはなかった。Flutterもこの辺融通効くようにならないかな…。\n\nベタのhtmlに近い形で記述できるVue.jsの方がデザイナとの協業に強いと思っていたのだけど、[Storybook](https://storybook.js.org/)を併用して開発すれば問題ないようにも思えた。\n\n\n## Function Component\n\n状態を持たないコンポーネントは class ではなく、function で定義できる。\nFlutter の、StatefulWidget / StatelessWidget をすごくシンプルにした感じ。\n\n以下のコードは等価。\n\n``` class-component.jsx\nclass Square extends React.Component {\n  render() {\n    return (\n      <button\n        className=\"square\"\n        onClick={() => this.props.onClick()}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n```\n``` function-component.jsx\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n```\n\n記述がシンプルなだけでなく、このコンポーネントは状態を持たないことが読み手に一瞬で伝わるのが素晴らしいと思った。\n\n\n## チュートリアル\n\nReact公式のチュートリアルが、ステップバイステップでサンプルコードを修正していくものとなっており、Reactの素晴らしさを簡単に理解できる作りとなっていた。\n\n[チュートリアル：React の導入](https://ja.reactjs.org/tutorial/tutorial.html)\n\n\n### 準備\n\nチュートリアルのソースコードは code pen にあるため、ローカルの開発環境作成は必須ではない。\nローカルの開発環境を作成する場合、node と create-react-app のインストールを行う。\n\n``` \nchoco install nodist\nnodist + 10.23.0\nnodist 10.23.0\nnpm i -g create-react-app\n```\n\n2020/11/14時点では、node 8, 10, 12 で動作すると記載があったが、8.17.0, 12.19.0 では動作しなかった。\n\n\n### プロジェクト作成と実行\n\n```\n# js版作成\nnpx create-react-app my-app\n# ts版作成\nnpx create-react-app my-app --typescript\n# 実行\nyarn start\n```\n\n以後は、src以下のファイルを全部消して、チュートリアルの指示通りファイルを作成し、一つずつ修正をしていけば完了します。\n\nコンポーネント単位でファイルを分けるなども簡単にできました。\n\n\n## おわりに\n\nとにかく**超簡単**でした。\nvue-cli もそうであるが、webpack.config を手で書かなくて良くなったので誰でも気軽に始められるのでぜひお試しください。\n\n以下の記事もあわせて読んでおくとよいと思います。\n\n- [MDN web docs : Reactをはじめる](https://developer.mozilla.org/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started)\n- [フロントエンドのコンポーネント設計に立ち向かう](https://qiita.com/seya/items/8814e905693f00cdade2)\n- [綺麗なReactコンポーネント設計でモノリシックなコンポーネントを爆殺する](https://qiita.com/teradonburi/items/6828635d2e70dba6637d)\n",
    "coediting": false,
    "comments_count": 2,
    "created_at": "2020-11-14T19:00:03+09:00",
    "group": null,
    "id": "c3768fc1888894d4574a",
    "likes_count": 4,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 2,
    "tags": [
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "初心者",
        "versions": []
      },
      {
        "name": "React",
        "versions": []
      }
    ],
    "title": "React やってみたら超簡単だった話(2020年11月版)",
    "updated_at": "2020-11-14T19:37:23+09:00",
    "url": "https://qiita.com/kaku3/items/c3768fc1888894d4574a",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1982,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"前回までの砂漠のひつじ\" class=\"fragment\"></span><a href=\"#%E5%89%8D%E5%9B%9E%E3%81%BE%E3%81%A7%E3%81%AE%E7%A0%82%E6%BC%A0%E3%81%AE%E3%81%B2%E3%81%A4%E3%81%98\"><i class=\"fa fa-link\"></i></a>前回までの砂漠のひつじ</h2>\n\n<p>無料プログラム学習用ピコピコゲーム<a href=\"https://kaku3.github.io/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ</a>を作成しつつ、その過程を記事にしている。<br>\n２日程前(執筆 11/7、実装 11/5深夜)にハイスコア処理実装を終えたが、誰も登録がなく悶ている最中となる。</p>\n\n<p>Firebase編記事：</p>\n\n<ul>\n<li><a href=\"https://qiita.com/kaku3/items/ce3a84424026cb46b226\" id=\"reference-ec00cdeab7082b734404\">【超簡単】Firebase で無料で作るハイスコアDB : APIキー制限設定忘れずに！！</a></li>\n<li><a href=\"https://qiita.com/kaku3/items/b104ca08eeb69f803c3b\" id=\"reference-ed17bce52e5bac9e3263\">Firebase で無料で作るハイスコアDB(2) : 課金・認証を考える</a></li>\n</ul>\n\n<h2>\n<span id=\"認証処理について\" class=\"fragment\"></span><a href=\"#%E8%AA%8D%E8%A8%BC%E5%87%A6%E7%90%86%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>認証処理について</h2>\n\n<p>前回の記事で<code>firebase.auth.AuthUI()</code>でログイン処理の挙動を確認した。<br>\n匿名ログインを使うとブラウザをリロードする度にログアウトされる挙動を取るようだった。</p>\n\n<h2>\n<span id=\"apiキー制限について\" class=\"fragment\"></span><a href=\"#api%E3%82%AD%E3%83%BC%E5%88%B6%E9%99%90%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>APIキー制限について</h2>\n\n<p>IPアドレスによる制限をかけられるが、なぜかアクセス権がないエラーが出ることがあった。<br>\n※原因不明ママ</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/0fc31748db35d45bcc4eee4a5f2f72a3a20507b8/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f30393035363764342d623833652d623664622d636231382d3964353861323335393533312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F090567d4-b83e-b6db-cb18-9d58a2359531.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=898252268b5c4a43233935ad06bb68e2\" alt=\"ip制限.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/090567d4-b83e-b6db-cb18-9d58a2359531.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F090567d4-b83e-b6db-cb18-9d58a2359531.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=13e9f26ba5a68906eec2c75b66069e19 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"db書き込みについて\" class=\"fragment\"></span><a href=\"#db%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%81%BF%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>DB書き込みについて</h2>\n\n<p>書き込み処理は以下の通り。<br>\n簡単過ぎて記事にするのが申し訳ないレベルである。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">game.js</span></div>\n<div class=\"highlight\"><pre><code>  <span class=\"kd\">var</span> <span class=\"nx\">db</span> <span class=\"o\">=</span> <span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">firestore</span><span class=\"p\">()</span>\n  <span class=\"c1\">// scores テーブルに、レコード登録。</span>\n  <span class=\"c1\">// 登録データはjson形式で指定</span>\n  <span class=\"c1\">// id は指定しなければ自動で生成される</span>\n  <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">collection</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">scores</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">add</span><span class=\"p\">({</span>\n    <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"nx\">name</span><span class=\"p\">,</span>\n    <span class=\"na\">score</span><span class=\"p\">:</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">score</span>\n  <span class=\"p\">}).</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">r</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#register-container</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">hide</span><span class=\"p\">()</span> <span class=\"c1\">// 重複登録させないよう、登録ボタンを消す。</span>\n    <span class=\"nx\">Game</span><span class=\"p\">.</span><span class=\"nx\">buildHiScores</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span>        <span class=\"c1\">// ハイスコアを再取得/再表示</span>\n  <span class=\"p\">})</span>\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>元々i-mode用のゲームをブラウザゲームとして移植してなんちゃってレスポンシブ対応を入れることでスマホでも動作するゲームとしたが、<strong>ひつじにはりついたツノを見て楽しむ</strong>ゲームだったがスマホだと<strong>指が邪魔で一切見えない</strong>という大変残念なUXとなっていたが学習用ということで最後まで作成した。</p>\n\n<p>アクセス量や読み書き量をウォッチしたいので、適当に遊んでスコア登録してもらえると幸いです。学習用ソースのためSNSログインも対応したが匿名ログイン推奨です。</p>\n\n<p>ソースコードは githubにて公開していますのでご自由にご利用ください。</p>\n\n<p><a href=\"https://github.com/kaku3/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ:ソースコード</a><br>\n<a href=\"https://kaku3.github.io/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ:ゲームページ</a></p>\n",
    "body": "## 前回までの砂漠のひつじ\n\n無料プログラム学習用ピコピコゲーム[砂漠のひつじ](https://kaku3.github.io/the-sheep-in-the-desert/)を作成しつつ、その過程を記事にしている。\n２日程前(執筆 11/7、実装 11/5深夜)にハイスコア処理実装を終えたが、誰も登録がなく悶ている最中となる。\n\nFirebase編記事：\n\n* [【超簡単】Firebase で無料で作るハイスコアDB : APIキー制限設定忘れずに！！](https://qiita.com/kaku3/items/ce3a84424026cb46b226)\n* [Firebase で無料で作るハイスコアDB(2) : 課金・認証を考える](https://qiita.com/kaku3/items/b104ca08eeb69f803c3b)\n\n## 認証処理について\n\n前回の記事で`firebase.auth.AuthUI()`でログイン処理の挙動を確認した。\n匿名ログインを使うとブラウザをリロードする度にログアウトされる挙動を取るようだった。\n\n## APIキー制限について\n\nIPアドレスによる制限をかけられるが、なぜかアクセス権がないエラーが出ることがあった。\n※原因不明ママ\n\n![ip制限.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/090567d4-b83e-b6db-cb18-9d58a2359531.png)\n\n\n## DB書き込みについて\n\n書き込み処理は以下の通り。\n簡単過ぎて記事にするのが申し訳ないレベルである。\n\n``` game.js\n  var db = firebase.firestore()\n  // scores テーブルに、レコード登録。\n  // 登録データはjson形式で指定\n  // id は指定しなければ自動で生成される\n  db.collection('scores').add({\n    name: name,\n    score: this.score\n  }).then((r) => {\n    $('#register-container').hide() // 重複登録させないよう、登録ボタンを消す。\n    Game.buildHiScores(true)        // ハイスコアを再取得/再表示\n  })\n```\n\n## おわりに\n\n元々i-mode用のゲームをブラウザゲームとして移植してなんちゃってレスポンシブ対応を入れることでスマホでも動作するゲームとしたが、**ひつじにはりついたツノを見て楽しむ**ゲームだったがスマホだと**指が邪魔で一切見えない**という大変残念なUXとなっていたが学習用ということで最後まで作成した。\n\nアクセス量や読み書き量をウォッチしたいので、適当に遊んでスコア登録してもらえると幸いです。学習用ソースのためSNSログインも対応したが匿名ログイン推奨です。\n\nソースコードは githubにて公開していますのでご自由にご利用ください。\n\n[砂漠のひつじ:ソースコード](https://github.com/kaku3/the-sheep-in-the-desert/)\n[砂漠のひつじ:ゲームページ](https://kaku3.github.io/the-sheep-in-the-desert/)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-11-07T14:00:05+09:00",
    "group": null,
    "id": "a499ae69345106bc6ffc",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "ゲーム制作",
        "versions": []
      },
      {
        "name": "Firebase",
        "versions": []
      }
    ],
    "title": "Firebase で無料で作るハイスコアDB(3) : 書き込み他",
    "updated_at": "2020-11-07T14:00:05+09:00",
    "url": "https://qiita.com/kaku3/items/a499ae69345106bc6ffc",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 856,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"前回までの砂漠のひつじ\" class=\"fragment\"></span><a href=\"#%E5%89%8D%E5%9B%9E%E3%81%BE%E3%81%A7%E3%81%AE%E7%A0%82%E6%BC%A0%E3%81%AE%E3%81%B2%E3%81%A4%E3%81%98\"><i class=\"fa fa-link\"></i></a>前回までの砂漠のひつじ</h2>\n\n<p>無料プログラム学習用ピコピコゲーム<a href=\"https://kaku3.github.io/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ</a>を作成しつつ、その過程を記事にしている。<br>\n現在はハイスコア実装編で、DBをfirebaseに選定し実装を行っている最中となる。</p>\n\n<h2>\n<span id=\"課金に関するあれこれ\" class=\"fragment\"></span><a href=\"#%E8%AA%B2%E9%87%91%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8B%E3%81%82%E3%82%8C%E3%81%93%E3%82%8C\"><i class=\"fa fa-link\"></i></a>課金に関するあれこれ</h2>\n\n<p>読み取り、書き込みで課金が発生。<br>\nSpackプランの無料枠は以下。</p>\n\n<table>\n<thead>\n<tr>\n<th>処理</th>\n<th>件数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>書き込み</td>\n<td>2万/日</td>\n</tr>\n<tr>\n<td>読み取り</td>\n<td>5万/日</td>\n</tr>\n</tbody>\n</table>\n\n<p>「回数」ではなく「件数」っぽいので注意。</p>\n\n<p>ハイスコアテーブルという性質上、上位のスコアとしての書き込みは極めて少ないハズ。<br>\nそこで、Functionsを利用して、<strong>『書き込みイベント時に上位レコードを集計して1レコードにまとめる処理』</strong>を作りたかったが、<strong>SparkプランではFunctionsが利用できなくなっていた</strong>ので断念した。<br>\n※挫折気味のサンプルコードはリポジトリに一応コミットしておいた。</p>\n\n<p>現状、20件程のダミーレコードを用いて少し開発していただけで、読み取り数が680となっていたため、まともなアクセスがあればあっという間に読み取り数5万件に到達するように思えた。</p>\n\n<p>ユーザーにはハイスコア登録を行っている事を知らせるため、ファーストビューでハイスコアの表示を行いたいが、Functions が動かせないため、1日1回ハイスコア更新などの実装にはできない。<br>\nそこで、ハイスコアは起動時にキャッシュし、ハイスコアに「自分のスコア」がエントリーしない限りは更新されなくてもさして問題ないとして、取得したハイスコアより自分のスコアが上回った時のみハイスコアを更新する仕様として、可能な限り読み取り回数を減らすこととした。</p>\n\n<h2>\n<span id=\"db書き込みについて\" class=\"fragment\"></span><a href=\"#db%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%81%BF%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>DB書き込みについて</h2>\n\n<p>オールドゲームらしく誰でも任意のニックネームでハイスコアを登録可の仕様とする予定であった。<br>\nしかし、webapp の場合、firebaseのdatabaseURLが取得可能であるため、「誰でも」登録可とした場合、外部から何らかの方法でデータ登録が可能になり<strong>課金される</strong>ことが懸念される。</p>\n\n<p>そのためDBにスコア登録可能となるのはログイン済みのユーザーとすることにした。<br>\n<code>firebase.auth.AuthUI()</code>を使うと非常に簡単にSNSログインを実装できた。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">auth.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">var</span> <span class=\"nx\">firebaseAuthUiConfig</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">autoUpgradeAnonymousUsers</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"na\">signInFlow</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">popup</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">signInOptions</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"c1\">// ログイン可能としたいproviderを列挙</span>\n    <span class=\"c1\">// Facebook, Twitter, Github はそれぞれアプリ作成が必要</span>\n    <span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">auth</span><span class=\"p\">.</span><span class=\"nx\">GoogleAuthProvider</span><span class=\"p\">.</span><span class=\"nx\">PROVIDER_ID</span><span class=\"p\">,</span>\n    <span class=\"c1\">// firebase.auth.FacebookAuthProvider.PROVIDER_ID,</span>\n    <span class=\"c1\">// firebase.auth.TwitterAuthProvider.PROVIDER_ID,</span>\n    <span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">auth</span><span class=\"p\">.</span><span class=\"nx\">GithubAuthProvider</span><span class=\"p\">.</span><span class=\"nx\">PROVIDER_ID</span><span class=\"p\">,</span>\n    <span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">auth</span><span class=\"p\">.</span><span class=\"nx\">EmailAuthProvider</span><span class=\"p\">.</span><span class=\"nx\">PROVIDER_ID</span><span class=\"p\">,</span>\n    <span class=\"c1\">// firebase.auth.PhoneAuthProvider.PROVIDER_ID,</span>\n    <span class=\"nx\">firebaseui</span><span class=\"p\">.</span><span class=\"nx\">auth</span><span class=\"p\">.</span><span class=\"nx\">AnonymousAuthProvider</span><span class=\"p\">.</span><span class=\"nx\">PROVIDER_ID</span>\n  <span class=\"p\">],</span>\n  <span class=\"na\">tosUrl</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">./terms-of-service.html</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">privacyPolicyUrl</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">./privacy-policy.html</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">callbacks</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">signInSuccessWithAuthResult</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">authResult</span><span class=\"p\">,</span> <span class=\"nx\">redirectUrl</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">signed in</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n      <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">firebaseAuthUi</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">firebaseui</span><span class=\"p\">.</span><span class=\"nx\">auth</span><span class=\"p\">.</span><span class=\"nx\">AuthUI</span><span class=\"p\">(</span><span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">auth</span><span class=\"p\">());</span>\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">game.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\">// 指定したタグに対してログインUIを作成する</span>\n<span class=\"nx\">firebaseAuthUi</span><span class=\"p\">.</span><span class=\"nx\">start</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#firebaseui-auth-container</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">firebaseAuthUiConfig</span><span class=\"p\">)</span>\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"html\">\n<div class=\"code-lang\"><span class=\"bold\">index.html</span></div>\n<div class=\"highlight\"><pre><code>// firebaseによるログインUIが作成されるタグ\n<span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"firebaseui-auth-container\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n</code></pre></div>\n</div>\n\n<p>ただ、無名のゲームでいきなり会員登録を求めるとそもそもプレイしてもらえないと思うので、結果画面でハイスコアが更新された時のみログインを求める実装とすることにした。</p>\n\n<p>※ログインUI。ログイン方法を選択するとポップアップが表示される。<br>\n<a href=\"https://camo.qiitausercontent.com/75507f7f8097ad9d6013efb3cb60c0a9ec602fdd/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64356263636138612d306337632d356630622d346530312d6235326430366234646530662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fd5bcca8a-0c7c-5f0b-4e01-b52d06b4de0f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=27b2747166dfdc1e59e09806783d8500\" alt=\"auth.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d5bcca8a-0c7c-5f0b-4e01-b52d06b4de0f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fd5bcca8a-0c7c-5f0b-4e01-b52d06b4de0f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=294f6e52721f1d82de5c44cd6cdf21de 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h2>\n\n<p>今回はハイスコア処理を完成させる予定だったが、認証処理も追加したため完了しなかった。<br>\nとは言え、firebaseはSNSログインもクソ簡単ですごかった。</p>\n\n<p>作業中のファイルは以下にコミット済：<br>\n<a href=\"https://github.com/kaku3/the-sheep-in-the-desert/tree/feature/firebase\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kaku3/the-sheep-in-the-desert/tree/feature/firebase</a></p>\n",
    "body": "## 前回までの砂漠のひつじ\n\n無料プログラム学習用ピコピコゲーム[砂漠のひつじ](https://kaku3.github.io/the-sheep-in-the-desert/)を作成しつつ、その過程を記事にしている。\n現在はハイスコア実装編で、DBをfirebaseに選定し実装を行っている最中となる。\n\n## 課金に関するあれこれ\n\n読み取り、書き込みで課金が発生。\nSpackプランの無料枠は以下。\n\n|処理   |件数   |\n|---|---|\n|書き込み   |2万/日   |\n|読み取り   |5万/日   |\n\n「回数」ではなく「件数」っぽいので注意。\n\nハイスコアテーブルという性質上、上位のスコアとしての書き込みは極めて少ないハズ。\nそこで、Functionsを利用して、**『書き込みイベント時に上位レコードを集計して1レコードにまとめる処理』**を作りたかったが、**SparkプランではFunctionsが利用できなくなっていた**ので断念した。\n※挫折気味のサンプルコードはリポジトリに一応コミットしておいた。\n\n現状、20件程のダミーレコードを用いて少し開発していただけで、読み取り数が680となっていたため、まともなアクセスがあればあっという間に読み取り数5万件に到達するように思えた。\n\nユーザーにはハイスコア登録を行っている事を知らせるため、ファーストビューでハイスコアの表示を行いたいが、Functions が動かせないため、1日1回ハイスコア更新などの実装にはできない。\nそこで、ハイスコアは起動時にキャッシュし、ハイスコアに「自分のスコア」がエントリーしない限りは更新されなくてもさして問題ないとして、取得したハイスコアより自分のスコアが上回った時のみハイスコアを更新する仕様として、可能な限り読み取り回数を減らすこととした。\n\n## DB書き込みについて\n\nオールドゲームらしく誰でも任意のニックネームでハイスコアを登録可の仕様とする予定であった。\nしかし、webapp の場合、firebaseのdatabaseURLが取得可能であるため、「誰でも」登録可とした場合、外部から何らかの方法でデータ登録が可能になり**課金される**ことが懸念される。\n\nそのためDBにスコア登録可能となるのはログイン済みのユーザーとすることにした。\n`firebase.auth.AuthUI()`を使うと非常に簡単にSNSログインを実装できた。\n\n``` auth.js\nvar firebaseAuthUiConfig = {\n  autoUpgradeAnonymousUsers: true,\n  signInFlow: 'popup',\n  signInOptions: [\n    // ログイン可能としたいproviderを列挙\n    // Facebook, Twitter, Github はそれぞれアプリ作成が必要\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    // firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.GithubAuthProvider.PROVIDER_ID,\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    // firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n    firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID\n  ],\n  tosUrl: './terms-of-service.html',\n  privacyPolicyUrl: './privacy-policy.html',\n  callbacks: {\n    signInSuccessWithAuthResult: function(authResult, redirectUrl) {\n      console.log('signed in')\n      return false;\n    }\n  }\n};\n\nvar firebaseAuthUi = new firebaseui.auth.AuthUI(firebase.auth());\n```\n``` game.js\n// 指定したタグに対してログインUIを作成する\nfirebaseAuthUi.start('#firebaseui-auth-container', firebaseAuthUiConfig)\n```\n``` index.html\n// firebaseによるログインUIが作成されるタグ\n<div id=\"firebaseui-auth-container\"></div>\n```\n\nただ、無名のゲームでいきなり会員登録を求めるとそもそもプレイしてもらえないと思うので、結果画面でハイスコアが更新された時のみログインを求める実装とすることにした。\n\n※ログインUI。ログイン方法を選択するとポップアップが表示される。\n![auth.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d5bcca8a-0c7c-5f0b-4e01-b52d06b4de0f.png)\n\n## おわりに\n\n今回はハイスコア処理を完成させる予定だったが、認証処理も追加したため完了しなかった。\nとは言え、firebaseはSNSログインもクソ簡単ですごかった。\n\n作業中のファイルは以下にコミット済：\nhttps://github.com/kaku3/the-sheep-in-the-desert/tree/feature/firebase\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-10-31T23:57:44+09:00",
    "group": null,
    "id": "b104ca08eeb69f803c3b",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "ゲーム制作",
        "versions": []
      },
      {
        "name": "Firebase",
        "versions": []
      }
    ],
    "title": "Firebase で無料で作るハイスコアDB(2) : 課金・認証を考える",
    "updated_at": "2020-10-31T23:57:44+09:00",
    "url": "https://qiita.com/kaku3/items/b104ca08eeb69f803c3b",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1090,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"前回までの砂漠のひつじ\" class=\"fragment\"></span><a href=\"#%E5%89%8D%E5%9B%9E%E3%81%BE%E3%81%A7%E3%81%AE%E7%A0%82%E6%BC%A0%E3%81%AE%E3%81%B2%E3%81%A4%E3%81%98\"><i class=\"fa fa-link\"></i></a>前回までの砂漠のひつじ</h1>\n\n<p>無料プログラム学習用ピコピコゲーム<a href=\"https://kaku3.github.io/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ</a>を作成しつつ、その過程を記事にしている。<br>\n本記事はハイスコア実装編4回目として、無料DBの選定、調査の経過として、Firebaseアカウント作成から簡単なDB操作までを行っている。</p>\n\n<p>前回までの記事では、Azure CosmosDBの動作を一通り確認しアーキテクチャが必要以上に複雑と感じFirebaseを調査することとしていた。</p>\n\n<p>前回までの記事：<br>\n- <a href=\"https://qiita.com/kaku3/items/c64eb4acd97ab8e41592\" id=\"reference-c49fe5c7f5a0aeb8f71d\">Azure Cosmos で無料で作るハイスコアDB(1)</a><br>\n- <a href=\"https://qiita.com/kaku3/items/d3e675790ce36ee54435\" id=\"reference-6d21d11ed28a886c337f\">Azure Cosmos で無料で作るハイスコアDB(2) : APIとデータモデルとAzureテーブル</a><br>\n- <a href=\"https://qiita.com/kaku3/items/fe70fd0ff2e56330453d\" id=\"reference-c8a24535b4c7c4a24d51\">Azure Cosmos で無料で作るハイスコアDB(3) : コア(SQL)</a></p>\n\n<p>今回の調査を終えての結論を述べると、学習コスト / 利用しやすさは以下の様に感じた。</p>\n\n<p><strong>Firebase Cloud Firestore(簡単) &lt;&lt; AWS DynamoDB &lt;&lt;&lt;(超えられない壁)&lt;&lt; Azure CosmosDB(難しい)</strong></p>\n\n<p>以下、Firebase登録から、レコード登録、取得および<strong>APIキー制限</strong>までを解説する。<br>\nAPIキー制限を行わないと悪意のある第三者からアクセスし放題になるので注意が必要。</p>\n\n<h1>\n<span id=\"firebaseアカウント登録\" class=\"fragment\"></span><a href=\"#firebase%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E7%99%BB%E9%8C%B2\"><i class=\"fa fa-link\"></i></a>Firebaseアカウント登録</h1>\n\n<p>Googleアカウントを持っていれば、一切情報入力なしで一瞬で登録完了する。</p>\n\n<p><a href=\"https://firebase.google.com/pricing?hl=ja\" rel=\"nofollow noopener\" target=\"_blank\">Firebase:料金</a>ページのファビュラスではなくジェネラスなリミットの<strong>Sparkプラン</strong>の項目の内容に目を通して、「無料Sparkプラン」項目にある[すぐに開始可能]ボタンを押下。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/0cf15c92ce49a533640204fdcb241fba810e78ab/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38383066313263372d333664392d613430642d323033362d3366613332393562326538642e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F880f12c7-36d9-a40d-2036-3fa3295b2e8d.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ea71dc1ccd61eecb1040a9ce2bf3039f\" alt=\"00_firebase_register.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/880f12c7-36d9-a40d-2036-3fa3295b2e8d.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F880f12c7-36d9-a40d-2036-3fa3295b2e8d.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=68437a3c3c47a8fa00c5885fc9b9ce20 1x\" loading=\"lazy\"></a></p>\n\n<h1>\n<span id=\"プロジェクト作成\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>プロジェクト作成</h1>\n\n<p>Firebaseアカウント登録が完了したらコンソールへ移動。<br>\n[プロジェクトを追加]ボタンを押下しプロジェクトを作成する。</p>\n\n<p>プロジェクト名を入力し、GoogleAnalyticsの利用設定を行えば完了。<br>\n無料プロジェクトの作業はアクセス数ぐらいしかモチベーションがないので利用する設定にしておいたが、画面キャプチャは省略している。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/633e5e6d50cfd99c51ed1bd03e60f68d993cd781/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f65303065653365642d633436372d316162352d653566392d6233343631643338636532362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe00ee3ed-c467-1ab5-e5f9-b3461d38ce26.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=348a4d1532b4242f4b8335836ed6d4c6\" alt=\"10_firebase_console.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e00ee3ed-c467-1ab5-e5f9-b3461d38ce26.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe00ee3ed-c467-1ab5-e5f9-b3461d38ce26.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=9ed4ddf3269db9eb49ec43177706b7a6 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/cc0213d004d1f1786c7c12ac4943d750b49b5ced/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f66653839626661622d316232302d396564632d356264382d3366663638643434316563332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ffe89bfab-1b20-9edc-5bd8-3ff68d441ec3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=a48519d98d43e7b8ac8ce4f15f5dd214\" alt=\"20_firebase_project_01.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/fe89bfab-1b20-9edc-5bd8-3ff68d441ec3.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ffe89bfab-1b20-9edc-5bd8-3ff68d441ec3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=67293de862e25e5713d15eeb334845ca 1x\" loading=\"lazy\"></a></p>\n\n<h1>\n<span id=\"db設定\" class=\"fragment\"></span><a href=\"#db%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>DB設定</h1>\n\n<h2>\n<span id=\"cloud-firestore\" class=\"fragment\"></span><a href=\"#cloud-firestore\"><i class=\"fa fa-link\"></i></a>Cloud Firestore</h2>\n\n<p>プロジェクトの作成が終わったら、プロジェクトHome画面左のナビゲーションバーよりCloud Firestore を選択し、[データベースの作成]を押下し、任意の名前のデータベースを作成する。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/df0ff68e5f4575747cf3a664e5459e0d3f297501/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36363632373638362d343561662d346632312d326235382d3865636563313466376638662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F66627686-45af-4f21-2b58-8ecec14f7f8f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=462a0a23c4103da97a035f40364bd8b0\" alt=\"30_cloud_firestore.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/66627686-45af-4f21-2b58-8ecec14f7f8f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F66627686-45af-4f21-2b58-8ecec14f7f8f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f3b81c54b8f5b03259535b9aa3456896 1x\" loading=\"lazy\"></a></p>\n\n<p>作成時、テストモードにするとガバガバになるので注意が必要。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/d897013de3f37d31cdb099d58a5ea916af351107/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38383735376663642d303864382d626537612d346230332d3361353666316335393863302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F88757fcd-08d8-be7a-4b03-3a56f1c598c0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=efdfe9505b74d1aa52520047ad833eaa\" alt=\"31_cloud_firestore_test.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/88757fcd-08d8-be7a-4b03-3a56f1c598c0.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F88757fcd-08d8-be7a-4b03-3a56f1c598c0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=8cd0c1c2236a5c906d3560584e49a26e 1x\" loading=\"lazy\"></a></p>\n\n<p>ロケーションは、asia-northeast1を選択。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/d9c416d7d47fa2990641d787432e3fb42316c014/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f35323662396634302d643833612d393832642d383337312d3837363232343463616434372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F526b9f40-d83a-982d-8371-8762244cad47.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=8cd0300116efb0b5cb7ffa20ce1cac0c\" alt=\"32_cloud_firestore_location.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/526b9f40-d83a-982d-8371-8762244cad47.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F526b9f40-d83a-982d-8371-8762244cad47.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=7ff4a8db96415e1d1faf56e0f7618e5c 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"コレクションを開始\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%AC%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E9%96%8B%E5%A7%8B\"><i class=\"fa fa-link\"></i></a>コレクションを開始</h2>\n\n<p>RDBで言うところのテーブルに相当するのがFirebaseのコレクション。<br>\nコレクション登録時にレコードを1件登録するUIになっているのは賛否ありそうだが個人的にはよいと感じた。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/4de1643c4ca3d7adcb0ab8fc649aaf024f9e8b9e/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f39653762356437662d636630342d353036312d333230322d3235363335396165643033632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F9e7b5d7f-cf04-5061-3202-256359aed03c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=8b3ca12f987cff5258b00cf683ca06c5\" alt=\"40_db.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/9e7b5d7f-cf04-5061-3202-256359aed03c.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F9e7b5d7f-cf04-5061-3202-256359aed03c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=47d4a7543ba3324e4c13127112bbf62e 1x\" loading=\"lazy\"></a></p>\n\n<p>レコード登録時にドキュメントIDを省略すると自動で一意のIDが振られるのも好印象。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/fe47a3741b053c77ceb3597b23b074c01d0c0756/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63383962643235652d343436352d643363322d623134622d3339363431656561333230392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc89bd25e-4465-d3c2-b14b-39641eea3209.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e7b16a8638b42962cccc1af85bf3f64a\" alt=\"41_db_collection.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c89bd25e-4465-d3c2-b14b-39641eea3209.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc89bd25e-4465-d3c2-b14b-39641eea3209.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=6fe5d295635550797848e0b9a192431a 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/e0494808dced85c8433777b96ce89d8918ea7429/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f36656366373961662d326237372d636463652d643264662d3739386531313264313736612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6ecf79af-2b77-cdce-d2df-798e112d176a.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=25803fc3f260d308faa7250de0415127\" alt=\"42_db_collection.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6ecf79af-2b77-cdce-d2df-798e112d176a.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F6ecf79af-2b77-cdce-d2df-798e112d176a.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=fa66a319bc311944f190f5d6b460571b 1x\" loading=\"lazy\"></a></p>\n\n<h1>\n<span id=\"アプリ設定\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%83%97%E3%83%AA%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>アプリ設定</h1>\n\n<h2>\n<span id=\"アプリ作成\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%83%97%E3%83%AA%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>アプリ作成</h2>\n\n<p>今回はWebページで利用するので、プロジェクトのHome画面より、[&lt;/&gt;]ボタン押下。<br>\n任意のアプリの名前をつける。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/57ca6eaf435582ca25a866bfa673f5d58c8e3a48/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38666433303932662d333138352d313438632d323939612d3035366533313537623964332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8fd3092f-3185-148c-299a-056e3157b9d3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=534b0d3c0164a47e7b365ef129a815e2\" alt=\"50_app.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8fd3092f-3185-148c-299a-056e3157b9d3.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8fd3092f-3185-148c-299a-056e3157b9d3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=cea2bb79bc6c5647a59e42b27963f8f0 1x\" loading=\"lazy\"></a><br>\n<a href=\"https://camo.qiitausercontent.com/d64fcb675feef044ced1c35f17d5f164313598c1/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f66343537656636352d326139352d393065332d643637362d3236623161376665386163352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff457ef65-2a95-90e3-d676-26b1a7fe8ac5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=4831b37e481c5936b4c637a89edaa8aa\" alt=\"51_app2.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f457ef65-2a95-90e3-d676-26b1a7fe8ac5.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Ff457ef65-2a95-90e3-d676-26b1a7fe8ac5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=1be9979d2fd39d6c69de41f1d2662a09 1x\" loading=\"lazy\"></a></p>\n\n<p>※「このアプリのFirebase Hostingも設定します。」について<br>\nFirebase Hosting を使うと Firebase CLI の設定が簡単になったりするがお高い模様。<br>\n今回はCDNからFirebaseのライブラリを取得しており、GitHub Pagesで公開しているのでいずれにしてもチェックはしない。</p>\n\n<h2>\n<span id=\"html-に初期化コード追加\" class=\"fragment\"></span><a href=\"#html-%E3%81%AB%E5%88%9D%E6%9C%9F%E5%8C%96%E3%82%B3%E3%83%BC%E3%83%89%E8%BF%BD%E5%8A%A0\"><i class=\"fa fa-link\"></i></a>html に初期化コード追加</h2>\n\n<p>初期化コードが出力されるので、htmlにコピペする。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/77e1a84f2e4ac6e96955cf3c885171b936193f79/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f35313232613736632d396666652d326130652d643765652d3633633337353136643732662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F5122a76c-9ffe-2a0e-d7ee-63c37516d72f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=3eb5d9e6f458acfaa6a5d1b9d06f7b8c\" alt=\"53_app3.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/5122a76c-9ffe-2a0e-d7ee-63c37516d72f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F5122a76c-9ffe-2a0e-d7ee-63c37516d72f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=235ab70d28b5f68e034e77dc16a8ecc8 1x\" loading=\"lazy\"></a></p>\n\n<p>コメントにTODOの記載がある通り、firestoreにアクセスするためライブラリを追加する。</p>\n\n<div class=\"code-frame\" data-lang=\"html\">\n<div class=\"code-lang\"><span class=\"bold\">index.html</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c\">&lt;!-- firebase\n執筆時点バージョンは、7.24.0。ドキュメントによりバージョン番号が異なる。\nコンパネで取得できた初期化コードのバージョンに合わせるのがよさそう。\n--&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://www.gstatic.com/firebasejs/7.24.0/firebase-app.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://www.gstatic.com/firebasejs/7.24.0/firebase-analytics.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n\n<span class=\"c\">&lt;!-- 利用したい機能を追加 --&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://www.gstatic.com/firebasejs/7.24.0/firebase-auth.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://www.gstatic.com/firebasejs/7.24.0/firebase-firestore.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n\n<span class=\"c\">&lt;!-- 初期化部分は別ファイルにしておく --&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"./firebase/init-firebase.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"c\">&lt;!-- firebase --&gt;</span>\n\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"スコア登録処理js\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%82%B3%E3%82%A2%E7%99%BB%E9%8C%B2%E5%87%A6%E7%90%86js\"><i class=\"fa fa-link\"></i></a>スコア登録処理(js)</h2>\n\n<p>collection名を指定して、add。<br>\nCosmosDBでやってた作業はなんだったのか。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">sample.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">var</span> <span class=\"nx\">db</span> <span class=\"o\">=</span> <span class=\"nx\">firebase</span><span class=\"p\">.</span><span class=\"nx\">firestore</span><span class=\"p\">();</span>\n<span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">collection</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">scores</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">add</span><span class=\"p\">({</span>\n    <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">name</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">score</span><span class=\"p\">:</span> <span class=\"mi\">1000</span>\n<span class=\"p\">}).</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">r</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">r</span><span class=\"p\">);</span> <span class=\"c1\">// 登録成功したレコードの内容を表示。r.id に一意のIDが設定されている。</span>\n<span class=\"p\">}).</span><span class=\"k\">catch</span><span class=\"p\">((</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>   <span class=\"c1\">// エラー内容を表示</span>\n<span class=\"p\">})</span>\n</code></pre></div>\n</div>\n\n<h2>\n<span id=\"スコア取得処理js\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%82%B3%E3%82%A2%E5%8F%96%E5%BE%97%E5%87%A6%E7%90%86js\"><i class=\"fa fa-link\"></i></a>スコア取得処理(js)</h2>\n\n<p>コレクションに対して、where, orderBy, limit を指定して任意のレコード取得可能。<br>\nget()で全件取得も可能。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">sample.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\">// Queryを作る。where 句も対応しているが今回は不要のため未実装。</span>\n<span class=\"kd\">var</span> <span class=\"nx\">q</span> <span class=\"o\">=</span> <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">collection</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">scores</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">orderBy</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">score</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">desc</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">limit</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// 非同期で取得。docsに配列形式で格納されており、.data() で json オブジェクトを取得できる。</span>\n<span class=\"nx\">q</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">().</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">r</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">d</span> <span class=\"k\">of</span> <span class=\"nx\">r</span><span class=\"p\">.</span><span class=\"nx\">docs</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">d</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">());</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n</code></pre></div>\n</div>\n\n<h1>\n<span id=\"apiキーに制限をかける超重要\" class=\"fragment\"></span><a href=\"#api%E3%82%AD%E3%83%BC%E3%81%AB%E5%88%B6%E9%99%90%E3%82%92%E3%81%8B%E3%81%91%E3%82%8B%E8%B6%85%E9%87%8D%E8%A6%81\"><i class=\"fa fa-link\"></i></a>APIキーに制限をかける【超重要】</h1>\n\n<p>勘の良い諸兄であれば、apiKeyを公開するソースに貼り付けてよいのか不安で作業が止まると思う。<br>\n推察の通りデフォルトでは<strong>ソースをコピペした第三者からアクセスし放題</strong>の状態となっている。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">config.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">var</span> <span class=\"nx\">firebaseConfig</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"na\">apiKey</span><span class=\"p\">:</span> <span class=\"dl\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"na\">authDomain</span><span class=\"p\">:</span> <span class=\"dl\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"na\">databaseURL</span><span class=\"p\">:</span> <span class=\"dl\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"na\">projectId</span><span class=\"p\">:</span> <span class=\"dl\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"na\">storageBucket</span><span class=\"p\">:</span> <span class=\"dl\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"na\">messagingSenderId</span><span class=\"p\">:</span> <span class=\"dl\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"na\">appId</span><span class=\"p\">:</span> <span class=\"dl\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"na\">measurementId</span><span class=\"p\">:</span> <span class=\"dl\">\"\"</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n</div>\n\n<p>ここまでの作業は画面の指示に従っていればできたのに、この作業だけなぜか一連のUIに組み込まれていない。よく分からないからFirebase Hosting を使おうと何度も挫けそうになった。</p>\n\n<h2>\n<span id=\"apiとサービスにアクセス\" class=\"fragment\"></span><a href=\"#api%E3%81%A8%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9\"><i class=\"fa fa-link\"></i></a>APIとサービスにアクセス</h2>\n\n<p><a href=\"https://console.cloud.google.com/apis/\" rel=\"nofollow noopener\" target=\"_blank\">APIとサービス</a> にアクセスし、現在作成中のプロジェクトを選択し、ナビゲーションより認証情報を選択すると、[Browser key (auto created by Firebase)]というAPIキーが<strong>警告と共に作成されている</strong>のが分かるのでこれをクリックする。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/e9a0d2a259a22beddcf4ace9b98ecfb23a671cf3/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63663734623661362d393833622d333730652d366365622d6431633136376164653762342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fcf74b6a6-983b-370e-6ceb-d1c167ade7b4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=fb60cf76b46e3af5d0c3433aea0ac19e\" alt=\"60_api1.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/cf74b6a6-983b-370e-6ceb-d1c167ade7b4.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fcf74b6a6-983b-370e-6ceb-d1c167ade7b4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d731096c3032802cc32b88284e69fa5f 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"アプリケーションの制限を設定\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E5%88%B6%E9%99%90%E3%82%92%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>アプリケーションの制限を設定</h2>\n\n<p>今回は、Git Hub Pages のURL(kaku3.github.io/the-sheep-in-the-desert/*)を、HTTPリファラー(ウェブサイト)として登録することにする。<br>\nこの設定を行うと、デプロイ済みの本番環境からしか利用できなくなるので、アプリを2つ(prod, dev)作成し開発用のapiKeyは公開しないのがよさそうに思えた。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/ec801d706be0bc172e5c276cc680a5cd1c209bec/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63333037306239382d303265372d323961622d323737612d3239346433363331663661342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc3070b98-02e7-29ab-277a-294d3631f6a4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=5b06f49b6c059d75affc69a40735b7a2\" alt=\"61_api2.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c3070b98-02e7-29ab-277a-294d3631f6a4.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fc3070b98-02e7-29ab-277a-294d3631f6a4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=0e0d5bde39b4b6c712d250df057ad11e 1x\" loading=\"lazy\"></a></p>\n\n<h1>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h1>\n\n<p>簡単過ぎてビックリしました。<br>\nAPIキーがガバガバなのもびっくりしました。</p>\n\n<p>次回は実際にアプリに組み込もうかと思います。</p>\n",
    "body": "# 前回までの砂漠のひつじ\n\n無料プログラム学習用ピコピコゲーム[砂漠のひつじ](https://kaku3.github.io/the-sheep-in-the-desert/)を作成しつつ、その過程を記事にしている。\n本記事はハイスコア実装編4回目として、無料DBの選定、調査の経過として、Firebaseアカウント作成から簡単なDB操作までを行っている。\n\n前回までの記事では、Azure CosmosDBの動作を一通り確認しアーキテクチャが必要以上に複雑と感じFirebaseを調査することとしていた。\n\n前回までの記事：\n- [Azure Cosmos で無料で作るハイスコアDB(1)](https://qiita.com/kaku3/items/c64eb4acd97ab8e41592)\n- [Azure Cosmos で無料で作るハイスコアDB(2) : APIとデータモデルとAzureテーブル](https://qiita.com/kaku3/items/d3e675790ce36ee54435)\n- [Azure Cosmos で無料で作るハイスコアDB(3) : コア(SQL)](https://qiita.com/kaku3/items/fe70fd0ff2e56330453d)\n\n\n今回の調査を終えての結論を述べると、学習コスト / 利用しやすさは以下の様に感じた。\n\n**Firebase Cloud Firestore(簡単) << AWS DynamoDB <<<(超えられない壁)<< Azure CosmosDB(難しい)**\n\n以下、Firebase登録から、レコード登録、取得および**APIキー制限**までを解説する。\nAPIキー制限を行わないと悪意のある第三者からアクセスし放題になるので注意が必要。\n\n# Firebaseアカウント登録\n\nGoogleアカウントを持っていれば、一切情報入力なしで一瞬で登録完了する。\n\n[Firebase:料金](https://firebase.google.com/pricing?hl=ja)ページのファビュラスではなくジェネラスなリミットの**Sparkプラン**の項目の内容に目を通して、「無料Sparkプラン」項目にある[すぐに開始可能]ボタンを押下。\n\n![00_firebase_register.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/880f12c7-36d9-a40d-2036-3fa3295b2e8d.png)\n\n\n# プロジェクト作成\n\nFirebaseアカウント登録が完了したらコンソールへ移動。\n[プロジェクトを追加]ボタンを押下しプロジェクトを作成する。\n\nプロジェクト名を入力し、GoogleAnalyticsの利用設定を行えば完了。\n無料プロジェクトの作業はアクセス数ぐらいしかモチベーションがないので利用する設定にしておいたが、画面キャプチャは省略している。\n\n![10_firebase_console.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e00ee3ed-c467-1ab5-e5f9-b3461d38ce26.png)\n![20_firebase_project_01.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/fe89bfab-1b20-9edc-5bd8-3ff68d441ec3.png)\n\n# DB設定\n\n## Cloud Firestore\n\nプロジェクトの作成が終わったら、プロジェクトHome画面左のナビゲーションバーよりCloud Firestore を選択し、[データベースの作成]を押下し、任意の名前のデータベースを作成する。\n\n![30_cloud_firestore.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/66627686-45af-4f21-2b58-8ecec14f7f8f.png)\n\n作成時、テストモードにするとガバガバになるので注意が必要。\n\n![31_cloud_firestore_test.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/88757fcd-08d8-be7a-4b03-3a56f1c598c0.png)\n\nロケーションは、asia-northeast1を選択。\n\n![32_cloud_firestore_location.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/526b9f40-d83a-982d-8371-8762244cad47.png)\n\n## コレクションを開始\n\nRDBで言うところのテーブルに相当するのがFirebaseのコレクション。\nコレクション登録時にレコードを1件登録するUIになっているのは賛否ありそうだが個人的にはよいと感じた。\n\n![40_db.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/9e7b5d7f-cf04-5061-3202-256359aed03c.png)\n\nレコード登録時にドキュメントIDを省略すると自動で一意のIDが振られるのも好印象。\n\n![41_db_collection.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c89bd25e-4465-d3c2-b14b-39641eea3209.png)\n![42_db_collection.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/6ecf79af-2b77-cdce-d2df-798e112d176a.png)\n\n# アプリ設定\n\n## アプリ作成\n\n今回はWebページで利用するので、プロジェクトのHome画面より、[</>]ボタン押下。\n任意のアプリの名前をつける。\n\n![50_app.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8fd3092f-3185-148c-299a-056e3157b9d3.png)\n![51_app2.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/f457ef65-2a95-90e3-d676-26b1a7fe8ac5.png)\n\n※「このアプリのFirebase Hostingも設定します。」について\nFirebase Hosting を使うと Firebase CLI の設定が簡単になったりするがお高い模様。\n今回はCDNからFirebaseのライブラリを取得しており、GitHub Pagesで公開しているのでいずれにしてもチェックはしない。\n\n## html に初期化コード追加\n\n初期化コードが出力されるので、htmlにコピペする。\n\n![53_app3.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/5122a76c-9ffe-2a0e-d7ee-63c37516d72f.png)\n\nコメントにTODOの記載がある通り、firestoreにアクセスするためライブラリを追加する。\n\n``` index.html\n<!-- firebase\n執筆時点バージョンは、7.24.0。ドキュメントによりバージョン番号が異なる。\nコンパネで取得できた初期化コードのバージョンに合わせるのがよさそう。\n-->\n<script src=\"https://www.gstatic.com/firebasejs/7.24.0/firebase-app.js\"></script>\n<script src=\"https://www.gstatic.com/firebasejs/7.24.0/firebase-analytics.js\"></script>\n\n<!-- 利用したい機能を追加 -->\n<script src=\"https://www.gstatic.com/firebasejs/7.24.0/firebase-auth.js\"></script>\n<script src=\"https://www.gstatic.com/firebasejs/7.24.0/firebase-firestore.js\"></script>\n\n<!-- 初期化部分は別ファイルにしておく -->\n<script src=\"./firebase/init-firebase.js\"></script>\n<!-- firebase -->\n\n```\n\n## スコア登録処理(js)\n\ncollection名を指定して、add。\nCosmosDBでやってた作業はなんだったのか。\n\n``` sample.js\nvar db = firebase.firestore();\ndb.collection('scores').add({\n    name: 'name',\n    score: 1000\n}).then((r) => {\n    console.log(r); // 登録成功したレコードの内容を表示。r.id に一意のIDが設定されている。\n}).catch((err) => {\n    console.log(err);   // エラー内容を表示\n})\n```\n\n## スコア取得処理(js)\n\nコレクションに対して、where, orderBy, limit を指定して任意のレコード取得可能。\nget()で全件取得も可能。\n\n``` sample.js\n// Queryを作る。where 句も対応しているが今回は不要のため未実装。\nvar q = db.collection('scores').orderBy('score', 'desc').limit(5);\n\n// 非同期で取得。docsに配列形式で格納されており、.data() で json オブジェクトを取得できる。\nq.get().then((r) => {\n    for(var d of r.docs) {\n        console.log(d.data());\n    }\n})\n```\n\n# APIキーに制限をかける【超重要】\n\n勘の良い諸兄であれば、apiKeyを公開するソースに貼り付けてよいのか不安で作業が止まると思う。\n推察の通りデフォルトでは**ソースをコピペした第三者からアクセスし放題**の状態となっている。\n\n``` config.js\nvar firebaseConfig = {\n    apiKey: \"\",\n    authDomain: \"\",\n    databaseURL: \"\",\n    projectId: \"\",\n    storageBucket: \"\",\n    messagingSenderId: \"\",\n    appId: \"\",\n    measurementId: \"\"\n};\n```\n\nここまでの作業は画面の指示に従っていればできたのに、この作業だけなぜか一連のUIに組み込まれていない。よく分からないからFirebase Hosting を使おうと何度も挫けそうになった。\n\n## APIとサービスにアクセス\n\n[APIとサービス](https://console.cloud.google.com/apis/) にアクセスし、現在作成中のプロジェクトを選択し、ナビゲーションより認証情報を選択すると、[Browser key (auto created by Firebase)]というAPIキーが**警告と共に作成されている**のが分かるのでこれをクリックする。\n\n![60_api1.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/cf74b6a6-983b-370e-6ceb-d1c167ade7b4.png)\n\n\n## アプリケーションの制限を設定\n\n今回は、Git Hub Pages のURL(kaku3.github.io/the-sheep-in-the-desert/*)を、HTTPリファラー(ウェブサイト)として登録することにする。\nこの設定を行うと、デプロイ済みの本番環境からしか利用できなくなるので、アプリを2つ(prod, dev)作成し開発用のapiKeyは公開しないのがよさそうに思えた。\n\n![61_api2.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/c3070b98-02e7-29ab-277a-294d3631f6a4.png)\n\n# おわりに\n\n簡単過ぎてビックリしました。\nAPIキーがガバガバなのもびっくりしました。\n\n次回は実際にアプリに組み込もうかと思います。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-10-24T17:42:58+09:00",
    "group": null,
    "id": "ce3a84424026cb46b226",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 4,
    "tags": [
      {
        "name": "HTML",
        "versions": []
      },
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "ゲーム制作",
        "versions": []
      },
      {
        "name": "Firebase",
        "versions": []
      }
    ],
    "title": "【超簡単】Firebase で無料で作るハイスコアDB : APIキー制限設定忘れずに！！",
    "updated_at": "2020-10-25T11:46:33+09:00",
    "url": "https://qiita.com/kaku3/items/ce3a84424026cb46b226",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2273,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n\n<p>CosmosDBにコア(SQL)で、スコア登録、ハイスコア取得までできたので以下記録として残す。</p>\n\n<p>利用開始までの手順は1回目記事参照：<br>\n<a href=\"https://qiita.com/kaku3/items/c64eb4acd97ab8e41592\" id=\"reference-9c0d5403a01cd10f18bd\">Azure Cosmos で無料で作るハイスコアDB(1)</a></p>\n\n<p>解説部分以外のソースはgit hub参照：<br>\n<a href=\"https://github.com/kaku3/the-sheep-in-the-desert/tree/master/azure/cosmos-db\" rel=\"nofollow noopener\" target=\"_blank\">cosmos-db サンプル</a></p>\n\n<p>登録/取得処理が作成できたので、あとは AzureFunctions から呼び出すようにすれば利用開始できそうであるが、<strong>使用感が悪い</strong>のでCosmosDBは今回で終了にしてfirebaseに移行しようと思う。</p>\n\n<h1>\n<span id=\"nosqlと一言で言っても\" class=\"fragment\"></span><a href=\"#nosql%E3%81%A8%E4%B8%80%E8%A8%80%E3%81%A7%E8%A8%80%E3%81%A3%E3%81%A6%E3%82%82\"><i class=\"fa fa-link\"></i></a>NoSQLと一言で言っても…</h1>\n\n<p><a href=\"https://ja.wikipedia.org/wiki/NoSQL\" rel=\"nofollow noopener\" target=\"_blank\">Wikipedia</a></p>\n\n<blockquote>\n<p>NoSQL（一般に \"Not only SQL\" と解釈される）とは、関係データベース管理システム (RDBMS) 以外のデータベース管理システムを指すおおまかな分類語である。関係データベースを杓子定規に適用してきた長い歴史を打破し、それ以外の構造のデータベースの利用・発展を促進させようとする運動の標語としての意味合いを持つ。関係モデルではないデータストアの特徴として、固定されたスキーマに縛られないこと、関係モデルの結合操作を利用しないこと（場合によっては単にそのような機能が欠落しているだけ）、水平スケーラビリティが確保しやすい事が多いこと、トランザクション処理を利用できないものが多いことなどが挙げられる。学術的な世界では、この種のデータベースのことを構造型ストレージ (structured storage) と呼ぶことが多い[1][2][3][4]。</p>\n</blockquote>\n\n<p>DynamoDBは、コンパネに入ると[テーブルの作成]ボタンがあり、テーブル位は普通あるものなのでしょうと思い込んだが、CosmosDBのコアSQLにはなかった。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/5d0507756c5d7afe5922e16a8dc3e0ad1a64def3/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64376263656261622d393835332d376234312d383430612d6632613361346364366133662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fd7bcebab-9853-7b41-840a-f2a3a4cd6a3f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=446aa80d2d5801a995ecc223c1a07dfd\" alt=\"優秀なDynamoさん\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d7bcebab-9853-7b41-840a-f2a3a4cd6a3f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fd7bcebab-9853-7b41-840a-f2a3a4cd6a3f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=9c052f6e631d78ac7a6af7b97487e04e 1x\" loading=\"lazy\"></a></p>\n\n<p>CosmosDBは、アカウント作成時にAPIとデータモデル種類を選択できて、その選択により<strong>できることが異なる仕様</strong>となっている。<br>\nこれはネット上の断片的な情報をかき集めて作業するのが大変困難な仕様と思われたので、このまま継続利用するのを断念するに至った。</p>\n\n<p>APIとデータモデル：<br>\n<a href=\"https://qiita.com/kaku3/items/d3e675790ce36ee54435\" id=\"reference-27979b369d8eb3fb761a\">Azure Cosmos で無料で作るハイスコアDB(2) : APIとデータモデルとAzureテーブル</a></p>\n\n<h1>\n<span id=\"データ構造\" class=\"fragment\"></span><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0\"><i class=\"fa fa-link\"></i></a>データ構造</h1>\n\n<p>Cosmos DB のコア(SQL)のデータモデルは、<code>id</code>項目をプライマリーキーとして json を保存する key-value ストアである。<br>\n本記事では昭和のゲームのハイスコアを再現するため、名前とスコアが登録対象となるが、どちらも一意のキーとはならない。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>{\n    \"id\": &lt;一意の値&gt;\n    \"name\": \"test\",\n    \"score\": 123\n}\n</code></pre></div></div>\n\n<p>よって、<code>id</code>に一意の値を設定するためにシリアル値などを生成する必要があるが、シリアル値を保存するテーブルを保持することができない。<br>\nそこで今回は、<code>{テーブル名}_{id}</code>といった値を<code>id</code>として設定することとした。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">sequences.js</span></div>\n<div class=\"highlight\"><pre><code>  <span class=\"p\">{</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">id</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">sequences_scores</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"c1\">// score テーブル用の sequence</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">no</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span>   <span class=\"c1\">// 現在のシーケンス</span>\n  <span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">scores.js</span></div>\n<div class=\"highlight\"><pre><code>  <span class=\"p\">{</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">id</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">scores_{sequenceより取得した一意の値}</span><span class=\"dl\">\"</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">name</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">SHEEP</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">score</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"mi\">1000</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">id</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">scores_{sequenceより取得した一意の値}</span><span class=\"dl\">\"</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">name</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">SHEEP</span><span class=\"dl\">\"</span><span class=\"p\">,</span>    <span class=\"c1\">// 重複可</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">score</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"mi\">900</span>\n  <span class=\"p\">}</span>\n  <span class=\"p\">...</span>\n</code></pre></div>\n</div>\n\n<h1>\n<span id=\"db作成\" class=\"fragment\"></span><a href=\"#db%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>DB作成</h1>\n\n<p>シンプルかつ使いやすいコマンド</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>async function createDatabase() {\n  const { database } = await client.databases.createIfNotExists({\n    id: databaseId\n  })\n  console.log(`Created database:\\n${database.id}\\n`)\n}\n</code></pre></div></div>\n\n<h1>\n<span id=\"container-作成\" class=\"fragment\"></span><a href=\"#container-%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>Container 作成</h1>\n\n<p>シンプルかつ使いやすいコマンド。partitionKey は少し気持ち悪い。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>async function createContainer() {\n  const { container } = await client\n    .database(databaseId)\n    .containers.createIfNotExists(\n      { id: containerId, partitionKey },\n      { offerThroughput: 400 }\n    )\n  console.log(`Created container:\\n${config.container.id}\\n`)\n}\n</code></pre></div></div>\n\n<h1>\n<span id=\"upsertinsert-or-update\" class=\"fragment\"></span><a href=\"#upsertinsert-or-update\"><i class=\"fa fa-link\"></i></a>upsert(insert or update)</h1>\n\n<p><code>items.upsert</code> で、一意のidを持つjsonを登録。<br>\n同じidの項目があれば上書き。１件ずつしか登録できない。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>async function upsertItems(itemBodies) {\n\n  // 複数itemの配列を upsert して、Promise.all(ps)で完了待ち\n  const items = client.database(databaseId).container(containerId).items\n  const ps = itemBodies.map(body =&gt; items.upsert(body))\n  await Promise.all(ps)\n\n  console.log(`upserted items : `, itemBodies.map(o =&gt; o.id))\n}\n</code></pre></div></div>\n\n<h1>\n<span id=\"select\" class=\"fragment\"></span><a href=\"#select\"><i class=\"fa fa-link\"></i></a>select</h1>\n\n<p>SQLクエリで上位スコアを取得。<br>\nコア(SQL)ではSQLが使えるが、テーブルAPIでは使えない。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>async function getHiScores(count) {\n  console.group(`+ getHiScores(${count})`)\n  const q = {\n    query: `SELECT VALUE c FROM c ORDER BY c.score DESC OFFSET 0 LIMIT ${count}`,\n    parameters: []\n  }\n  const query = client.database(databaseId).container(containerId).items.query(q)\n  const { resources: rs } = await query.fetchAll()\n\n  console.groupEnd()\n  console.log(`- getHiScores(${count})`)\n  return rs\n}\n</code></pre></div></div>\n\n<h1>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h1>\n\n<p>簡単なハイスコア処理に必要なコードを一通り書いた。<br>\nSQLより不便なのは仕方ないが、テーブルがサポートされておらず<code>id</code>を工夫する実装を続けるのは大変ストレスに感じた。<br>\n何らかのログを投げ込む等、純粋に単一のデータを投げ込む先としてはよいのかと思ったが、AWSより安価ということもないのであれば、あえてCosmosDBを選択するメリットは感じられなかった。</p>\n",
    "body": "# はじめに\n\nCosmosDBにコア(SQL)で、スコア登録、ハイスコア取得までできたので以下記録として残す。\n\n利用開始までの手順は1回目記事参照：\n[Azure Cosmos で無料で作るハイスコアDB(1)](https://qiita.com/kaku3/items/c64eb4acd97ab8e41592)\n\n解説部分以外のソースはgit hub参照：\n[cosmos-db サンプル](https://github.com/kaku3/the-sheep-in-the-desert/tree/master/azure/cosmos-db)\n\n登録/取得処理が作成できたので、あとは AzureFunctions から呼び出すようにすれば利用開始できそうであるが、**使用感が悪い**のでCosmosDBは今回で終了にしてfirebaseに移行しようと思う。\n\n# NoSQLと一言で言っても…\n\n[Wikipedia](https://ja.wikipedia.org/wiki/NoSQL)\n\n> NoSQL（一般に \"Not only SQL\" と解釈される）とは、関係データベース管理システム (RDBMS) 以外のデータベース管理システムを指すおおまかな分類語である。関係データベースを杓子定規に適用してきた長い歴史を打破し、それ以外の構造のデータベースの利用・発展を促進させようとする運動の標語としての意味合いを持つ。関係モデルではないデータストアの特徴として、固定されたスキーマに縛られないこと、関係モデルの結合操作を利用しないこと（場合によっては単にそのような機能が欠落しているだけ）、水平スケーラビリティが確保しやすい事が多いこと、トランザクション処理を利用できないものが多いことなどが挙げられる。学術的な世界では、この種のデータベースのことを構造型ストレージ (structured storage) と呼ぶことが多い[1][2][3][4]。\n\nDynamoDBは、コンパネに入ると[テーブルの作成]ボタンがあり、テーブル位は普通あるものなのでしょうと思い込んだが、CosmosDBのコアSQLにはなかった。\n\n![優秀なDynamoさん](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/d7bcebab-9853-7b41-840a-f2a3a4cd6a3f.png)\n\n\nCosmosDBは、アカウント作成時にAPIとデータモデル種類を選択できて、その選択により**できることが異なる仕様**となっている。\nこれはネット上の断片的な情報をかき集めて作業するのが大変困難な仕様と思われたので、このまま継続利用するのを断念するに至った。\n\nAPIとデータモデル：\n[Azure Cosmos で無料で作るハイスコアDB(2) : APIとデータモデルとAzureテーブル](https://qiita.com/kaku3/items/d3e675790ce36ee54435)\n\n\n# データ構造\n\nCosmos DB のコア(SQL)のデータモデルは、`id`項目をプライマリーキーとして json を保存する key-value ストアである。\n本記事では昭和のゲームのハイスコアを再現するため、名前とスコアが登録対象となるが、どちらも一意のキーとはならない。\n\n```\n{\n    \"id\": <一意の値>\n    \"name\": \"test\",\n    \"score\": 123\n}\n```\n\nよって、`id`に一意の値を設定するためにシリアル値などを生成する必要があるが、シリアル値を保存するテーブルを保持することができない。\nそこで今回は、`{テーブル名}_{id}`といった値を`id`として設定することとした。\n\n``` sequences.js\n  {\n    \"id\": \"sequences_scores\", // score テーブル用の sequence\n    \"no\": 1   // 現在のシーケンス\n  }\n```\n\n``` scores.js\n  {\n    \"id\": \"scores_{sequenceより取得した一意の値}\"\n    \"name\": \"SHEEP\",\n    \"score\": 1000\n  },\n  {\n    \"id\": \"scores_{sequenceより取得した一意の値}\"\n    \"name\": \"SHEEP\",    // 重複可\n    \"score\": 900\n  }\n  ...\n```\n\n# DB作成\n\nシンプルかつ使いやすいコマンド\n\n```\nasync function createDatabase() {\n  const { database } = await client.databases.createIfNotExists({\n    id: databaseId\n  })\n  console.log(`Created database:\\n${database.id}\\n`)\n}\n```\n\n# Container 作成\n\nシンプルかつ使いやすいコマンド。partitionKey は少し気持ち悪い。\n\n```\nasync function createContainer() {\n  const { container } = await client\n    .database(databaseId)\n    .containers.createIfNotExists(\n      { id: containerId, partitionKey },\n      { offerThroughput: 400 }\n    )\n  console.log(`Created container:\\n${config.container.id}\\n`)\n}\n```\n\n# upsert(insert or update)\n\n`items.upsert` で、一意のidを持つjsonを登録。\n同じidの項目があれば上書き。１件ずつしか登録できない。\n\n```\nasync function upsertItems(itemBodies) {\n\n  // 複数itemの配列を upsert して、Promise.all(ps)で完了待ち\n  const items = client.database(databaseId).container(containerId).items\n  const ps = itemBodies.map(body => items.upsert(body))\n  await Promise.all(ps)\n\n  console.log(`upserted items : `, itemBodies.map(o => o.id))\n}\n```\n\n# select\n\nSQLクエリで上位スコアを取得。\nコア(SQL)ではSQLが使えるが、テーブルAPIでは使えない。\n\n```\nasync function getHiScores(count) {\n  console.group(`+ getHiScores(${count})`)\n  const q = {\n    query: `SELECT VALUE c FROM c ORDER BY c.score DESC OFFSET 0 LIMIT ${count}`,\n    parameters: []\n  }\n  const query = client.database(databaseId).container(containerId).items.query(q)\n  const { resources: rs } = await query.fetchAll()\n\n  console.groupEnd()\n  console.log(`- getHiScores(${count})`)\n  return rs\n}\n```\n\n# おわりに\n\n簡単なハイスコア処理に必要なコードを一通り書いた。\nSQLより不便なのは仕方ないが、テーブルがサポートされておらず`id`を工夫する実装を続けるのは大変ストレスに感じた。\n何らかのログを投げ込む等、純粋に単一のデータを投げ込む先としてはよいのかと思ったが、AWSより安価ということもないのであれば、あえてCosmosDBを選択するメリットは感じられなかった。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-10-17T16:48:34+09:00",
    "group": null,
    "id": "fe70fd0ff2e56330453d",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "CosmosDB",
        "versions": []
      }
    ],
    "title": "Azure Cosmos で無料で作るハイスコアDB(3) : コア(SQL)",
    "updated_at": "2020-10-17T16:48:34+09:00",
    "url": "https://qiita.com/kaku3/items/fe70fd0ff2e56330453d",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1156,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n\n<p>Azure Cosmos DBはただのNoSQL DBかと思い、<a href=\"https://qiita.com/kaku3/items/c64eb4acd97ab8e41592\" id=\"reference-45de75b2351f670306b3\">前回の記事</a>で で無料でハイスコアDBを作り始めたが、Table Api を使わないと期待する実装ができなそうに思え Table Api を調べることにした。</p>\n\n<p>結論を先に述べておくと、Table Api には <strong>ソート機能</strong> がないためハイスコアDBとしては使えなかった。</p>\n\n<h1>\n<span id=\"apiとデータモデル\" class=\"fragment\"></span><a href=\"#api%E3%81%A8%E3%83%87%E3%83%BC%E3%82%BF%E3%83%A2%E3%83%87%E3%83%AB\"><i class=\"fa fa-link\"></i></a>APIとデータモデル</h1>\n\n<p>Azure Cosmos DB では、DBアカウント作成時にAPIとデータモデルの種類が選択できる。</p>\n\n<table>\n<thead>\n<tr>\n<th>種類</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>コア(SQL)</td>\n<td>jsonで保存したデータを、SQLの様な文法でqueryしアクセスする</td>\n</tr>\n<tr>\n<td>MongoDB 用 Azure Cosmos DB API</td>\n<td><a href=\"https://docs.microsoft.com/ja-jp/azure/cosmos-db/mongodb-introduction\" rel=\"nofollow noopener\" target=\"_blank\">Azure Cosmos DB の MongoDB 用 API</a></td>\n</tr>\n<tr>\n<td>Cassandra</td>\n<td><a href=\"https://docs.microsoft.com/ja-jp/azure/cosmos-db/cassandra-introduction\" rel=\"nofollow noopener\" target=\"_blank\">Azure Cosmos DB の Cassandra API の概要</a></td>\n</tr>\n<tr>\n<td>Azure テーブル</td>\n<td><a href=\"https://docs.microsoft.com/ja-jp/azure/cosmos-db/table-introduction\" rel=\"nofollow noopener\" target=\"_blank\">Azure Cosmos DB の概要:テーブル API</a></td>\n</tr>\n<tr>\n<td>Gremlin(グラフ)</td>\n<td><a href=\"https://docs.microsoft.com/ja-jp/azure/cosmos-db/graph-introduction\" rel=\"nofollow noopener\" target=\"_blank\">Azure Cosmos DB での Gremlin API の概要</a></td>\n</tr>\n</tbody>\n</table>\n\n<p>MongoDB, Cassandra は、同じくNoSQL DB。元々利用していれば同じインターフェース(API)で使えて移行が容易とのこと。どちらも利用していなかったので詳細は省略。<br>\nGremlinは、グラフデータベース。今回の要件に対しては意識が高すぎるので詳細は省略。</p>\n\n<p>コア(SQL)で作成したDBをAzure Portal のコンソールから確認すると生のjsonが表示され「何か違うな」と思いAzure テーブルにしたが、そこは気にせずにコア(SQL)にしておけばよかったが後の祭り。</p>\n\n<h1>\n<span id=\"azureテーブル\" class=\"fragment\"></span><a href=\"#azure%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB\"><i class=\"fa fa-link\"></i></a>Azureテーブル</h1>\n\n<p>PartitionKey, RowKey を持つ、Key-Value Store。<br>\nAzure Portal のコンソールから確認すると、各項目をヘッダに持つテーブルが表示され「俺の知ってるDBってこれだよな」という安心感があった。また、Apiもシンプルで学習コストも低く見えたので作業を進めた。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/d637edbfaf7904ecb2753b86272f156913463ba7/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37373834663735302d373630642d643631312d316532622d3337643233323336373861342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7784f750-760d-d611-1e2b-37d2323678a4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=5d5cb2291cf8a63c42a32c61a4f96397\" alt=\"table-api.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7784f750-760d-d611-1e2b-37d2323678a4.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7784f750-760d-d611-1e2b-37d2323678a4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ba1cfdb5fef4306bcea67c4121e410e2 1x\" loading=\"lazy\"></a></p>\n\n<p>※データエクスプローラ(AZURE TABLE API)：よく見るDBっぽい何かで安心感がある画面</p>\n\n<p>create, insert, update と順調に作業を進めたが、read する際に sort ができないことに気づいた。<br>\nよって本プロジェクトではAzureテーブルは利用しない事としたが、せっかく調べたので記録として残しておくことにした。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">test.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">const</span> <span class=\"nx\">storage</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">azure-storage</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">client</span> <span class=\"o\">=</span> <span class=\"nx\">storage</span><span class=\"p\">.</span><span class=\"nx\">createTableService</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">接続文字列</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">eg</span> <span class=\"o\">=</span> <span class=\"nx\">storage</span><span class=\"p\">.</span><span class=\"nx\">TableUtilities</span><span class=\"p\">.</span><span class=\"nx\">entityGenerator</span>\n\n<span class=\"c1\">//</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">// テーブル作成(テーブルのスキーマ定義は行わない)</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">//</span>\n<span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">createTableIfNotExists</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;テーブル名&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">,</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// 処理が終了するとコールバックが呼ばれる。</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\">//</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">// レコードの登録/更新。</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">//</span>\n\n<span class=\"c1\">// 登録時に型指定も行う。</span>\n<span class=\"kd\">const</span> <span class=\"nx\">entry</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"na\">PartitionKey</span><span class=\"p\">:</span> <span class=\"nx\">eg</span><span class=\"p\">.</span><span class=\"nb\">String</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;PartitionKeyの値&gt;</span><span class=\"dl\">'</span><span class=\"p\">),</span>\n<span class=\"na\">RowKey</span><span class=\"p\">:</span> <span class=\"nx\">eg</span><span class=\"p\">.</span><span class=\"nb\">String</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;RowKeyの値&gt;</span><span class=\"dl\">'</span><span class=\"p\">),</span>\n<span class=\"na\">no</span><span class=\"p\">:</span> <span class=\"nx\">eg</span><span class=\"p\">.</span><span class=\"nx\">Int64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\">// 任意の項目</span>\n<span class=\"p\">}</span>\n<span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">insertOrReplaceEntity</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;テーブル名&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">entry</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">,</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// 処理が終了するとコールバックが呼ばれる。</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\">//</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">// 任意のレコードを取得</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">//</span>\n<span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">retrieveEntity</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;PartitionKeyの値&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;RowKeyの値&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">key</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">,</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// result.entry に値が入っている</span>\n  <span class=\"c1\">// 値は&lt;項目名&gt;._ に入っている</span>\n  <span class=\"c1\">// console.log(result.entry.no._)   // 1</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\">//</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">// TableQuery を利用して、任意のPartition のレコードを取得</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">//</span>\n\n<span class=\"c1\">// 上位10件スコア取得、ではなく登録順に10件取得</span>\n<span class=\"kd\">const</span> <span class=\"nx\">q</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">storage</span><span class=\"p\">.</span><span class=\"nx\">TableQuery</span><span class=\"p\">().</span><span class=\"nx\">select</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">name</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">score</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">top</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">queryEntities</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">scores</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">q</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">,</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span>      \n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">entries</span> <span class=\"o\">=</span> <span class=\"nx\">result</span><span class=\"p\">.</span><span class=\"nx\">entries</span>\n    <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">const</span> <span class=\"nx\">e</span> <span class=\"k\">of</span> <span class=\"nx\">entries</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">,</span> <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">score</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n\n\n</code></pre></div>\n</div>\n\n<p>TableQueryが提供しているインターフェイス(2020/10/10時点)</p>\n\n<div class=\"code-frame\" data-lang=\"typescript\">\n<div class=\"code-lang\"><span class=\"bold\">azure-storage.d.ts</span></div>\n<div class=\"highlight\"><pre><code>\n<span class=\"c1\">// コメント除去して抜粋</span>\n\n<span class=\"k\">export</span> <span class=\"kr\">interface</span> <span class=\"nx\">TableQuery</span> <span class=\"p\">{</span>\n  <span class=\"nx\">select</span><span class=\"p\">(...</span><span class=\"nx\">args</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">[]):</span> <span class=\"nx\">TableQuery</span><span class=\"p\">;</span>\n  <span class=\"nx\">select</span><span class=\"p\">(</span><span class=\"nx\">args</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">[]):</span> <span class=\"nx\">TableQuery</span><span class=\"p\">;</span>\n\n  <span class=\"nx\">top</span><span class=\"p\">(</span><span class=\"nx\">top</span><span class=\"p\">:</span> <span class=\"kr\">number</span><span class=\"p\">):</span> <span class=\"nx\">TableQuery</span><span class=\"p\">;</span>\n\n  <span class=\"nx\">where</span><span class=\"p\">(</span><span class=\"nx\">condition</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"p\">...</span><span class=\"nx\">args</span><span class=\"p\">:</span> <span class=\"kr\">any</span><span class=\"p\">[]):</span> <span class=\"nx\">TableQuery</span><span class=\"p\">;</span>\n  <span class=\"nx\">and</span><span class=\"p\">(</span><span class=\"nx\">condition</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"p\">...</span><span class=\"nx\">args</span><span class=\"p\">:</span> <span class=\"kr\">any</span><span class=\"p\">[]):</span> <span class=\"nx\">TableQuery</span><span class=\"p\">;</span>\n  <span class=\"nx\">or</span><span class=\"p\">(</span><span class=\"nx\">condition</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"p\">...</span><span class=\"nx\">args</span><span class=\"p\">:</span> <span class=\"kr\">any</span><span class=\"p\">[]):</span> <span class=\"nx\">TableQuery</span><span class=\"p\">;</span>\n\n  <span class=\"nx\">toQueryObject</span><span class=\"p\">():</span> <span class=\"nb\">Object</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">var</span> <span class=\"nx\">TableQuery</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n  <span class=\"k\">new</span><span class=\"p\">():</span> <span class=\"nx\">TableQuery</span><span class=\"p\">;</span>\n\n  <span class=\"nx\">int32Filter</span><span class=\"p\">(</span><span class=\"nx\">propertyName</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">operation</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">value</span><span class=\"p\">:</span> <span class=\"kr\">string</span> <span class=\"o\">|</span> <span class=\"kr\">number</span><span class=\"p\">):</span> <span class=\"kr\">string</span><span class=\"p\">;</span>\n  <span class=\"nx\">int64Filter</span><span class=\"p\">(</span><span class=\"nx\">propertyName</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">operation</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">value</span><span class=\"p\">:</span> <span class=\"kr\">string</span> <span class=\"o\">|</span> <span class=\"kr\">number</span><span class=\"p\">):</span> <span class=\"kr\">string</span><span class=\"p\">;</span>\n  <span class=\"nx\">doubleFilter</span><span class=\"p\">(</span><span class=\"nx\">propertyName</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">operation</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">value</span><span class=\"p\">:</span> <span class=\"kr\">string</span> <span class=\"o\">|</span> <span class=\"kr\">number</span><span class=\"p\">):</span> <span class=\"kr\">string</span><span class=\"p\">;</span>\n  <span class=\"nx\">booleanFilter</span><span class=\"p\">(</span><span class=\"nx\">propertyName</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">operation</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">value</span><span class=\"p\">:</span> <span class=\"nx\">boolean</span> <span class=\"o\">|</span> <span class=\"kr\">string</span><span class=\"p\">):</span> <span class=\"kr\">string</span><span class=\"p\">;</span>\n  <span class=\"nx\">dateFilter</span><span class=\"p\">(</span><span class=\"nx\">propertyName</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">operation</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">value</span><span class=\"p\">:</span> <span class=\"nb\">Date</span> <span class=\"o\">|</span> <span class=\"kr\">string</span><span class=\"p\">):</span> <span class=\"kr\">string</span><span class=\"p\">;</span>\n  <span class=\"nx\">guidFilter</span><span class=\"p\">(</span><span class=\"nx\">propertyName</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">operation</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">value</span><span class=\"p\">:</span> <span class=\"kr\">string</span> <span class=\"o\">|</span> <span class=\"kr\">any</span><span class=\"p\">):</span> <span class=\"kr\">string</span><span class=\"p\">;</span>\n  <span class=\"nx\">binaryFilter</span><span class=\"p\">(</span><span class=\"nx\">propertyName</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">operation</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">value</span><span class=\"p\">:</span> <span class=\"nx\">Buffer</span> <span class=\"o\">|</span> <span class=\"kr\">string</span><span class=\"p\">):</span> <span class=\"kr\">string</span><span class=\"p\">;</span>\n  <span class=\"nx\">stringFilter</span><span class=\"p\">(</span><span class=\"nx\">propertyName</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">operation</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">value</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">):</span> <span class=\"kr\">string</span><span class=\"p\">;</span>\n  <span class=\"nx\">combineFilters</span><span class=\"p\">(</span><span class=\"nx\">filterA</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">operatorString</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"nx\">filterB</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">):</span> <span class=\"kr\">string</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n</div>\n\n<h1>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h1>\n\n<p>NoSQLは、RDBよりチョロい上に無料という思い込みで作業を開始したが、CosmosDBが提供するサービスは想像以上に高機能だった。<br>\nMongoDBやCassandraを利用していたのであれば低い学習コストで移行できるかもしれない。</p>\n\n<p><code>distinct</code>と<code>order by</code> ができるようでしたらご指摘頂けますと助かります。</p>\n\n<p>※作業開始前にドキュメントはよく読もう。</p>\n",
    "body": "# はじめに\n\nAzure Cosmos DBはただのNoSQL DBかと思い、[前回の記事](https://qiita.com/kaku3/items/c64eb4acd97ab8e41592)で で無料でハイスコアDBを作り始めたが、Table Api を使わないと期待する実装ができなそうに思え Table Api を調べることにした。\n\n結論を先に述べておくと、Table Api には **ソート機能** がないためハイスコアDBとしては使えなかった。\n\n# APIとデータモデル\n\nAzure Cosmos DB では、DBアカウント作成時にAPIとデータモデルの種類が選択できる。\n\n|種類   |内容   |\n|---|---|\n|コア(SQL)   |jsonで保存したデータを、SQLの様な文法でqueryしアクセスする   |\n|MongoDB 用 Azure Cosmos DB API|[Azure Cosmos DB の MongoDB 用 API](https://docs.microsoft.com/ja-jp/azure/cosmos-db/mongodb-introduction)|\n|Cassandra|[Azure Cosmos DB の Cassandra API の概要](https://docs.microsoft.com/ja-jp/azure/cosmos-db/cassandra-introduction)|\n|Azure テーブル |[Azure Cosmos DB の概要:テーブル API](https://docs.microsoft.com/ja-jp/azure/cosmos-db/table-introduction) \n|Gremlin(グラフ)|[Azure Cosmos DB での Gremlin API の概要](https://docs.microsoft.com/ja-jp/azure/cosmos-db/graph-introduction)\n\nMongoDB, Cassandra は、同じくNoSQL DB。元々利用していれば同じインターフェース(API)で使えて移行が容易とのこと。どちらも利用していなかったので詳細は省略。\nGremlinは、グラフデータベース。今回の要件に対しては意識が高すぎるので詳細は省略。\n\nコア(SQL)で作成したDBをAzure Portal のコンソールから確認すると生のjsonが表示され「何か違うな」と思いAzure テーブルにしたが、そこは気にせずにコア(SQL)にしておけばよかったが後の祭り。\n\n# Azureテーブル\n\nPartitionKey, RowKey を持つ、Key-Value Store。\nAzure Portal のコンソールから確認すると、各項目をヘッダに持つテーブルが表示され「俺の知ってるDBってこれだよな」という安心感があった。また、Apiもシンプルで学習コストも低く見えたので作業を進めた。\n\n![table-api.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7784f750-760d-d611-1e2b-37d2323678a4.png)\n\n※データエクスプローラ(AZURE TABLE API)：よく見るDBっぽい何かで安心感がある画面\n\ncreate, insert, update と順調に作業を進めたが、read する際に sort ができないことに気づいた。\nよって本プロジェクトではAzureテーブルは利用しない事としたが、せっかく調べたので記録として残しておくことにした。\n\n``` test.js\nconst storage = require('azure-storage')\nconst client = storage.createTableService('接続文字列')\nconst eg = storage.TableUtilities.entityGenerator\n\n//\n//\n// テーブル作成(テーブルのスキーマ定義は行わない)\n//\n//\nclient.createTableIfNotExists('<テーブル名>', (error, result) => {\n  // 処理が終了するとコールバックが呼ばれる。\n})\n\n//\n//\n// レコードの登録/更新。\n//\n//\n\n// 登録時に型指定も行う。\nconst entry = {\nPartitionKey: eg.String('<PartitionKeyの値>'),\nRowKey: eg.String('<RowKeyの値>'),\nno: eg.Int64(1) // 任意の項目\n}\nclient.insertOrReplaceEntity('<テーブル名>', entry, (error, result) => {\n  // 処理が終了するとコールバックが呼ばれる。\n})\n\n//\n//\n// 任意のレコードを取得\n//\n//\nclient.retrieveEntity('<PartitionKeyの値>', '<RowKeyの値>', key, (error, result) => {\n  // result.entry に値が入っている\n  // 値は<項目名>._ に入っている\n  // console.log(result.entry.no._)   // 1\n})\n\n//\n//\n// TableQuery を利用して、任意のPartition のレコードを取得\n//\n//\n\n// 上位10件スコア取得、ではなく登録順に10件取得\nconst q = new storage.TableQuery().select('name', 'score').top(10)\n\nclient.queryEntities('scores', q, null, (error, result) => {\n  if(error) {\n    console.error(error)      \n  } else {\n    const entries = result.entries\n    for(const e of entries) {\n      console.log(e.name._, e.score._)\n    }\n  }\n})\n\n\n```\n\nTableQueryが提供しているインターフェイス(2020/10/10時点)\n\n``` azure-storage.d.ts\n\n// コメント除去して抜粋\n\nexport interface TableQuery {\n  select(...args: string[]): TableQuery;\n  select(args: string[]): TableQuery;\n\n  top(top: number): TableQuery;\n\n  where(condition: string, ...args: any[]): TableQuery;\n  and(condition: string, ...args: any[]): TableQuery;\n  or(condition: string, ...args: any[]): TableQuery;\n\n  toQueryObject(): Object;\n}\n\nexport var TableQuery: {\n  new(): TableQuery;\n\n  int32Filter(propertyName: string, operation: string, value: string | number): string;\n  int64Filter(propertyName: string, operation: string, value: string | number): string;\n  doubleFilter(propertyName: string, operation: string, value: string | number): string;\n  booleanFilter(propertyName: string, operation: string, value: boolean | string): string;\n  dateFilter(propertyName: string, operation: string, value: Date | string): string;\n  guidFilter(propertyName: string, operation: string, value: string | any): string;\n  binaryFilter(propertyName: string, operation: string, value: Buffer | string): string;\n  stringFilter(propertyName: string, operation: string, value: string): string;\n  combineFilters(filterA: string, operatorString: string, filterB: string): string;\n};\n```\n\n# おわりに\n\nNoSQLは、RDBよりチョロい上に無料という思い込みで作業を開始したが、CosmosDBが提供するサービスは想像以上に高機能だった。\nMongoDBやCassandraを利用していたのであれば低い学習コストで移行できるかもしれない。\n\n`distinct`と`order by` ができるようでしたらご指摘頂けますと助かります。\n\n※作業開始前にドキュメントはよく読もう。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-10-10T16:08:20+09:00",
    "group": null,
    "id": "d3e675790ce36ee54435",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "MongoDB",
        "versions": []
      },
      {
        "name": "Azure",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "Cassandra",
        "versions": []
      },
      {
        "name": "CosmosDB",
        "versions": []
      }
    ],
    "title": "Azure Cosmos で無料で作るハイスコアDB(2) : APIとデータモデルとAzureテーブル",
    "updated_at": "2020-10-10T16:08:20+09:00",
    "url": "https://qiita.com/kaku3/items/d3e675790ce36ee54435",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1627,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"競争本能とハイスコア\" class=\"fragment\"></span><a href=\"#%E7%AB%B6%E4%BA%89%E6%9C%AC%E8%83%BD%E3%81%A8%E3%83%8F%E3%82%A4%E3%82%B9%E3%82%B3%E3%82%A2\"><i class=\"fa fa-link\"></i></a>競争本能とハイスコア</h1>\n\n<p>プログラム学習用ピコピコゲーム<a href=\"https://kaku3.github.io/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ</a>を公開している。</p>\n\n<p>このゲームは学習用のピコピコゲームであるため、ゲーム自体は非常にシンプルであり、すぐに飽きてしまう。公開当初は気にならなかったが、せっかく作ったのだからリテンションが上がった方がいいと思い始めた。</p>\n\n<p>そこで、人間が本来持つ競争本能に訴えかけることでリテンションを改善しつつ、NoSQLデータベースへのデータ保存を学習できるように、ハイスコアを保存する処理を作成することにした。</p>\n\n<h1>\n<span id=\"dbの無料枠\" class=\"fragment\"></span><a href=\"#db%E3%81%AE%E7%84%A1%E6%96%99%E6%9E%A0\"><i class=\"fa fa-link\"></i></a>DBの無料枠</h1>\n\n<p>なぜNoSQLを選択したかと言うと、無料枠があるからだ。以下のサービスが候補になると思う。</p>\n\n<ul>\n<li>\n<p><a href=\"https://aws.amazon.com/jp/dynamodb/\" rel=\"nofollow noopener\" target=\"_blank\">Amazon DynamoDB</a></p>\n\n<blockquote>\n<p>AWS 無料利用枠は、お客様が AWS のサービスを無料で実際に体験できるように設定されています。AWS 無料利用枠の一部として、DynamoDB では以下の特典がご利用いただけます。各特典は、各リージョンで支払人アカウントごとに月単位で計算されます。</p>\n\n<p>25 GB のデータストレージ<br>\nDynamoDB ストリームからのストリーム読み込みリクエスト 250 万回<br>\nAWS のサービス全体での合計データ転送 (アウト) 1 GB</p>\n</blockquote>\n</li>\n<li>\n<p><a href=\"https://azure.microsoft.com/ja-jp/services/cosmos-db/\" rel=\"nofollow noopener\" target=\"_blank\">Azure Cosmos DB</a></p>\n\n<blockquote>\n<p>新しいアカウントで Free レベルを有効にすると、お客様のアカウントの有効期間中、毎月 400 RU/秒のプロビジョニング スループットと 5 GB のストレージを無料で利用することができます。</p>\n</blockquote>\n</li>\n<li>\n<p><a href=\"https://firebase.google.com/docs/database?hl=ja\" rel=\"nofollow noopener\" target=\"_blank\">Firebase Realtime Database</a></p>\n\n<blockquote>\n<p>同時接続 100<br>\nGB 保存済み 1 GB<br>\nGB ダウンロード済み 10 GB/月</p>\n</blockquote>\n</li>\n</ul>\n\n<p>ハイスコアデータは非常に小さいデータであるためどれを選んでもよかったが、個人的に興味のあったAzure Cosmos DB を利用することにした。</p>\n\n<h1>\n<span id=\"アカウントとサブスクリプションとリソースグループ\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%81%A8%E3%82%B5%E3%83%96%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%A8%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%B0%E3%83%AB%E3%83%BC%E3%83%97\"><i class=\"fa fa-link\"></i></a>アカウントとサブスクリプションとリソースグループ</h1>\n\n<p>AWSを使っててAzureを使う時に結構違うなと思うのが「サブスクリプション」と「リソースグループ」という考え方。AWSとは大きく異る考え方と感じるが、結構整理されていて多分便利なので覚えておきたい。</p>\n\n<ul>\n<li><p>アカウント<br>\n<a href=\"https://azure.microsoft.com/ja-jp/features/azure-portal/\" rel=\"nofollow noopener\" target=\"_blank\">Microsoft Azure Portal</a>より作成できるアカウント。</p></li>\n<li><p>サブスクリプション<br>\n何かの契約と感じるかもしれないが請求の単位を指している。会社でアカウントを作成した時に、部署やプロジェクトなど任意の単位で「サブスクリプション」を作成することにより容易に会計処理ができる模様。</p></li>\n</ul>\n\n<p>無料アカウントでは、「無料試用版」サブスクリプションを利用することになる。</p>\n\n<ul>\n<li>リソースグループ\nAzureで提供される全てのサービスはリソースと呼ばれ、それらを管理する単位として「リソースグループ」を定義できる。</li>\n</ul>\n\n<h1>\n<span id=\"cosmosdbの作成\" class=\"fragment\"></span><a href=\"#cosmosdb%E3%81%AE%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>CosmosDBの作成</h1>\n\n<p>Azure Portal のホーム画面より CosmosDBを選択</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/1eb5cbe2c9dd31bdd68d0531beeffb0934903408/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f61363833363331372d353036662d336539622d376133662d6239373665326437333766302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa6836317-506f-3e9b-7a3f-b976e2d737f0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=3dc527086541ccedd1414321bdb70a0f\" alt=\"portal.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a6836317-506f-3e9b-7a3f-b976e2d737f0.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fa6836317-506f-3e9b-7a3f-b976e2d737f0.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f6d85588a7098e7de945006ec32e4cdb 1x\" loading=\"lazy\"></a></p>\n\n<p>CosmosDBアカウントの作成画面で作成を行う。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/5091f11a0da01552b7df266fbfa589538948b11c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f39393865363537662d663766622d666433622d373136322d6565656539633262303566362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F998e657f-f7fb-fd3b-7162-eeee9c2b05f6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=bf5f41151050822e67f844938cfd7d7a\" alt=\"cosmos.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/998e657f-f7fb-fd3b-7162-eeee9c2b05f6.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F998e657f-f7fb-fd3b-7162-eeee9c2b05f6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=a360f7994c08b7784be6f92987025de4 1x\" loading=\"lazy\"></a></p>\n\n<p>作成時メモ：<br>\n- 初回作成時はリソースグループを作成していないが、本画面よりリソースグループを作成可能。<br>\n- アカウント名はサブドメイン名として利用される名称であるので、世界で一意になる名称を指定する。</p>\n\n<ul>\n<li><p>APIは「コア(SQL)」を選択するとクイックスタートよりダウンロードできるソースが分かりやすいものになるので初回は「コア(SQL)」を選択するとよさそう。</p></li>\n<li><p>一つのサブスクリプションに無料枠を含むCosmosDBアカウントを複数作れない</p></li>\n<li><p>アカウントの作成は5分程度かかる。辛抱強く待とう。</p></li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/4d198bbc0f80c64b324029b633737456a5c3b016/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f39613033326166312d353935332d313631382d613637612d6533333561363231663661372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F9a032af1-5953-1618-a67a-e335a621f6a7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=4382c16c4a090351c95edcb655e58b3c\" alt=\"cosmos-create-account.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/9a032af1-5953-1618-a67a-e335a621f6a7.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F9a032af1-5953-1618-a67a-e335a621f6a7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ea3a9f3d58c9764147941139dbd4bccc 1x\" loading=\"lazy\"></a></p>\n\n<h1>\n<span id=\"クイックスタート\" class=\"fragment\"></span><a href=\"#%E3%82%AF%E3%82%A4%E3%83%83%E3%82%AF%E3%82%B9%E3%82%BF%E3%83%BC%E3%83%88\"><i class=\"fa fa-link\"></i></a>クイックスタート</h1>\n\n<p><a href=\"https://camo.qiitausercontent.com/036092815807bde9ca6c0377aaf1ca9f17c6bc77/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f64623235313466652d636232372d343835632d663133322d6663363761623239313362352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdb2514fe-cb27-485c-f132-fc67ab2913b5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=0e239f6e3bd288ba5c061fafea1ce840\" alt=\"cosmos-quick-start.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/db2514fe-cb27-485c-f132-fc67ab2913b5.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fdb2514fe-cb27-485c-f132-fc67ab2913b5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=633a0456830058b3546d5256d03d4038 1x\" loading=\"lazy\"></a></p>\n\n<p>Node.js のプロジェクトのzipをダウンロードする。<br>\n解凍すると、データベースの作成、データ作成/更新/削除が含まれるサンプルコードが含まれており、以下で実行できる。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>npm install\nnpm start\n</code></pre></div></div>\n\n<p><code>npm start</code> した後に、Azure Portal のデータエクスプローラーを確認すると、サンプルコードに含まれるデータが登録されているのが確認できる。適当にソースをいじって登録データを変更してみると理解が深まる。</p>\n\n<p>以下は初期ハイスコア登録用に修正したコード(途中)</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">app.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nx\">createDatabase</span><span class=\"p\">()</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">readDatabase</span><span class=\"p\">())</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">createContainer</span><span class=\"p\">())</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">readContainer</span><span class=\"p\">())</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">scaleContainer</span><span class=\"p\">())</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">creates</span> <span class=\"o\">=</span> <span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">hiScores</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"nx\">v</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">createItem</span><span class=\"p\">(</span><span class=\"nx\">v</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"nb\">Promise</span><span class=\"p\">.</span><span class=\"nx\">all</span><span class=\"p\">(</span><span class=\"nx\">creates</span><span class=\"p\">)</span>\n  <span class=\"p\">})</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">queryContainer</span><span class=\"p\">())</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">exit</span><span class=\"p\">(</span><span class=\"s2\">`Completed successfully`</span><span class=\"p\">)</span>\n  <span class=\"p\">})</span>\n  <span class=\"p\">.</span><span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"nx\">error</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">exit</span><span class=\"p\">(</span><span class=\"s2\">`Completed with error </span><span class=\"p\">${</span><span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)}</span><span class=\"s2\">`</span><span class=\"p\">)</span>\n  <span class=\"p\">})</span>\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">config.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">hiScores</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">1</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"c1\">// Id must be a string.</span>\n    <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SHEEP</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">score</span><span class=\"p\">:</span> <span class=\"mi\">1000</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">2</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"c1\">// Id must be a string.</span>\n    <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SHEEP</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">score</span><span class=\"p\">:</span> <span class=\"mi\">900</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">3</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"c1\">// Id must be a string.</span>\n    <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SHEEP</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">score</span><span class=\"p\">:</span> <span class=\"mi\">800</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">4</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"c1\">// Id must be a string.</span>\n    <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SHEEP</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">score</span><span class=\"p\">:</span> <span class=\"mi\">700</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">5</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"c1\">// Id must be a string.</span>\n    <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SHEEP</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">score</span><span class=\"p\">:</span> <span class=\"mi\">600</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">6</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"c1\">// Id must be a string.</span>\n    <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SHEEP</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">score</span><span class=\"p\">:</span> <span class=\"mi\">500</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">7</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"c1\">// Id must be a string.</span>\n    <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SHEEP</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">score</span><span class=\"p\">:</span> <span class=\"mi\">400</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">8</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"c1\">// Id must be a string.</span>\n    <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SHEEP</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">score</span><span class=\"p\">:</span> <span class=\"mi\">300</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">9</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"c1\">// Id must be a string.</span>\n    <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SHEEP</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">score</span><span class=\"p\">:</span> <span class=\"mi\">200</span>\n  <span class=\"p\">},</span>\n   <span class=\"p\">{</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">10</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"c1\">// Id must be a string.</span>\n    <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SHEEP</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">score</span><span class=\"p\">:</span> <span class=\"mi\">100</span>\n  <span class=\"p\">},</span>\n<span class=\"p\">]</span>\n</code></pre></div>\n</div>\n\n<p>NoSQL なのに、SELECT文で検索できるのは便利そうだった。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">app.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\">// サンプルコードより</span>\n<span class=\"cm\">/**\n * Query the container using SQL\n */</span>\n<span class=\"k\">async</span> <span class=\"kd\">function</span> <span class=\"nx\">queryContainer</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`Querying container:\\n</span><span class=\"p\">${</span><span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">container</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">)</span>\n\n  <span class=\"c1\">// query to return all children in a family</span>\n  <span class=\"c1\">// Including the partition key value of lastName in the WHERE filter results in a more efficient query</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">querySpec</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"na\">query</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">SELECT VALUE r.children FROM root r WHERE r.lastName = @lastName</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">parameters</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n        <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">@lastName</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n        <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">Andersen</span><span class=\"dl\">'</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"na\">resources</span><span class=\"p\">:</span> <span class=\"nx\">results</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">client</span>\n    <span class=\"p\">.</span><span class=\"nx\">database</span><span class=\"p\">(</span><span class=\"nx\">databaseId</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">container</span><span class=\"p\">(</span><span class=\"nx\">containerId</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">items</span><span class=\"p\">.</span><span class=\"nx\">query</span><span class=\"p\">(</span><span class=\"nx\">querySpec</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">fetchAll</span><span class=\"p\">()</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">queryResult</span> <span class=\"k\">of</span> <span class=\"nx\">results</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">resultString</span> <span class=\"o\">=</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">queryResult</span><span class=\"p\">)</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`\\tQuery returned </span><span class=\"p\">${</span><span class=\"nx\">resultString</span><span class=\"p\">}</span><span class=\"s2\">\\n`</span><span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<h1>\n<span id=\"azure-テーブル\" class=\"fragment\"></span><a href=\"#azure-%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB\"><i class=\"fa fa-link\"></i></a>Azure テーブル</h1>\n\n<p>ここまで作成して、autoincrement できなくてスコア登録できないことに気づく。<br>\n他にもテーブルをいくつか持ちたくなることを考えると「コア(SQL)」ではなく「Azure テーブル」でCosmoDBアカウントを作り直した方がよさそうに思えた。APIはシンプルだったが、テーブル作成時点で課金が確定してしまう？</p>\n\n<p><a href=\"https://azure.github.io/azure-storage-node/#toc6__anchor\" rel=\"nofollow noopener\" target=\"_blank\">Microsoft Azure Storage SDK for Node.js and JavaScript for Browsers#Table Storage</a></p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>const storage = require('azure-storage')\nconst config = require('./.env.js')\nconst client = storage.createTableService(config.cosmos)\nconst eg = storage.TableUtilities.entityGenerator\n\n// table 作成\nclient.createTableIfNotExists(table, (error, result, response) =&gt; {\n  if(!error) {\n    console.log(result)\n  }\n})\n\n// entry 作成例\nasync function initSequence() {\n  console.group('init sequence')\n  const entry = {\n    PartitionKey: eg.String('sequences'),\n    RowKey: eg.String('hiScores'),\n    no: eg.Int64(1) \n  }\n  await client.insertOrReplaceEntity('sequences', entry, (error, result, response) =&gt; {\n    if(!error) {\n      console.log(result)\n    }\n  })\n  console.groupEnd()\n}\n\n// entry 取得例\nfunction retrieveSequence(key) {\n  client.retrieveEntity('sequences', 'sequences', key, (error, result, response) =&gt; {\n    if(!error) {\n      console.log(result)\n    }\n  })\n}\n\n</code></pre></div></div>\n\n<h1>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h1>\n\n<p>Webpush 通知も作る予定なので Firebase に寄せた方が簡単かと思ったが、Azure を触っておきたかったので Cosmos DB を利用した。<br>\nアカウント作成にクレカが必要だったり微妙なハードルはあったが、サンプルコードがダウンロードできたため思ったより簡単に確認までできたが、複雑なデータを格納したい場合には検討が必要そうだった。</p>\n\n<p>参考：<br>\n<a href=\"https://qiita.com/ymasaoka/items/3784c64baf30bbe7b761\" id=\"reference-637988442051e2549f40\">2020年から始める Azure Cosmos DB - 環境構築</a></p>\n",
    "body": "# 競争本能とハイスコア\n\nプログラム学習用ピコピコゲーム[砂漠のひつじ](https://kaku3.github.io/the-sheep-in-the-desert/)を公開している。\n\nこのゲームは学習用のピコピコゲームであるため、ゲーム自体は非常にシンプルであり、すぐに飽きてしまう。公開当初は気にならなかったが、せっかく作ったのだからリテンションが上がった方がいいと思い始めた。\n\nそこで、人間が本来持つ競争本能に訴えかけることでリテンションを改善しつつ、NoSQLデータベースへのデータ保存を学習できるように、ハイスコアを保存する処理を作成することにした。\n\n# DBの無料枠\n\nなぜNoSQLを選択したかと言うと、無料枠があるからだ。以下のサービスが候補になると思う。\n\n- [Amazon DynamoDB](https://aws.amazon.com/jp/dynamodb/)\n> AWS 無料利用枠は、お客様が AWS のサービスを無料で実際に体験できるように設定されています。AWS 無料利用枠の一部として、DynamoDB では以下の特典がご利用いただけます。各特典は、各リージョンで支払人アカウントごとに月単位で計算されます。\n> \n> 25 GB のデータストレージ\n> DynamoDB ストリームからのストリーム読み込みリクエスト 250 万回\n> AWS のサービス全体での合計データ転送 (アウト) 1 GB\n\n- [Azure Cosmos DB](https://azure.microsoft.com/ja-jp/services/cosmos-db/)\n> 新しいアカウントで Free レベルを有効にすると、お客様のアカウントの有効期間中、毎月 400 RU/秒のプロビジョニング スループットと 5 GB のストレージを無料で利用することができます。\n\n- [Firebase Realtime Database](https://firebase.google.com/docs/database?hl=ja)\n> 同時接続 100\n> GB 保存済み 1 GB\n> GB ダウンロード済み 10 GB/月\n\nハイスコアデータは非常に小さいデータであるためどれを選んでもよかったが、個人的に興味のあったAzure Cosmos DB を利用することにした。\n\n# アカウントとサブスクリプションとリソースグループ\n\nAWSを使っててAzureを使う時に結構違うなと思うのが「サブスクリプション」と「リソースグループ」という考え方。AWSとは大きく異る考え方と感じるが、結構整理されていて多分便利なので覚えておきたい。\n\n- アカウント\n[Microsoft Azure Portal](https://azure.microsoft.com/ja-jp/features/azure-portal/)より作成できるアカウント。\n\n- サブスクリプション\n何かの契約と感じるかもしれないが請求の単位を指している。会社でアカウントを作成した時に、部署やプロジェクトなど任意の単位で「サブスクリプション」を作成することにより容易に会計処理ができる模様。\n\n無料アカウントでは、「無料試用版」サブスクリプションを利用することになる。\n\n- リソースグループ\nAzureで提供される全てのサービスはリソースと呼ばれ、それらを管理する単位として「リソースグループ」を定義できる。\n\n# CosmosDBの作成\n\nAzure Portal のホーム画面より CosmosDBを選択\n\n![portal.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/a6836317-506f-3e9b-7a3f-b976e2d737f0.png)\n\nCosmosDBアカウントの作成画面で作成を行う。\n\n![cosmos.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/998e657f-f7fb-fd3b-7162-eeee9c2b05f6.png)\n\n作成時メモ：\n- 初回作成時はリソースグループを作成していないが、本画面よりリソースグループを作成可能。\n- アカウント名はサブドメイン名として利用される名称であるので、世界で一意になる名称を指定する。\n\n- APIは「コア(SQL)」を選択するとクイックスタートよりダウンロードできるソースが分かりやすいものになるので初回は「コア(SQL)」を選択するとよさそう。\n\n- 一つのサブスクリプションに無料枠を含むCosmosDBアカウントを複数作れない\n- アカウントの作成は5分程度かかる。辛抱強く待とう。\n\n![cosmos-create-account.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/9a032af1-5953-1618-a67a-e335a621f6a7.png)\n\n# クイックスタート\n\n![cosmos-quick-start.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/db2514fe-cb27-485c-f132-fc67ab2913b5.png)\n\nNode.js のプロジェクトのzipをダウンロードする。\n解凍すると、データベースの作成、データ作成/更新/削除が含まれるサンプルコードが含まれており、以下で実行できる。\n\n```\nnpm install\nnpm start\n```\n\n`npm start` した後に、Azure Portal のデータエクスプローラーを確認すると、サンプルコードに含まれるデータが登録されているのが確認できる。適当にソースをいじって登録データを変更してみると理解が深まる。\n\n以下は初期ハイスコア登録用に修正したコード(途中)\n\n``` app.js\ncreateDatabase()\n  .then(() => readDatabase())\n  .then(() => createContainer())\n  .then(() => readContainer())\n  .then(() => scaleContainer())\n  .then(() => {\n    const creates = config.hiScores.map(v => createItem(v))\n    return Promise.all(creates)\n  })\n  .then(() => queryContainer())\n  .then(() => {\n    exit(`Completed successfully`)\n  })\n  .catch(error => {\n    exit(`Completed with error ${JSON.stringify(error)}`)\n  })\n```\n\n``` config.js\nconfig.hiScores = [\n  {\n    id: '1',  // Id must be a string.\n    name: 'SHEEP',\n    score: 1000\n  },\n  {\n    id: '2',  // Id must be a string.\n    name: 'SHEEP',\n    score: 900\n  },\n  {\n    id: '3',  // Id must be a string.\n    name: 'SHEEP',\n    score: 800\n  },\n  {\n    id: '4',  // Id must be a string.\n    name: 'SHEEP',\n    score: 700\n  },\n  {\n    id: '5',  // Id must be a string.\n    name: 'SHEEP',\n    score: 600\n  },\n  {\n    id: '6',  // Id must be a string.\n    name: 'SHEEP',\n    score: 500\n  },\n  {\n    id: '7',  // Id must be a string.\n    name: 'SHEEP',\n    score: 400\n  },\n  {\n    id: '8',  // Id must be a string.\n    name: 'SHEEP',\n    score: 300\n  },\n  {\n    id: '9',  // Id must be a string.\n    name: 'SHEEP',\n    score: 200\n  },\n   {\n    id: '10', // Id must be a string.\n    name: 'SHEEP',\n    score: 100\n  },\n]\n```\n\nNoSQL なのに、SELECT文で検索できるのは便利そうだった。\n\n``` app.js\n// サンプルコードより\n/**\n * Query the container using SQL\n */\nasync function queryContainer() {\n  console.log(`Querying container:\\n${config.container.id}`)\n\n  // query to return all children in a family\n  // Including the partition key value of lastName in the WHERE filter results in a more efficient query\n  const querySpec = {\n    query: 'SELECT VALUE r.children FROM root r WHERE r.lastName = @lastName',\n    parameters: [\n      {\n        name: '@lastName',\n        value: 'Andersen'\n      }\n    ]\n  }\n\n  const { resources: results } = await client\n    .database(databaseId)\n    .container(containerId)\n    .items.query(querySpec)\n    .fetchAll()\n  for (var queryResult of results) {\n    let resultString = JSON.stringify(queryResult)\n    console.log(`\\tQuery returned ${resultString}\\n`)\n  }\n}\n```\n\n\n# Azure テーブル\n\nここまで作成して、autoincrement できなくてスコア登録できないことに気づく。\n他にもテーブルをいくつか持ちたくなることを考えると「コア(SQL)」ではなく「Azure テーブル」でCosmoDBアカウントを作り直した方がよさそうに思えた。APIはシンプルだったが、テーブル作成時点で課金が確定してしまう？\n\n[Microsoft Azure Storage SDK for Node.js and JavaScript for Browsers#Table Storage](https://azure.github.io/azure-storage-node/#toc6__anchor)\n\n```\nconst storage = require('azure-storage')\nconst config = require('./.env.js')\nconst client = storage.createTableService(config.cosmos)\nconst eg = storage.TableUtilities.entityGenerator\n\n// table 作成\nclient.createTableIfNotExists(table, (error, result, response) => {\n  if(!error) {\n    console.log(result)\n  }\n})\n\n// entry 作成例\nasync function initSequence() {\n  console.group('init sequence')\n  const entry = {\n    PartitionKey: eg.String('sequences'),\n    RowKey: eg.String('hiScores'),\n    no: eg.Int64(1) \n  }\n  await client.insertOrReplaceEntity('sequences', entry, (error, result, response) => {\n    if(!error) {\n      console.log(result)\n    }\n  })\n  console.groupEnd()\n}\n\n// entry 取得例\nfunction retrieveSequence(key) {\n  client.retrieveEntity('sequences', 'sequences', key, (error, result, response) => {\n    if(!error) {\n      console.log(result)\n    }\n  })\n}\n\n```\n\n# おわりに\n\nWebpush 通知も作る予定なので Firebase に寄せた方が簡単かと思ったが、Azure を触っておきたかったので Cosmos DB を利用した。\nアカウント作成にクレカが必要だったり微妙なハードルはあったが、サンプルコードがダウンロードできたため思ったより簡単に確認までできたが、複雑なデータを格納したい場合には検討が必要そうだった。\n\n参考：\n[2020年から始める Azure Cosmos DB - 環境構築](https://qiita.com/ymasaoka/items/3784c64baf30bbe7b761)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-10-03T23:34:48+09:00",
    "group": null,
    "id": "c64eb4acd97ab8e41592",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 1,
    "tags": [
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "Azure",
        "versions": []
      },
      {
        "name": "ゲーム制作",
        "versions": []
      },
      {
        "name": "CosmosDB",
        "versions": []
      }
    ],
    "title": "Azure Cosmos で無料で作るハイスコアDB(1)",
    "updated_at": "2020-10-04T00:48:11+09:00",
    "url": "https://qiita.com/kaku3/items/c64eb4acd97ab8e41592",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1901,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"ピコピコゲームのゲームデザインとエモいuiux\" class=\"fragment\"></span><a href=\"#%E3%83%94%E3%82%B3%E3%83%94%E3%82%B3%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%AE%E3%82%B2%E3%83%BC%E3%83%A0%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%81%A8%E3%82%A8%E3%83%A2%E3%81%84uiux\"><i class=\"fa fa-link\"></i></a>ピコピコゲームのゲームデザインとエモいUI/UX</h1>\n\n<p>最近ではいかに長く飽きさせずにお金を落とさせるイベント設計やガチャの話題ばかりである様に思えるけれども、マリオブラザーズやドンキーコングに代表される初期ファミコンのピコピコゲームは、もっと人間の感覚に訴える部分でいかに人を楽しませるか、言い換えると、ユーザーの <strong>インプット</strong> に対して、 <strong>エモいリアクション</strong> が画面の表現より得られ、ユーザーが気持ちよくなれるような工夫がされていたと思う。</p>\n\n<p>これを深堀りすると、よいUI/UXを設計するヒントが得られるのではないだろうか？</p>\n\n<h1>\n<span id=\"エモいリアクションとアフォーダンス\" class=\"fragment\"></span><a href=\"#%E3%82%A8%E3%83%A2%E3%81%84%E3%83%AA%E3%82%A2%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%A8%E3%82%A2%E3%83%95%E3%82%A9%E3%83%BC%E3%83%80%E3%83%B3%E3%82%B9\"><i class=\"fa fa-link\"></i></a>エモいリアクションとアフォーダンス</h1>\n\n<p>APEXやフォートナイトなど最近のハイエンドなゲームは様々な要素が高度に組み合わさって世界観を醸すUIになっているため「お、この作りすげーな」と気づくには相当な修行が必要であるが、ピコピコゲームは限られたリソースの組み合わせてユーザーの感情に訴えかけるので、少し観察をすると多くの気づきが得られると思う。</p>\n\n<p>例えば『土管からカメが出てきて配管工っぽい男性に向かって歩いてくる』超有名なゲーム。</p>\n\n<p>このゲームの謎の世界観、冷静に考えると全く意味が分からないが、得も言われぬ説得力が画面には存在しているのは皆さんもご存知の通りだと思う。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/873cd0aa5052c324262cd9b5567d04554c700b01/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37633034623037352d666134372d646566352d613337652d3366386135626533643537312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7c04b075-fa47-def5-a37e-3f8a5be3d571.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2e3a0413736078ad323dd9fc08304004\" alt=\"mario.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7c04b075-fa47-def5-a37e-3f8a5be3d571.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7c04b075-fa47-def5-a37e-3f8a5be3d571.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=bea6a47eef2587f4616ca71c0542e63e 1x\" loading=\"lazy\"></a></p>\n\n<p>ジャンプするとたわむ床。ひっくり返ると無防備になるカメ。全てがエモい。これはアフォーダンスの塊と言えるのではないだろうか？<br>\nそしてこれは、ユーザーに何らかの行動を促す一般的なウェブサイトでも応用が効く考え方ではないだろうか。</p>\n\n<p>個人的には、ウェブサイトのアフォーダンス設計はおもてなし設計だと思っている。理屈でガチガチに固めてABテストを行い購入ページに誘導する前に、ユーザーを気持ちよく行動させることにまずは目を向けてもらいたい。</p>\n\n<p>という観点で、以下の書籍が大変楽しく読めたのでぜひ合わせて読んでもらいたい。<br>\n<a href=\"https://www.amazon.co.jp/%E3%80%8C%E3%81%A4%E3%81%84%E3%82%84%E3%81%A3%E3%81%A6%E3%81%97%E3%81%BE%E3%81%86%E3%80%8D%E4%BD%93%E9%A8%93%E3%81%AE%E3%81%A4%E3%81%8F%E3%82%8A%E3%81%8B%E3%81%9F-%E4%BA%BA%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99%E3%80%8C%E7%9B%B4%E6%84%9F%E3%83%BB%E9%A9%9A%E3%81%8D%E3%83%BB%E7%89%A9%E8%AA%9E%E3%80%8D%E3%81%AE%E3%81%97%E3%81%8F%E3%81%BF-%E7%8E%89%E6%A8%B9-%E7%9C%9F%E4%B8%80%E9%83%8E/dp/4478106169\" rel=\"nofollow noopener\" target=\"_blank\">「ついやってしまう」体験のつくりかた 人を動かす「直感・驚き・物語」のしくみ</a></p>\n\n<h1>\n<span id=\"砂漠のひつじのuiux\" class=\"fragment\"></span><a href=\"#%E7%A0%82%E6%BC%A0%E3%81%AE%E3%81%B2%E3%81%A4%E3%81%98%E3%81%AEuiux\"><i class=\"fa fa-link\"></i></a>砂漠のひつじのUI/UX</h1>\n\n<p>オブジェクト指向の学習サンプルコードとして制作したピコピコゲームであるが、エモい仕掛けもいくつか入れてあるので、これを題材にエモさを考えてみたい。</p>\n\n<ul>\n<li><p>遊んでみる<br>\n<a href=\"https://kaku3.github.io/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ : GitHub pages</a></p></li>\n<li><p>ソース<br>\n<a href=\"https://github.com/kaku3/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ : GitHub</a></p></li>\n</ul>\n\n<h2>\n<span id=\"ゲーム開始直後\" class=\"fragment\"></span><a href=\"#%E3%82%B2%E3%83%BC%E3%83%A0%E9%96%8B%E5%A7%8B%E7%9B%B4%E5%BE%8C\"><i class=\"fa fa-link\"></i></a>ゲーム開始直後</h2>\n\n<p>以下はゲーム開始直後の画面であるが何か気づくだろうか？</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/860a16d00afc70831cbc20c283e3fd369bd165c4/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f65363939366236392d313832612d366337302d393836652d3663393534613738613232382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe6996b69-182a-6c70-986e-6c954a78a228.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2706cdb3f7c7b09789f32dd0944e316b\" alt=\"start.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e6996b69-182a-6c70-986e-6c954a78a228.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe6996b69-182a-6c70-986e-6c954a78a228.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=7f59aa10886164c46e5653062d0da3b2 1x\" loading=\"lazy\"></a></p>\n\n<p>ツノがないひつじと、左下に怪しい空気入れの様な何かを持った人物。画面上にはマウスの動きに連動して動く照準。更には、ユーザーの目線が散らからない様に初期ひつじの数を２匹とした。</p>\n\n<p>これらの配慮により『ツノ砲を撃ってひつじにツノをつけてあげるのか！』ともしも思ってもらえたのであれば、作者としては、この画面は充分にエモかった、よかったよかったという話となる。</p>\n\n<h2>\n<span id=\"スコア表示\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%82%B3%E3%82%A2%E8%A1%A8%E7%A4%BA\"><i class=\"fa fa-link\"></i></a>スコア表示</h2>\n\n<p>このゲームはひつじのコメカミに近い位置にツノをつける程得点が高い。自分の常識と比較しても得心のいくルールかと思うが、ユーザーに分かりやすく伝える必要があると思い、得点が高い程大きく表示する様にした。</p>\n\n<p>性質上、スコアは画面上に長く表示できないので <strong>「スコアを読み取れなくても、うまく操作したらよい結果となった」</strong> とユーザーに伝える必要があったからである。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/a9451aec3e4ca6a63423e59dea8902a1f4a45bd9/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f31666130623138392d656232332d646238662d666132322d3338663438653866303132312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F1fa0b189-eb23-db8f-fa22-38f48e8f0121.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e31b25c2ced1471ba3a5b4f16c935736\" alt=\"p-1.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/1fa0b189-eb23-db8f-fa22-38f48e8f0121.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F1fa0b189-eb23-db8f-fa22-38f48e8f0121.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ba8eda5e880b7955f96424a7ff3ecfe6 1x\" loading=\"lazy\"></a></p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">score-effect.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\">// コードとしてはわずか数文字で大きな視覚効果が得られる</span>\n<span class=\"c1\">// scale: 1 + score / 20</span>\n<span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">tl</span><span class=\"p\">.</span><span class=\"nx\">to</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selector</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">top</span><span class=\"p\">:</span> <span class=\"nx\">y</span> <span class=\"o\">/</span> <span class=\"mi\">80</span> <span class=\"o\">+</span> <span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"na\">scale</span><span class=\"p\">:</span> <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"nx\">score</span> <span class=\"o\">/</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"na\">duration</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"na\">ease</span><span class=\"p\">:</span> <span class=\"nx\">Power4</span><span class=\"p\">.</span><span class=\"nx\">easeOut</span> <span class=\"p\">})</span>\n<span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">tl</span><span class=\"p\">.</span><span class=\"nx\">to</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selector</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">opacity</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"na\">duration</span><span class=\"p\">:</span> <span class=\"mf\">0.2</span> <span class=\"p\">})</span>\n</code></pre></div>\n</div>\n\n<p><a href=\"https://camo.qiitausercontent.com/f7dafe772b56ab5f75a0c323b35313febadae78a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63666237386231382d653832392d333262342d663036312d3433303065633965623763322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fcfb78b18-e829-32b4-f061-4300ec9eb7c2.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=cc1314427dc9df2256af0b700553ba44\" alt=\"p-63.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/cfb78b18-e829-32b4-f061-4300ec9eb7c2.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fcfb78b18-e829-32b4-f061-4300ec9eb7c2.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=74ea07e9782817a0e09692eebf787df2 1x\" loading=\"lazy\"></a></p>\n\n<h1>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h1>\n\n<p>UI/UX改善のためには理論と観察と仮設と実装、および、ユーザーテストが必要だと考える。<br>\nよいUIを観察して、要素に分解して仮設を立てて実装して、誰かに操作してもらって無言でそれを観察する。ユーザーが自分の想像した通りの感情になったのか、ならなかったならなぜならなかったのかを考える。<br>\nそれを繰り返すことでよりよいUI/UXを提供できるようになるのではないかと思う。</p>\n\n<h1>\n<span id=\"砂漠のひつじとは\" class=\"fragment\"></span><a href=\"#%E7%A0%82%E6%BC%A0%E3%81%AE%E3%81%B2%E3%81%A4%E3%81%98%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>砂漠のひつじとは</h1>\n\n<p>「砂漠のひつじ」は、html,javascript, css で書かれた製作中ピコピコゲームです。<br>\ngithub にソースを公開していますので、もし興味あればダウンロードして色々改造してみてもらえたら幸いです。</p>\n\n<ul>\n<li><p>遊んでみる<br>\n<a href=\"https://kaku3.github.io/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ : GitHub pages</a></p></li>\n<li><p>ソース<br>\n<a href=\"https://github.com/kaku3/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ : GitHub</a></p></li>\n<li><p>ソースの説明<br>\n<a href=\"https://qiita.com/kaku3/items/a875fe1c098509b1fccd\" id=\"reference-92475826f1eada2ee0a7\">ゲームで理解するオブジェクト指向設計の基本</a><br>\n<a href=\"https://qiita.com/kaku3/items/f482d48676eb7ea9c9a6\" id=\"reference-62c0f7748a890f988eec\">ゲームで身につけるオブジェクト指向設計(実装編)</a></p></li>\n</ul>\n",
    "body": "# ピコピコゲームのゲームデザインとエモいUI/UX\n\n最近ではいかに長く飽きさせずにお金を落とさせるイベント設計やガチャの話題ばかりである様に思えるけれども、マリオブラザーズやドンキーコングに代表される初期ファミコンのピコピコゲームは、もっと人間の感覚に訴える部分でいかに人を楽しませるか、言い換えると、ユーザーの **インプット** に対して、 **エモいリアクション** が画面の表現より得られ、ユーザーが気持ちよくなれるような工夫がされていたと思う。\n\nこれを深堀りすると、よいUI/UXを設計するヒントが得られるのではないだろうか？\n\n# エモいリアクションとアフォーダンス\n\nAPEXやフォートナイトなど最近のハイエンドなゲームは様々な要素が高度に組み合わさって世界観を醸すUIになっているため「お、この作りすげーな」と気づくには相当な修行が必要であるが、ピコピコゲームは限られたリソースの組み合わせてユーザーの感情に訴えかけるので、少し観察をすると多くの気づきが得られると思う。\n\n例えば『土管からカメが出てきて配管工っぽい男性に向かって歩いてくる』超有名なゲーム。\n\nこのゲームの謎の世界観、冷静に考えると全く意味が分からないが、得も言われぬ説得力が画面には存在しているのは皆さんもご存知の通りだと思う。\n\n![mario.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7c04b075-fa47-def5-a37e-3f8a5be3d571.png)\n\nジャンプするとたわむ床。ひっくり返ると無防備になるカメ。全てがエモい。これはアフォーダンスの塊と言えるのではないだろうか？\nそしてこれは、ユーザーに何らかの行動を促す一般的なウェブサイトでも応用が効く考え方ではないだろうか。\n\n個人的には、ウェブサイトのアフォーダンス設計はおもてなし設計だと思っている。理屈でガチガチに固めてABテストを行い購入ページに誘導する前に、ユーザーを気持ちよく行動させることにまずは目を向けてもらいたい。\n\nという観点で、以下の書籍が大変楽しく読めたのでぜひ合わせて読んでもらいたい。\n[「ついやってしまう」体験のつくりかた 人を動かす「直感・驚き・物語」のしくみ](https://www.amazon.co.jp/%E3%80%8C%E3%81%A4%E3%81%84%E3%82%84%E3%81%A3%E3%81%A6%E3%81%97%E3%81%BE%E3%81%86%E3%80%8D%E4%BD%93%E9%A8%93%E3%81%AE%E3%81%A4%E3%81%8F%E3%82%8A%E3%81%8B%E3%81%9F-%E4%BA%BA%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99%E3%80%8C%E7%9B%B4%E6%84%9F%E3%83%BB%E9%A9%9A%E3%81%8D%E3%83%BB%E7%89%A9%E8%AA%9E%E3%80%8D%E3%81%AE%E3%81%97%E3%81%8F%E3%81%BF-%E7%8E%89%E6%A8%B9-%E7%9C%9F%E4%B8%80%E9%83%8E/dp/4478106169)\n\n# 砂漠のひつじのUI/UX\n\nオブジェクト指向の学習サンプルコードとして制作したピコピコゲームであるが、エモい仕掛けもいくつか入れてあるので、これを題材にエモさを考えてみたい。\n\n- 遊んでみる\n[砂漠のひつじ : GitHub pages](https://kaku3.github.io/the-sheep-in-the-desert/)\n\n- ソース\n[砂漠のひつじ : GitHub](https://github.com/kaku3/the-sheep-in-the-desert/)\n\n## ゲーム開始直後\n\n以下はゲーム開始直後の画面であるが何か気づくだろうか？\n\n![start.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e6996b69-182a-6c70-986e-6c954a78a228.png)\n\n\nツノがないひつじと、左下に怪しい空気入れの様な何かを持った人物。画面上にはマウスの動きに連動して動く照準。更には、ユーザーの目線が散らからない様に初期ひつじの数を２匹とした。\n\nこれらの配慮により『ツノ砲を撃ってひつじにツノをつけてあげるのか！』ともしも思ってもらえたのであれば、作者としては、この画面は充分にエモかった、よかったよかったという話となる。\n\n## スコア表示\n\nこのゲームはひつじのコメカミに近い位置にツノをつける程得点が高い。自分の常識と比較しても得心のいくルールかと思うが、ユーザーに分かりやすく伝える必要があると思い、得点が高い程大きく表示する様にした。\n\n性質上、スコアは画面上に長く表示できないので **「スコアを読み取れなくても、うまく操作したらよい結果となった」** とユーザーに伝える必要があったからである。\n\n![p-1.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/1fa0b189-eb23-db8f-fa22-38f48e8f0121.png)\n\n``` score-effect.js\n// コードとしてはわずか数文字で大きな視覚効果が得られる\n// scale: 1 + score / 20\nthis.tl.to(this.selector, { top: y / 80 + 60, scale: 1 + score / 20, duration: 0.3, ease: Power4.easeOut })\nthis.tl.to(this.selector, { opacity: 1, duration: 0.2 })\n```\n![p-63.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/cfb78b18-e829-32b4-f061-4300ec9eb7c2.png)\n\n# おわりに\n\nUI/UX改善のためには理論と観察と仮設と実装、および、ユーザーテストが必要だと考える。\nよいUIを観察して、要素に分解して仮設を立てて実装して、誰かに操作してもらって無言でそれを観察する。ユーザーが自分の想像した通りの感情になったのか、ならなかったならなぜならなかったのかを考える。\nそれを繰り返すことでよりよいUI/UXを提供できるようになるのではないかと思う。\n\n# 砂漠のひつじとは\n\n「砂漠のひつじ」は、html,javascript, css で書かれた製作中ピコピコゲームです。\ngithub にソースを公開していますので、もし興味あればダウンロードして色々改造してみてもらえたら幸いです。\n\n- 遊んでみる\n[砂漠のひつじ : GitHub pages](https://kaku3.github.io/the-sheep-in-the-desert/)\n\n- ソース\n[砂漠のひつじ : GitHub](https://github.com/kaku3/the-sheep-in-the-desert/)\n\n- ソースの説明\n[ゲームで理解するオブジェクト指向設計の基本](https://qiita.com/kaku3/items/a875fe1c098509b1fccd)\n[ゲームで身につけるオブジェクト指向設計(実装編)](https://qiita.com/kaku3/items/f482d48676eb7ea9c9a6)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-10-01T01:07:27+09:00",
    "group": null,
    "id": "32a8742fecb88fe8c577",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 1,
    "tags": [
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "UX",
        "versions": []
      },
      {
        "name": "UI",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "ゲーム制作",
        "versions": []
      }
    ],
    "title": "ピコピコゲーム制作で学ぶエモいUI/UX",
    "updated_at": "2020-10-01T12:31:07+09:00",
    "url": "https://qiita.com/kaku3/items/32a8742fecb88fe8c577",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1948,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"本当にあるかもしれない怖い話\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E5%BD%93%E3%81%AB%E3%81%82%E3%82%8B%E3%81%8B%E3%82%82%E3%81%97%E3%82%8C%E3%81%AA%E3%81%84%E6%80%96%E3%81%84%E8%A9%B1\"><i class=\"fa fa-link\"></i></a>本当にあるかもしれない怖い話</h1>\n\n<p>作成したウェブサイトを活性化させたい、サイトの更新を知らせる仕組みがあれば活性化するはず。プッシュ通知と言えばアプリ。WebViewアプリを作りましょう。ブラウザと通知機能だけだから簡単にできるでしょ？</p>\n\n<p>はい分かりましたとアプリ開発経験がなかった開発会社は安い見積を提出してしまいました。</p>\n\n<p>…あなたが開発会社の窓口だとしたらどうしますか？</p>\n\n<h1>\n<span id=\"アプリプロジェクトの難しさ\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%83%97%E3%83%AA%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E9%9B%A3%E3%81%97%E3%81%95\"><i class=\"fa fa-link\"></i></a>アプリプロジェクトの難しさ</h1>\n\n<p>顧客が本当にやりたいことは、今までできたことが普通にできることに加えて <strong>『通知をしたい』</strong> だけなので安い見積しか通らない。それにも関わらずプロジェクトの難易度が高い点を以下にあげてみます。</p>\n\n<h2>\n<span id=\"難しさ-1-android--ios-両対応\" class=\"fragment\"></span><a href=\"#%E9%9B%A3%E3%81%97%E3%81%95-1-android--ios-%E4%B8%A1%E5%AF%BE%E5%BF%9C\"><i class=\"fa fa-link\"></i></a>難しさ 1. Android / iOS 両対応</h2>\n\n<p>コード量は大変少ないものの、Android Studio で Java(Kotlin)、Xcode で Swift も書ける要員を確保しないといけない。こんな事ができる要員はなかなかいない。</p>\n\n<h2>\n<span id=\"難しさ-2-webview\" class=\"fragment\"></span><a href=\"#%E9%9B%A3%E3%81%97%E3%81%95-2-webview\"><i class=\"fa fa-link\"></i></a>難しさ 2. WebView</h2>\n\n<p>WebView は標準のブラウザに比べて不自由なことだらけ。タブは複数開けないし、戻るや進むボタンもなければ、ピンチズームなんかも制限されてたり。<br>\n工数をかけて元のサイトより品質の悪い物を作ることになりがち。</p>\n\n<h2>\n<span id=\"難しさ-3-開発者登録--開発環境\" class=\"fragment\"></span><a href=\"#%E9%9B%A3%E3%81%97%E3%81%95-3-%E9%96%8B%E7%99%BA%E8%80%85%E7%99%BB%E9%8C%B2--%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83\"><i class=\"fa fa-link\"></i></a>難しさ 3. 開発者登録 / 開発環境</h2>\n\n<p>開発者登録費用(Android: 2500円くらい/初回 / iPhone: 1万円くらい/毎年)も必要、バイナリを作成して申請するのにMacも必要。</p>\n\n<h2>\n<span id=\"難しさ-4-osバージョンアップ\" class=\"fragment\"></span><a href=\"#%E9%9B%A3%E3%81%97%E3%81%95-4-os%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%A2%E3%83%83%E3%83%97\"><i class=\"fa fa-link\"></i></a>難しさ 4. OSバージョンアップ</h2>\n\n<p>OSのバージョンが上がった時に色々と不具合が出る可能性がある。<br>\nいつ上がるか分からないOSのバージョンアップのために開発要員を抱え続けられない。</p>\n\n<h1>\n<span id=\"webプッシュ\" class=\"fragment\"></span><a href=\"#web%E3%83%97%E3%83%83%E3%82%B7%E3%83%A5\"><i class=\"fa fa-link\"></i></a>Webプッシュ</h1>\n\n<p>顧客が本当にやりたいことが <strong>『通知をしたい』</strong> だけであれば、『アプリを作る』ことは妥当でしょうか？顧客のビジネスに全く関係のないところでリスクを増やしたり、開発物に対しては妥当だが要件に対して無駄に高額な費用を請求することになっていないか？</p>\n\n<p>通知をしたいだけでよければ、Webプッシュができればよいので、既存のWebサイトをPWA化することも視野に入れて良いのではないでしょうか？</p>\n\n<p>※色々書きましたが、2020/9時点では、iOS は Push通知非対応の模様。対応してくれててもいいのに。顧客とよく話し合ってくださいね。</p>\n\n<h1>\n<span id=\"既存サイトの-pwa-progressive-web-apps化\" class=\"fragment\"></span><a href=\"#%E6%97%A2%E5%AD%98%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE-pwa-progressive-web-apps%E5%8C%96\"><i class=\"fa fa-link\"></i></a>既存サイトの PWA (Progressive Web Apps)化</h1>\n\n<p>いささか大げさでしたが、PWAを知らない人に向けて『なぜ』PWAを使うのかを書いてみました。わたしも顧客との距離を縮めて妥当な提案をするべく勉強していますが、誤り等あったらご指摘頂けますと助かります。</p>\n\n<p>既存のWebサイトが https のサイトであれば、いくつかのファイルを追加するだけで簡単に PWA 化できます。</p>\n\n<ol>\n<li>manifest ファイル追加</li>\n<li>icon ファイル追加</li>\n<li>service worker ファイル追加</li>\n<li>service worker 登録</li>\n</ol>\n\n<p>https のサイトを作るのは面倒に思えますが、github のリポジトリを github pages で公開する設定にすれば、<strong>費用も手間も不要</strong>で簡単に作成できます。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/100151a48b117deb08568d82df612910b45b03fb/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f62303864383832382d656336612d343938332d383839362d3232386636306262353236302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb08d8828-ec6a-4983-8896-228f60bb5260.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b81b651e4b6c24d0484261ebec52203b\" alt=\"github-pages.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b08d8828-ec6a-4983-8896-228f60bb5260.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb08d8828-ec6a-4983-8896-228f60bb5260.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f344ec2aa82a2a5f26c72593897c9acc 1x\" loading=\"lazy\"></a></p>\n\n<p>実際に非PWAサイトをPWA化したソースコードをgithubに公開しています。よろしければ、あわせてご参照ください。</p>\n\n<p><a href=\"https://github.com/kaku3/the-sheep-in-the-desert\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ : github</a></p>\n\n<h1>\n<span id=\"pwa-構成\" class=\"fragment\"></span><a href=\"#pwa-%E6%A7%8B%E6%88%90\"><i class=\"fa fa-link\"></i></a>PWA 構成</h1>\n\n<p>PWA化に際して追加したファイルは以下で、前述の通り非常に少ないです。<br>\nPWAフォルダの中に全部配置してポータビリティを上げたかったのですが、service worker 本体と manifest ファイルは、公開サイトのルートに配置する必要があるようでした。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>manifest.json   # PWAアプリの設定。entry point など記述\nsw.js           # offline でも動作可能とする service worker。\n                # いくつかのイベントハンドラを記述する必要がある\npwa/\n  main.js       # service worker 登録処理。定形処理。\n  icons/\n    icon-192x192.png    # Home Screen に配置するアイコン\n    icon-512x512.png    # 起動スプラッシュアイコン\n</code></pre></div></div>\n\n<h1>\n<span id=\"manifest-ファイル追加\" class=\"fragment\"></span><a href=\"#manifest-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E8%BF%BD%E5%8A%A0\"><i class=\"fa fa-link\"></i></a>manifest ファイル追加</h1>\n\n<p>このファイルは特に難しくはないです。<br>\nstart_url には、FQDN部分以降の起動ページの path を記述します。</p>\n\n<p><code>https://kaku3.github.io/the-sheep-in-the-desert/</code> なので、<br>\n<code>/the-sheep-in-the-desert/index.html?utm_source=homescreen</code> と記述します。</p>\n\n<div class=\"code-frame\" data-lang=\"json\">\n<div class=\"code-lang\"><span class=\"bold\">manifest.json</span></div>\n<div class=\"highlight\"><pre><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"s2\">\"砂漠のひつじ\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"short_name\"</span><span class=\"p\">:</span><span class=\"s2\">\"砂漠のひつじ\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"icons\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"w\">\n        </span><span class=\"nl\">\"src\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"pwa/icons/icon-192x192.png\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nl\">\"sizes\"</span><span class=\"p\">:</span><span class=\"s2\">\"192x192\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"image/png\"</span><span class=\"w\">\n      </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nl\">\"src\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"pwa/icons/icon-512x512.png\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nl\">\"sizes\"</span><span class=\"p\">:</span><span class=\"s2\">\"512x512\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"image/png\"</span><span class=\"w\">\n      </span><span class=\"p\">}],</span><span class=\"w\">\n    </span><span class=\"nl\">\"start_url\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"/the-sheep-in-the-desert/index.html?utm_source=homescreen\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"display\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"standalone\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"background_color\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"#FFFFFF\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"theme_color\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"#FFFFFF\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div>\n</div>\n\n<p>また、<code>index.html</code> を修正して、manifest.json を読み込む様にします。</p>\n\n<div class=\"code-frame\" data-lang=\"html\">\n<div class=\"code-lang\"><span class=\"bold\">index.html</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nt\">&lt;head&gt;</span>\n    ...\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"manifest\"</span> <span class=\"na\">href=</span><span class=\"s\">\"manifest.json\"</span><span class=\"nt\">&gt;</span>\n    ...\n<span class=\"nt\">&lt;/head&gt;</span>\n</code></pre></div>\n</div>\n\n<h1>\n<span id=\"icon-ファイル追加\" class=\"fragment\"></span><a href=\"#icon-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E8%BF%BD%E5%8A%A0\"><i class=\"fa fa-link\"></i></a>icon ファイル追加</h1>\n\n<p>このファイルも特に難しくないです。<br>\nHome Screen と、起動スプラッシュ2種類用意してください。<br>\nひょっとしたら起動スプラッシュは画像がなくても大丈夫かもしれません。</p>\n\n<h1>\n<span id=\"service-worker-ファイル追加\" class=\"fragment\"></span><a href=\"#service-worker-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E8%BF%BD%E5%8A%A0\"><i class=\"fa fa-link\"></i></a>service worker ファイル追加</h1>\n\n<p>簡単と書きましたが、このファイルは難しいです。<br>\nただ書くだけなら難しくないのですが、『キャッシュするファイル』を正しく管理するには、webpack などで、キャッシュ対象ファイルのバージョンを管理できる仕組みが必要と思われます。</p>\n\n<p>Service Worker の処理の記述には、<a href=\"https://developers.google.com/web/tools/workbox\" rel=\"nofollow noopener\" target=\"_blank\">Workbox</a> を利用するのがよさそうです。</p>\n\n<p>sw.js 自体は、webpack を利用していない場合は <code>urls</code> 以外の部分はそのまま利用できるかと思います。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">sw.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"c1\">// CDN から Workbox を読み込み</span>\n<span class=\"nx\">importScripts</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">https://storage.googleapis.com/workbox-cdn/releases/5.1.2/workbox-sw.js</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"nx\">workbox</span><span class=\"p\">.</span><span class=\"nx\">loadModule</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">workbox-strategies</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">precacheController</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">workbox</span><span class=\"p\">.</span><span class=\"nx\">precaching</span><span class=\"p\">.</span><span class=\"nx\">PrecacheController</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// キャッシュするファイルを定義する。</span>\n<span class=\"kd\">const</span> <span class=\"nx\">baseUrl</span> <span class=\"o\">=</span> <span class=\"nx\">location</span><span class=\"p\">.</span><span class=\"nx\">href</span><span class=\"p\">.</span><span class=\"nx\">replace</span><span class=\"p\">(</span><span class=\"sr\">/</span><span class=\"se\">\\/</span><span class=\"sr\">sw.js$/</span><span class=\"p\">,</span> <span class=\"dl\">''</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">urls</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">...</span>\n    <span class=\"p\">{</span> <span class=\"nl\">url</span><span class=\"p\">:</span><span class=\"dl\">'</span><span class=\"s1\">/css/fonts.css</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">revision</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">0.01</span><span class=\"dl\">'</span> <span class=\"p\">},</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">].</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"nx\">o</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">o</span><span class=\"p\">.</span><span class=\"nx\">url</span> <span class=\"o\">=</span> <span class=\"nx\">baseUrl</span> <span class=\"o\">+</span> <span class=\"nx\">o</span><span class=\"p\">.</span><span class=\"nx\">url</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"nx\">o</span><span class=\"p\">;</span>\n<span class=\"p\">})</span>\n\n<span class=\"nx\">precacheController</span><span class=\"p\">.</span><span class=\"nx\">addToCacheList</span><span class=\"p\">(</span><span class=\"nx\">urls</span><span class=\"p\">);</span>\n\n<span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">install</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">event</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">waitUntil</span><span class=\"p\">(</span><span class=\"nx\">precacheController</span><span class=\"p\">.</span><span class=\"nx\">install</span><span class=\"p\">());</span>\n<span class=\"p\">});</span>\n<span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">activate</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">event</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">waitUntil</span><span class=\"p\">(</span><span class=\"nx\">precacheController</span><span class=\"p\">.</span><span class=\"nx\">activate</span><span class=\"p\">());</span>\n<span class=\"p\">});</span>\n<span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">fetch</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">event</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">respondWith</span><span class=\"p\">(</span>\n        <span class=\"nx\">caches</span>\n            <span class=\"p\">.</span><span class=\"nx\">match</span><span class=\"p\">(</span><span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">request</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"k\">return</span> <span class=\"nx\">response</span> <span class=\"p\">?</span> <span class=\"nx\">response</span> <span class=\"p\">:</span> <span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">request</span><span class=\"p\">);</span>\n            <span class=\"p\">})</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">});</span>\n\n</code></pre></div>\n</div>\n\n<p>キャッシュ容量はブラウザにより異なり、ブラウザによっては50MB程度であるためサイト内のどのファイルをキャッシュするかは設計が必要になると思います。</p>\n\n<p>キャッシュは以下のような形で保存されます。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/546f04745da2e8fccea4fcfd466ac54a1d185625/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38613136376635392d353166332d643732642d373832622d3139646464383861366235332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8a167f59-51f3-d72d-782b-19ddd88a6b53.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=715a6d2e64345b3cac170bc96076d084\" alt=\"cache.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8a167f59-51f3-d72d-782b-19ddd88a6b53.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F8a167f59-51f3-d72d-782b-19ddd88a6b53.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=700f8feb4a3a58003f7e01403ce5b99f 1x\" loading=\"lazy\"></a></p>\n\n<p>上記より分かる通り、<code>?__WB_REVISION__={revision}</code> パラメータつきでキャッシュするため、読み込みタグも同様に<code>?__WB_REVISION__={revision}</code> をつける必要があります。</p>\n\n<div class=\"code-frame\" data-lang=\"html\">\n<div class=\"code-lang\"><span class=\"bold\">index.html</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">href=</span><span class=\"s\">\"css/fonts.css?__WB_REVISION__=0.01\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"css\">\n<div class=\"code-lang\"><span class=\"bold\">main.css</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nc\">.game</span> <span class=\"p\">{</span>\n    <span class=\"err\">...</span>\n    <span class=\"nl\">background-image</span><span class=\"p\">:</span> <span class=\"sx\">url(\"../image/bg.png?__WB_REVISION__=0.01\")</span><span class=\"p\">;</span>\n    <span class=\"err\">...</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<p>読み込むファイル数にもよりますが、この部分を手動で更新するのは難しいと思いますので、実務レベルでは「パフォーマンスを確認した上で全てキャッシュしない」か「webpack」を利用するという判断になるのかなあと思います。</p>\n\n<h1>\n<span id=\"service-worker-登録\" class=\"fragment\"></span><a href=\"#service-worker-%E7%99%BB%E9%8C%B2\"><i class=\"fa fa-link\"></i></a>service worker 登録</h1>\n\n<p>別ファイルにする必要もなかったのですが、再利用しやすい様に別ファイルとしました。</p>\n\n<div class=\"code-frame\" data-lang=\"html\">\n<div class=\"code-lang\"><span class=\"bold\">index.html</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"pwa/main.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">pwa/main.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">serviceWorker</span><span class=\"dl\">'</span> <span class=\"k\">in</span> <span class=\"nb\">navigator</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// service worker のファイル名を変更するのであればこの行を修正。</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">serviceWorkerJs</span> <span class=\"o\">=</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">location</span><span class=\"p\">.</span><span class=\"nx\">href</span><span class=\"p\">}</span><span class=\"s2\">sw.js`</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">info</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">register service worker : </span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">serviceWorkerJs</span><span class=\"p\">)</span>\n    <span class=\"nb\">navigator</span><span class=\"p\">.</span><span class=\"nx\">serviceWorker</span><span class=\"p\">.</span><span class=\"nx\">register</span><span class=\"p\">(</span><span class=\"nx\">serviceWorkerJs</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">r</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">info</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Service worker registered.</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">r</span><span class=\"p\">)</span>\n    <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<p>動作させるまでには試行錯誤が必要になると思います。<br>\nhttps 環境ではないと動作しないとありますが、localhost については http でも大丈夫でした。<br>\nまた、初回のみキャッシュされる動作をしますが、毎回キャッシュを消して確認するのが大変だったので、適当に php でサーバを立てて開発しました。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>php -S localhost:8000\nphp -S localhost:8001\nphp -S localhost:8002\nphp -S localhost:8003\n...\n</code></pre></div></div>\n\n<p>ローカルで動作確認が済んだら、github に push して確認してみてください。<br>\nA2HS(Add to Home Screen) ダイアログが確認できれば実装完了です。<br>\nおつかれさまでした。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/88f3f26e16ab5521ac625f0fc15e24bd0f6447c1/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f62323933623835362d343430652d356164342d646561352d3534313236353937623431392e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb293b856-440e-5ad4-dea5-54126597b419.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=061b9095df650250abc891135c85d886\" alt=\"a2hs.jpg\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b293b856-440e-5ad4-dea5-54126597b419.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fb293b856-440e-5ad4-dea5-54126597b419.jpeg?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=3b462e9bbf4ec786b4969f307c0b2158 1x\" loading=\"lazy\"></a></p>\n\n<h1>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h1>\n\n<p>通知についての記事のはずでしたが、PWA実装確認までで時間切れでした。<br>\n次回は通知について書きたいと思います。</p>\n\n<h1>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h1>\n\n<p>大変分かりやすかったです。ありがとうございました。<br>\n<a href=\"https://qiita.com/umamichi/items/0e2b4b1c578e7335ba20\" class=\"autolink\" id=\"reference-3c3444d119cfe44af1ab\">https://qiita.com/umamichi/items/0e2b4b1c578e7335ba20</a></p>\n",
    "body": "# 本当にあるかもしれない怖い話\n\n作成したウェブサイトを活性化させたい、サイトの更新を知らせる仕組みがあれば活性化するはず。プッシュ通知と言えばアプリ。WebViewアプリを作りましょう。ブラウザと通知機能だけだから簡単にできるでしょ？\n\nはい分かりましたとアプリ開発経験がなかった開発会社は安い見積を提出してしまいました。\n\n…あなたが開発会社の窓口だとしたらどうしますか？\n\n# アプリプロジェクトの難しさ\n\n顧客が本当にやりたいことは、今までできたことが普通にできることに加えて **『通知をしたい』** だけなので安い見積しか通らない。それにも関わらずプロジェクトの難易度が高い点を以下にあげてみます。\n\n## 難しさ 1. Android / iOS 両対応\nコード量は大変少ないものの、Android Studio で Java(Kotlin)、Xcode で Swift も書ける要員を確保しないといけない。こんな事ができる要員はなかなかいない。\n\n## 難しさ 2. WebView\nWebView は標準のブラウザに比べて不自由なことだらけ。タブは複数開けないし、戻るや進むボタンもなければ、ピンチズームなんかも制限されてたり。\n工数をかけて元のサイトより品質の悪い物を作ることになりがち。\n\n## 難しさ 3. 開発者登録 / 開発環境\n開発者登録費用(Android: 2500円くらい/初回 / iPhone: 1万円くらい/毎年)も必要、バイナリを作成して申請するのにMacも必要。\n\n## 難しさ 4. OSバージョンアップ\n\nOSのバージョンが上がった時に色々と不具合が出る可能性がある。\nいつ上がるか分からないOSのバージョンアップのために開発要員を抱え続けられない。\n\n# Webプッシュ\n\n顧客が本当にやりたいことが **『通知をしたい』** だけであれば、『アプリを作る』ことは妥当でしょうか？顧客のビジネスに全く関係のないところでリスクを増やしたり、開発物に対しては妥当だが要件に対して無駄に高額な費用を請求することになっていないか？\n\n通知をしたいだけでよければ、Webプッシュができればよいので、既存のWebサイトをPWA化することも視野に入れて良いのではないでしょうか？\n\n※色々書きましたが、2020/9時点では、iOS は Push通知非対応の模様。対応してくれててもいいのに。顧客とよく話し合ってくださいね。\n\n# 既存サイトの PWA (Progressive Web Apps)化\n\nいささか大げさでしたが、PWAを知らない人に向けて『なぜ』PWAを使うのかを書いてみました。わたしも顧客との距離を縮めて妥当な提案をするべく勉強していますが、誤り等あったらご指摘頂けますと助かります。\n\n既存のWebサイトが https のサイトであれば、いくつかのファイルを追加するだけで簡単に PWA 化できます。\n\n1. manifest ファイル追加\n1. icon ファイル追加\n1. service worker ファイル追加\n1. service worker 登録\n\nhttps のサイトを作るのは面倒に思えますが、github のリポジトリを github pages で公開する設定にすれば、**費用も手間も不要**で簡単に作成できます。\n\n![github-pages.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b08d8828-ec6a-4983-8896-228f60bb5260.png)\n\n\n実際に非PWAサイトをPWA化したソースコードをgithubに公開しています。よろしければ、あわせてご参照ください。\n\n[砂漠のひつじ : github](https://github.com/kaku3/the-sheep-in-the-desert)\n\n# PWA 構成\n\nPWA化に際して追加したファイルは以下で、前述の通り非常に少ないです。\nPWAフォルダの中に全部配置してポータビリティを上げたかったのですが、service worker 本体と manifest ファイルは、公開サイトのルートに配置する必要があるようでした。\n\n```\nmanifest.json   # PWAアプリの設定。entry point など記述\nsw.js           # offline でも動作可能とする service worker。\n                # いくつかのイベントハンドラを記述する必要がある\npwa/\n  main.js       # service worker 登録処理。定形処理。\n  icons/\n    icon-192x192.png    # Home Screen に配置するアイコン\n    icon-512x512.png    # 起動スプラッシュアイコン\n```\n\n# manifest ファイル追加\n\nこのファイルは特に難しくはないです。\nstart_url には、FQDN部分以降の起動ページの path を記述します。\n\n`https://kaku3.github.io/the-sheep-in-the-desert/` なので、\n`/the-sheep-in-the-desert/index.html?utm_source=homescreen` と記述します。\n\n``` manifest.json\n{\n    \"name\":\"砂漠のひつじ\",\n    \"short_name\":\"砂漠のひつじ\",\n    \"icons\": [{\n        \"src\": \"pwa/icons/icon-192x192.png\",\n        \"sizes\":\"192x192\",\n        \"type\": \"image/png\"\n      }, {\n        \"src\": \"pwa/icons/icon-512x512.png\",\n        \"sizes\":\"512x512\",\n        \"type\": \"image/png\"\n      }],\n    \"start_url\": \"/the-sheep-in-the-desert/index.html?utm_source=homescreen\",\n    \"display\": \"standalone\",\n    \"background_color\": \"#FFFFFF\",\n    \"theme_color\": \"#FFFFFF\"\n}\n```\n\nまた、`index.html` を修正して、manifest.json を読み込む様にします。\n\n``` index.html\n<head>\n    ...\n    <link rel=\"manifest\" href=\"manifest.json\">\n    ...\n</head>\n```\n\n# icon ファイル追加\n\nこのファイルも特に難しくないです。\nHome Screen と、起動スプラッシュ2種類用意してください。\nひょっとしたら起動スプラッシュは画像がなくても大丈夫かもしれません。\n\n# service worker ファイル追加\n\n簡単と書きましたが、このファイルは難しいです。\nただ書くだけなら難しくないのですが、『キャッシュするファイル』を正しく管理するには、webpack などで、キャッシュ対象ファイルのバージョンを管理できる仕組みが必要と思われます。\n\nService Worker の処理の記述には、[Workbox](https://developers.google.com/web/tools/workbox) を利用するのがよさそうです。\n\n\nsw.js 自体は、webpack を利用していない場合は `urls` 以外の部分はそのまま利用できるかと思います。\n\n``` sw.js\n// CDN から Workbox を読み込み\nimportScripts('https://storage.googleapis.com/workbox-cdn/releases/5.1.2/workbox-sw.js');\nworkbox.loadModule('workbox-strategies');\n\nconst precacheController = new workbox.precaching.PrecacheController();\n\n// キャッシュするファイルを定義する。\nconst baseUrl = location.href.replace(/\\/sw.js$/, '');\nconst urls = [\n    ...\n    { url:'/css/fonts.css', revision: '0.01' },\n    ...\n].map(o => {\n    o.url = baseUrl + o.url;\n    return o;\n})\n\nprecacheController.addToCacheList(urls);\n\nself.addEventListener('install', (event) => {\n    event.waitUntil(precacheController.install());\n});\nself.addEventListener('activate', (event) => {\n    event.waitUntil(precacheController.activate());\n});\nself.addEventListener('fetch', (event) => {\n    event.respondWith(\n        caches\n            .match(event.request)\n            .then(function(response) {\n                return response ? response : fetch(event.request);\n            })\n    );\n});\n\n```\n\nキャッシュ容量はブラウザにより異なり、ブラウザによっては50MB程度であるためサイト内のどのファイルをキャッシュするかは設計が必要になると思います。\n\nキャッシュは以下のような形で保存されます。\n\n![cache.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/8a167f59-51f3-d72d-782b-19ddd88a6b53.png)\n\n\n上記より分かる通り、`?__WB_REVISION__={revision}` パラメータつきでキャッシュするため、読み込みタグも同様に`?__WB_REVISION__={revision}` をつける必要があります。\n\n``` index.html\n<link rel=\"stylesheet\" href=\"css/fonts.css?__WB_REVISION__=0.01\">\n```\n``` main.css\n.game {\n    ...\n    background-image: url(\"../image/bg.png?__WB_REVISION__=0.01\");\n    ...\n}\n```\n\n読み込むファイル数にもよりますが、この部分を手動で更新するのは難しいと思いますので、実務レベルでは「パフォーマンスを確認した上で全てキャッシュしない」か「webpack」を利用するという判断になるのかなあと思います。\n\n# service worker 登録\n\n別ファイルにする必要もなかったのですが、再利用しやすい様に別ファイルとしました。\n\n``` index.html\n<script src=\"pwa/main.js\"></script>\n```\n\n``` pwa/main.js\nif('serviceWorker' in navigator) {\n    // service worker のファイル名を変更するのであればこの行を修正。\n    const serviceWorkerJs = `${location.href}sw.js`\n    console.info('register service worker : ', serviceWorkerJs)\n    navigator.serviceWorker.register(serviceWorkerJs)\n    .then((r) => {\n        console.info('Service worker registered.', r)\n    })\n}\n```\n\n動作させるまでには試行錯誤が必要になると思います。\nhttps 環境ではないと動作しないとありますが、localhost については http でも大丈夫でした。\nまた、初回のみキャッシュされる動作をしますが、毎回キャッシュを消して確認するのが大変だったので、適当に php でサーバを立てて開発しました。\n\n```\nphp -S localhost:8000\nphp -S localhost:8001\nphp -S localhost:8002\nphp -S localhost:8003\n...\n```\n\nローカルで動作確認が済んだら、github に push して確認してみてください。\nA2HS(Add to Home Screen) ダイアログが確認できれば実装完了です。\nおつかれさまでした。\n\n![a2hs.jpg](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/b293b856-440e-5ad4-dea5-54126597b419.jpeg)\n\n# おわりに\n\n通知についての記事のはずでしたが、PWA実装確認までで時間切れでした。\n次回は通知について書きたいと思います。\n\n# 参考\n\n大変分かりやすかったです。ありがとうございました。\nhttps://qiita.com/umamichi/items/0e2b4b1c578e7335ba20\n",
    "coediting": false,
    "comments_count": 2,
    "created_at": "2020-09-27T02:07:21+09:00",
    "group": null,
    "id": "9d822fa76905452fae36",
    "likes_count": 4,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 7,
    "tags": [
      {
        "name": "HTML",
        "versions": []
      },
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "PWA",
        "versions": []
      }
    ],
    "title": "通知がしたいだけならPWAでいいじゃない【iOS非対応】",
    "updated_at": "2020-09-28T18:30:38+09:00",
    "url": "https://qiita.com/kaku3/items/9d822fa76905452fae36",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2288,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"理屈はさておき書こう\" class=\"fragment\"></span><a href=\"#%E7%90%86%E5%B1%88%E3%81%AF%E3%81%95%E3%81%A6%E3%81%8A%E3%81%8D%E6%9B%B8%E3%81%93%E3%81%86\"><i class=\"fa fa-link\"></i></a>理屈はさておき書こう</h1>\n\n<ul>\n<li>理屈編\n<a href=\"https://qiita.com/kaku3/items/a875fe1c098509b1fccd\" id=\"reference-b1473c71f9d8a7c6c464\">ゲームで理解するオブジェクト指向設計の基本</a>\n</li>\n</ul>\n\n<p>若者の興味を引こうとゲームを題材にした記事を書いたのですが、「ふーん」みたいな反応を頂きまして、コレジャナイなと反省しまして、サンプルミニゲームを作成しました。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/18dd384f82d4d5db364fca33af29926534bdbc36/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f37646636363366392d653730652d663766372d363765392d6665646638663134306465322e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7df663f9-e70e-f7f7-67e9-fedf8f140de2.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=3c8e0b0b5b5077daf245789019a88221\" alt=\"the-sheeps-in-the-desert.gif\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7df663f9-e70e-f7f7-67e9-fedf8f140de2.gif\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F7df663f9-e70e-f7f7-67e9-fedf8f140de2.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=243daa3744a23811cfa78a8801fc7721 1x\" loading=\"lazy\"></a></p>\n\n<p>楽しそうですか？楽しそうですよね！</p>\n\n<p>試しに遊んでみる⇒<a href=\"https://kaku3.github.io/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">[砂漠のひつじ : GitHub pages]</a></p>\n\n<p>初心者でもメモ帳とブラウザ(Chrome)さえあれば作れる様に、webpack や vue-cli などは使わずに、素の html, css, javascript (+ jQuery, Handlebars, GSAP3) で作成しました。<br>\n※canvas は未使用</p>\n\n<p>※完成していないですが、github でソース公開していますので是非ダウンロードして完成させてください。</p>\n\n<p><a href=\"https://github.com/kaku3/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ : GitHub</a></p>\n\n<p>サンプルを用意するに至った理由は、<strong>『英語を読めるけど書けない』</strong> という方は、 <strong>『書かないから書けない』</strong> のと同じで、プログラムも <strong>自分で考えて書かないと書ける様にならない</strong> と思ったからです。</p>\n\n<p>近年では python や Vuejs などでちょこちょこっと書けばやりたいことができてしまうので、オブジェクト指向な実装をする機会があまりない(逆に言うと必要がない)と思いますので、<strong>自分で考えて書く機会</strong> として利用して頂けないかと思い作成しました。</p>\n\n<h1>\n<span id=\"本サンプルコードと設計について\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%82%B3%E3%83%BC%E3%83%89%E3%81%A8%E8%A8%AD%E8%A8%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>本サンプルコードと設計について</h1>\n\n<p>本サンプルコードはいくつかのクラスが協調して動作する最小のサンプルを目指しました。<br>\n結果、デザインパターン的に正しくない、オブジェクトとしてどうなの？といった実装も多々あります。<br>\nゲームバランス調整する部分に至っては定数を定義していないところもあります。</p>\n\n<p>こちらは「あー、残念なコードだなー」と思いながら直しつつ、設計について少し考えてもらえればと思います。</p>\n\n<p>理屈編でも少し書きましたが <strong>「完璧な設計」</strong> にした結果、クラスをたらい回しにされたり、なぜかメンテナンスが大変になったりすることがあります。一貫性のあるコードは推理がしやすくて読みやすい事は間違いないのですが、 <strong>目的のシステムに対して大げさすぎる設計</strong> は <strong>「完璧な設計」</strong> なのかとか。</p>\n\n<p>業務システムのプロジェクトに参画して、オブジェクト指向で設計ができないとどうしても実装できないケースがあるかというと <strong>たぶんない</strong> のですが、コード量が増えるとある程度系統だった設計をしていないと保守が大変なのも間違いないです。</p>\n\n<p>なので「大げさ」でもなく「無策」でもなく丁度よい設計をできるように、息を吐くように書けるまで反復して書いた方がよいのかなとは思います。</p>\n\n<h1>\n<span id=\"実装解説\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E8%A3%85%E8%A7%A3%E8%AA%AC\"><i class=\"fa fa-link\"></i></a>実装解説</h1>\n\n<h2>\n<span id=\"html-template\" class=\"fragment\"></span><a href=\"#html-template\"><i class=\"fa fa-link\"></i></a>html template</h2>\n\n<p><a href=\"https://handlebarsjs.com/\" rel=\"nofollow noopener\" target=\"_blank\">Handlebars</a> を使用。<br>\nVue.js の様にダブルブラケット部分を変数で置き換えられて便利。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>* index.html\n    &lt;template id=\"object-smoke\"&gt;\n        &lt;div id=\"smoke-{{id}}\" class=\"smoke\"&gt;&lt;/div&gt;\n    &lt;/template&gt;\n</code></pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>* smoke.js\n    // template 読み込み / compile\n    static template = Handlebars.compile($('template#object-smoke').html())\n\n    // 置き換え、dom に追加\n    Smoke.scene.append(Smoke.template(this))\n</code></pre></div></div>\n\n<h2>\n<span id=\"クリックに反応しない要素の作成\" class=\"fragment\"></span><a href=\"#%E3%82%AF%E3%83%AA%E3%83%83%E3%82%AF%E3%81%AB%E5%8F%8D%E5%BF%9C%E3%81%97%E3%81%AA%E3%81%84%E8%A6%81%E7%B4%A0%E3%81%AE%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>クリックに反応しない要素の作成</h2>\n\n<p>ひつじや、照準をクリックに反応しないように。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>* css\n    pointer-events: none\n</code></pre></div></div>\n\n<h2>\n<span id=\"game-loop\" class=\"fragment\"></span><a href=\"#game-loop\"><i class=\"fa fa-link\"></i></a>Game Loop</h2>\n\n<p>setInterval に class object や method を渡せないので、 static method を利用した。<br>\nGame class を複数作ることもないのでとりあえず。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>* main.js\nclass Game\n    static self\n\n    static create() {\n        Game.self = new Game()\n    }\n\n    static exec() {\n        let self = Game.self\n        if(self.currentScene != self.nextScene) {\n            self.changeScene()\n        }\n        self.execScene()\n    }\n\n    constructor() {\n        this.currentScene = SCENE.INIT\n        this.setNextScene(SCENE.GAME_INIT)\n        this.setNextScene(SCENE.TITLE_INIT)\n        setInterval(Game.exec, FPS)\n    }    \n</code></pre></div></div>\n\n<p>2020/09/26 追記：<br>\niOS Safari で、static field 使えないのでコード修正しました。<br>\nclass 定義中に、object の個数分だけ必要な field と、class につき一つしかない field の違いを学習できるように入れておいたのですが…</p>\n\n<ul>\n<li>iOS safari で static field を使えない ⇒ <a href=\"https://caniuse.com/?search=static%20field\" rel=\"nofollow noopener\" target=\"_blank\">Can I use</a>\n</li>\n<li>ES2015 の仕様にもない ⇒ <a href=\"https://stackoverflow.com/questions/40367392/static-class-property-not-working-with-babel\" rel=\"nofollow noopener\" target=\"_blank\">stack overflow</a>\n</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>// 修正前\nclass Game\n    static self\n\n    static create() {\n        Game.self = new Game()\n    }\n    ...\n\n// 修正後\nconst Game_ = {\n    self: null\n}\n\nclass Game {\n\n    static create() {\n        Game_.self = new Game()\n    }\n    ...\n</code></pre></div></div>\n\n<h2>\n<span id=\"アニメーション\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\"><i class=\"fa fa-link\"></i></a>アニメーション</h2>\n\n<p><a href=\"https://greensock.com/gsap/\" rel=\"nofollow noopener\" target=\"_blank\">GSAP3</a>を使用。<br>\n基本はタイムラインを作って、キーフレームを追加。<br>\nアニメーション開始時、更新時、終了時などにイベント設定可能。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>* smoke.js\n    // set : アニメーションせずに、即時に座標指定\n    gsap.set(this.selector, { left: x - ww, top: y - hh, opacity: 0.25, scale: 0.25 })\n    // timeline 作成。\n    this.tl = gsap.timeline({\n        onComplete: (params) =&gt; {\n            const self = params\n            $(self.selector).remove()   // アニメーションが終わったら dom から自身を削除\n        },\n        onCompleteParams: [ this ]\n    })\n    // left, opacity, scale 値を、duration で指定した秒数で変化させる。\n    this.tl.to(this.selector, { left: x + FIELD_SIZE_X * 2, opacity: 0.75, scale: 3, duration: 0.75, ease: Power1.easeIn })\n</code></pre></div></div>\n\n<h2>\n<span id=\"画像\" class=\"fragment\"></span><a href=\"#%E7%94%BB%E5%83%8F\"><i class=\"fa fa-link\"></i></a>画像</h2>\n\n<p>ibis Paint X を使用。<br>\nスマホで簡単に描けます。</p>\n\n<h1>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h1>\n\n<p>ローコードやらノーコードとか言ってる昨今、オブジェクト指向のサンプルコードはあんまり需要なさそう<sup id=\"fnref1\"><a href=\"#fn1\" title=\"需要はなさそうだけど知ってて損はないし役に立ちます\">1</a></sup>だと思いつつ興味を引こうとミニゲームを作成しました。</p>\n\n<p>ミニゲームにはプログラムの様々な要素が入っているので練習には丁度よいかなと思います。</p>\n\n<p>ソースコード：<br>\n<a href=\"https://github.com/kaku3/the-sheep-in-the-desert/\" rel=\"nofollow noopener\" target=\"_blank\">砂漠のひつじ : GitHub</a></p>\n\n<div class=\"footnotes\">\n<hr>\n<ol>\n\n<li id=\"fn1\">\n<p>需要はなさそうだけど知ってて損はないし役に立ちます <a href=\"#fnref1\">↩</a></p>\n</li>\n\n</ol>\n</div>\n",
    "body": "# 理屈はさておき書こう\n\n- 理屈編\n[ゲームで理解するオブジェクト指向設計の基本](https://qiita.com/kaku3/items/a875fe1c098509b1fccd)\n\n若者の興味を引こうとゲームを題材にした記事を書いたのですが、「ふーん」みたいな反応を頂きまして、コレジャナイなと反省しまして、サンプルミニゲームを作成しました。\n\n![the-sheeps-in-the-desert.gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/7df663f9-e70e-f7f7-67e9-fedf8f140de2.gif)\n\n楽しそうですか？楽しそうですよね！\n\n試しに遊んでみる⇒[[砂漠のひつじ : GitHub pages]](https://kaku3.github.io/the-sheep-in-the-desert/)\n\n初心者でもメモ帳とブラウザ(Chrome)さえあれば作れる様に、webpack や vue-cli などは使わずに、素の html, css, javascript (+ jQuery, Handlebars, GSAP3) で作成しました。\n※canvas は未使用\n\n※完成していないですが、github でソース公開していますので是非ダウンロードして完成させてください。\n\n[砂漠のひつじ : GitHub](https://github.com/kaku3/the-sheep-in-the-desert/)\n\nサンプルを用意するに至った理由は、**『英語を読めるけど書けない』** という方は、 **『書かないから書けない』** のと同じで、プログラムも **自分で考えて書かないと書ける様にならない** と思ったからです。\n\n近年では python や Vuejs などでちょこちょこっと書けばやりたいことができてしまうので、オブジェクト指向な実装をする機会があまりない(逆に言うと必要がない)と思いますので、**自分で考えて書く機会** として利用して頂けないかと思い作成しました。\n\n\n# 本サンプルコードと設計について\n\n本サンプルコードはいくつかのクラスが協調して動作する最小のサンプルを目指しました。\n結果、デザインパターン的に正しくない、オブジェクトとしてどうなの？といった実装も多々あります。\nゲームバランス調整する部分に至っては定数を定義していないところもあります。\n\nこちらは「あー、残念なコードだなー」と思いながら直しつつ、設計について少し考えてもらえればと思います。\n\n理屈編でも少し書きましたが **「完璧な設計」** にした結果、クラスをたらい回しにされたり、なぜかメンテナンスが大変になったりすることがあります。一貫性のあるコードは推理がしやすくて読みやすい事は間違いないのですが、 **目的のシステムに対して大げさすぎる設計** は **「完璧な設計」** なのかとか。\n\n業務システムのプロジェクトに参画して、オブジェクト指向で設計ができないとどうしても実装できないケースがあるかというと **たぶんない** のですが、コード量が増えるとある程度系統だった設計をしていないと保守が大変なのも間違いないです。\n\nなので「大げさ」でもなく「無策」でもなく丁度よい設計をできるように、息を吐くように書けるまで反復して書いた方がよいのかなとは思います。\n\n# 実装解説\n\n## html template\n\n[Handlebars](https://handlebarsjs.com/) を使用。\nVue.js の様にダブルブラケット部分を変数で置き換えられて便利。\n\n``` \n* index.html\n    <template id=\"object-smoke\">\n        <div id=\"smoke-{{id}}\" class=\"smoke\"></div>\n    </template>\n```\n``` \n* smoke.js\n    // template 読み込み / compile\n    static template = Handlebars.compile($('template#object-smoke').html())\n\n    // 置き換え、dom に追加\n    Smoke.scene.append(Smoke.template(this))\n``` \n\n## クリックに反応しない要素の作成\n\nひつじや、照準をクリックに反応しないように。\n\n```\n* css\n    pointer-events: none\n```\n\n## Game Loop\n\nsetInterval に class object や method を渡せないので、 static method を利用した。\nGame class を複数作ることもないのでとりあえず。\n\n```\n* main.js\nclass Game\n    static self\n\n    static create() {\n        Game.self = new Game()\n    }\n\n    static exec() {\n        let self = Game.self\n        if(self.currentScene != self.nextScene) {\n            self.changeScene()\n        }\n        self.execScene()\n    }\n\n    constructor() {\n        this.currentScene = SCENE.INIT\n        this.setNextScene(SCENE.GAME_INIT)\n        this.setNextScene(SCENE.TITLE_INIT)\n        setInterval(Game.exec, FPS)\n    }    \n```\n\n2020/09/26 追記：\niOS Safari で、static field 使えないのでコード修正しました。\nclass 定義中に、object の個数分だけ必要な field と、class につき一つしかない field の違いを学習できるように入れておいたのですが…\n\n- iOS safari で static field を使えない ⇒ [Can I use](https://caniuse.com/?search=static%20field)\n- ES2015 の仕様にもない ⇒ [stack overflow](https://stackoverflow.com/questions/40367392/static-class-property-not-working-with-babel)\n\n```\n// 修正前\nclass Game\n    static self\n\n    static create() {\n        Game.self = new Game()\n    }\n    ...\n\n// 修正後\nconst Game_ = {\n    self: null\n}\n\nclass Game {\n\n    static create() {\n        Game_.self = new Game()\n    }\n    ...\n```\n\n## アニメーション\n\n[GSAP3](https://greensock.com/gsap/)を使用。\n基本はタイムラインを作って、キーフレームを追加。\nアニメーション開始時、更新時、終了時などにイベント設定可能。\n\n```\n* smoke.js\n    // set : アニメーションせずに、即時に座標指定\n    gsap.set(this.selector, { left: x - ww, top: y - hh, opacity: 0.25, scale: 0.25 })\n    // timeline 作成。\n    this.tl = gsap.timeline({\n        onComplete: (params) => {\n            const self = params\n            $(self.selector).remove()   // アニメーションが終わったら dom から自身を削除\n        },\n        onCompleteParams: [ this ]\n    })\n    // left, opacity, scale 値を、duration で指定した秒数で変化させる。\n    this.tl.to(this.selector, { left: x + FIELD_SIZE_X * 2, opacity: 0.75, scale: 3, duration: 0.75, ease: Power1.easeIn })\n```\n\n## 画像\n\nibis Paint X を使用。\nスマホで簡単に描けます。\n\n# おわりに\n\nローコードやらノーコードとか言ってる昨今、オブジェクト指向のサンプルコードはあんまり需要なさそう[^1]だと思いつつ興味を引こうとミニゲームを作成しました。\n\nミニゲームにはプログラムの様々な要素が入っているので練習には丁度よいかなと思います。\n\nソースコード：\n[砂漠のひつじ : GitHub](https://github.com/kaku3/the-sheep-in-the-desert/)\n\n[^1]: 需要はなさそうだけど知ってて損はないし役に立ちます\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-09-24T03:19:30+09:00",
    "group": null,
    "id": "f482d48676eb7ea9c9a6",
    "likes_count": 6,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 7,
    "tags": [
      {
        "name": "HTML",
        "versions": []
      },
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "オブジェクト指向",
        "versions": []
      },
      {
        "name": "アニメーション",
        "versions": []
      },
      {
        "name": "ゲーム制作",
        "versions": []
      }
    ],
    "title": "ゲームで身につけるオブジェクト指向設計(実装編)",
    "updated_at": "2020-09-26T22:10:46+09:00",
    "url": "https://qiita.com/kaku3/items/f482d48676eb7ea9c9a6",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 3578,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "<h1 data-sourcepos=\"1:1-1:59\">\n<span id=\"オブジェクト指向設計ってなにがいいの\" class=\"fragment\"></span><a href=\"#%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E8%A8%AD%E8%A8%88%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%AB%E3%81%8C%E3%81%84%E3%81%84%E3%81%AE\"><i class=\"fa fa-link\"></i></a>オブジェクト指向設計ってなにがいいの？</h1>\n<p data-sourcepos=\"3:1-3:121\">プログラムを書くのにはオブジェクト指向がよいとされていて、Wikiには以下記載がある。</p>\n<p data-sourcepos=\"5:1-5:214\"><a href=\"https://ja.wikipedia.org/wiki/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0\" rel=\"nofollow noopener\" target=\"_blank\">オブジェクト指向プログラミング</a></p>\n<blockquote data-sourcepos=\"7:1-7:386\">\n<p data-sourcepos=\"7:3-7:386\">互いに密接な関連性を持つデータとメソッドをひとつにまとめてオブジェクトとし、それぞれ異なる性質と役割を持たせたオブジェクトの様々な定義と、それらオブジェクトを相互に作用させる様々なプロセスの設定を通して、プログラム全体を構築するソフトウェア開発手法である。</p>\n</blockquote>\n<p data-sourcepos=\"9:1-9:231\">…これを読んで「オブジェクト指向すげーな、俺もオブジェクト指向で設計するわ」と思えなかったので、なぜオブジェクト指向で設計するのかを書いてみることにした。</p>\n<p data-sourcepos=\"11:1-11:179\">※基本は知ってるという方は、<a href=\"https://qiita.com/kaku3/items/f482d48676eb7ea9c9a6\" id=\"reference-80935dd8062a4bcc250a\">ゲームで身につけるオブジェクト指向設計(実装編)</a>をどうぞ。</p>\n<h1 data-sourcepos=\"13:1-13:62\">\n<span id=\"実は人間の思考に近く直感的で簡単な考え方\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E3%81%AF%E4%BA%BA%E9%96%93%E3%81%AE%E6%80%9D%E8%80%83%E3%81%AB%E8%BF%91%E3%81%8F%E7%9B%B4%E6%84%9F%E7%9A%84%E3%81%A7%E7%B0%A1%E5%8D%98%E3%81%AA%E8%80%83%E3%81%88%E6%96%B9\"><i class=\"fa fa-link\"></i></a>実は人間の思考に近く直感的で簡単な考え方</h1>\n<p data-sourcepos=\"15:1-15:272\">プログラムは、変数に値を詰めるとか、if文で分岐したいとか、for文で繰り返したいとか、ちょっとまとまった処理は関数にするとかを、組み合わせて目的の処理を行うということをまずは習うと思う。</p>\n<p data-sourcepos=\"17:1-17:143\">ただ、この基本的な考え方だけではフォートナイトやAPEX<sup><a href=\"#fn-1\" id=\"fnref-1\">1</a></sup>みたいなゲームを作ろうとすると相当難しい。</p>\n<p data-sourcepos=\"19:1-20:331\">フォートナイトのゲーム画面には、プレイヤーキャラクターや、地面などの背景、様々な武器や弾といった<strong>オブジェクト</strong>が存在し、それぞれのオブジェクトがプレイヤーの入力や、AI、物理法則などに従い独立して動作している。<br>\nそのようなオブジェクトの集合を処理するプログラムを書くのであれば、if文やfor文や関数の集合ではなく、<strong>オブジェクト</strong>の集合を操作するプログラムとして記述する方が<strong>人間の思考に近く直感的で簡単</strong>であるのは想像に難しくないと思う。</p>\n<p data-sourcepos=\"22:1-23:66\">以下「プレイヤーが弾を撃つシーン」のシーケンスを示す。<br>\n直感的に設計ができるかを考えてみて頂きたい。</p>\n<p data-sourcepos=\"25:1-25:119\"><a href=\"https://camo.qiitausercontent.com/6e986798dc310876c7c312e1ff715b5632e33475/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f34633934323831342d663066342d333263302d613837342d3234636638366634623265372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F4c942814-f0f4-32c0-a874-24cf86f4b2e7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=0396ac789f34ede8794a4815157474c9\" alt=\"fps.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/4c942814-f0f4-32c0-a874-24cf86f4b2e7.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F4c942814-f0f4-32c0-a874-24cf86f4b2e7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=0277024ffa54a0b2652362dfe400f941 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"27:1-27:314\">この図から、細かいプログラムは分からなくても、<strong>何を作ろうとしているか</strong>が想像できたとすれば<strong>オブジェクト指向</strong>がなぜ必要なのか、いかに人間の思考に沿った設計手法なのかの半分ぐらいは理解できたのではないかと思う。</p>\n<p data-sourcepos=\"29:1-29:138\">ここからは「プレイヤーが弾を撃つシーン」を例に、オブジェクト指向の以下概念について確認する。</p>\n<ul data-sourcepos=\"30:1-33:0\">\n<li data-sourcepos=\"30:1-30:32\">クラスとインスタンス</li>\n<li data-sourcepos=\"31:1-31:29\">クラスの属性と操作</li>\n<li data-sourcepos=\"32:1-33:0\">派生</li>\n</ul>\n<h1 data-sourcepos=\"34:1-34:32\">\n<span id=\"クラスとインスタンス\" class=\"fragment\"></span><a href=\"#%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%A8%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9\"><i class=\"fa fa-link\"></i></a>クラスとインスタンス</h1>\n<p data-sourcepos=\"36:1-36:156\">先のシーケンス図で武器から弾を発射する処理の、<code>&lt;&lt;create&gt;&gt;</code>では「クラス」から「インスタンス」を生成している。</p>\n<p data-sourcepos=\"38:1-39:174\">ゲーム中の弾は「武器より発射されて、何かにぶつかるかそれぞれの武器に設定された飛距離を飛ぶまではゲーム世界中に存在するもの」として定義されている。<br>\nその<strong>弾の定義</strong>が <strong>「クラス」</strong> であり、ゲーム中に実際に存在している<strong>弾のオブジェクト</strong> が <strong>「インスタンス」</strong> である。</p>\n<p data-sourcepos=\"41:1-41:30\">以下に関係性を示す。</p>\n<p data-sourcepos=\"43:1-43:124\"><a href=\"https://camo.qiitausercontent.com/baad87c6c122b9398008e3343ccae86b50f6de4a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38386434393834642d343563652d616430352d656438362d3164623164343164653264662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F88d4984d-45ce-ad05-ed86-1db1d41de2df.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e9702936b3c060e04c97304b8927717c\" alt=\"instance.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/88d4984d-45ce-ad05-ed86-1db1d41de2df.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F88d4984d-45ce-ad05-ed86-1db1d41de2df.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ff62ba7435e5ccc58a33c1b204128148 1x\" loading=\"lazy\"></a></p>\n<h1 data-sourcepos=\"46:1-46:29\">\n<span id=\"クラスの属性と操作\" class=\"fragment\"></span><a href=\"#%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%AE%E5%B1%9E%E6%80%A7%E3%81%A8%E6%93%8D%E4%BD%9C\"><i class=\"fa fa-link\"></i></a>クラスの属性と操作</h1>\n<p data-sourcepos=\"48:1-49:147\">クラスには「属性」と「操作」がある。<br>\n具体例があった方がイメージしやすいと思われるので、先のクラス図に「属性」と「操作」を書いておいた。</p>\n<h2 data-sourcepos=\"51:1-51:30\">\n<span id=\"属性attribute-property\" class=\"fragment\"></span><a href=\"#%E5%B1%9E%E6%80%A7attribute-property\"><i class=\"fa fa-link\"></i></a>属性(attribute, property)</h2>\n<p data-sourcepos=\"52:1-52:237\">「属性」は、弾の種別（マシンガンの弾なのか、スナイパーライフルの弾なのか）の様に生成された時点で決定され変化しない値と、速度や座標などの様に変化する値がある。</p>\n<p data-sourcepos=\"54:1-55:283\">属性については、インスタンスの外側からの操作可否を設定できる言語が多い。<br>\nここの設計は相当センシティブで設計に個人差が出たり、設計の難易度を上げるところと感じているが、ざっくり理解してほしいのは**「実装した自分以外が操作できてよい値かどうか？」**ということである。</p>\n<p data-sourcepos=\"57:1-57:341\">例えば、弾の種別をインスタンスの外から変更できるように設計するということは**「弾クラスの設計・実装者が意図しないところで、マシンガンの弾がスナイパーライフルの弾に変化するバグが発生する可能性を含む設計」** とするということである。</p>\n<p data-sourcepos=\"59:1-63:36\">このバグによってビクロイ<sup><a href=\"#fn-2\" id=\"fnref-2\">2</a></sup>を取りそこねたユーザーなどがいた場合のことを考えてみよう。<br>\nサポートに熱量の高いメールが届き、即時解決をしなければならないだろう。<br>\nところが、<strong>インスタンスの外から変更できるということはコード中のどこででも変更できる</strong>設計であるため、問題箇所の特定が非常に難しく即時解決は困難。<br>\n最悪、弾クラスの実装者だけではなく、実装者全員を呼び出して原因の特定を行う必要が出たり、返答が遅滞しSNSでサポートへの避難を拡散される。<br>\n想像しただけで恐ろしい。</p>\n<h2 data-sourcepos=\"66:1-66:17\">\n<span id=\"操作method\" class=\"fragment\"></span><a href=\"#%E6%93%8D%E4%BD%9Cmethod\"><i class=\"fa fa-link\"></i></a>操作(method)</h2>\n<p data-sourcepos=\"68:1-69:239\">弾が自立して動作する前提で話を進めていたが、自立して動作するためには「操作」が必要である。外部から「操作」を呼び出す事で適切に動く様な method 設計を行う必要がある。<br>\n例えば、1/60秒毎<sup><a href=\"#fn-3\" id=\"fnref-3\">3</a></sup>に外部から1/60秒時間経過したから、『その分動いて』と「操作」を呼び出しその通り弾が動く設計にすれば、座標(x,y)などは外部に公開する必要がなくなる。</p>\n<p data-sourcepos=\"71:1-71:276\">このように不用意に「属性」を公開せず、適切に「操作」を設計することを「カプセル化」と言うが、「カプセル化」に執着しすぎるとかえって設計が複雑になったりする事もあるので注意が必要である。</p>\n<h1 data-sourcepos=\"74:1-74:51\">\n<span id=\"派生inheritance-super-class-delivered-class\" class=\"fragment\"></span><a href=\"#%E6%B4%BE%E7%94%9Finheritance-super-class-delivered-class\"><i class=\"fa fa-link\"></i></a>派生(inheritance, super class, delivered class)</h1>\n<p data-sourcepos=\"76:1-78:345\">マシンガンの弾もスナイパーライフルの弾も、どっちも実弾なので先のBulletクラスで実装できていた。<br>\n3年も運営してたらマンネリ化してきて、レーザー兵器やホーミング武器も欲しくなったり、有名タイトルとコラボしたくなったりするかもしれない。<br>\nその場合、シンプルなBulletクラスのままでは対応できなくなる。ホーミングさせるには記憶させておかないといけないパラメータが大量にあるため属性に保持しなければ行けない項目が増えるし、ホーミングさせるための「操作」も記述しないといけない。</p>\n<p data-sourcepos=\"80:1-80:420\">Bullet クラスに、それらのコードを全て書いてしまうと超巨大なクラスとなりメンテナンスが困難になる。そこで、どんな弾にでも必要な属性と操作を基底クラス(super class)に定義し、レーザー兵器、ホーミング武器それぞれ固有のコードを派生クラス(delivered class)に定義する様な設計を行う事が考えられる。<sup><a href=\"#fn-4\" id=\"fnref-4\">4</a></sup><sup><a href=\"#fn-5\" id=\"fnref-5\">5</a></sup></p>\n<p data-sourcepos=\"82:1-82:127\"><a href=\"https://camo.qiitausercontent.com/dec0a750090dfcbe27fee884ab5fa82d9e147a5a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f35643563356463632d303865302d383162342d303339382d3134373337373262373362342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F5d5c5dcc-08e0-81b4-0398-1473772b73b4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=a5ae25837ea74b2a24af7fd3b6a1207f\" alt=\"inheritance.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/5d5c5dcc-08e0-81b4-0398-1473772b73b4.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F5d5c5dcc-08e0-81b4-0398-1473772b73b4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b7bc77ca0379fd633e195da306f38b9a 1x\" loading=\"lazy\"></a></p>\n<h1 data-sourcepos=\"86:1-86:14\">\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h1>\n<p data-sourcepos=\"88:1-89:159\">入門書でフォローされない「なぜ」を中心に解説してみました。<br>\n「弾」というオブジェクトはインスタンスをイメージしやすい例かと思いますが、業務アプリでも考え方は同じです。</p>\n<p data-sourcepos=\"91:1-91:141\">業務をよく観察して、エクスプローラのフォルダを整理するように、クラスを切り出してみてください。</p>\n<p data-sourcepos=\"93:1-93:351\">設計レベルの「階層」を意識して、外部設計と１対１対応するビジネスロジック層のクラス、なんかよくわからない細かい処理を分かりやすく整理してまとめたライブラリ層のクラス、アプリ固有のコードなどに分けるとなんとなく整理されるかもしれません。</p>\n<section class=\"footnotes\">\n<ol>\n<li id=\"fn-1\">\n<p data-sourcepos=\"96:7-96:42\">人気バトルロイヤルゲーム <a href=\"#fnref-1\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-2\">\n<p data-sourcepos=\"97:7-97:46\">ビクトリーロイヤル(#1位)の略 <a href=\"#fnref-2\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-3\">\n<p data-sourcepos=\"98:7-98:138\">1/60秒は旧コンソール機。最近は様々なスペックのPCで動かないといけないので可変フレームレート <a href=\"#fnref-3\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-4\">\n<p data-sourcepos=\"99:7-99:75\">中の人ではないので実際のところは当然分からない <a href=\"#fnref-4\" class=\"\">↩</a></p>\n</li>\n<li id=\"fn-5\">\n<p data-sourcepos=\"100:7-100:102\">それどころかほとんどやったことないので色々間違ってるかもしれない <a href=\"#fnref-5\" class=\"\">↩</a></p>\n</li>\n</ol>\n</section>\n",
    "body": "# オブジェクト指向設計ってなにがいいの？\n\nプログラムを書くのにはオブジェクト指向がよいとされていて、Wikiには以下記載がある。\n\n[オブジェクト指向プログラミング](https://ja.wikipedia.org/wiki/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0)\n\n> 互いに密接な関連性を持つデータとメソッドをひとつにまとめてオブジェクトとし、それぞれ異なる性質と役割を持たせたオブジェクトの様々な定義と、それらオブジェクトを相互に作用させる様々なプロセスの設定を通して、プログラム全体を構築するソフトウェア開発手法である。\n\n…これを読んで「オブジェクト指向すげーな、俺もオブジェクト指向で設計するわ」と思えなかったので、なぜオブジェクト指向で設計するのかを書いてみることにした。\n\n※基本は知ってるという方は、[ゲームで身につけるオブジェクト指向設計(実装編)](https://qiita.com/kaku3/items/f482d48676eb7ea9c9a6)をどうぞ。\n\n# 実は人間の思考に近く直感的で簡単な考え方\n\nプログラムは、変数に値を詰めるとか、if文で分岐したいとか、for文で繰り返したいとか、ちょっとまとまった処理は関数にするとかを、組み合わせて目的の処理を行うということをまずは習うと思う。\n\nただ、この基本的な考え方だけではフォートナイトやAPEX[^1]みたいなゲームを作ろうとすると相当難しい。\n\nフォートナイトのゲーム画面には、プレイヤーキャラクターや、地面などの背景、様々な武器や弾といった**オブジェクト**が存在し、それぞれのオブジェクトがプレイヤーの入力や、AI、物理法則などに従い独立して動作している。\nそのようなオブジェクトの集合を処理するプログラムを書くのであれば、if文やfor文や関数の集合ではなく、**オブジェクト**の集合を操作するプログラムとして記述する方が**人間の思考に近く直感的で簡単**であるのは想像に難しくないと思う。\n\n以下「プレイヤーが弾を撃つシーン」のシーケンスを示す。\n直感的に設計ができるかを考えてみて頂きたい。\n\n![fps.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/4c942814-f0f4-32c0-a874-24cf86f4b2e7.png)\n\nこの図から、細かいプログラムは分からなくても、**何を作ろうとしているか**が想像できたとすれば**オブジェクト指向**がなぜ必要なのか、いかに人間の思考に沿った設計手法なのかの半分ぐらいは理解できたのではないかと思う。\n\nここからは「プレイヤーが弾を撃つシーン」を例に、オブジェクト指向の以下概念について確認する。\n- クラスとインスタンス\n- クラスの属性と操作\n- 派生\n\n# クラスとインスタンス\n\n先のシーケンス図で武器から弾を発射する処理の、`<<create>>`では「クラス」から「インスタンス」を生成している。\n\nゲーム中の弾は「武器より発射されて、何かにぶつかるかそれぞれの武器に設定された飛距離を飛ぶまではゲーム世界中に存在するもの」として定義されている。\nその**弾の定義**が **「クラス」** であり、ゲーム中に実際に存在している**弾のオブジェクト** が **「インスタンス」** である。\n\n以下に関係性を示す。\n\n![instance.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/88d4984d-45ce-ad05-ed86-1db1d41de2df.png)\n\n\n# クラスの属性と操作\n\nクラスには「属性」と「操作」がある。\n具体例があった方がイメージしやすいと思われるので、先のクラス図に「属性」と「操作」を書いておいた。\n\n## 属性(attribute, property)\n「属性」は、弾の種別（マシンガンの弾なのか、スナイパーライフルの弾なのか）の様に生成された時点で決定され変化しない値と、速度や座標などの様に変化する値がある。\n\n属性については、インスタンスの外側からの操作可否を設定できる言語が多い。\nここの設計は相当センシティブで設計に個人差が出たり、設計の難易度を上げるところと感じているが、ざっくり理解してほしいのは**「実装した自分以外が操作できてよい値かどうか？」**ということである。\n\n例えば、弾の種別をインスタンスの外から変更できるように設計するということは**「弾クラスの設計・実装者が意図しないところで、マシンガンの弾がスナイパーライフルの弾に変化するバグが発生する可能性を含む設計」** とするということである。\n\nこのバグによってビクロイ[^2]を取りそこねたユーザーなどがいた場合のことを考えてみよう。\nサポートに熱量の高いメールが届き、即時解決をしなければならないだろう。\nところが、**インスタンスの外から変更できるということはコード中のどこででも変更できる**設計であるため、問題箇所の特定が非常に難しく即時解決は困難。\n最悪、弾クラスの実装者だけではなく、実装者全員を呼び出して原因の特定を行う必要が出たり、返答が遅滞しSNSでサポートへの避難を拡散される。\n想像しただけで恐ろしい。\n\n\n## 操作(method)\n\n弾が自立して動作する前提で話を進めていたが、自立して動作するためには「操作」が必要である。外部から「操作」を呼び出す事で適切に動く様な method 設計を行う必要がある。\n例えば、1/60秒毎[^3]に外部から1/60秒時間経過したから、『その分動いて』と「操作」を呼び出しその通り弾が動く設計にすれば、座標(x,y)などは外部に公開する必要がなくなる。\n\nこのように不用意に「属性」を公開せず、適切に「操作」を設計することを「カプセル化」と言うが、「カプセル化」に執着しすぎるとかえって設計が複雑になったりする事もあるので注意が必要である。\n\n\n# 派生(inheritance, super class, delivered class)\n\nマシンガンの弾もスナイパーライフルの弾も、どっちも実弾なので先のBulletクラスで実装できていた。\n3年も運営してたらマンネリ化してきて、レーザー兵器やホーミング武器も欲しくなったり、有名タイトルとコラボしたくなったりするかもしれない。\nその場合、シンプルなBulletクラスのままでは対応できなくなる。ホーミングさせるには記憶させておかないといけないパラメータが大量にあるため属性に保持しなければ行けない項目が増えるし、ホーミングさせるための「操作」も記述しないといけない。\n\nBullet クラスに、それらのコードを全て書いてしまうと超巨大なクラスとなりメンテナンスが困難になる。そこで、どんな弾にでも必要な属性と操作を基底クラス(super class)に定義し、レーザー兵器、ホーミング武器それぞれ固有のコードを派生クラス(delivered class)に定義する様な設計を行う事が考えられる。[^4][^5]\n\n![inheritance.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/5d5c5dcc-08e0-81b4-0398-1473772b73b4.png)\n\n\n\n# おわりに\n\n入門書でフォローされない「なぜ」を中心に解説してみました。\n「弾」というオブジェクトはインスタンスをイメージしやすい例かと思いますが、業務アプリでも考え方は同じです。\n\n業務をよく観察して、エクスプローラのフォルダを整理するように、クラスを切り出してみてください。\n\n設計レベルの「階層」を意識して、外部設計と１対１対応するビジネスロジック層のクラス、なんかよくわからない細かい処理を分かりやすく整理してまとめたライブラリ層のクラス、アプリ固有のコードなどに分けるとなんとなく整理されるかもしれません。\n\n\n[^1]: 人気バトルロイヤルゲーム\n[^2]: ビクトリーロイヤル(#1位)の略\n[^3]: 1/60秒は旧コンソール機。最近は様々なスペックのPCで動かないといけないので可変フレームレート\n[^4]: 中の人ではないので実際のところは当然分からない\n[^5]: それどころかほとんどやったことないので色々間違ってるかもしれない\n",
    "coediting": false,
    "comments_count": 1,
    "created_at": "2020-09-19T16:49:12+09:00",
    "group": null,
    "id": "a875fe1c098509b1fccd",
    "likes_count": 34,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 31,
    "tags": [
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "オブジェクト指向",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "oop",
        "versions": []
      }
    ],
    "title": "ゲームで理解するオブジェクト指向設計の基本",
    "updated_at": "2023-07-13T13:06:36+09:00",
    "url": "https://qiita.com/kaku3/items/a875fe1c098509b1fccd",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 12462,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"ウォーターフォールモデル開発とは\" class=\"fragment\"></span><a href=\"#%E3%82%A6%E3%82%A9%E3%83%BC%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A9%E3%83%BC%E3%83%AB%E3%83%A2%E3%83%87%E3%83%AB%E9%96%8B%E7%99%BA%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>ウォーターフォール・モデル開発とは</h1>\n\n<p>詳細はwiki 参照ください：<a href=\"https://ja.wikipedia.org/wiki/%E3%82%A6%E3%82%A9%E3%83%BC%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A9%E3%83%BC%E3%83%AB%E3%83%BB%E3%83%A2%E3%83%87%E3%83%AB\" rel=\"nofollow noopener\" target=\"_blank\">wiki : ウォーターフォール・モデル</a></p>\n\n<p>開発の各工程をおよそ以下の様に定義し、水が流れる様に上から下の工程を順にこなしていく、という考え方。</p>\n\n<ol>\n<li>要件定義：エンドユーザーの業務のうち、本システムで解決する課題を定義</li>\n<li>外部設計：要件定義に従い、どのような機能、UIを持つかの設計</li>\n<li>開発：外部設計に従い、プログラムを作成。昔は内部設計があったが開発者が同時に行う事が多い</li>\n<li>テスト：外部設計書に従い、機能を満たしているか試験</li>\n</ol>\n\n<p>1や2の「何を作るか」を決める工程では、作る物をドキュメント化し、それぞれの工程の終わりでは、前工程の責任者がレビューを行い、期待値通り作られていることを確認、承認し次工程へ進める開発手法だ。</p>\n\n<h1>\n<span id=\"次工程に進むには承認が必須だから手戻りしない\" class=\"fragment\"></span><a href=\"#%E6%AC%A1%E5%B7%A5%E7%A8%8B%E3%81%AB%E9%80%B2%E3%82%80%E3%81%AB%E3%81%AF%E6%89%BF%E8%AA%8D%E3%81%8C%E5%BF%85%E9%A0%88%E3%81%A0%E3%81%8B%E3%82%89%E6%89%8B%E6%88%BB%E3%82%8A%E3%81%97%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>次工程に進むには承認が必須だから手戻りしない</h1>\n\n<p>この<strong>『前工程の責任者に責任を持って承認してもらう』</strong>事によって<strong>手戻りが発生しない</strong>ことが本手法の最大のメリットだ。</p>\n\n<p>だが少し待ってほしい。資本主義社会においては<strong>『世の中に存在しないものを作らないと新たな価値とならない、つまりは誰も見たことがないものを生み出さねばらなない』</strong>あるいは、業務を効率化しコストを削減するシステムを作るのであれば、<strong>『どこにコストがかかっていて、どのようなユーザーがどのように使うとコストが下がる』</strong>ということを把握していなければならない。<br>\nこの様な前提の中で<strong>『これでよいです』</strong>と承認できる人間は預言者か異世界から転生したチート能力の持ち主くらいではないだろうか。</p>\n\n<p>外部設計においても同様である。設計者は開発のプロではあるが、顧客の業務についてはシロートなのである。案件毎に１から顧客の業務を覚え正しく要件を理解し、仕様に落とし込むには充分な時間が必要であるが、その時間が与えられることはまずない。同じ案件を長くやっていれば別だが、基本的には案件毎に一夜漬けで覚えた知識を元に試験に望む様な作業が外部設計なのだ。</p>\n\n<p>開発のプロである設計者が、業務アプリケーションの延長としてWebアプリケーション開発を行う際に、Excel画面仕様書でおよその合意を取ると、以下の図の様な深刻な認識の相違が生まれる可能性がある。</p>\n\n<p><strong>図. 立場が異なれば常識も異なる</strong><br>\n<a href=\"https://camo.qiitausercontent.com/de8f12178f58781cbf8fe97ab1c97dd6c207d041/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f65626436613961342d313962352d396137322d393361362d6262613063663835303937392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Febd6a9a4-19b5-9a72-93a6-bba0cf850979.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b2069f32930e4b0a0e750a94e957b7b5\" alt=\"脳内.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/ebd6a9a4-19b5-9a72-93a6-bba0cf850979.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Febd6a9a4-19b5-9a72-93a6-bba0cf850979.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=ae984927268fd75686c086be6c6ada56 1x\" loading=\"lazy\"></a></p>\n\n<p>90年代の Windows アプリケーションであれば、Excel画面仕様書はかなりの再現度を誇っていたし、パワポで作ったi-modeの仕様書も充分完成形がイメージできていた。</p>\n\n<p>だが、2020年に作っているのは動的なウェブサイトである。静的な仕様書から『動き』まで想像して承認などできるだろうか。<br>\n普通の人であれば<b>『実際動いてるの触らないと分からないっす』</b>と言って機能として過不足ないか確認までできるのが精一杯ではないだろうか。</p>\n\n<p>この認識の齟齬をなくすのであれば、製品コードでそのまま利用できるモックやプロトタイプを作って、それを確認してもらいながら進めるのが現実的かと思われるが、それらも<b>これなら絶対に間違いないですよね？と承認を取ろうとすると</b>莫大な工数がかかってしまい元々の用途からそれてしまうことが懸念される。</p>\n\n<p>ここまで考察してみると、手戻りが発生しないことを保証する<b>『承認行為』</b>は、相当に胆力が必要な行為であり、その規模が大きくなればなる程、難易度が上がる行為であることが推察できると思う。</p>\n\n<p>『承認行為』は当然必要であるが、『不用意に大きな成果物』に対しての『承認行為』が必要になるプロジェクト運営は、リスクが大きくなると言えるのではないだろうか。</p>\n\n<h1>\n<span id=\"不完全な承認と手戻り\" class=\"fragment\"></span><a href=\"#%E4%B8%8D%E5%AE%8C%E5%85%A8%E3%81%AA%E6%89%BF%E8%AA%8D%E3%81%A8%E6%89%8B%E6%88%BB%E3%82%8A\"><i class=\"fa fa-link\"></i></a>不完全な承認と手戻り</h1>\n\n<p>『不用意に大きな成果物』に対して承認を行うプロジェクト運営を行うと、誤りに気づく機会も損失することになる。<br>\n「開発者とテスターが設計者の意図通りに仕様を読み取らなかった問題」の発生と発覚をシーケンス図として以下に示す。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/ab6aa59fc59a4897574c2ddd8792014fb55d9982/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f38383834326365322d323735662d656338632d383236622d3332353637646663356639372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F88842ce2-275f-ec8c-826b-32567dfc5f97.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=2a7f0303c8d9964141c86681006c4e38\" alt=\"ウォーターフォール.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/88842ce2-275f-ec8c-826b-32567dfc5f97.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2F88842ce2-275f-ec8c-826b-32567dfc5f97.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=91da23a6e63097f50f858b008d3d78fa 1x\" loading=\"lazy\"></a></p>\n\n<p>恐ろしいことに、ウォーターフォール・モデル開発では、実装誤りが納品して顧客の手に渡るまで発覚しないのである。<br>\nこのクラスの障害が発生すると過去の議事録を大捜索し言った言わないの<a href=\"https://ja.wikipedia.org/wiki/%E3%82%BD%E3%83%B3%E3%82%AF%E3%83%A9%E3%83%BC%E3%83%B3\" rel=\"nofollow noopener\" target=\"_blank\">水掛け祭り</a>が始まるかもしれない。</p>\n\n<p>※QAの質問数と回答数が異なる、各種ドキュメントが更新され続け前工程が完了しないまま次工程に入ってるのは、正しく問題を把握するための作為的な図。<sup id=\"fnref1\"><a href=\"#fn1\" title=\"高校の時の数学の恩師が図形の問題で三角形を描いていたら「理想的な図を描くと問題を見誤るからいびつに描く方がよい」と教えてくれたので、可能な限りいびつに描いたフィクションです。\">1</a></sup></p>\n\n<h1>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h1>\n\n<p>手戻りは、関係者全員が精神的にも工数的にも大被害を被るので可能な限り避けるべきだと思う。<br>\n避けるには<b>『顧客が本当にほしいもの』</b>を理解してこまめに確認が取りながら一緒に『プログラムではなくプロダクト』を作っていくことが望ましく思えた。</p>\n\n<div class=\"footnotes\">\n<hr>\n<ol>\n\n<li id=\"fn1\">\n<p>高校の時の数学の恩師が図形の問題で三角形を描いていたら「理想的な図を描くと問題を見誤るからいびつに描く方がよい」と教えてくれたので、可能な限りいびつに描いたフィクションです。 <a href=\"#fnref1\">↩</a></p>\n</li>\n\n</ol>\n</div>\n",
    "body": "# ウォーターフォール・モデル開発とは\n\n詳細はwiki 参照ください：[wiki : ウォーターフォール・モデル](https://ja.wikipedia.org/wiki/%E3%82%A6%E3%82%A9%E3%83%BC%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A9%E3%83%BC%E3%83%AB%E3%83%BB%E3%83%A2%E3%83%87%E3%83%AB)\n\n開発の各工程をおよそ以下の様に定義し、水が流れる様に上から下の工程を順にこなしていく、という考え方。\n\n1. 要件定義：エンドユーザーの業務のうち、本システムで解決する課題を定義\n2. 外部設計：要件定義に従い、どのような機能、UIを持つかの設計\n3. 開発：外部設計に従い、プログラムを作成。昔は内部設計があったが開発者が同時に行う事が多い\n4. テスト：外部設計書に従い、機能を満たしているか試験\n\n1や2の「何を作るか」を決める工程では、作る物をドキュメント化し、それぞれの工程の終わりでは、前工程の責任者がレビューを行い、期待値通り作られていることを確認、承認し次工程へ進める開発手法だ。\n\n\n# 次工程に進むには承認が必須だから手戻りしない\n\nこの**『前工程の責任者に責任を持って承認してもらう』**事によって**手戻りが発生しない**ことが本手法の最大のメリットだ。\n\nだが少し待ってほしい。資本主義社会においては**『世の中に存在しないものを作らないと新たな価値とならない、つまりは誰も見たことがないものを生み出さねばらなない』**あるいは、業務を効率化しコストを削減するシステムを作るのであれば、**『どこにコストがかかっていて、どのようなユーザーがどのように使うとコストが下がる』**ということを把握していなければならない。\nこの様な前提の中で**『これでよいです』**と承認できる人間は預言者か異世界から転生したチート能力の持ち主くらいではないだろうか。\n\n外部設計においても同様である。設計者は開発のプロではあるが、顧客の業務についてはシロートなのである。案件毎に１から顧客の業務を覚え正しく要件を理解し、仕様に落とし込むには充分な時間が必要であるが、その時間が与えられることはまずない。同じ案件を長くやっていれば別だが、基本的には案件毎に一夜漬けで覚えた知識を元に試験に望む様な作業が外部設計なのだ。\n\n開発のプロである設計者が、業務アプリケーションの延長としてWebアプリケーション開発を行う際に、Excel画面仕様書でおよその合意を取ると、以下の図の様な深刻な認識の相違が生まれる可能性がある。\n\n**図. 立場が異なれば常識も異なる**\n![脳内.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/ebd6a9a4-19b5-9a72-93a6-bba0cf850979.png)\n\n90年代の Windows アプリケーションであれば、Excel画面仕様書はかなりの再現度を誇っていたし、パワポで作ったi-modeの仕様書も充分完成形がイメージできていた。\n\nだが、2020年に作っているのは動的なウェブサイトである。静的な仕様書から『動き』まで想像して承認などできるだろうか。\n普通の人であれば<b>『実際動いてるの触らないと分からないっす』</b>と言って機能として過不足ないか確認までできるのが精一杯ではないだろうか。\n\nこの認識の齟齬をなくすのであれば、製品コードでそのまま利用できるモックやプロトタイプを作って、それを確認してもらいながら進めるのが現実的かと思われるが、それらも<b>これなら絶対に間違いないですよね？と承認を取ろうとすると</b>莫大な工数がかかってしまい元々の用途からそれてしまうことが懸念される。\n\nここまで考察してみると、手戻りが発生しないことを保証する<b>『承認行為』</b>は、相当に胆力が必要な行為であり、その規模が大きくなればなる程、難易度が上がる行為であることが推察できると思う。\n\n『承認行為』は当然必要であるが、『不用意に大きな成果物』に対しての『承認行為』が必要になるプロジェクト運営は、リスクが大きくなると言えるのではないだろうか。\n\n# 不完全な承認と手戻り\n\n『不用意に大きな成果物』に対して承認を行うプロジェクト運営を行うと、誤りに気づく機会も損失することになる。\n「開発者とテスターが設計者の意図通りに仕様を読み取らなかった問題」の発生と発覚をシーケンス図として以下に示す。\n\n![ウォーターフォール.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/88842ce2-275f-ec8c-826b-32567dfc5f97.png)\n\n恐ろしいことに、ウォーターフォール・モデル開発では、実装誤りが納品して顧客の手に渡るまで発覚しないのである。\nこのクラスの障害が発生すると過去の議事録を大捜索し言った言わないの[水掛け祭り](https://ja.wikipedia.org/wiki/%E3%82%BD%E3%83%B3%E3%82%AF%E3%83%A9%E3%83%BC%E3%83%B3)が始まるかもしれない。\n\n※QAの質問数と回答数が異なる、各種ドキュメントが更新され続け前工程が完了しないまま次工程に入ってるのは、正しく問題を把握するための作為的な図。[^1]\n\n# まとめ\n\n手戻りは、関係者全員が精神的にも工数的にも大被害を被るので可能な限り避けるべきだと思う。\n避けるには<b>『顧客が本当にほしいもの』</b>を理解してこまめに確認が取りながら一緒に『プログラムではなくプロダクト』を作っていくことが望ましく思えた。\n\n[^1]: 高校の時の数学の恩師が図形の問題で三角形を描いていたら「理想的な図を描くと問題を見誤るからいびつに描く方がよい」と教えてくれたので、可能な限りいびつに描いたフィクションです。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-09-14T00:59:57+09:00",
    "group": null,
    "id": "57d8425c2bf96289993f",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 1,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "ウォーターフォール",
        "versions": []
      },
      {
        "name": "開発プロセス",
        "versions": []
      }
    ],
    "title": "ウォーターフォール・モデルがなぜ難しいかを考えてみる",
    "updated_at": "2020-09-16T22:45:47+09:00",
    "url": "https://qiita.com/kaku3/items/57d8425c2bf96289993f",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1829,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"プログラム上達に必要なものは\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E4%B8%8A%E9%81%94%E3%81%AB%E5%BF%85%E8%A6%81%E3%81%AA%E3%82%82%E3%81%AE%E3%81%AF\"><i class=\"fa fa-link\"></i></a>プログラム上達に必要なものは？</h1>\n\n<p>モチベーションでしょうか？あるいはセンスでしょうか？</p>\n\n<p>『プログラム未経験者大歓迎』の求人に募集してきた方々は、少なくとも自分で学習するモチベーションはなかったはずですし、センスについては未知数です。そんな方々にプログラム上達してもらうためには何を与えればよいでしょう？</p>\n\n<p>Webサイトには解説記事は溢れていますし、少しお金を出せば詳しく解説してある本もたくさんあります。それらを読む様に口を酸っぱくして言い続ければいいでしょうか？気分が乗らない学校の宿題にようやく手をつけた子供に「宿題をやったのか？」と確認するおかあさんのようになっていないでしょうか？</p>\n\n<p>意見は色々あると思いますが、わたしは、<b>「丁度よいサイズの課題」</b>を用意することがよいのではないかと思っています。</p>\n\n<h1>\n<span id=\"丁度よいサイズの課題集\" class=\"fragment\"></span><a href=\"#%E4%B8%81%E5%BA%A6%E3%82%88%E3%81%84%E3%82%B5%E3%82%A4%E3%82%BA%E3%81%AE%E8%AA%B2%E9%A1%8C%E9%9B%86\"><i class=\"fa fa-link\"></i></a>丁度よいサイズの課題集</h1>\n\n<p>「丁度よいサイズの課題」とは、業務で役に立つ可能性が高く、そこそこ頑張れば解決でき、達成感が得られ、挫折しにくい課題を指します。</p>\n\n<p>「武道の達人は対峙しただけで相手の実力が分かる」という言葉をご存知でしょうか。経験を積んだ人間には未経験の人間の隙が見えるが、未経験者本人は自分の隙にまったく気づいていないという状況があります。スポーツや対戦ゲームなどでも同様のことを経験された方も多いと思います。</p>\n\n<p>これは、経験者が相手と向き合い、相手の技量を理解し、相手が抱えている問題を解決する課題を提供することで、未経験の人間に正しい知識を与えて導く事ができるという事も示唆していると思います。</p>\n\n<p>新たに新人の部下を持った先輩職業プログラマーの方々は、新人の教育に苦心されていることかと思いますが、およそ新人の皆さんが躓くところには傾向があるので、Webサイトを検索したら「丁度よいサイズの課題集」が出てきてもよいのかなぁと思うのですが、意外と出てきませんでした。</p>\n\n<p>そこで、勉強会でやった課題を「丁度よいサイズの課題集」のメモとして残してみようと思いました。</p>\n\n<h2>\n<span id=\"web-編\" class=\"fragment\"></span><a href=\"#web-%E7%B7%A8\"><i class=\"fa fa-link\"></i></a>Web 編</h2>\n\n<h3>\n<span id=\"microsoft-learn--azure-の基礎\" class=\"fragment\"></span><a href=\"#microsoft-learn--azure-%E3%81%AE%E5%9F%BA%E7%A4%8E\"><i class=\"fa fa-link\"></i></a>Microsoft Learn : Azure の基礎</h3>\n\n<ul>\n<li>技術 : Azure</li>\n</ul>\n\n<p>『プログラマーのための』というタイトルであるが、いきなりクラウドサービスの学習推し。<br>\nMicrosoft が公開している<b>無料</b>の e-learningで10時間程度の内容。経験値も貯まるしレベルも上がる。</p>\n\n<p>Azure も AWS も GCP も名前は昔から変わらないのに、知らないうちにIoTやAIなども抱え<del>肥大化</del>多様なニーズに応える一方で、初学者にとっては<del>キメラの様な</del>難解なサービスとなってしまった。</p>\n\n<p>これらのサービスは本で学習すると退屈で、実際に画面を触って操作しないとなかなか身につかない傾向にあるが、<a href=\"https://docs.microsoft.com/ja-jp/learn/paths/azure-fundamentals/\" rel=\"nofollow noopener\" target=\"_blank\">Microsoft Learn : Azure の基礎</a>は、系統立てた分かりやすい解説の中に実際にAzure上で画面を触って VM を作って Wordpress のサイトを作る操作を行う演習などもある優れすぎの教材だし、サーバーがないとサイトも公開できないので、プログラム始める前にとりあえず触っておいても損はないだろう。</p>\n\n<p>合わせて読もう：<br>\n<a href=\"https://qiita.com/chomado/items/032454af29e3eb6a2c57\" id=\"reference-13b766648117ed9d5303\">Microsoft のクラウド Azure の入門講座を和訳した (前編) クラウドについて - IaaS, PaaS, SaaS, クラウドへの移行 #MSIgniteTheTour</a><br>\n<a href=\"https://qiita.com/chomado/items/439eeea4b3ce318fb5a8\" id=\"reference-6a39ceba9d89b4b48b71\">Microsoft のクラウド Azure の入門講座を和訳した (後編) Azure について - どんなサービスがあるの？ #MSIgniteTheTour</a></p>\n\n<h3>\n<span id=\"emmet-を使い始める\" class=\"fragment\"></span><a href=\"#emmet-%E3%82%92%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Emmet を使い始める</h3>\n\n<p>html や css の記述は反復した記述が多くなりがち。タイピングを省略する方法があることをまずは知っておこう。覚えるのはやりながら。</p>\n\n<p><a href=\"https://qiita.com/tedkuma/items/67876e6be3369b0e730c\" id=\"reference-5e03d879c5693e71435c\">VS Code でEmmet使ったらHTML書くの速くなった～‼</a></p>\n\n<h3>\n<span id=\"よく見るレイアウトのwebサイトを作る\" class=\"fragment\"></span><a href=\"#%E3%82%88%E3%81%8F%E8%A6%8B%E3%82%8B%E3%83%AC%E3%82%A4%E3%82%A2%E3%82%A6%E3%83%88%E3%81%AEweb%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E4%BD%9C%E3%82%8B\"><i class=\"fa fa-link\"></i></a>よく見るレイアウトのWebサイトを作る</h3>\n\n<ul>\n<li>技術 : html5, css3, bootstrap4</li>\n</ul>\n\n<p>ナビゲーション＋コンテンツ、という構成が割とよく見るWebサイト。<br>\nBootstrap 等のコンポーネントライブラリを利用して開発することが多いが、cssの基礎を理解していないとちょっとした仕様変更に対応できない。<br>\nまた、Bootstrapをいきなり使うと「なんかよく分からないけどコピペして使う」ものという認識になりがちである。（自分調べ）</p>\n\n<p>本課題では、まずはフラットな html + css でサイトの枠組みを作成し htmlとcssを理解し、その後 Bootstrap で同じ課題に取り組み Bootstrap でできること、できないことを学習する。</p>\n\n<h4>\n<span id=\"1-html--css-で各種ナビゲーションを作ってみる\" class=\"fragment\"></span><a href=\"#1-html--css-%E3%81%A7%E5%90%84%E7%A8%AE%E3%83%8A%E3%83%93%E3%82%B2%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\"><i class=\"fa fa-link\"></i></a>1) html + css で、各種ナビゲーションを作ってみる</h4>\n\n<p>(問題)<br>\n以下サイトを参考に各種レイアウトを html + css で作成する。</p>\n\n<p><a href=\"http://information-bibouroku.hatenablog.com/entry/2018/02/07/102402#%E9%80%86L%E5%AD%97%E3%83%8A%E3%83%93%E3%82%B2%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E5%9E%8B\" rel=\"nofollow noopener\" target=\"_blank\">備忘録</a></p>\n\n<p>(応用問題)<br>\n1. 上部ナビゲーション部に、ロゴ、メニュー、ログインリンク等、上下左右に部品を配置する<br>\n1. 上部ナビゲーションを固定する<br>\n1. ナビゲーション部に実際にメニューを追加する<br>\n1. メニュークリックで、コンテンツ部のページ内リンクへスクロールする<br>\n1. レスポンシブ：横幅480px以下でハンバーガーメニューを表示、ハンバーガーメニューにプルダウンでナビゲーションメニューを作る<br>\n1. よく見るサイトを観察して簡単に実装できそうな機能を探し移植する</p>\n\n<h4>\n<span id=\"2-リスト表示\" class=\"fragment\"></span><a href=\"#2-%E3%83%AA%E3%82%B9%E3%83%88%E8%A1%A8%E7%A4%BA\"><i class=\"fa fa-link\"></i></a>2) リスト表示</h4>\n\n<p>(問題)<br>\n以下サイトを参考にリストメニューを html + css で作成する。</p>\n\n<p><a href=\"https://blog.mitsuruog.info/2018/03/how-to-learn-css-1\" rel=\"nofollow noopener\" target=\"_blank\">CSSができる人とできない人では何が違うのか？(レイアウト編)</a></p>\n\n<p>(応用問題)<br>\n1. レスポンシブ：横幅480px以下で、リスト→カードになるように css を修正</p>\n\n<h4>\n<span id=\"3-html--bootstrap-で-1-2-の課題をやってみる\" class=\"fragment\"></span><a href=\"#3-html--bootstrap-%E3%81%A7-1-2-%E3%81%AE%E8%AA%B2%E9%A1%8C%E3%82%92%E3%82%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\"><i class=\"fa fa-link\"></i></a>3) html + bootstrap で 1), 2) の課題をやってみる</h4>\n\n<p>参考：<br>\n<a href=\"https://getbootstrap.jp/\" rel=\"nofollow noopener\" target=\"_blank\">Bootstrap</a></p>\n\n<h3>\n<span id=\"javascript-電卓\" class=\"fragment\"></span><a href=\"#javascript-%E9%9B%BB%E5%8D%93\"><i class=\"fa fa-link\"></i></a>javascript 電卓</h3>\n\n<ul>\n<li>技術 : javascript, 変数スコープ, 関数</li>\n</ul>\n\n<p>ミニプログラムでプログラムの基本を学ぶ。Bootstrap + jQuery 版 / Vue 版を作ってみるとよさそう。</p>\n\n<p>(問題)<br>\n1. 四則演算が行える電卓を作成</p>\n\n<p>ミニプログラムでプログラムの基本を学ぶ。</p>\n\n<p>javascript の文法自体がよく分からない場合は『10日でおぼえる』の様な本を探して学習するのも良いと思う。<br>\n中古の本を探せば350円程度で買えたりもして財布にもやさしい。</p>\n\n<p>参考：<br>\n<a href=\"https://www.amazon.co.jp/10%E6%97%A5%E3%81%A7%E3%81%8A%E3%81%BC%E3%81%88%E3%82%8BJavaScript%E5%85%A5%E9%96%80%E6%95%99%E5%AE%A4-%E7%AC%AC3%E7%89%88-10%E6%97%A5%E3%81%A7%E3%81%8A%E3%81%BC%E3%81%88%E3%82%8B%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-%E5%A4%A7%E6%A7%BB%E6%9C%89%E4%B8%80%E9%83%8E-ebook/dp/B0088L98K6/\" rel=\"nofollow noopener\" target=\"_blank\">10日でおぼえるJavaScript入門教室 第3版 (10日でおぼえるシリーズ) (日本語) 大型本 – 2012/2/23</a></p>\n\n<h3>\n<span id=\"datatables-と-json\" class=\"fragment\"></span><a href=\"#datatables-%E3%81%A8-json\"><i class=\"fa fa-link\"></i></a>DataTables と json</h3>\n\n<ul>\n<li>技術 : javascript, Bootstrap, DataTable, json</li>\n</ul>\n\n<p>json を制するものは javascript を制する、とは誰も言ってないけど必修科目。とりあえず json データを作って表示してみよう。</p>\n\n<p>(問題)<br>\n1. <a href=\"https://datatables.net/examples/styling/bootstrap4\" rel=\"nofollow noopener\" target=\"_blank\">DataTables</a> のサイトを参考にテーブル表示をする。<br>\n2. テーブルのデータが html に直接記述されているのを、json を読み込んで表示するようにする。</p>\n\n<p>(応用問題)<br>\n1. ヘッダを変えてみる<br>\n2. 他のデータを読んでみる</p>\n\n<h3>\n<span id=\"chartjs-と-json\" class=\"fragment\"></span><a href=\"#chartjs-%E3%81%A8-json\"><i class=\"fa fa-link\"></i></a>Chartjs と json</h3>\n\n<ul>\n<li>技術 : javascript, Bootstrap, Chartjs, json</li>\n</ul>\n\n<p>グラフ表示ライブラリ。見える化とかDXとかとは切っても切り離せない。触っておこう。</p>\n\n<p>(問題)<br>\n1. <a href=\"https://www.chartjs.org/\" rel=\"nofollow noopener\" target=\"_blank\">Chart.js</a>を参考にグラフを作成してみる。</p>\n\n<p>参考：<br>\n<a href=\"https://qiita.com/Haruka-Ogawa/items/59facd24f2a8bdb6d369\" id=\"reference-19610a79fda7e665f109\">Chart.jsでグラフを描画してみた</a></p>\n\n<h3>\n<span id=\"リーダブルコード\" class=\"fragment\"></span><a href=\"#%E3%83%AA%E3%83%BC%E3%83%80%E3%83%96%E3%83%AB%E3%82%B3%E3%83%BC%E3%83%89\"><i class=\"fa fa-link\"></i></a>リーダブルコード</h3>\n\n<p>そろそろ自己流ではなく『正しい』書き方を覚えよう。<br>\n古い本でサンプルコードの言語も古いので若干読みづらい。以下の記事にポイントがまとまっているのでまずはそこから読むといいかもしれない。</p>\n\n<ul>\n<li><a href=\"https://qiita.com/hx_kei/items/f725e78521a408b4f72e\" id=\"reference-7cd1fd9977842402e4bb\">リーダブルコード ~実務未経験が知っておきたい15のポイント~</a></li>\n</ul>\n\n<h3>\n<span id=\"オブジェクト指向設計\" class=\"fragment\"></span><a href=\"#%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E8%A8%AD%E8%A8%88\"><i class=\"fa fa-link\"></i></a>オブジェクト指向設計</h3>\n\n<p>本格的なプログラムを書く前に『オブジェクト指向設計』を理解しておこう。</p>\n\n<ul>\n<li><a href=\"https://qiita.com/kaku3/items/a875fe1c098509b1fccd\" id=\"reference-5e0fca3d9f24d99bf675\">ゲームで理解するオブジェクト指向設計の基本</a></li>\n<li><a href=\"https://qiita.com/kaku3/items/f482d48676eb7ea9c9a6\" id=\"reference-b5886f3e5b9e30d30503\">ゲームで身につけるオブジェクト指向設計(実装編)</a></li>\n<li><a href=\"https://qiita.com/br_branch/items/2aa9859d4da41991bbb7\" id=\"reference-faa982ae2ce31d82102a\">オブジェクト指向は単なる【整理術】だよ</a></li>\n</ul>\n\n<h3>\n<span id=\"javascript-タイピングゲーム\" class=\"fragment\"></span><a href=\"#javascript-%E3%82%BF%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0%E3%82%B2%E3%83%BC%E3%83%A0\"><i class=\"fa fa-link\"></i></a>javascript タイピングゲーム</h3>\n\n<ul>\n<li>技術 : javascript, タイマー, 状態管理</li>\n</ul>\n\n<p>(問題)<br>\n1. キーボードを模したボタンを配置。<br>\n2. 一定時間毎に、ランダムで任意のキーの色を変える。<br>\n3. 色の変わっているキーを押下すると正解、+1点。それ以外のキーを押下すると不正解、-1点。<br>\n4. 一定時間経過後、結果画面表示。</p>\n\n<h3>\n<span id=\"todoリスト\" class=\"fragment\"></span><a href=\"#todo%E3%83%AA%E3%82%B9%E3%83%88\"><i class=\"fa fa-link\"></i></a>Todoリスト</h3>\n\n<ul>\n<li>技術 : javascript, jQuery, DOM操作</li>\n</ul>\n\n<p>2020年現在、グーグル検索を行うと Vue で Todo を簡単に作るというのが検索されがちであるが、職業プログラマーの世界では未だに jQuery がポピュラーな印象。<br>\n本課題では、ページ初期化時の javascript プログラム初期化コード、event ドリブンコードの基礎を学習する。</p>\n\n<h4>\n<span id=\"1-todo追加サーバなし\" class=\"fragment\"></span><a href=\"#1-todo%E8%BF%BD%E5%8A%A0%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AA%E3%81%97\"><i class=\"fa fa-link\"></i></a>1) todo追加[サーバなし]</h4>\n\n<p>(問題)<br>\n1. テキスト入力フォームとボタン配置<br>\n2. ボタン押下で、ページ下部にフォームに入力された内容をdivタグで追加</p>\n\n<p>(応用問題)<br>\n1. 自動採番で連番登録</p>\n\n<h4>\n<span id=\"2-todo追加サーバあり\" class=\"fragment\"></span><a href=\"#2-todo%E8%BF%BD%E5%8A%A0%E3%82%B5%E3%83%BC%E3%83%90%E3%81%82%E3%82%8A\"><i class=\"fa fa-link\"></i></a>2) todo追加[サーバあり]</h4>\n\n<p>(問題)<br>\n1. server : nodejs + express でサーバを作る。受信データをテキスト保存。<br>\n2. client : $.ajax で通信。</p>\n\n<p>(応用問題)<br>\n1. plant uml でシーケンス作成</p>\n\n<h3>\n<span id=\"excelからデータ抽出\" class=\"fragment\"></span><a href=\"#excel%E3%81%8B%E3%82%89%E3%83%87%E3%83%BC%E3%82%BF%E6%8A%BD%E5%87%BA\"><i class=\"fa fa-link\"></i></a>Excelからデータ抽出</h3>\n\n<ul>\n<li>技術 : nodejs, vue, vuetify, typescript</li>\n</ul>\n\n<p>アクセス解析データや、試験結果集計データなど。Excelマクロや関数、ピボットテーブルを駆使して表やグラフを作る事が多いが、データ解析はプログラムを覚えるのによい題材。日々の雑務をプログラムで解決するのは単純にテンションが上がる。</p>\n\n<p>(問題)<br>\n1. Excelから興味のあるデータを抽出し、json保存。<br>\n2. html読み込み。Datatable で整理して表示、chartjsなどでグラフ化して表示。</p>\n\n<p>(応用)<br>\n1. vue + vuetify + typescript で表示</p>\n\n<h2>\n<span id=\"開発環境編\" class=\"fragment\"></span><a href=\"#%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E7%B7%A8\"><i class=\"fa fa-link\"></i></a>開発環境編</h2>\n\n<p>開発環境構築はなぜか抵抗がある。コマンドを叩けない。<br>\nアプリケーションエンジニアとインフラエンジニアとの境界が曖昧になりつつあるので、とりあえずは何でもインストールしよう。</p>\n\n<h3>\n<span id=\"事前準備\" class=\"fragment\"></span><a href=\"#%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>事前準備</h3>\n\n<p>職業プログラマーは「最新」のツールが使えればよいというわけではない。案件に応じてある程度ツールの使い分けが必要になる。<br>\n様々なツールをインストールして使いこなせる様になろう。<br>\nPCが汚染されるのが嫌であれば、必ずしも全部入れなくても大丈夫です。</p>\n\n<p>(エディタ)</p>\n\n<ul>\n<li>\n<a href=\"https://azure.microsoft.com/ja-jp/products/visual-studio-code/\" rel=\"nofollow noopener\" target=\"_blank\">VS Code</a>\n\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare-pack\" rel=\"nofollow noopener\" target=\"_blank\">Live Share Extension Pack</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode\" rel=\"nofollow noopener\" target=\"_blank\">Tabnine</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\" rel=\"nofollow noopener\" target=\"_blank\">GitLens</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced\" rel=\"nofollow noopener\" target=\"_blank\">Markdown Preview Enhanced</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml\" rel=\"nofollow noopener\" target=\"_blank\">Plant UML</a></li>\n</ul>\n</li>\n</ul>\n\n<p>VS Code は Extension をガンガン入れて自分好みに調教するのが基本。<br>\nトレンドがすごい勢いで変わるので、ここでは最低限のみ紹介。<br>\nLive Share は不要そうですが、リモートワークには必須の人智を超えた便利ツールなのでオススメしてます。</p>\n\n<p>参考:<br>\n<a href=\"https://qiita.com/irico/items/b67328fdaa2d9a306cba\" id=\"reference-c63074ecb8047f3359dd\">VSCode Live Shareの使い方をしっかり知る</a></p>\n\n<ul>\n<li><a href=\"https://sakura-editor.github.io/\" rel=\"nofollow noopener\" target=\"_blank\">サクラエディタ</a></li>\n<li><a href=\"https://hide.maruo.co.jp/software/hidemaru.html\" rel=\"nofollow noopener\" target=\"_blank\">秀丸</a></li>\n</ul>\n\n<p>※レジェンダリーエディター。もう使うことないと思ってましたが…お客先環境などでどうしても...</p>\n\n<ul>\n<li>vi</li>\n</ul>\n\n<p>Linux 標準エディタ。Windowsのメモ帳を想像すると火傷するが覚えると相当強い。<br>\nキーボードから１㍈も手を離したくない人向け。<br>\n参考：<a href=\"https://qiita.com/pe-ta/items/0510bee10bcfd88afeee\" id=\"reference-c1b47ad8f4f5d33b4650\">viコマンド（vimコマンド）リファレンス</a></p>\n\n<ul>\n<li>emacs</li>\n</ul>\n\n<p>Linux 上で使うエディタ。少々癖が強い。ウィンドウ分割できたり強いが要インストール。<br>\n参考：<a href=\"https://qiita.com/namn1125/items/5cd6a9cbbf17fb85c740\" id=\"reference-1dc029313218e0f4b8e7\">Emacs教習所に行ってきた(チートシート付き)</a></p>\n\n<p>(GUI DB操作)</p>\n\n<ul>\n<li><a href=\"https://www.mysql.com/jp/products/workbench/\" rel=\"nofollow noopener\" target=\"_blank\">MySQL Workbench</a></li>\n<li><a href=\"https://a5m2.mmatsubara.com/\" rel=\"nofollow noopener\" target=\"_blank\">A5:SQL Mk-2</a></li>\n</ul>\n\n<p>(ER作成)</p>\n\n<ul>\n<li><a href=\"http://ermaster.sourceforge.net/index_ja.html\" rel=\"nofollow noopener\" target=\"_blank\">ERMaster</a></li>\n</ul>\n\n<p>参考：<a href=\"https://www.atmarkit.co.jp/ait/articles/1001/21/news128.html\" rel=\"nofollow noopener\" target=\"_blank\">DB設計の神ツール「ERMaster」なら、ここまでできる (1/3)</a></p>\n\n<p>(AWS)</p>\n\n<ul>\n<li><a href=\"https://aws.amazon.com/jp/visualstudiocode/\" rel=\"nofollow noopener\" target=\"_blank\">AWS Toolkit for Visual Studio Code</a></li>\n</ul>\n\n<p>AWS操作が大体できる VS Code Extension。入れよう。</p>\n\n<ul>\n<li><a href=\"https://www.msp360.com/explorer/windows/amazon-s3.aspx\" rel=\"nofollow noopener\" target=\"_blank\">MSP360 Explorer</a></li>\n</ul>\n\n<p>S3操作用。Explorerの様な見た目で使いやすい。<br>\n※Cloud berry Explorer → MSP360 Explorer に名前変わってました</p>\n\n<h3>\n<span id=\"chocolaty\" class=\"fragment\"></span><a href=\"#chocolaty\"><i class=\"fa fa-link\"></i></a>Chocolaty</h3>\n\n<p>Windows用パッケージマネージャ。Linux なら yum、mac なら brew。これがなくて長い間開発者達からWindowsが迫害されていた。<br>\n※個人の感想です。</p>\n\n<p>コマンドで(ほぼ)何でもインストールできる。入れておこう。<br>\nついでに node 環境を作っておこう。</p>\n\n<p>(問題)<br>\n1. <a href=\"https://chocolatey.org/\" rel=\"nofollow noopener\" target=\"_blank\">Chocolaty</a> をインストールする<br>\n2. nodist をインストールする<br>\n3. yarn をインストールする</p>\n\n<h3>\n<span id=\"vagrant\" class=\"fragment\"></span><a href=\"#vagrant\"><i class=\"fa fa-link\"></i></a>Vagrant</h3>\n\n<p><b>壊しても誰にも怒られない</b>自分専用のVM。作ろう。<br>\nvagrant up / destroy で、任意のOSのVMを簡単に作ったり壊したりできます。<br>\nVirtualBox に iso イメージ用意して... とか昔はVM作るの結構大変でした。<br>\nとりあえずLAMP環境を作れると言えるのがよいと思いますが、apacheではなくnginx推しにしてます。<br>\ncentos やmysql は複数バージョン試してみるとよさそう。</p>\n\n<p>(問題)<br>\n1. <a href=\"https://www.vagrantup.com/\" rel=\"nofollow noopener\" target=\"_blank\">Vagrant</a> をインストールする<br>\n2. Vagrant 上に centos7 をインストール<br>\n3. nginx を入れ service 登録をする<br>\n4. mysqlを入れ service 登録をする<br>\n5. php を入れる</p>\n\n<h3>\n<span id=\"ansible\" class=\"fragment\"></span><a href=\"#ansible\"><i class=\"fa fa-link\"></i></a>Ansible</h3>\n\n<p>コマンド一発で環境を作れる構成管理ツール。手順書見ながら環境作るのはもうやめよう。</p>\n\n<p>参考：<br>\n<a href=\"https://qiita.com/srockstyle/items/91690df8a92257e634af\" id=\"reference-a66d6d0f6a3a3be6d43d\">vagrant up時にansibleで開発環境を作る</a></p>\n\n<p>(問題)<br>\n1. Vagrant の課題で作った環境を Ansible で作る</p>\n\n<h3>\n<span id=\"docker\" class=\"fragment\"></span><a href=\"#docker\"><i class=\"fa fa-link\"></i></a>Docker</h3>\n\n<p>WSL2 様子見中…すいません。<br>\nWindows環境を壊さず開発するのであれば、Vagrant 上で開発するとよいです。</p>\n\n<h3>\n<span id=\"vue-環境構築\" class=\"fragment\"></span><a href=\"#vue-%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89\"><i class=\"fa fa-link\"></i></a>Vue 環境構築</h3>\n\n<p>Vue の案件も増えてきたので環境構築からできるようになっておこう。</p>\n\n<p>(問題)<br>\n1. <a href=\"https://qiita.com/Nossa/items/3860e55551697bb46e38\" id=\"reference-5f3043f66536c44b0892\">【Vue.js】Vuetify と TypeScript を使用した環境を構築してサンプルプロジェクトを立ち上げるまでの手順</a> を参考に、Vue 開発環境を構築する</p>\n\n<h3>\n<span id=\"react-チュートリアル\" class=\"fragment\"></span><a href=\"#react-%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB\"><i class=\"fa fa-link\"></i></a>React チュートリアル</h3>\n\n<p>React の案件も増えてきたのでチュートリアルをやっておこう。</p>\n\n<p><a href=\"https://qiita.com/kaku3/items/c3768fc1888894d4574a\" id=\"reference-fe925ae576902390f598\">React やってみたら超簡単だった話(2020年11月版)</a></p>\n\n<h2>\n<span id=\"ドキュメント編\" class=\"fragment\"></span><a href=\"#%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88%E7%B7%A8\"><i class=\"fa fa-link\"></i></a>ドキュメント編</h2>\n\n<p>そもそも「プログラム」は<b>「日本語の仕様をプログラム言語に翻訳する作業」</b>なので<b>分かりやすい日本語が書けないと分かりやすいプログラムは書けない</b>。<br>\n予算や工数の都合で詳細設計は行わないことが多いかと思うが、<b>ビジネスロジック層は外部設計通りになっているべきであるが、そうなっていることは稀である</b>。<br>\n開発の方法論としてデザインパターンやオブジェクト指向などは挙げられるが、外部設計とリンクした開発手法というのが今ひとつ存在しない事も一因かもしれない。コーダーで数年経験を積んでからSEとして設計というキャリアパスが一般的かと思うが、レベルアップ時のステータスボーナスを全てコーディングに割り振ってしまっているせいか、コーディングの熟練度だげ上げているせいか、<b>設計ドキュメントが書けなくて次のキャリアに進めない</b>ケースが散見される。</p>\n\n<p>職業プログラマーとしては、<b>ユーザー目線と開発目線、両方の理解が必須</b>であるため、初期よりドキュメント作成も並行して行っておくことが望ましいと思う。</p>\n\n<p>ユーザ目線と開発目線と言われてもピンとこないかもしれないので一つ例を上げておく。</p>\n\n<ul>\n<li>ユーザ目線：</li>\n</ul>\n\n<p>購入したアプリや、無料のソシャゲの操作性が悪いと些細なことでも「クソが」と思うが、それを作るのがどれだけ大変か気にもしない。</p>\n\n<ul>\n<li>開発目線：</li>\n</ul>\n\n<p>画面仕様書記載の仕様の操作性が悪くても疑問に思わないが、<b>品質の良いコード</b>を書くべく鍛錬は怠らない。</p>\n\n<h3>\n<span id=\"文章力を上げる\" class=\"fragment\"></span><a href=\"#%E6%96%87%E7%AB%A0%E5%8A%9B%E3%82%92%E4%B8%8A%E3%81%92%E3%82%8B\"><i class=\"fa fa-link\"></i></a>文章力を上げる</h3>\n\n<p>基本はそうそう変わるものでもないので古めの本を探して安く学ぶのがオススメ。<br>\nコミュニケーションロスで消耗するのは、<b>無駄 of 無駄</b>なので真っ先に取るべきスキル。<br>\nここがホビープログラマーと職業プログラマーの違いと言えよう。</p>\n\n<ul>\n<li><a href=\"https://www.hyuki.com/wl/\" rel=\"nofollow noopener\" target=\"_blank\">文章教室</a></li>\n</ul>\n\n<p>結城先生によるすばらしいページ。グループワーク形式で数人で課題に取り組みお互いにレビューすると効果が高いと思う。</p>\n\n<ul>\n<li><a href=\"https://www.amazon.co.jp/%E4%B8%80%E7%95%AA%E4%BC%9D%E3%82%8F%E3%82%8B%E8%AA%AC%E6%98%8E%E3%81%AE%E9%A0%86%E7%95%AA-%E7%94%B0%E4%B8%AD%E8%80%95%E6%AF%94%E5%8F%A4/dp/4894519836\" rel=\"nofollow noopener\" target=\"_blank\">一番伝わる説明の順番 (日本語) 単行本（ソフトカバー） – 2018/6/8</a></li>\n</ul>\n\n<p>偉い人に「結論から言えや！」とか言われてイラっとする前に読むと心の平穏が保たれると思う。</p>\n\n<ul>\n<li><a href=\"https://www.amazon.co.jp/%E4%BB%95%E4%BA%8B%E3%81%8C%E9%80%9F%E3%81%84%E4%BA%BA%E3%81%AF%E3%81%A9%E3%82%93%E3%81%AA%E3%83%A1%E3%83%BC%E3%83%AB%E3%82%92%E6%9B%B8%E3%81%84%E3%81%A6%E3%81%84%E3%82%8B%E3%81%AE%E3%81%8B-%E5%B9%B3%E9%87%8E-%E5%8F%8B%E6%9C%97/dp/4905073782\" rel=\"nofollow noopener\" target=\"_blank\">仕事が速い人はどんなメールを書いているのか (日本語) 単行本（ソフトカバー） – 2017/3/15</a></li>\n</ul>\n\n<p>Amazon Prime で無料で読めたけど、もう無料じゃなくなってた。残念。<br>\n<strong>読む人目線</strong>を理解できるエモい書籍。</p>\n\n<ul>\n<li><a href=\"https://qiita.com/kaku3/items/036b7d23c245f935b0b8\" id=\"reference-a1b9864e8d222e80dabf\">1日10分のコピーライティングで鍛える伝える力</a></li>\n</ul>\n\n<p>身の回りのものをおもしろおかしく伝える習慣を身につけましょう。</p>\n\n<h3>\n<span id=\"議事録\" class=\"fragment\"></span><a href=\"#%E8%AD%B0%E4%BA%8B%E9%8C%B2\"><i class=\"fa fa-link\"></i></a>議事録</h3>\n\n<p>自分だけ知識ゼロなところ、周りの人間が分かってるつもりで話し合っているのを漏れなくメモる罰ゲーム的イベント。<br>\n実際は洞察力や推理力、書記力等々全ての能力が試される最高の訓練イベント。<br>\n漏れなくメモすることが最初の目標だが、プロジェクトにとって必要なことが必要な形で記録されることを目指したい。</p>\n\n<h3>\n<span id=\"手順書\" class=\"fragment\"></span><a href=\"#%E6%89%8B%E9%A0%86%E6%9B%B8\"><i class=\"fa fa-link\"></i></a>手順書</h3>\n\n<p>口頭で説明を受ける事が多いと思うが、文書として残してみよう。引き継ぎの時にも使えて便利。</p>\n\n<h3>\n<span id=\"シーケンス\" class=\"fragment\"></span><a href=\"#%E3%82%B7%E3%83%BC%E3%82%B1%E3%83%B3%E3%82%B9\"><i class=\"fa fa-link\"></i></a>シーケンス</h3>\n\n<p>設計力が上がるのでガンガン書こう。<br>\n(参考)<br>\n<a href=\"https://qiita.com/kaku3/items/0253f8b761bb6c452752\" id=\"reference-a039dc5bda276910a979\">PlantUMLと俺と彼女の危険なシーケンス図</a></p>\n\n<h3>\n<span id=\"設計書\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E8%A8%88%E6%9B%B8\"><i class=\"fa fa-link\"></i></a>設計書</h3>\n\n<p>読者を意識して、粒度や記載レベルが揃う様に書こう。</p>\n\n<h2>\n<span id=\"タスク管理編\" class=\"fragment\"></span><a href=\"#%E3%82%BF%E3%82%B9%E3%82%AF%E7%AE%A1%E7%90%86%E7%B7%A8\"><i class=\"fa fa-link\"></i></a>タスク管理編</h2>\n\n<h3>\n<span id=\"asana--instagantt\" class=\"fragment\"></span><a href=\"#asana--instagantt\"><i class=\"fa fa-link\"></i></a>Asana / Instagantt</h3>\n\n<p><a href=\"https://asana.com/\" rel=\"nofollow noopener\" target=\"_blank\">Asana</a>は、軽量のチケットによるタスク・プロジェクト管理ツール。リスト表示やボード表示もでき、スラック連携なんかもある。<a href=\"https://instagantt.com/\" rel=\"nofollow noopener\" target=\"_blank\">Instagantt</a>と連携するとチケットより<b>自動で</b>wbsが作られる。<br>\ntaskline.xlsm や Redmine や bitbucket の課題管理で消耗していたらぜひ使ってみてほしい。</p>\n\n<p><a href=\"https://qiita.com/ayumio/items/db0c1acaecda05185c55\" id=\"reference-d8d50a3bf54bcb788c16\">AsanaとInstaganttと、プロジェクト進行と、</a></p>\n\n<h2>\n<span id=\"it業界編\" class=\"fragment\"></span><a href=\"#it%E6%A5%AD%E7%95%8C%E7%B7%A8\"><i class=\"fa fa-link\"></i></a>IT業界編</h2>\n\n<p>バグがなく安定動作しパフォーマンスが優れたよいプログラムによってプロジェクトの炎上や、深夜や休日のメールやスラックも回避できている。<b>ありがとう</b>。ただ、この素晴らしいプログラムが直接お金を生んでいるのではなく、この素晴らしいプログラムによって動いているプロダクトがお客様（クライアント）の手に渡ってお客様、さらにはその先にいるお客様（エンドユーザー）を幸せにして初めてお金を生んでいる業界なのである。</p>\n\n<p><b>『プログラムが金を生むのではなく、プロダクトが金を生む』業界</b></p>\n\n<p>そう考えると、実はプログラムを書いてる時間というのはプロダクトのライフサイクルにおいてごく一部なのである。<br>\nいろいろな人がいろいろな仕事をしてようやくお金が生まれているという事を頭の片隅においておくと、一見不条理に見えていた世界を優しい世界に変えられるかもしれない。</p>\n\n<ul>\n<li><p><a href=\"https://www.amazon.co.jp/%E8%81%B7%E5%A0%B4%E3%81%AE%E5%95%8F%E9%A1%8C%E5%9C%B0%E5%9B%B3-%E3%80%8C%E3%81%A7%E3%80%81%E3%81%A9%E3%81%93%E3%81%8B%E3%82%89%E5%A4%89%E3%81%88%E3%82%8B-%E3%80%8D%E6%AE%8B%E6%A5%AD%E3%81%A0%E3%82%89%E3%81%91%E3%83%BB%E4%BC%91%E3%82%81%E3%81%AA%E3%81%84%E5%83%8D%E3%81%8D%E6%96%B9-%E6%B2%A2%E6%B8%A1-%E3%81%82%E3%81%BE%E3%81%AD/dp/4774183687/\" rel=\"nofollow noopener\" target=\"_blank\">職場の問題地図 ~「で、どこから変える?」残業だらけ・休めない働き方 (日本語) 単行本（ソフトカバー） – 2016/9/16</a></p></li>\n<li><p><a href=\"https://www.amazon.co.jp/%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E5%95%8F%E9%A1%8C%E5%9C%B0%E5%9B%B3-%E3%80%8C%E3%81%A7%E3%80%81%E3%81%A9%E3%81%93%E3%81%8B%E3%82%89%E5%A4%89%E3%81%88%E3%82%8B-%E3%80%8D%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%84IT%E3%81%AB%E6%8C%AF%E3%82%8A%E5%9B%9E%E3%81%95%E3%82%8C%E3%82%8B%E6%82%B2%E3%81%97%E3%81%8D%E6%99%AF%E8%89%B2-%E6%B2%A2%E6%B8%A1-%E3%81%82%E3%81%BE%E3%81%AD/dp/4774194638/\" rel=\"nofollow noopener\" target=\"_blank\">システムの問題地図 ~「で、どこから変える?」使えないITに振り回される悲しき景色 (日本語) 単行本（ソフトカバー） – 2018/2/17</a></p></li>\n</ul>\n\n<h1>\n<span id=\"最後に\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\"><i class=\"fa fa-link\"></i></a>最後に</h1>\n\n<p>IT業界好きですか？プログラム好きですか？</p>\n\n<p>楽しくない仕事は長くは続けられません。</p>\n\n<p>「丁度よいサイズの課題」は、仕事を楽しむための考え方かと思います。<br>\nですので、本稿の課題は上から順に全てやる必要はなく、自分にとって役に立つもの、楽しくやれそうなものを選んで取り組んだり、自分やレビューした先輩が課題を追加したりしてもらえたらと思います。</p>\n\n<p>面倒くさい仕事を、「課題を細分化して丁度よいサイズの課題」に分けたり「物事を観察して丁度よいサイズの課題」として創出したりして、「丁度よいサイズの課題」とすれば、ソシャゲのイベントの様に、毎日少しずつこなせる仕事になるかもしれません。</p>\n\n<p>そうこうしているうちに「顧客の課題」までもを解決できるような職業プログラマーに成長していたらいいなと思います。</p>\n\n<p>※後半メモ的で課題感がなくてすいません。具体的に何か出てきたら追記します。<br>\n※不定期更新？</p>\n",
    "body": "# プログラム上達に必要なものは？\n\nモチベーションでしょうか？あるいはセンスでしょうか？\n\n『プログラム未経験者大歓迎』の求人に募集してきた方々は、少なくとも自分で学習するモチベーションはなかったはずですし、センスについては未知数です。そんな方々にプログラム上達してもらうためには何を与えればよいでしょう？\n\nWebサイトには解説記事は溢れていますし、少しお金を出せば詳しく解説してある本もたくさんあります。それらを読む様に口を酸っぱくして言い続ければいいでしょうか？気分が乗らない学校の宿題にようやく手をつけた子供に「宿題をやったのか？」と確認するおかあさんのようになっていないでしょうか？\n\n意見は色々あると思いますが、わたしは、<b>「丁度よいサイズの課題」</b>を用意することがよいのではないかと思っています。\n\n\n# 丁度よいサイズの課題集\n\n「丁度よいサイズの課題」とは、業務で役に立つ可能性が高く、そこそこ頑張れば解決でき、達成感が得られ、挫折しにくい課題を指します。\n\n「武道の達人は対峙しただけで相手の実力が分かる」という言葉をご存知でしょうか。経験を積んだ人間には未経験の人間の隙が見えるが、未経験者本人は自分の隙にまったく気づいていないという状況があります。スポーツや対戦ゲームなどでも同様のことを経験された方も多いと思います。\n\nこれは、経験者が相手と向き合い、相手の技量を理解し、相手が抱えている問題を解決する課題を提供することで、未経験の人間に正しい知識を与えて導く事ができるという事も示唆していると思います。\n\n新たに新人の部下を持った先輩職業プログラマーの方々は、新人の教育に苦心されていることかと思いますが、およそ新人の皆さんが躓くところには傾向があるので、Webサイトを検索したら「丁度よいサイズの課題集」が出てきてもよいのかなぁと思うのですが、意外と出てきませんでした。\n\nそこで、勉強会でやった課題を「丁度よいサイズの課題集」のメモとして残してみようと思いました。\n\n\n## Web 編\n\n### Microsoft Learn : Azure の基礎\n\n- 技術 : Azure\n\n『プログラマーのための』というタイトルであるが、いきなりクラウドサービスの学習推し。\nMicrosoft が公開している<b>無料</b>の e-learningで10時間程度の内容。経験値も貯まるしレベルも上がる。\n\nAzure も AWS も GCP も名前は昔から変わらないのに、知らないうちにIoTやAIなども抱え~~肥大化~~多様なニーズに応える一方で、初学者にとっては~~キメラの様な~~難解なサービスとなってしまった。\n\nこれらのサービスは本で学習すると退屈で、実際に画面を触って操作しないとなかなか身につかない傾向にあるが、[Microsoft Learn : Azure の基礎](https://docs.microsoft.com/ja-jp/learn/paths/azure-fundamentals/)は、系統立てた分かりやすい解説の中に実際にAzure上で画面を触って VM を作って Wordpress のサイトを作る操作を行う演習などもある優れすぎの教材だし、サーバーがないとサイトも公開できないので、プログラム始める前にとりあえず触っておいても損はないだろう。\n\n合わせて読もう：\n[Microsoft のクラウド Azure の入門講座を和訳した (前編) クラウドについて - IaaS, PaaS, SaaS, クラウドへの移行 #MSIgniteTheTour](https://qiita.com/chomado/items/032454af29e3eb6a2c57)\n[Microsoft のクラウド Azure の入門講座を和訳した (後編) Azure について - どんなサービスがあるの？ #MSIgniteTheTour](https://qiita.com/chomado/items/439eeea4b3ce318fb5a8)\n\n### Emmet を使い始める\n\nhtml や css の記述は反復した記述が多くなりがち。タイピングを省略する方法があることをまずは知っておこう。覚えるのはやりながら。\n\n[VS Code でEmmet使ったらHTML書くの速くなった～‼](https://qiita.com/tedkuma/items/67876e6be3369b0e730c)\n\n### よく見るレイアウトのWebサイトを作る\n\n- 技術 : html5, css3, bootstrap4\n\nナビゲーション＋コンテンツ、という構成が割とよく見るWebサイト。\nBootstrap 等のコンポーネントライブラリを利用して開発することが多いが、cssの基礎を理解していないとちょっとした仕様変更に対応できない。\nまた、Bootstrapをいきなり使うと「なんかよく分からないけどコピペして使う」ものという認識になりがちである。（自分調べ）\n\n本課題では、まずはフラットな html + css でサイトの枠組みを作成し htmlとcssを理解し、その後 Bootstrap で同じ課題に取り組み Bootstrap でできること、できないことを学習する。\n\n#### 1) html + css で、各種ナビゲーションを作ってみる\n(問題)\n以下サイトを参考に各種レイアウトを html + css で作成する。\n\n[備忘録](http://information-bibouroku.hatenablog.com/entry/2018/02/07/102402#%E9%80%86L%E5%AD%97%E3%83%8A%E3%83%93%E3%82%B2%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E5%9E%8B)\n\n(応用問題)\n1. 上部ナビゲーション部に、ロゴ、メニュー、ログインリンク等、上下左右に部品を配置する\n1. 上部ナビゲーションを固定する\n1. ナビゲーション部に実際にメニューを追加する\n1. メニュークリックで、コンテンツ部のページ内リンクへスクロールする\n1. レスポンシブ：横幅480px以下でハンバーガーメニューを表示、ハンバーガーメニューにプルダウンでナビゲーションメニューを作る\n1. よく見るサイトを観察して簡単に実装できそうな機能を探し移植する\n\n#### 2) リスト表示\n(問題)\n以下サイトを参考にリストメニューを html + css で作成する。\n\n[CSSができる人とできない人では何が違うのか？(レイアウト編)](https://blog.mitsuruog.info/2018/03/how-to-learn-css-1)\n\n(応用問題)\n1. レスポンシブ：横幅480px以下で、リスト→カードになるように css を修正\n\n#### 3) html + bootstrap で 1), 2) の課題をやってみる\n参考：\n[Bootstrap](https://getbootstrap.jp/)\n\n### javascript 電卓\n\n- 技術 : javascript, 変数スコープ, 関数\n\nミニプログラムでプログラムの基本を学ぶ。Bootstrap + jQuery 版 / Vue 版を作ってみるとよさそう。\n\n(問題)\n1. 四則演算が行える電卓を作成\n\nミニプログラムでプログラムの基本を学ぶ。\n\njavascript の文法自体がよく分からない場合は『10日でおぼえる』の様な本を探して学習するのも良いと思う。\n中古の本を探せば350円程度で買えたりもして財布にもやさしい。\n\n参考：\n[10日でおぼえるJavaScript入門教室 第3版 (10日でおぼえるシリーズ) (日本語) 大型本 – 2012/2/23](https://www.amazon.co.jp/10%E6%97%A5%E3%81%A7%E3%81%8A%E3%81%BC%E3%81%88%E3%82%8BJavaScript%E5%85%A5%E9%96%80%E6%95%99%E5%AE%A4-%E7%AC%AC3%E7%89%88-10%E6%97%A5%E3%81%A7%E3%81%8A%E3%81%BC%E3%81%88%E3%82%8B%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-%E5%A4%A7%E6%A7%BB%E6%9C%89%E4%B8%80%E9%83%8E-ebook/dp/B0088L98K6/)\n\n### DataTables と json\n\n- 技術 : javascript, Bootstrap, DataTable, json\n\njson を制するものは javascript を制する、とは誰も言ってないけど必修科目。とりあえず json データを作って表示してみよう。\n\n(問題)\n1. [DataTables](https://datatables.net/examples/styling/bootstrap4) のサイトを参考にテーブル表示をする。\n2. テーブルのデータが html に直接記述されているのを、json を読み込んで表示するようにする。\n\n(応用問題)\n1. ヘッダを変えてみる\n2. 他のデータを読んでみる\n\n### Chartjs と json\n\n- 技術 : javascript, Bootstrap, Chartjs, json\n\nグラフ表示ライブラリ。見える化とかDXとかとは切っても切り離せない。触っておこう。\n\n(問題)\n1. [Chart.js](https://www.chartjs.org/)を参考にグラフを作成してみる。\n\n参考：\n[Chart.jsでグラフを描画してみた](https://qiita.com/Haruka-Ogawa/items/59facd24f2a8bdb6d369)\n\n### リーダブルコード\n\nそろそろ自己流ではなく『正しい』書き方を覚えよう。\n古い本でサンプルコードの言語も古いので若干読みづらい。以下の記事にポイントがまとまっているのでまずはそこから読むといいかもしれない。\n\n- [リーダブルコード ~実務未経験が知っておきたい15のポイント~](https://qiita.com/hx_kei/items/f725e78521a408b4f72e)\n\n### オブジェクト指向設計\n\n本格的なプログラムを書く前に『オブジェクト指向設計』を理解しておこう。\n\n- [ゲームで理解するオブジェクト指向設計の基本](https://qiita.com/kaku3/items/a875fe1c098509b1fccd)\n- [ゲームで身につけるオブジェクト指向設計(実装編)](https://qiita.com/kaku3/items/f482d48676eb7ea9c9a6)\n- [オブジェクト指向は単なる【整理術】だよ](https://qiita.com/br_branch/items/2aa9859d4da41991bbb7)\n\n### javascript タイピングゲーム\n\n- 技術 : javascript, タイマー, 状態管理\n\n(問題)\n1. キーボードを模したボタンを配置。\n2. 一定時間毎に、ランダムで任意のキーの色を変える。\n3. 色の変わっているキーを押下すると正解、+1点。それ以外のキーを押下すると不正解、-1点。\n4. 一定時間経過後、結果画面表示。\n\n### Todoリスト\n\n- 技術 : javascript, jQuery, DOM操作\n\n2020年現在、グーグル検索を行うと Vue で Todo を簡単に作るというのが検索されがちであるが、職業プログラマーの世界では未だに jQuery がポピュラーな印象。\n本課題では、ページ初期化時の javascript プログラム初期化コード、event ドリブンコードの基礎を学習する。\n\n#### 1) todo追加[サーバなし]\n(問題)\n1. テキスト入力フォームとボタン配置\n2. ボタン押下で、ページ下部にフォームに入力された内容をdivタグで追加\n\n(応用問題)\n1. 自動採番で連番登録\n\n#### 2) todo追加[サーバあり]\n(問題)\n1. server : nodejs + express でサーバを作る。受信データをテキスト保存。\n2. client : $.ajax で通信。\n\n(応用問題)\n1. plant uml でシーケンス作成\n\n### Excelからデータ抽出\n\n- 技術 : nodejs, vue, vuetify, typescript\n\nアクセス解析データや、試験結果集計データなど。Excelマクロや関数、ピボットテーブルを駆使して表やグラフを作る事が多いが、データ解析はプログラムを覚えるのによい題材。日々の雑務をプログラムで解決するのは単純にテンションが上がる。\n\n(問題)\n1. Excelから興味のあるデータを抽出し、json保存。\n2. html読み込み。Datatable で整理して表示、chartjsなどでグラフ化して表示。\n\n(応用)\n1. vue + vuetify + typescript で表示\n\n## 開発環境編\n\n開発環境構築はなぜか抵抗がある。コマンドを叩けない。\nアプリケーションエンジニアとインフラエンジニアとの境界が曖昧になりつつあるので、とりあえずは何でもインストールしよう。\n\n### 事前準備\n\n職業プログラマーは「最新」のツールが使えればよいというわけではない。案件に応じてある程度ツールの使い分けが必要になる。\n様々なツールをインストールして使いこなせる様になろう。\nPCが汚染されるのが嫌であれば、必ずしも全部入れなくても大丈夫です。\n\n(エディタ)\n\n* [VS Code](https://azure.microsoft.com/ja-jp/products/visual-studio-code/)\n  * [Live Share Extension Pack](https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare-pack)\n  * [Tabnine](https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode)\n  * [GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens)\n  * [Markdown Preview Enhanced](https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced)\n  * [Plant UML](https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml)\n\nVS Code は Extension をガンガン入れて自分好みに調教するのが基本。\nトレンドがすごい勢いで変わるので、ここでは最低限のみ紹介。\nLive Share は不要そうですが、リモートワークには必須の人智を超えた便利ツールなのでオススメしてます。\n\n参考:\n[VSCode Live Shareの使い方をしっかり知る](https://qiita.com/irico/items/b67328fdaa2d9a306cba)\n\n* [サクラエディタ](https://sakura-editor.github.io/)\n* [秀丸](https://hide.maruo.co.jp/software/hidemaru.html)\n\n※レジェンダリーエディター。もう使うことないと思ってましたが…お客先環境などでどうしても...\n\n* vi\n\nLinux 標準エディタ。Windowsのメモ帳を想像すると火傷するが覚えると相当強い。\nキーボードから１㍈も手を離したくない人向け。\n参考：[viコマンド（vimコマンド）リファレンス](https://qiita.com/pe-ta/items/0510bee10bcfd88afeee)\n\n* emacs\n\nLinux 上で使うエディタ。少々癖が強い。ウィンドウ分割できたり強いが要インストール。\n参考：[Emacs教習所に行ってきた(チートシート付き)](https://qiita.com/namn1125/items/5cd6a9cbbf17fb85c740)\n\n(GUI DB操作)\n\n* [MySQL Workbench](https://www.mysql.com/jp/products/workbench/)\n* [A5:SQL Mk-2](https://a5m2.mmatsubara.com/)\n\n(ER作成)\n\n* [ERMaster](http://ermaster.sourceforge.net/index_ja.html)\n\n参考：[DB設計の神ツール「ERMaster」なら、ここまでできる (1/3)](https://www.atmarkit.co.jp/ait/articles/1001/21/news128.html)\n\n(AWS)\n\n* [AWS Toolkit for Visual Studio Code](https://aws.amazon.com/jp/visualstudiocode/)\n\nAWS操作が大体できる VS Code Extension。入れよう。\n\n* [MSP360 Explorer](https://www.msp360.com/explorer/windows/amazon-s3.aspx)\n\nS3操作用。Explorerの様な見た目で使いやすい。\n※Cloud berry Explorer → MSP360 Explorer に名前変わってました\n\n### Chocolaty\n\nWindows用パッケージマネージャ。Linux なら yum、mac なら brew。これがなくて長い間開発者達からWindowsが迫害されていた。\n※個人の感想です。\n\nコマンドで(ほぼ)何でもインストールできる。入れておこう。\nついでに node 環境を作っておこう。\n\n(問題)\n1. [Chocolaty](https://chocolatey.org/) をインストールする\n2. nodist をインストールする\n3. yarn をインストールする\n\n### Vagrant\n\n<b>壊しても誰にも怒られない</b>自分専用のVM。作ろう。\nvagrant up / destroy で、任意のOSのVMを簡単に作ったり壊したりできます。\nVirtualBox に iso イメージ用意して... とか昔はVM作るの結構大変でした。\nとりあえずLAMP環境を作れると言えるのがよいと思いますが、apacheではなくnginx推しにしてます。\ncentos やmysql は複数バージョン試してみるとよさそう。\n\n(問題)\n1. [Vagrant](https://www.vagrantup.com/) をインストールする\n2. Vagrant 上に centos7 をインストール\n3. nginx を入れ service 登録をする\n4. mysqlを入れ service 登録をする\n5. php を入れる\n\n### Ansible\n\nコマンド一発で環境を作れる構成管理ツール。手順書見ながら環境作るのはもうやめよう。\n\n参考：\n[vagrant up時にansibleで開発環境を作る](https://qiita.com/srockstyle/items/91690df8a92257e634af)\n\n(問題)\n1. Vagrant の課題で作った環境を Ansible で作る\n\n### Docker\n\nWSL2 様子見中…すいません。\nWindows環境を壊さず開発するのであれば、Vagrant 上で開発するとよいです。\n\n### Vue 環境構築\n\nVue の案件も増えてきたので環境構築からできるようになっておこう。\n\n(問題)\n1. [【Vue.js】Vuetify と TypeScript を使用した環境を構築してサンプルプロジェクトを立ち上げるまでの手順](https://qiita.com/Nossa/items/3860e55551697bb46e38) を参考に、Vue 開発環境を構築する\n\n### React チュートリアル\n\nReact の案件も増えてきたのでチュートリアルをやっておこう。\n\n[React やってみたら超簡単だった話(2020年11月版)](https://qiita.com/kaku3/items/c3768fc1888894d4574a)\n\n\n## ドキュメント編\n\nそもそも「プログラム」は<b>「日本語の仕様をプログラム言語に翻訳する作業」</b>なので<b>分かりやすい日本語が書けないと分かりやすいプログラムは書けない</b>。\n予算や工数の都合で詳細設計は行わないことが多いかと思うが、<b>ビジネスロジック層は外部設計通りになっているべきであるが、そうなっていることは稀である</b>。\n開発の方法論としてデザインパターンやオブジェクト指向などは挙げられるが、外部設計とリンクした開発手法というのが今ひとつ存在しない事も一因かもしれない。コーダーで数年経験を積んでからSEとして設計というキャリアパスが一般的かと思うが、レベルアップ時のステータスボーナスを全てコーディングに割り振ってしまっているせいか、コーディングの熟練度だげ上げているせいか、<b>設計ドキュメントが書けなくて次のキャリアに進めない</b>ケースが散見される。\n\n職業プログラマーとしては、<b>ユーザー目線と開発目線、両方の理解が必須</b>であるため、初期よりドキュメント作成も並行して行っておくことが望ましいと思う。\n\nユーザ目線と開発目線と言われてもピンとこないかもしれないので一つ例を上げておく。\n\n* ユーザ目線：\n\n購入したアプリや、無料のソシャゲの操作性が悪いと些細なことでも「クソが」と思うが、それを作るのがどれだけ大変か気にもしない。\n\n* 開発目線：\n\n画面仕様書記載の仕様の操作性が悪くても疑問に思わないが、<b>品質の良いコード</b>を書くべく鍛錬は怠らない。\n\n### 文章力を上げる\n\n基本はそうそう変わるものでもないので古めの本を探して安く学ぶのがオススメ。\nコミュニケーションロスで消耗するのは、<b>無駄 of 無駄</b>なので真っ先に取るべきスキル。\nここがホビープログラマーと職業プログラマーの違いと言えよう。\n\n* [文章教室](https://www.hyuki.com/wl/)\n\n結城先生によるすばらしいページ。グループワーク形式で数人で課題に取り組みお互いにレビューすると効果が高いと思う。\n\n* [一番伝わる説明の順番 (日本語) 単行本（ソフトカバー） – 2018/6/8](https://www.amazon.co.jp/%E4%B8%80%E7%95%AA%E4%BC%9D%E3%82%8F%E3%82%8B%E8%AA%AC%E6%98%8E%E3%81%AE%E9%A0%86%E7%95%AA-%E7%94%B0%E4%B8%AD%E8%80%95%E6%AF%94%E5%8F%A4/dp/4894519836)\n\n偉い人に「結論から言えや！」とか言われてイラっとする前に読むと心の平穏が保たれると思う。\n\n* [仕事が速い人はどんなメールを書いているのか (日本語) 単行本（ソフトカバー） – 2017/3/15](https://www.amazon.co.jp/%E4%BB%95%E4%BA%8B%E3%81%8C%E9%80%9F%E3%81%84%E4%BA%BA%E3%81%AF%E3%81%A9%E3%82%93%E3%81%AA%E3%83%A1%E3%83%BC%E3%83%AB%E3%82%92%E6%9B%B8%E3%81%84%E3%81%A6%E3%81%84%E3%82%8B%E3%81%AE%E3%81%8B-%E5%B9%B3%E9%87%8E-%E5%8F%8B%E6%9C%97/dp/4905073782)\n\nAmazon Prime で無料で読めたけど、もう無料じゃなくなってた。残念。\n**読む人目線**を理解できるエモい書籍。\n\n* [1日10分のコピーライティングで鍛える伝える力](https://qiita.com/kaku3/items/036b7d23c245f935b0b8)\n\n身の回りのものをおもしろおかしく伝える習慣を身につけましょう。\n\n### 議事録\n\n自分だけ知識ゼロなところ、周りの人間が分かってるつもりで話し合っているのを漏れなくメモる罰ゲーム的イベント。\n実際は洞察力や推理力、書記力等々全ての能力が試される最高の訓練イベント。\n漏れなくメモすることが最初の目標だが、プロジェクトにとって必要なことが必要な形で記録されることを目指したい。\n\n### 手順書\n\n口頭で説明を受ける事が多いと思うが、文書として残してみよう。引き継ぎの時にも使えて便利。\n\n### シーケンス\n\n設計力が上がるのでガンガン書こう。\n(参考)\n[PlantUMLと俺と彼女の危険なシーケンス図](https://qiita.com/kaku3/items/0253f8b761bb6c452752)\n\n### 設計書\n\n読者を意識して、粒度や記載レベルが揃う様に書こう。\n\n## タスク管理編\n\n### Asana / Instagantt\n\n[Asana](https://asana.com/)は、軽量のチケットによるタスク・プロジェクト管理ツール。リスト表示やボード表示もでき、スラック連携なんかもある。[Instagantt](https://instagantt.com/)と連携するとチケットより<b>自動で</b>wbsが作られる。\ntaskline.xlsm や Redmine や bitbucket の課題管理で消耗していたらぜひ使ってみてほしい。\n\n[AsanaとInstaganttと、プロジェクト進行と、](https://qiita.com/ayumio/items/db0c1acaecda05185c55)\n\n## IT業界編\n\nバグがなく安定動作しパフォーマンスが優れたよいプログラムによってプロジェクトの炎上や、深夜や休日のメールやスラックも回避できている。<b>ありがとう</b>。ただ、この素晴らしいプログラムが直接お金を生んでいるのではなく、この素晴らしいプログラムによって動いているプロダクトがお客様（クライアント）の手に渡ってお客様、さらにはその先にいるお客様（エンドユーザー）を幸せにして初めてお金を生んでいる業界なのである。\n\n<b>『プログラムが金を生むのではなく、プロダクトが金を生む』業界</b>\n\nそう考えると、実はプログラムを書いてる時間というのはプロダクトのライフサイクルにおいてごく一部なのである。\nいろいろな人がいろいろな仕事をしてようやくお金が生まれているという事を頭の片隅においておくと、一見不条理に見えていた世界を優しい世界に変えられるかもしれない。\n\n* [職場の問題地図 ~「で、どこから変える?」残業だらけ・休めない働き方 (日本語) 単行本（ソフトカバー） – 2016/9/16](https://www.amazon.co.jp/%E8%81%B7%E5%A0%B4%E3%81%AE%E5%95%8F%E9%A1%8C%E5%9C%B0%E5%9B%B3-%E3%80%8C%E3%81%A7%E3%80%81%E3%81%A9%E3%81%93%E3%81%8B%E3%82%89%E5%A4%89%E3%81%88%E3%82%8B-%E3%80%8D%E6%AE%8B%E6%A5%AD%E3%81%A0%E3%82%89%E3%81%91%E3%83%BB%E4%BC%91%E3%82%81%E3%81%AA%E3%81%84%E5%83%8D%E3%81%8D%E6%96%B9-%E6%B2%A2%E6%B8%A1-%E3%81%82%E3%81%BE%E3%81%AD/dp/4774183687/)\n\n* [システムの問題地図 ~「で、どこから変える?」使えないITに振り回される悲しき景色 (日本語) 単行本（ソフトカバー） – 2018/2/17](https://www.amazon.co.jp/%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E5%95%8F%E9%A1%8C%E5%9C%B0%E5%9B%B3-%E3%80%8C%E3%81%A7%E3%80%81%E3%81%A9%E3%81%93%E3%81%8B%E3%82%89%E5%A4%89%E3%81%88%E3%82%8B-%E3%80%8D%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%84IT%E3%81%AB%E6%8C%AF%E3%82%8A%E5%9B%9E%E3%81%95%E3%82%8C%E3%82%8B%E6%82%B2%E3%81%97%E3%81%8D%E6%99%AF%E8%89%B2-%E6%B2%A2%E6%B8%A1-%E3%81%82%E3%81%BE%E3%81%AD/dp/4774194638/)\n\n# 最後に\n\nIT業界好きですか？プログラム好きですか？\n\n楽しくない仕事は長くは続けられません。\n\n「丁度よいサイズの課題」は、仕事を楽しむための考え方かと思います。\nですので、本稿の課題は上から順に全てやる必要はなく、自分にとって役に立つもの、楽しくやれそうなものを選んで取り組んだり、自分やレビューした先輩が課題を追加したりしてもらえたらと思います。\n\n面倒くさい仕事を、「課題を細分化して丁度よいサイズの課題」に分けたり「物事を観察して丁度よいサイズの課題」として創出したりして、「丁度よいサイズの課題」とすれば、ソシャゲのイベントの様に、毎日少しずつこなせる仕事になるかもしれません。\n\nそうこうしているうちに「顧客の課題」までもを解決できるような職業プログラマーに成長していたらいいなと思います。\n\n※後半メモ的で課題感がなくてすいません。具体的に何か出てきたら追記します。\n※不定期更新？\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-09-05T18:15:37+09:00",
    "group": null,
    "id": "abe98001f74025cec422",
    "likes_count": 95,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 122,
    "tags": [
      {
        "name": "HTML",
        "versions": []
      },
      {
        "name": "CSS",
        "versions": []
      },
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "Bootstrap",
        "versions": []
      },
      {
        "name": "ポエム",
        "versions": []
      }
    ],
    "title": "新人Web系職業プログラマーのための「丁度よいサイズの課題集」",
    "updated_at": "2020-11-14T19:47:52+09:00",
    "url": "https://qiita.com/kaku3/items/abe98001f74025cec422",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 14988,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h2>\n<span id=\"シーケンス図とは\" class=\"fragment\"></span><a href=\"#%E3%82%B7%E3%83%BC%E3%82%B1%E3%83%B3%E3%82%B9%E5%9B%B3%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>シーケンス図とは</h2>\n\n<p>UMLの中で一番利用頻度が高い図（俺調べ）。</p>\n\n<p><a href=\"https://ja.wikipedia.org/wiki/%E3%82%B7%E3%83%BC%E3%82%B1%E3%83%B3%E3%82%B9%E5%9B%B3\" rel=\"nofollow noopener\" target=\"_blank\">wikipedia シーケンス図</a></p>\n\n<blockquote>\n<p>オブジェクト間のメッセージの流れを時系列的に表現する。イベントの発生順序やオブジェクトの生存（ライフライン、lifeline）、メッセージ（message）、イベントオカレンス（event occurrence）、実行オカレンス（execution occurrence）、相互作用オカレンス（interaction occurrence）などの記述によって、もっぱら時系列にもとづいたシステム分析・設計に使用する。</p>\n</blockquote>\n\n<p><strong>オブジェクト間のメッセージの流れを時系列に</strong>表現できるのが大変便利で設計の際には欠かせないが、<strong>描くのが大変面倒くさい</strong>という欠点がある。しょぼいツールで描くと、脳内の整理を行いながら設計をするのが目的なのか、納品物として誰も読まないキレイな図を後仕様として書くのが目的なのか分からなくなる事態に陥る事がある。</p>\n\n<p>賢明な読者諸兄にはそのような不毛な作業ではなく、有益な設計作業に集中してもらいたいので<strong>PlantUML</strong>をオススメしたい。</p>\n\n<h2>\n<span id=\"シーケンス図の大変面倒くさいところ\" class=\"fragment\"></span><a href=\"#%E3%82%B7%E3%83%BC%E3%82%B1%E3%83%B3%E3%82%B9%E5%9B%B3%E3%81%AE%E5%A4%A7%E5%A4%89%E9%9D%A2%E5%80%92%E3%81%8F%E3%81%95%E3%81%84%E3%81%A8%E3%81%93%E3%82%8D\"><i class=\"fa fa-link\"></i></a>シーケンス図の大変面倒くさいところ</h2>\n\n<p>シーケンス図はその性質上、検討しながら作成を行うと大きな修正が発生することが多い。この無駄作業工数とストレスからシーケンスを書くのをやめる人間も多いのではないかと推察する。</p>\n\n<p>品質を上げるために最も重要な事は<strong>試行錯誤が容易にできること</strong>、つまりは大きな修正を苦もなくできることと常々思っているが、<strong>PlantUML</strong>ではその試行錯誤が大変容易にできるのである。</p>\n\n<h2>\n<span id=\"plantuml\" class=\"fragment\"></span><a href=\"#plantuml\"><i class=\"fa fa-link\"></i></a>PlantUML</h2>\n\n<p><a href=\"https://code.visualstudio.com/\" rel=\"nofollow noopener\" target=\"_blank\">VS code</a> と <a href=\"https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml\" rel=\"nofollow noopener\" target=\"_blank\">PlantUML</a> を利用すると大変面倒くさいシーケンス図が大変簡単に書ける。<br>\n<a href=\"https://astah.change-vision.com/ja/manual/434-sequence-diagram.html\" rel=\"nofollow noopener\" target=\"_blank\">astah*</a> を使うと普通に書けるし、お金があれば Visio を使って少しだけ面倒くさくなく書くこともできるし Excel 方眼紙で楽しく書くこともできるが、<strong>PlantUML</strong>を利用すると<strong>大変簡単に</strong>書ける。</p>\n\n<h2>\n<span id=\"俺と彼女の危険なシステム図\" class=\"fragment\"></span><a href=\"#%E4%BF%BA%E3%81%A8%E5%BD%BC%E5%A5%B3%E3%81%AE%E5%8D%B1%E9%99%BA%E3%81%AA%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E5%9B%B3\"><i class=\"fa fa-link\"></i></a>俺と彼女の危険なシステム図</h2>\n\n<p>UMLには興味があるしPlantUMLも使ってみたいが、シーケンス図を書くテーマが見つからない。そんな時には身近な題材を扱うとよいだろう。</p>\n\n<p>身近な題材の例として、ある日の俺と彼女の危険なシーケンス図<sup id=\"fnref1\"><a href=\"#fn1\" title=\"フィクションですよ\">1</a></sup>を示す。PlantUMLの文法は特に説明しないが読めばすぐに理解できると思う。</p>\n\n<div class=\"code-frame\" data-lang=\"PlantUML\"><div class=\"highlight\"><pre><code>@startuml\n\nhide footbox\n\ntitle 危険なシステム\n\nactor 俺 as me\nparticipant TV as tv\nparticipant 飯 as food\nparticipant ソシャゲ as game\nactor 彼女 as gf\n\nme &lt;&lt;- gf :LINE\nactivate me\nme -&gt; tv : つける\nactivate tv\nme -&gt; food : 食う\nme -&gt; tv : 見る\nme --&gt;&gt; gf : スタンプ\nme &lt;&lt;- gf :LINE\nme -&gt; food : 食う\nme -&gt; tv : 見る\nme -&gt; game : ログイン\nactivate game\nme &lt;-- game : ログボ\nme -&gt; food : 食う\nme -&gt; tv : 見る\nme -&gt; food : 食う\nme &lt;- game : 広告\nme --&gt;&gt; gf : スタンプ\nme &lt;&lt;- gf :LINE\nme -&gt; me : 既読\nme -&gt; tv : 見る\nme -&gt; food : 食う\nme &lt;- game : リワード\nme -&gt; game : ガチャ\nme &lt;-- game : N\nme -&gt; game : やめる\ndeactivate game\n\n@enduml\n</code></pre></div></div>\n\n<p>このソースコードで危険なシーケンス図が自動生成される。VS code であれば、ライブプレビューを表示しながら描ける。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/959dc37da1950b5c74ed20d44e2abe2ef42d7b6c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f63653039666133612d626634302d643635652d623833392d6265363062393138326565352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fce09fa3a-bf40-d65e-b839-be60b9182ee5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=17183ec62d18c3bea55f2c3f59c3be6d\" alt=\"2020-07-29_02h14_22.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/ce09fa3a-bf40-d65e-b839-be60b9182ee5.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fce09fa3a-bf40-d65e-b839-be60b9182ee5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=a5d42e60060c0ea05c4ab67ef1380dc6 1x\" loading=\"lazy\"></a></p>\n\n<p>そうこうしながら完成したシーケンス図は以下の様になった。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/1ff8c3cd7b31cc5fe275ad5c6af3af0e86e4137a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133363136352f65393165636263302d346534632d613631382d656630332d3462366636613661313161632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe91ecbc0-4e4c-a618-ef03-4b6f6a6a11ac.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f9148e20e6766b79e6174f42fe41fdf3\" alt=\"危険なシステム.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e91ecbc0-4e4c-a618-ef03-4b6f6a6a11ac.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F136165%2Fe91ecbc0-4e4c-a618-ef03-4b6f6a6a11ac.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=e1545abc153d1cfce39c09c2025cc835 1x\" loading=\"lazy\"></a></p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p><a href=\"https://code.visualstudio.com/\" rel=\"nofollow noopener\" target=\"_blank\">VS code</a> と <a href=\"https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml\" rel=\"nofollow noopener\" target=\"_blank\">PlantUML</a> を利用すると大変面倒くさいシーケンス図が大変簡単に書ける。<br>\n今すぐVS code と PlantUMLをダウンロードしてシーケンス図を書いてみてはいかがだろうか。</p>\n\n<div class=\"footnotes\">\n<hr>\n<ol>\n\n<li id=\"fn1\">\n<p>フィクションですよ <a href=\"#fnref1\">↩</a></p>\n</li>\n\n</ol>\n</div>\n",
    "body": "## シーケンス図とは\nUMLの中で一番利用頻度が高い図（俺調べ）。\n\n[wikipedia シーケンス図](https://ja.wikipedia.org/wiki/%E3%82%B7%E3%83%BC%E3%82%B1%E3%83%B3%E3%82%B9%E5%9B%B3)\n> オブジェクト間のメッセージの流れを時系列的に表現する。イベントの発生順序やオブジェクトの生存（ライフライン、lifeline）、メッセージ（message）、イベントオカレンス（event occurrence）、実行オカレンス（execution occurrence）、相互作用オカレンス（interaction occurrence）などの記述によって、もっぱら時系列にもとづいたシステム分析・設計に使用する。\n\n**オブジェクト間のメッセージの流れを時系列に**表現できるのが大変便利で設計の際には欠かせないが、**描くのが大変面倒くさい**という欠点がある。しょぼいツールで描くと、脳内の整理を行いながら設計をするのが目的なのか、納品物として誰も読まないキレイな図を後仕様として書くのが目的なのか分からなくなる事態に陥る事がある。\n\n賢明な読者諸兄にはそのような不毛な作業ではなく、有益な設計作業に集中してもらいたいので**PlantUML**をオススメしたい。\n\n## シーケンス図の大変面倒くさいところ\nシーケンス図はその性質上、検討しながら作成を行うと大きな修正が発生することが多い。この無駄作業工数とストレスからシーケンスを書くのをやめる人間も多いのではないかと推察する。\n\n品質を上げるために最も重要な事は**試行錯誤が容易にできること**、つまりは大きな修正を苦もなくできることと常々思っているが、**PlantUML**ではその試行錯誤が大変容易にできるのである。\n\n## PlantUML\n[VS code](https://code.visualstudio.com/) と [PlantUML](https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml) を利用すると大変面倒くさいシーケンス図が大変簡単に書ける。\n[astah*](https://astah.change-vision.com/ja/manual/434-sequence-diagram.html) を使うと普通に書けるし、お金があれば Visio を使って少しだけ面倒くさくなく書くこともできるし Excel 方眼紙で楽しく書くこともできるが、**PlantUML**を利用すると**大変簡単に**書ける。\n\n## 俺と彼女の危険なシステム図\nUMLには興味があるしPlantUMLも使ってみたいが、シーケンス図を書くテーマが見つからない。そんな時には身近な題材を扱うとよいだろう。\n\n身近な題材の例として、ある日の俺と彼女の危険なシーケンス図[^1]を示す。PlantUMLの文法は特に説明しないが読めばすぐに理解できると思う。\n\n``` PlantUML\n@startuml\n\nhide footbox\n\ntitle 危険なシステム\n\nactor 俺 as me\nparticipant TV as tv\nparticipant 飯 as food\nparticipant ソシャゲ as game\nactor 彼女 as gf\n\nme <<- gf :LINE\nactivate me\nme -> tv : つける\nactivate tv\nme -> food : 食う\nme -> tv : 見る\nme -->> gf : スタンプ\nme <<- gf :LINE\nme -> food : 食う\nme -> tv : 見る\nme -> game : ログイン\nactivate game\nme <-- game : ログボ\nme -> food : 食う\nme -> tv : 見る\nme -> food : 食う\nme <- game : 広告\nme -->> gf : スタンプ\nme <<- gf :LINE\nme -> me : 既読\nme -> tv : 見る\nme -> food : 食う\nme <- game : リワード\nme -> game : ガチャ\nme <-- game : N\nme -> game : やめる\ndeactivate game\n\n@enduml\n```\n\nこのソースコードで危険なシーケンス図が自動生成される。VS code であれば、ライブプレビューを表示しながら描ける。\n\n![2020-07-29_02h14_22.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/ce09fa3a-bf40-d65e-b839-be60b9182ee5.png)\n\nそうこうしながら完成したシーケンス図は以下の様になった。\n\n![危険なシステム.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/136165/e91ecbc0-4e4c-a618-ef03-4b6f6a6a11ac.png)\n\n## まとめ\n[VS code](https://code.visualstudio.com/) と [PlantUML](https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml) を利用すると大変面倒くさいシーケンス図が大変簡単に書ける。\n今すぐVS code と PlantUMLをダウンロードしてシーケンス図を書いてみてはいかがだろうか。\n\n\n[^1]: フィクションですよ\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-07-29T03:14:51+09:00",
    "group": null,
    "id": "0253f8b761bb6c452752",
    "likes_count": 4,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 6,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "PlantUML",
        "versions": []
      },
      {
        "name": "シーケンス図",
        "versions": []
      }
    ],
    "title": "PlantUMLと俺と彼女の危険なシーケンス図",
    "updated_at": "2020-07-29T03:14:51+09:00",
    "url": "https://qiita.com/kaku3/items/0253f8b761bb6c452752",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2836,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"円周率314の奇跡\" class=\"fragment\"></span><a href=\"#%E5%86%86%E5%91%A8%E7%8E%87314%E3%81%AE%E5%A5%87%E8%B7%A1\"><i class=\"fa fa-link\"></i></a>円周率3.14の奇跡</h1>\n\n<p>いきなりクソコピーすいません。<br>\nQiitaは技術情報書くところですので、こいつ何書いてるんだって思われた方も多いかと思うのですが、エンジニアの方の日々の業務を飛躍的に改善する学習方法として「コピーライティング学習法」をお勧めしたく記事を書きました。</p>\n\n<h2>\n<span id=\"改善が期待される業務\" class=\"fragment\"></span><a href=\"#%E6%94%B9%E5%96%84%E3%81%8C%E6%9C%9F%E5%BE%85%E3%81%95%E3%82%8C%E3%82%8B%E6%A5%AD%E5%8B%99\"><i class=\"fa fa-link\"></i></a>改善が期待される業務</h2>\n\n<ul>\n<li>メール / 報告書 / 議事録</li>\n<li>要件定義書 / 仕様書 / 設計書 ...</li>\n</ul>\n\n<p>ほぼ全てのドキュメント作成業務です。</p>\n\n<h2>\n<span id=\"本記事で扱うコピーの定義\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E8%A8%98%E4%BA%8B%E3%81%A7%E6%89%B1%E3%81%86%E3%82%B3%E3%83%94%E3%83%BC%E3%81%AE%E5%AE%9A%E7%BE%A9\"><i class=\"fa fa-link\"></i></a>本記事で扱うコピーの定義</h2>\n\n<p>記事や書籍により多少の差異がありますが、本記事の学習法では以下をコピーとして定義し学習対象とします。</p>\n\n<ul>\n<li><p>キャッチコピー<br>\n自分の伝えたいことを簡潔に伝える見出し(15 - 20文字程度)</p></li>\n<li><p>リードコピー<br>\n本文の内容を簡潔に伝える冒頭の書き出し(2 - 3行程度)</p></li>\n</ul>\n\n<p><a href=\"https://ja.wikipedia.org/wiki/%E3%82%AD%E3%83%A3%E3%83%83%E3%83%81%E3%82%B3%E3%83%94%E3%83%BC\" rel=\"nofollow noopener\" target=\"_blank\">(参考)Wikipedia : キャッチコピー</a></p>\n\n<blockquote>\n<p>キャッチコピー、キャッチフレーズとは、主に商品や作品の広告など、何らかの告知や宣伝に用いられ、謳い文句や煽り文句となる文章で、広告コピー（広告文）の一部である。惹句とも呼ばれる。</p>\n\n<p>1文、1行程度のものから、数行に亘る物まで形式は様々である。広告や宣伝においては、キャッチコピーで商品の印象が決まると言え、その出来如何によっては商品自体の売れ行きが大きく左右される事になるため、重要視される。職業としてキャッチコピーを含む広告コピーを創作する者をコピーライターという。</p>\n</blockquote>\n\n<h2>\n<span id=\"コピーライティング学習法\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%94%E3%83%BC%E3%83%A9%E3%82%A4%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E5%AD%A6%E7%BF%92%E6%B3%95\"><i class=\"fa fa-link\"></i></a>コピーライティング学習法</h2>\n\n<p>時間を見つけて、キャッチコピーとリードコピーを、身の回りのもの（まずは好きなもの）を対象に書くだけです。<br>\n勉強会などで制限時間を決めて書き、お互いに見せ合うとより一層効果的です。</p>\n\n<h2>\n<span id=\"期待される効果個人差があります\" class=\"fragment\"></span><a href=\"#%E6%9C%9F%E5%BE%85%E3%81%95%E3%82%8C%E3%82%8B%E5%8A%B9%E6%9E%9C%E5%80%8B%E4%BA%BA%E5%B7%AE%E3%81%8C%E3%81%82%E3%82%8A%E3%81%BE%E3%81%99\"><i class=\"fa fa-link\"></i></a>期待される効果(個人差があります)</h2>\n\n<ul>\n<li>観察力</li>\n</ul>\n\n<p>コピーを書くためにはコピーを書く対象のことをよく知らなければ書けません。<br>\nコピーを反復して書くことで『観察力』の改善が期待されます。</p>\n\n<p>業務の例では、過去案件の書類を参考にドキュメントを作成するようにという指示を出した際に、フォーマットだけ参考にする方、中に書いてある情報の構成まで参考にする方などいると思いますが、観察力が低い方の成果物はレビューしても直りにくい傾向があるかと思います。</p>\n\n<ul>\n<li>分析力 / 分解力</li>\n</ul>\n\n<p>好きなもののことを語ろうとすると膨大な量になりがちです。<br>\n３行で詳しく説明しなければいけない時に、膨大な情報の中から何を語るべきかを判断する『分析力 / 分解力』の改善が期待されます。</p>\n\n<p>業務の例では、報告書やメールが、とにかく時系列にやったことをすべて書いてくる方などいると思いますが、何を書くにも３行で書く習慣がついていれば、その様な報告を受ける機会が減る事が期待されます。</p>\n\n<ul>\n<li>いいとこ探し力</li>\n</ul>\n\n<p>反復していると、ネタが切れてきます。<br>\n興味のないもののコピーを書こうとすると行数が書けません。<br>\n無理にでもいいところを探そうとする習慣をつけると業務と言わず人生が豊かになります（たぶん）。</p>\n\n<ul>\n<li>伝えるための表現力</li>\n</ul>\n\n<p>キャッチコピーは、「一番短い言葉で伝えるための文章」だと思います。<br>\nこれを反復して書くことで、全ての文章が読者に伝わることを意識した文章、すなわち、『伝えるための表現力』の改善が期待されます。</p>\n\n<p>ここではタイトルの伏線を回収しますが、「円周率3.14の奇跡」はキャッチー（なんだろう？と興味を惹く）なことのみを意識して「伝えたいこと」は何もないというコピーでした。人に何かを伝えない文章は存在しない文章と同義です。</p>\n\n<p>ただし、そのようなコピーが「クソコピー」ということを伝えたかったので、もしもそれが伝わっていたらわたしの『伝えるための表現力』は改善されつつあると言えるかもしれません。わたしも勉強中です。</p>\n\n<ul>\n<li>レスポンスタイムの短縮</li>\n</ul>\n\n<p>本訓練を反復することで、情報収集からアウトプットまでの時間が短縮することが期待されます。</p>\n\n<p>メールや報告書など、素早く返信が必要なケースで、即座に返信できるような事が期待されます。</p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>日本人だから日本語が書けるのは当たり前と思いがちですが、常日頃から文章を書いていないと文章力は落ちます。<br>\nそして、まとまった量のドキュメントを日常生活で書く機会は、意識して作らないとない状況かと思います。<br>\n気づけばわたしも文章書いてないなという危機感から本記事を書かせて頂きました。</p>\n\n<p>業務ドキュメントのレビュー指摘の原因が「基礎が出来ていない」という状況は指摘する側もされる側も不幸になります。<br>\nまた、その様な指摘が出るケースでは、啓蒙本やHowTo本を買ってきて１－２冊読んでも改善する事はまれで、地道な反復での改善を期待するしかないと思っています。</p>\n\n<p>今回ご紹介した「コピーライティング学習方法」は、日本語でドキュメントを作成する上での基礎力を、比較的楽しく短い時間の反復の訓練で習得できる方法となっているかと思います。</p>\n\n<p>テレワークの導入も加速し『ドキュメント』の重要性は上がっていくかと思いますので、不幸な状況になる前に『楽しく』『伝える文章』を学べたらよいなと思います。</p>\n",
    "body": "# 円周率3.14の奇跡\nいきなりクソコピーすいません。\nQiitaは技術情報書くところですので、こいつ何書いてるんだって思われた方も多いかと思うのですが、エンジニアの方の日々の業務を飛躍的に改善する学習方法として「コピーライティング学習法」をお勧めしたく記事を書きました。\n\n## 改善が期待される業務\n* メール / 報告書 / 議事録\n* 要件定義書 / 仕様書 / 設計書 ...\n\nほぼ全てのドキュメント作成業務です。\n\n## 本記事で扱うコピーの定義\n記事や書籍により多少の差異がありますが、本記事の学習法では以下をコピーとして定義し学習対象とします。\n\n* キャッチコピー\n自分の伝えたいことを簡潔に伝える見出し(15 - 20文字程度)\n\n* リードコピー\n本文の内容を簡潔に伝える冒頭の書き出し(2 - 3行程度)\n\n\n[(参考)Wikipedia : キャッチコピー](https://ja.wikipedia.org/wiki/%E3%82%AD%E3%83%A3%E3%83%83%E3%83%81%E3%82%B3%E3%83%94%E3%83%BC)\n> キャッチコピー、キャッチフレーズとは、主に商品や作品の広告など、何らかの告知や宣伝に用いられ、謳い文句や煽り文句となる文章で、広告コピー（広告文）の一部である。惹句とも呼ばれる。\n> \n> 1文、1行程度のものから、数行に亘る物まで形式は様々である。広告や宣伝においては、キャッチコピーで商品の印象が決まると言え、その出来如何によっては商品自体の売れ行きが大きく左右される事になるため、重要視される。職業としてキャッチコピーを含む広告コピーを創作する者をコピーライターという。\n\n## コピーライティング学習法\n時間を見つけて、キャッチコピーとリードコピーを、身の回りのもの（まずは好きなもの）を対象に書くだけです。\n勉強会などで制限時間を決めて書き、お互いに見せ合うとより一層効果的です。\n\n## 期待される効果(個人差があります)\n* 観察力\n\nコピーを書くためにはコピーを書く対象のことをよく知らなければ書けません。\nコピーを反復して書くことで『観察力』の改善が期待されます。\n\n業務の例では、過去案件の書類を参考にドキュメントを作成するようにという指示を出した際に、フォーマットだけ参考にする方、中に書いてある情報の構成まで参考にする方などいると思いますが、観察力が低い方の成果物はレビューしても直りにくい傾向があるかと思います。\n\n* 分析力 / 分解力\n\n好きなもののことを語ろうとすると膨大な量になりがちです。\n３行で詳しく説明しなければいけない時に、膨大な情報の中から何を語るべきかを判断する『分析力 / 分解力』の改善が期待されます。\n\n業務の例では、報告書やメールが、とにかく時系列にやったことをすべて書いてくる方などいると思いますが、何を書くにも３行で書く習慣がついていれば、その様な報告を受ける機会が減る事が期待されます。\n\n* いいとこ探し力\n\n反復していると、ネタが切れてきます。\n興味のないもののコピーを書こうとすると行数が書けません。\n無理にでもいいところを探そうとする習慣をつけると業務と言わず人生が豊かになります（たぶん）。\n\n* 伝えるための表現力\n\nキャッチコピーは、「一番短い言葉で伝えるための文章」だと思います。\nこれを反復して書くことで、全ての文章が読者に伝わることを意識した文章、すなわち、『伝えるための表現力』の改善が期待されます。\n\nここではタイトルの伏線を回収しますが、「円周率3.14の奇跡」はキャッチー（なんだろう？と興味を惹く）なことのみを意識して「伝えたいこと」は何もないというコピーでした。人に何かを伝えない文章は存在しない文章と同義です。\n\nただし、そのようなコピーが「クソコピー」ということを伝えたかったので、もしもそれが伝わっていたらわたしの『伝えるための表現力』は改善されつつあると言えるかもしれません。わたしも勉強中です。\n\n* レスポンスタイムの短縮\n\n本訓練を反復することで、情報収集からアウトプットまでの時間が短縮することが期待されます。\n\nメールや報告書など、素早く返信が必要なケースで、即座に返信できるような事が期待されます。\n\n## まとめ\n日本人だから日本語が書けるのは当たり前と思いがちですが、常日頃から文章を書いていないと文章力は落ちます。\nそして、まとまった量のドキュメントを日常生活で書く機会は、意識して作らないとない状況かと思います。\n気づけばわたしも文章書いてないなという危機感から本記事を書かせて頂きました。\n\n業務ドキュメントのレビュー指摘の原因が「基礎が出来ていない」という状況は指摘する側もされる側も不幸になります。\nまた、その様な指摘が出るケースでは、啓蒙本やHowTo本を買ってきて１－２冊読んでも改善する事はまれで、地道な反復での改善を期待するしかないと思っています。\n\n今回ご紹介した「コピーライティング学習方法」は、日本語でドキュメントを作成する上での基礎力を、比較的楽しく短い時間の反復の訓練で習得できる方法となっているかと思います。\n\nテレワークの導入も加速し『ドキュメント』の重要性は上がっていくかと思いますので、不幸な状況になる前に『楽しく』『伝える文章』を学べたらよいなと思います。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2020-05-23T14:47:26+09:00",
    "group": null,
    "id": "036b7d23c245f935b0b8",
    "likes_count": 3,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 3,
    "tags": [
      {
        "name": "ポエム",
        "versions": []
      },
      {
        "name": "学習",
        "versions": []
      }
    ],
    "title": "1日10分のコピーライティングで鍛える伝える力",
    "updated_at": "2020-09-19T13:31:33+09:00",
    "url": "https://qiita.com/kaku3/items/036b7d23c245f935b0b8",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1450,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"windows-版-node--nodist\" class=\"fragment\"></span><a href=\"#windows-%E7%89%88-node--nodist\"><i class=\"fa fa-link\"></i></a>Windows 版 node / nodist</h1>\n\n<p>フロントエンドの開発を行う際に、最早必須とも言える node ですが Windows 環境にインストールすると微妙に動かなかったりするものが混じっていますが、mac の人に質問しても「知らない」とスルーされて辛かったりします。</p>\n\n<p>Windows 上のエディタで開発してブラウザで確認、bash 側で node環境（ビルド、開発用サーバ起動）という環境にすれば、Windows のまま快適な開発ライフを送れると思ったのですが、2017/03/09 時点で壊滅的に日常使い出来ない点と、フロントエンド開発に使えない点がありましたので、お伝えしたいと思います。</p>\n\n<h1>\n<span id=\"理由その1-mv-コマンドでフリーズする\" class=\"fragment\"></span><a href=\"#%E7%90%86%E7%94%B1%E3%81%9D%E3%81%AE1-mv-%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E3%83%95%E3%83%AA%E3%83%BC%E3%82%BA%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>(理由その1) mv コマンドでフリーズする！</h1>\n\n<p>Windows 上のファイルは、bash では、/mnt/c/ 以下にマウントされます。<br>\n大変分かりやすく見やすいのですが、/mnt/c/Users/ 以下のフォルダで、mv コマンドを使用するとフリーズします。</p>\n\n<p>フリーズするサンプル</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>$cd /mnt/c/Users/&lt;ユーザ名&gt;/\n$mkdir test1\n$mkdir test2\n$mv test1 test2\n</code></pre></div></div>\n\n<p>mvコマンドでフリーズすると、Windows を再起動するまで bash は使用できなくなります。<br>\n※ c:\\ 直下にファイルを置けば回避できるようではあります。</p>\n\n<p>参考：<br>\n<a href=\"https://github.com/Microsoft/BashOnWindows/issues/703\" rel=\"nofollow noopener\" target=\"_blank\">Bash.exe hangs and the bash is unusable</a></p>\n\n<h1>\n<span id=\"理由その2-fswatch-が動かない\" class=\"fragment\"></span><a href=\"#%E7%90%86%E7%94%B1%E3%81%9D%E3%81%AE2-fswatch-%E3%81%8C%E5%8B%95%E3%81%8B%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>(理由その2) fs.watch が動かない</h1>\n\n<p>Windows 側で保存したファイルを、bash 側が変更を監視してビルド…が、できません。</p>\n\n<p>参考：<br>\n<a href=\"https://github.com/nodejs/node/issues/7496\" rel=\"nofollow noopener\" target=\"_blank\">fs.watch not work in win10 Bash.</a></p>\n\n<h1>\n<span id=\"理由その3-windows-側から-bash-側のネットワークが見えない\" class=\"fragment\"></span><a href=\"#%E7%90%86%E7%94%B1%E3%81%9D%E3%81%AE3-windows-%E5%81%B4%E3%81%8B%E3%82%89-bash-%E5%81%B4%E3%81%AE%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%81%8C%E8%A6%8B%E3%81%88%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>(理由その3) Windows 側から bash 側のネットワークが見えない</h1>\n\n<p>bash 側で開発サーバを立ててライブリロード…が、できません。一応ワークアラウンドはあるようですが…WSL対応のために何かするのも少し悩ましいところです。</p>\n\n<p>参考：<br>\n<a href=\"http://stackoverflow.com/questions/37497914/node-http-server-not-working-on-windows-10-ubuntu-bash\" rel=\"nofollow noopener\" target=\"_blank\">Node http-server not working on Windows 10 Ubuntu Bash</a></p>\n\n<h1>\n<span id=\"おまけ-日本語が文字化けする\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91-%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%8C%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>(おまけ) 日本語が文字化けする</h1>\n\n<p>MS-DOSプロンプトがUnicodeに対応していません。コードページ切り替えでなんとなく表示されるようになりますが、それでも表示が崩れたりと実用レベルにはなっていないという印象です。PowerShellから起動しても、細かくうまく動かない感じでした。（あまり試してませんが）</p>\n\n<p>ただ、こちらについては、Visual Studio Code のターミナルを利用すれば、今のところ不具合なく使えてますので、理由からは除外したいと思います。むしろ Visual Studio Code は軽くて快適なので積極的に使いたい感じです。</p>\n\n<p>VSCode のterminal を ファイル→基本設定→設定で、settings.json を開いて、PowerShell から bash に変更。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>settings.json\n\n\"terminal.integrated.shell.windows\": \"C:\\\\WINDOWS\\\\Sysnative\\\\bash.exe\",\n</code></pre></div></div>\n\n<p>とは言え、ちょっとした用途には便利に使ってたりしますので、上記についても、いや、実はできるよ！最近のリリースで対応されたよ！というのがありましたらコメント頂けると助かります。</p>\n",
    "body": "# Windows 版 node / nodist\nフロントエンドの開発を行う際に、最早必須とも言える node ですが Windows 環境にインストールすると微妙に動かなかったりするものが混じっていますが、mac の人に質問しても「知らない」とスルーされて辛かったりします。\n\nWindows 上のエディタで開発してブラウザで確認、bash 側で node環境（ビルド、開発用サーバ起動）という環境にすれば、Windows のまま快適な開発ライフを送れると思ったのですが、2017/03/09 時点で壊滅的に日常使い出来ない点と、フロントエンド開発に使えない点がありましたので、お伝えしたいと思います。\n\n# (理由その1) mv コマンドでフリーズする！\nWindows 上のファイルは、bash では、/mnt/c/ 以下にマウントされます。\n大変分かりやすく見やすいのですが、/mnt/c/Users/ 以下のフォルダで、mv コマンドを使用するとフリーズします。\n\nフリーズするサンプル\n\n```\n$cd /mnt/c/Users/<ユーザ名>/\n$mkdir test1\n$mkdir test2\n$mv test1 test2\n```\n\nmvコマンドでフリーズすると、Windows を再起動するまで bash は使用できなくなります。\n※ c:\\ 直下にファイルを置けば回避できるようではあります。\n\n参考：\n[Bash.exe hangs and the bash is unusable](https://github.com/Microsoft/BashOnWindows/issues/703)\n\n# (理由その2) fs.watch が動かない\nWindows 側で保存したファイルを、bash 側が変更を監視してビルド…が、できません。\n\n参考：\n[fs.watch not work in win10 Bash.](https://github.com/nodejs/node/issues/7496)\n\n# (理由その3) Windows 側から bash 側のネットワークが見えない\nbash 側で開発サーバを立ててライブリロード…が、できません。一応ワークアラウンドはあるようですが…WSL対応のために何かするのも少し悩ましいところです。\n\n参考：\n[Node http-server not working on Windows 10 Ubuntu Bash](http://stackoverflow.com/questions/37497914/node-http-server-not-working-on-windows-10-ubuntu-bash)\n\n# (おまけ) 日本語が文字化けする\nMS-DOSプロンプトがUnicodeに対応していません。コードページ切り替えでなんとなく表示されるようになりますが、それでも表示が崩れたりと実用レベルにはなっていないという印象です。PowerShellから起動しても、細かくうまく動かない感じでした。（あまり試してませんが）\n\nただ、こちらについては、Visual Studio Code のターミナルを利用すれば、今のところ不具合なく使えてますので、理由からは除外したいと思います。むしろ Visual Studio Code は軽くて快適なので積極的に使いたい感じです。\n\nVSCode のterminal を ファイル→基本設定→設定で、settings.json を開いて、PowerShell から bash に変更。\n\n```\nsettings.json\n\n\"terminal.integrated.shell.windows\": \"C:\\\\WINDOWS\\\\Sysnative\\\\bash.exe\",\n```\n\n\nとは言え、ちょっとした用途には便利に使ってたりしますので、上記についても、いや、実はできるよ！最近のリリースで対応されたよ！というのがありましたらコメント頂けると助かります。\n\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2017-03-09T11:25:18+09:00",
    "group": null,
    "id": "ba179283f33e3664e87d",
    "likes_count": 3,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 3,
    "tags": [
      {
        "name": "Bash",
        "versions": []
      },
      {
        "name": "Windows10",
        "versions": []
      },
      {
        "name": "WindowsSubsystemForLinux",
        "versions": []
      },
      {
        "name": "WSL",
        "versions": []
      }
    ],
    "title": "Windows Subsystem for Linux(WSL bash) をまだ使わない方がいい３つの理由(+1)",
    "updated_at": "2017-03-10T18:24:15+09:00",
    "url": "https://qiita.com/kaku3/items/ba179283f33e3664e87d",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 3723,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"angular-cli\" class=\"fragment\"></span><a href=\"#angular-cli\"><i class=\"fa fa-link\"></i></a>angular-cli</h1>\n\n<p>Angular2 触ってみたいけど gulp のスクリプトガリガリ書いたりなんか設定とか難しいんでしょ…？と思っていましたが、angular-cli を使えばコマンド一発でプロジェクトの雛形(Angular + TypeScript + css/less/sass/stylus + html)を作ってくれて、５分で初められるじゃない？というくらい便利になっていました。<br>\nただ、angular-cli では雛形作るところまでやって、あとはカスタムスクリプトという記事も見かけたので、 angular-cli で pug を追加してビルドする手順を書いておきます。（2017/02/25時点）</p>\n\n<h2>\n<span id=\"pugjade-導入について\" class=\"fragment\"></span><a href=\"#pugjade-%E5%B0%8E%E5%85%A5%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>pug(Jade) 導入について</h2>\n\n<p>html を爆速で簡単に書けるテンプレートエンジンです。Angular2 (Angular) ではコンポーネント志向が徹底しているので、長い html を書くことはあまりないかもしれませんが、ちょっと凝ったことをすると html はすぐに辛くなるので導入することにしました。<br>\n<a href=\"https://pugjs.org/api/getting-started.html\" rel=\"nofollow noopener\" target=\"_blank\">pug</a></p>\n\n<h2>\n<span id=\"angular-cli-導入\" class=\"fragment\"></span><a href=\"#angular-cli-%E5%B0%8E%E5%85%A5\"><i class=\"fa fa-link\"></i></a>angular-cli 導入</h2>\n\n<p>みんな大好き npm でインストールしようかと思ったのですが、最近は yarn がキてるっぽいので yarn で導入してみました。使い方は npm とほとんど変わらず簡単で、高速に動作していました。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code># yarn インストール\n&gt; npm i -g yarn\n\n# angular-cli インストール\n&gt; yarn global add angular-cli\n</code></pre></div></div>\n\n<h2>\n<span id=\"サンプルプロジェクト作成とwebpackconfigjs-抽出\" class=\"fragment\"></span><a href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E4%BD%9C%E6%88%90%E3%81%A8webpackconfigjs-%E6%8A%BD%E5%87%BA\"><i class=\"fa fa-link\"></i></a>サンプルプロジェクト作成と、webpack.config.js 抽出</h2>\n\n<p>内部で webpack でビルドしているので、webpack.config.js を修正して pug を追加したいのですが、見当たりません。設定を変更せず使いたい人を混乱させないように隠蔽をしたのでしょうか。<br>\n抽出するための eject コマンドが用意されているのでそれを呼び出します。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code># hello-world プロジェクト作成\n&gt; ng new hello-world\n\n# webpack.config.js を抽出(ng eject)\n&gt; cd hello-world\n&gt; ng eject\n</code></pre></div></div>\n\n<p>プロジェクトのルートに、webpack.config.js があるか確認しておきます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>hello-world/\n|.angular-cli.json\n|.editorconfig\n|.gitignore\n|karma.conf.js\n|package.json\n|protractor.conf.js\n|README.md\n|tslint.json\n|yarn.lock\n|webpack.config.js ★ ここに抽出されます\n+node_modules/\n+e2e/\n+src/\n</code></pre></div></div>\n\n<h2>\n<span id=\"webpack-webpack-dev-server-をインストール\" class=\"fragment\"></span><a href=\"#webpack-webpack-dev-server-%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>webpack, webpack-dev-server をインストール</h2>\n\n<p>デフォルト設定で使用する際はこの手順は不要ですが、eject したプロジェクトでは webpack が別途必要になるのでインストールしておきます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>&gt; yarn add webpack-dev-server --dev\n&gt; yarn add webpack --dev\n</code></pre></div></div>\n\n<p>ここで、プロジェクトが正常に動くか一度確認しておきます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>&gt; yarn start\n</code></pre></div></div>\n\n<p>webpack でビルドされて、ブラウザで <a href=\"http://localhost:8080\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://localhost:8080</a> などを開いてページが表示されれば正常に動作しています。</p>\n\n<h2>\n<span id=\"webpackconfigjs-を修正pug-html-loader-をインストール\" class=\"fragment\"></span><a href=\"#webpackconfigjs-%E3%82%92%E4%BF%AE%E6%AD%A3pug-html-loader-%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>webpack.config.js を修正、pug-html-loader をインストール</h2>\n\n<p>module / rules に、 (pug|jade) の設定を追加します。</p>\n\n<div class=\"code-frame\" data-lang=\"javascript\">\n<div class=\"code-lang\"><span class=\"bold\">webpack.config.js</span></div>\n<div class=\"highlight\"><pre><code><span class=\"p\">...</span>\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"p\">...</span>\n  <span class=\"dl\">\"</span><span class=\"s2\">module</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"dl\">\"</span><span class=\"s2\">rules</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">...</span>\n      <span class=\"p\">{</span>\n        <span class=\"dl\">\"</span><span class=\"s2\">test</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"nx\">json$</span><span class=\"o\">/</span><span class=\"p\">,</span>\n        <span class=\"dl\">\"</span><span class=\"s2\">loader</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">json-loader</span><span class=\"dl\">\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"c1\">// ★追加。拡張子が、pug|jade なら、pug-html-loader を利用</span>\n      <span class=\"p\">{</span>\n        <span class=\"dl\">\"</span><span class=\"s2\">test</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"err\">\\</span><span class=\"p\">.(</span><span class=\"nx\">pug</span><span class=\"o\">|</span><span class=\"nx\">jade</span><span class=\"p\">)</span><span class=\"nx\">$</span><span class=\"o\">/</span><span class=\"p\">,</span>\n<span class=\"c1\">//        \"loader\": \"pug-html-loader\"  // 2017/05/20修正。コメント頂きました。raw-loader も必要かも？</span>\n          <span class=\"dl\">\"</span><span class=\"s2\">loader</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">raw-loader</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">pug-html-loader</span><span class=\"dl\">'</span><span class=\"p\">]</span> <span class=\"c1\">// 'raw-loader' が必要</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"dl\">\"</span><span class=\"s2\">test</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"nx\">html$</span><span class=\"o\">/</span><span class=\"p\">,</span>\n        <span class=\"dl\">\"</span><span class=\"s2\">loader</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">raw-loader</span><span class=\"dl\">\"</span>\n      <span class=\"p\">},</span>\n</code></pre></div>\n</div>\n\n<p>pug-html-loader は angular-cli に含まれていないので、インストールします</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>&gt; yarn add pug-html-loader --dev\n</code></pre></div></div>\n\n<h2>\n<span id=\"pug-ファイルをビルドしてみる\" class=\"fragment\"></span><a href=\"#pug-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E3%83%93%E3%83%AB%E3%83%89%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\"><i class=\"fa fa-link\"></i></a>pug ファイルをビルドしてみる</h2>\n\n<p>以下のファイルがデフォルトで生成されているので、html ファイルを pug ファイルにリネームして、中身を pug に書き換える、html を参照していた ts ファイルも、pug を参照するように修正</p>\n\n<ul>\n<li>src 以下のフォルダ構成</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>src/\n+app/\n  app.component.css\n  app.component.html    # ★ .html -&gt; .pug にリネーム\n  app.component.spec.ts\n  app.component.ts\n</code></pre></div></div>\n\n<ul>\n<li>.html の中身</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"html\">\n<div class=\"code-lang\"><span class=\"bold\">app.component.html</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nt\">&lt;h1&gt;</span>\n  {{title}}\n<span class=\"nt\">&lt;/h1&gt;</span>\n</code></pre></div>\n</div>\n\n<ul>\n<li>.pug にして、中身も書き換える。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"jade\">\n<div class=\"code-lang\"><span class=\"bold\">app.component.pug</span></div>\n<div class=\"highlight\"><pre><code>h1\n  | {{title}}\n</code></pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"typescript\">\n<div class=\"code-lang\"><span class=\"bold\">app.component.ts</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Component</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@angular/core</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"p\">@</span><span class=\"nd\">Component</span><span class=\"p\">({</span>\n  <span class=\"na\">selector</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">app-root</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">templateUrl</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">./app.component.pug</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"c1\">// ★ .html -&gt; .pug にリネーム</span>\n  <span class=\"na\">styleUrls</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">./app.component.css</span><span class=\"dl\">'</span><span class=\"p\">]</span>\n<span class=\"p\">})</span>\n<span class=\"k\">export</span> <span class=\"kd\">class</span> <span class=\"nx\">AppComponent</span> <span class=\"p\">{</span>\n  <span class=\"nx\">title</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">app works!</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<p>css については、拡張子を書き換えるだけで less/sass/scss/stylus が使用可能です。</p>\n\n<p>また、プロダクション用のコード出力は以下のコマンドを実行することで、dist/ フォルダに出力されます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>&gt; yarn build\n</code></pre></div></div>\n\n<h2>\n<span id=\"補足\" class=\"fragment\"></span><a href=\"#%E8%A3%9C%E8%B6%B3\"><i class=\"fa fa-link\"></i></a>補足</h2>\n\n<p>Angular2 の構文が、一部 pug で（そのままだと）コンパイルエラーになるのでカンマで区切る、またはシングルクオートでくくるといった書き換えが必要です。<br>\n<a href=\"https://pugjs.org/language/attributes.html\" rel=\"nofollow noopener\" target=\"_blank\">Quated Attributes | pug</a></p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code># カンマなし。error (click) が解釈できない\ndiv(class='div-class' (click)='play()')\n\n# カンマあり。ok (click) が解釈できる\ndiv(class='div-class', (click)='play()')\n</code></pre></div></div>\n\n<h2>\n<span id=\"蛇足\" class=\"fragment\"></span><a href=\"#%E8%9B%87%E8%B6%B3\"><i class=\"fa fa-link\"></i></a>蛇足</h2>\n\n<p>Angular2 は学習コストが高いとよく言われている気がしますが、Angular1が無秩序（？）に進化したのに比べて随分洗練されていて、コマンド一発でプロジェクトも作成でき、『サービスやコンポーネントなどの思想も含めて、目的に対して必要なことだけ学べばよい』仕様になっていて、『どちらにせよ学んだ方がいいこと』を学べば使えるように見えますので、触ってみたいけどなんか難しそう…と思ってる方は、Google Chrome のページ翻訳が超高性能になりましたので、分かりやすい本家のチュートリアルを日本語でお楽しみ頂くのもよいかと思います。<br>\n<a href=\"https://angular.io/docs/ts/latest/tutorial/\" rel=\"nofollow noopener\" target=\"_blank\">TUTORIAL: TOUR OF HEROES</a></p>\n\n<h2>\n<span id=\"蛇足２\" class=\"fragment\"></span><a href=\"#%E8%9B%87%E8%B6%B3%EF%BC%92\"><i class=\"fa fa-link\"></i></a>蛇足２</h2>\n\n<p>開発には VisualStudioCode を使うと快適な気がします。</p>\n\n<p>以上です。</p>\n",
    "body": "# angular-cli\nAngular2 触ってみたいけど gulp のスクリプトガリガリ書いたりなんか設定とか難しいんでしょ…？と思っていましたが、angular-cli を使えばコマンド一発でプロジェクトの雛形(Angular + TypeScript + css/less/sass/stylus + html)を作ってくれて、５分で初められるじゃない？というくらい便利になっていました。\nただ、angular-cli では雛形作るところまでやって、あとはカスタムスクリプトという記事も見かけたので、 angular-cli で pug を追加してビルドする手順を書いておきます。（2017/02/25時点）\n\n## pug(Jade) 導入について\nhtml を爆速で簡単に書けるテンプレートエンジンです。Angular2 (Angular) ではコンポーネント志向が徹底しているので、長い html を書くことはあまりないかもしれませんが、ちょっと凝ったことをすると html はすぐに辛くなるので導入することにしました。\n[pug](https://pugjs.org/api/getting-started.html)\n\n\n## angular-cli 導入\nみんな大好き npm でインストールしようかと思ったのですが、最近は yarn がキてるっぽいので yarn で導入してみました。使い方は npm とほとんど変わらず簡単で、高速に動作していました。\n\n```\n# yarn インストール\n> npm i -g yarn\n\n# angular-cli インストール\n> yarn global add angular-cli\n```\n\n## サンプルプロジェクト作成と、webpack.config.js 抽出\n内部で webpack でビルドしているので、webpack.config.js を修正して pug を追加したいのですが、見当たりません。設定を変更せず使いたい人を混乱させないように隠蔽をしたのでしょうか。\n抽出するための eject コマンドが用意されているのでそれを呼び出します。\n\n```\n# hello-world プロジェクト作成\n> ng new hello-world\n\n# webpack.config.js を抽出(ng eject)\n> cd hello-world\n> ng eject\n```\n\nプロジェクトのルートに、webpack.config.js があるか確認しておきます。\n\n```\nhello-world/\n|.angular-cli.json\n|.editorconfig\n|.gitignore\n|karma.conf.js\n|package.json\n|protractor.conf.js\n|README.md\n|tslint.json\n|yarn.lock\n|webpack.config.js ★ ここに抽出されます\n+node_modules/\n+e2e/\n+src/\n```\n\n## webpack, webpack-dev-server をインストール\nデフォルト設定で使用する際はこの手順は不要ですが、eject したプロジェクトでは webpack が別途必要になるのでインストールしておきます。\n\n```\n> yarn add webpack-dev-server --dev\n> yarn add webpack --dev\n```\n\nここで、プロジェクトが正常に動くか一度確認しておきます。\n\n```\n> yarn start\n```\n\nwebpack でビルドされて、ブラウザで http://localhost:8080 などを開いてページが表示されれば正常に動作しています。\n\n## webpack.config.js を修正、pug-html-loader をインストール\n\nmodule / rules に、 (pug|jade) の設定を追加します。\n\n``` webpack.config.js\n...\nmodule.exports = {\n...\n  \"module\": {\n    \"rules\": [\n      ...\n      {\n        \"test\": /\\.json$/,\n        \"loader\": \"json-loader\"\n      },\n      // ★追加。拡張子が、pug|jade なら、pug-html-loader を利用\n      {\n        \"test\": /\\.(pug|jade)$/,\n//        \"loader\": \"pug-html-loader\"  // 2017/05/20修正。コメント頂きました。raw-loader も必要かも？\n          \"loader\": ['raw-loader', 'pug-html-loader'] // 'raw-loader' が必要\n      },\n      {\n        \"test\": /\\.html$/,\n        \"loader\": \"raw-loader\"\n      },\n```\n\npug-html-loader は angular-cli に含まれていないので、インストールします\n\n```\n> yarn add pug-html-loader --dev\n```\n\n## pug ファイルをビルドしてみる\n以下のファイルがデフォルトで生成されているので、html ファイルを pug ファイルにリネームして、中身を pug に書き換える、html を参照していた ts ファイルも、pug を参照するように修正\n\n\n* src 以下のフォルダ構成\n\n```\nsrc/\n+app/\n  app.component.css\n  app.component.html    # ★ .html -> .pug にリネーム\n  app.component.spec.ts\n  app.component.ts\n```\n\n* .html の中身\n\n```app.component.html\n<h1>\n  {{title}}\n</h1>\n```\n\n* .pug にして、中身も書き換える。\n\n```app.component.pug\nh1\n  | {{title}}\n```\n\n```app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.pug',  // ★ .html -> .pug にリネーム\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n```\n\ncss については、拡張子を書き換えるだけで less/sass/scss/stylus が使用可能です。\n\nまた、プロダクション用のコード出力は以下のコマンドを実行することで、dist/ フォルダに出力されます。\n\n```\n> yarn build\n```\n\n## 補足\nAngular2 の構文が、一部 pug で（そのままだと）コンパイルエラーになるのでカンマで区切る、またはシングルクオートでくくるといった書き換えが必要です。\n[Quated Attributes | pug](https://pugjs.org/language/attributes.html)\n\n```\n# カンマなし。error (click) が解釈できない\ndiv(class='div-class' (click)='play()')\n\n# カンマあり。ok (click) が解釈できる\ndiv(class='div-class', (click)='play()')\n```\n\n## 蛇足\nAngular2 は学習コストが高いとよく言われている気がしますが、Angular1が無秩序（？）に進化したのに比べて随分洗練されていて、コマンド一発でプロジェクトも作成でき、『サービスやコンポーネントなどの思想も含めて、目的に対して必要なことだけ学べばよい』仕様になっていて、『どちらにせよ学んだ方がいいこと』を学べば使えるように見えますので、触ってみたいけどなんか難しそう…と思ってる方は、Google Chrome のページ翻訳が超高性能になりましたので、分かりやすい本家のチュートリアルを日本語でお楽しみ頂くのもよいかと思います。\n[TUTORIAL: TOUR OF HEROES](https://angular.io/docs/ts/latest/tutorial/)\n\n## 蛇足２\n開発には VisualStudioCode を使うと快適な気がします。\n\n以上です。\n",
    "coediting": false,
    "comments_count": 2,
    "created_at": "2017-02-25T17:09:09+09:00",
    "group": null,
    "id": "a15f67e97f35e35611df",
    "likes_count": 17,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 15,
    "tags": [
      {
        "name": "Jade",
        "versions": []
      },
      {
        "name": "Angular2",
        "versions": []
      },
      {
        "name": "pug",
        "versions": []
      },
      {
        "name": "angular-cli",
        "versions": []
      }
    ],
    "title": "Angular2 の angular-cli で、webpack の設定を変更して pug(Jade) を使う",
    "updated_at": "2017-05-20T00:23:59+09:00",
    "url": "https://qiita.com/kaku3/items/a15f67e97f35e35611df",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 6206,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"xcode-818b62-ではios-102-用のビルドできません\" class=\"fragment\"></span><a href=\"#xcode-818b62-%E3%81%A7%E3%81%AFios-102-%E7%94%A8%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E3%81%A7%E3%81%8D%E3%81%BE%E3%81%9B%E3%82%93\"><i class=\"fa fa-link\"></i></a>Xcode 8.1(8B62) では、iOS 10.2 用のビルドできません</h1>\n\n<p>開発環境によってはスケジュールにインパクトがある内容かと思いますのでメモ書いておきます。<br>\n開発用の iOS のバージョンを 10.2 にあげたところ、Xcode　でサポート対象外と出てビルドできなくなったので、新しい Xcode を入れることにしましたが、新しい Xcode では Swift 2.3 のプロジェクトのビルドができません。<br>\n以下詳細です。</p>\n\n<h2>\n<span id=\"xcode-83はまだbeta版しかありません\" class=\"fragment\"></span><a href=\"#xcode-83%E3%81%AF%E3%81%BE%E3%81%A0beta%E7%89%88%E3%81%97%E3%81%8B%E3%81%82%E3%82%8A%E3%81%BE%E3%81%9B%E3%82%93\"><i class=\"fa fa-link\"></i></a>Xcode 8.3はまだBETA版しかありません</h2>\n\n<p>AppStore を見ても新しいバージョンがないので、以下よりベータ版(.xipファイル)をダウンロードしてインストール<br>\n<a href=\"https://developer.apple.com/download/\" rel=\"nofollow noopener\" target=\"_blank\">Xcode 8.3 beta</a></p>\n\n<ul>\n<li>要Sierra (10.2)</li>\n<li>ダブルクリックで解凍→インストールされますが、現在の Xcode とは別インストールで継続して使えます。</li>\n</ul>\n\n<h2>\n<span id=\"xcode83-を起動すると古いswift対応しないという警告が出る\" class=\"fragment\"></span><a href=\"#xcode83-%E3%82%92%E8%B5%B7%E5%8B%95%E3%81%99%E3%82%8B%E3%81%A8%E5%8F%A4%E3%81%84swift%E5%AF%BE%E5%BF%9C%E3%81%97%E3%81%AA%E3%81%84%E3%81%A8%E3%81%84%E3%81%86%E8%AD%A6%E5%91%8A%E3%81%8C%E5%87%BA%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Xcode8.3 を起動すると、古いSwift対応しないという警告が出る</h2>\n\n<p>Swift3 にコンバートするか？→いいえ→サポートしてません</p>\n\n<p>素直に Swift3 に移行すればいいのですが、プロジェクトのソースはともかく、Pod で拾ってきたファイル入れ替えたり、場合によっては書き直したり…ちょっと工数がかかると思いますので、ご利用は計画的に。</p>\n",
    "body": "# Xcode 8.1(8B62) では、iOS 10.2 用のビルドできません\n開発環境によってはスケジュールにインパクトがある内容かと思いますのでメモ書いておきます。\n開発用の iOS のバージョンを 10.2 にあげたところ、Xcode　でサポート対象外と出てビルドできなくなったので、新しい Xcode を入れることにしましたが、新しい Xcode では Swift 2.3 のプロジェクトのビルドができません。\n以下詳細です。\n\n## Xcode 8.3はまだBETA版しかありません\nAppStore を見ても新しいバージョンがないので、以下よりベータ版(.xipファイル)をダウンロードしてインストール\n[Xcode 8.3 beta](https://developer.apple.com/download/)\n\n* 要Sierra (10.2)\n* ダブルクリックで解凍→インストールされますが、現在の Xcode とは別インストールで継続して使えます。\n\n## Xcode8.3 を起動すると、古いSwift対応しないという警告が出る\n\nSwift3 にコンバートするか？→いいえ→サポートしてません\n\n素直に Swift3 に移行すればいいのですが、プロジェクトのソースはともかく、Pod で拾ってきたファイル入れ替えたり、場合によっては書き直したり…ちょっと工数がかかると思いますので、ご利用は計画的に。\n",
    "coediting": false,
    "comments_count": 2,
    "created_at": "2017-01-27T10:05:49+09:00",
    "group": null,
    "id": "160e9ee2e7da5f1855a7",
    "likes_count": 5,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 1,
    "tags": [
      {
        "name": "Xcode",
        "versions": []
      },
      {
        "name": "Swift",
        "versions": []
      },
      {
        "name": "ios10",
        "versions": []
      }
    ],
    "title": "Xcode 8.3 Beta は Swift 2.3 対応していません(2017/01/27)",
    "updated_at": "2017-01-27T10:05:49+09:00",
    "url": "https://qiita.com/kaku3/items/160e9ee2e7da5f1855a7",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 2770,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"twitter-への動画つき投稿\" class=\"fragment\"></span><a href=\"#twitter-%E3%81%B8%E3%81%AE%E5%8B%95%E7%94%BB%E3%81%A4%E3%81%8D%E6%8A%95%E7%A8%BF\"><i class=\"fa fa-link\"></i></a>Twitter への動画つき投稿</h1>\n\n<p>簡単な方法がありそうでなかったので、地道に api をコツコツ呼びました。<br>\n詳細は以下のサイトにまとまっているのですが、基本的な仕組みとswiftでの実装メモを書きました。<br>\n<a href=\"https://blog.hinaloe.net/2016/06/23/upload-more-long-video-with-coretweet/\" rel=\"nofollow noopener\" target=\"_blank\">CORETWEETで30秒を超える動画をTWITTERにアップロードしてみる</a></p>\n\n<h2>\n<span id=\"twitter-api-を２つ使います\" class=\"fragment\"></span><a href=\"#twitter-api-%E3%82%92%EF%BC%92%E3%81%A4%E4%BD%BF%E3%81%84%E3%81%BE%E3%81%99\"><i class=\"fa fa-link\"></i></a>Twitter api を２つ使います</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>// 動画アップロード用 ： こちらに色々なコマンドを投げる\nlet UPLOAD_URL = NSURL(string: \"https://upload.twitter.com/1.1/media/upload.json\")\n\n// ツイート用 : 最後に１回投げてツイート完了\nlet STATUS_URL = NSURL(string: \"https://api.twitter.com/1.1/statuses/update.json\")\n</code></pre></div></div>\n\n<h2>\n<span id=\"最初に動画をアップロードしてmedia_id_string-を取得\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%88%9D%E3%81%AB%E5%8B%95%E7%94%BB%E3%82%92%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%97%E3%81%A6media_id_string-%E3%82%92%E5%8F%96%E5%BE%97\"><i class=\"fa fa-link\"></i></a>最初に動画をアップロードして、media_id_string を取得</h2>\n\n<ul>\n<li>UPLOAD_URLにコマンドを投げます。</li>\n</ul>\n\n<p>大きなファイルは分割してアップロード。以下４コマンドを順次呼び出します。<br>\n1. INIT (開始。media_id_stringを取得。以後の呼び出しは、全てこの値を使う)<br>\n2. APPEND (ファイルを適当な容量に分割して全部アップロードできるまで呼ぶ)<br>\n3. FINALIZE (終了)<br>\n4. STATUS</p>\n\n<p>ポイントは、<strong>アップロード完了から、メディアが使用可能になるまで間があるとこです。</strong><br>\nSTATUS の戻り値で、state == \"succeeded\" になるまでポーリングが必要です。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>if json[\"processing_info\"][\"state\"] == \"succeeded\" {\n    // 次の処理へ\n}\n</code></pre></div></div>\n\n<h2>\n<span id=\"media_id_string-と-text-を一緒にツイート\" class=\"fragment\"></span><a href=\"#media_id_string-%E3%81%A8-text-%E3%82%92%E4%B8%80%E7%B7%92%E3%81%AB%E3%83%84%E3%82%A4%E3%83%BC%E3%83%88\"><i class=\"fa fa-link\"></i></a>media_id_string と text を一緒にツイート</h2>\n\n<ul>\n<li>STATUS_URL にコマンドを投げます。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>let params = [\n    \"status\": self.mTweet,\n    \"media_ids\": self.mMediaIdString\n]\n</code></pre></div></div>\n\n<h2>\n<span id=\"swift-での実装メモ\" class=\"fragment\"></span><a href=\"#swift-%E3%81%A7%E3%81%AE%E5%AE%9F%E8%A3%85%E3%83%A1%E3%83%A2\"><i class=\"fa fa-link\"></i></a>swift での実装メモ</h2>\n\n<h3>\n<span id=\"通信で使用するクラスメソッド\" class=\"fragment\"></span><a href=\"#%E9%80%9A%E4%BF%A1%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E3%82%AF%E3%83%A9%E3%82%B9%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\"><i class=\"fa fa-link\"></i></a>通信で使用するクラス・メソッド</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>SLRequest\n.addMultipartData\n.performRequestWithHandler \n</code></pre></div></div>\n\n<h3>\n<span id=\"バイナリファイル分割\" class=\"fragment\"></span><a href=\"#%E3%83%90%E3%82%A4%E3%83%8A%E3%83%AA%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%88%86%E5%89%B2\"><i class=\"fa fa-link\"></i></a>バイナリファイル分割</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>// CHUNK_SIZE = 2 * 1024 * 1024 など、大きすぎないサイズ。\n// mSegmentIndex は、0からの連番。append を呼ぶたびに +1。\n\nvar _range = NSRange()\n_range.location = mSegmentIndex * CHUNK_SIZE\n_range.length = min(CHUNK_SIZE, mFileSize)\nlet _mediaData = NSData(contentsOfFile: self.mFilePath)\nlet mediaData = _mediaData?.subdataWithRange(_range)\n</code></pre></div></div>\n\n<p>非同期コードの塊ですが、SwiftTask を使うとネストが深くならずに快適に実装できました。<br>\n<a href=\"http://qiita.com/inamiy/items/0756339aee35849384c3\" id=\"reference-a4a69c5235c435ee1ff6\">SwiftTask（Promise拡張）を使う</a></p>\n\n<h3>\n<span id=\"メモ\" class=\"fragment\"></span><a href=\"#%E3%83%A1%E3%83%A2\"><i class=\"fa fa-link\"></i></a>メモ</h3>\n\n<p>FINALIZE -&gt; STATUS 確認まで5秒程必要っぽいので、ツイート編集画面を表示した時点などでこっそりアップロードを開始したいところですが、キャンセル時など、数メガのアップロードが無駄になると思うと悩ましいところです。</p>\n\n<p>以上です。</p>\n",
    "body": "# Twitter への動画つき投稿\n簡単な方法がありそうでなかったので、地道に api をコツコツ呼びました。\n詳細は以下のサイトにまとまっているのですが、基本的な仕組みとswiftでの実装メモを書きました。\n[CORETWEETで30秒を超える動画をTWITTERにアップロードしてみる](https://blog.hinaloe.net/2016/06/23/upload-more-long-video-with-coretweet/)\n\n## Twitter api を２つ使います\n```\n// 動画アップロード用 ： こちらに色々なコマンドを投げる\nlet UPLOAD_URL = NSURL(string: \"https://upload.twitter.com/1.1/media/upload.json\")\n\n// ツイート用 : 最後に１回投げてツイート完了\nlet STATUS_URL = NSURL(string: \"https://api.twitter.com/1.1/statuses/update.json\")\n```\n\n## 最初に動画をアップロードして、media_id_string を取得\n* UPLOAD_URLにコマンドを投げます。\n\n大きなファイルは分割してアップロード。以下４コマンドを順次呼び出します。\n1. INIT (開始。media_id_stringを取得。以後の呼び出しは、全てこの値を使う)\n2. APPEND (ファイルを適当な容量に分割して全部アップロードできるまで呼ぶ)\n3. FINALIZE (終了)\n4. STATUS\n\nポイントは、**アップロード完了から、メディアが使用可能になるまで間があるとこです。**\nSTATUS の戻り値で、state == \"succeeded\" になるまでポーリングが必要です。\n\n```\nif json[\"processing_info\"][\"state\"] == \"succeeded\" {\n    // 次の処理へ\n}\n```\n\n## media_id_string と text を一緒にツイート\n* STATUS_URL にコマンドを投げます。\n\n```\nlet params = [\n    \"status\": self.mTweet,\n    \"media_ids\": self.mMediaIdString\n]\n```\n## swift での実装メモ\n### 通信で使用するクラス・メソッド\n```\nSLRequest\n.addMultipartData\n.performRequestWithHandler \n```\n\n### バイナリファイル分割\n```\n// CHUNK_SIZE = 2 * 1024 * 1024 など、大きすぎないサイズ。\n// mSegmentIndex は、0からの連番。append を呼ぶたびに +1。\n\nvar _range = NSRange()\n_range.location = mSegmentIndex * CHUNK_SIZE\n_range.length = min(CHUNK_SIZE, mFileSize)\nlet _mediaData = NSData(contentsOfFile: self.mFilePath)\nlet mediaData = _mediaData?.subdataWithRange(_range)\n```\n\n非同期コードの塊ですが、SwiftTask を使うとネストが深くならずに快適に実装できました。\n[SwiftTask（Promise拡張）を使う](http://qiita.com/inamiy/items/0756339aee35849384c3)\n\n### メモ\nFINALIZE -> STATUS 確認まで5秒程必要っぽいので、ツイート編集画面を表示した時点などでこっそりアップロードを開始したいところですが、キャンセル時など、数メガのアップロードが無駄になると思うと悩ましいところです。\n\n以上です。\n\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2016-12-08T22:44:32+09:00",
    "group": null,
    "id": "ad31dc9b6bc235eba9c4",
    "likes_count": 3,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 4,
    "tags": [
      {
        "name": "Twitter",
        "versions": []
      },
      {
        "name": "動画",
        "versions": []
      },
      {
        "name": "Swift",
        "versions": []
      }
    ],
    "title": "Swift で、Twitter に 30秒以上の動画を投稿 ",
    "updated_at": "2016-12-08T22:44:32+09:00",
    "url": "https://qiita.com/kaku3/items/ad31dc9b6bc235eba9c4",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1973,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"facebook-sdk-で画像やビデオをシェアで困った\" class=\"fragment\"></span><a href=\"#facebook-sdk-%E3%81%A7%E7%94%BB%E5%83%8F%E3%82%84%E3%83%93%E3%83%87%E3%82%AA%E3%82%92%E3%82%B7%E3%82%A7%E3%82%A2%E3%81%A7%E5%9B%B0%E3%81%A3%E3%81%9F\"><i class=\"fa fa-link\"></i></a>Facebook SDK で画像やビデオをシェアで困った</h1>\n\n<p>Facebook SDK に『アセットのURL』を渡さないといけませんが、ALAsset は iOS 9 で廃止になり、iOS 8 から使用が推奨されている PHAsset では URL が取れなくて困りました。<br>\nこちらのとりあえずの解決方法をメモしておきます。<br>\n※デザインにこだわりがない場合は、UIActivityViewController を使うのが簡単です。</p>\n\n<h1>\n<span id=\"phasset-から-url-を生成\" class=\"fragment\"></span><a href=\"#phasset-%E3%81%8B%E3%82%89-url-%E3%82%92%E7%94%9F%E6%88%90\"><i class=\"fa fa-link\"></i></a>PHAsset から URL を生成</h1>\n\n<p>localIdentifier を使います。</p>\n\n<div class=\"code-frame\" data-lang=\"swift\">\n<div class=\"code-lang\"><span class=\"bold\">some-code.swift</span></div>\n<div class=\"highlight\"><pre><code>\n<span class=\"c1\">// asset の URL は、以下の書式</span>\n<span class=\"c1\">// assets-library://asset/asset.&lt;type&gt;?id=&lt;localIdentifier(36文字)&gt;&amp;ext=&lt;type&gt;</span>\n<span class=\"c1\">// type は以下の識別子</span>\n<span class=\"c1\">// video : MOV</span>\n<span class=\"c1\">// jpg : JPG</span>\n<span class=\"c1\">// png : PNG</span>\n\n<span class=\"k\">let</span> <span class=\"nv\">asset</span><span class=\"p\">:</span><span class=\"kt\">PHAsset</span> <span class=\"o\">=</span> <span class=\"s\">\"&lt;共有したいAsset。カメラロールなどに保存してあること&gt;\"</span>\n<span class=\"k\">let</span> <span class=\"nv\">identifier</span> <span class=\"o\">=</span> <span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">localIdentifier</span>\n<span class=\"k\">let</span> <span class=\"nv\">id</span> <span class=\"o\">=</span> <span class=\"n\">identifier</span><span class=\"o\">.</span><span class=\"nf\">substringToIndex</span><span class=\"p\">(</span><span class=\"n\">identifier</span><span class=\"o\">.</span><span class=\"n\">startIndex</span><span class=\"o\">.</span><span class=\"nf\">advancedBy</span><span class=\"p\">(</span><span class=\"mi\">36</span><span class=\"p\">))</span>\n<span class=\"k\">let</span> <span class=\"nv\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"assets-library://asset/asset.MOV?id=</span><span class=\"se\">\\(</span><span class=\"n\">id</span><span class=\"se\">)</span><span class=\"s\">&amp;ext=MOV\"</span>\n</code></pre></div>\n</div>\n\n<h1>\n<span id=\"infoplist-にassets-library-を登録\" class=\"fragment\"></span><a href=\"#infoplist-%E3%81%ABassets-library-%E3%82%92%E7%99%BB%E9%8C%B2\"><i class=\"fa fa-link\"></i></a>info.plist に、[assets-library] を登録</h1>\n\n<p>登録しないと、assets-library でコケます。</p>\n\n<div class=\"code-frame\" data-lang=\"xml\">\n<div class=\"code-lang\"><span class=\"bold\">info.plist</span></div>\n<div class=\"highlight\"><pre><code>LSApplicationQueriesSchemes\n item(?) : assets-library\n</code></pre></div>\n</div>\n\n<h1>\n<span id=\"あとは普通にシェア\" class=\"fragment\"></span><a href=\"#%E3%81%82%E3%81%A8%E3%81%AF%E6%99%AE%E9%80%9A%E3%81%AB%E3%82%B7%E3%82%A7%E3%82%A2\"><i class=\"fa fa-link\"></i></a>あとは普通にシェア</h1>\n\n<div class=\"code-frame\" data-lang=\"text\">\n<div class=\"code-lang\"><span class=\"bold\">some-code.swift(つづき)</span></div>\n<div class=\"highlight\"><pre><code>\nlet video = FBSDKShareVideo()\nlet content = FBSDKShareVideoContent()\n\nvideo.videoURL = NSURL(string: url) // 上で求めた asset URL\ncontent.video = video\n\n// dialog.mode を設定する必要があるかもしれないのでインスタンス化してますが、\n// ナシでも動きました。\nlet dialog = FBSDKShareDialog()\ndialog.delegate = nil\ndialog.shareContent = content\ndialog.fromViewController = self\ndialog.show()\n\n</code></pre></div>\n</div>\n\n<p>以上です。</p>\n",
    "body": "# Facebook SDK で画像やビデオをシェアで困った\nFacebook SDK に『アセットのURL』を渡さないといけませんが、ALAsset は iOS 9 で廃止になり、iOS 8 から使用が推奨されている PHAsset では URL が取れなくて困りました。\nこちらのとりあえずの解決方法をメモしておきます。\n※デザインにこだわりがない場合は、UIActivityViewController を使うのが簡単です。\n\n# PHAsset から URL を生成\nlocalIdentifier を使います。\n\n``` some-code.swift\n\n// asset の URL は、以下の書式\n// assets-library://asset/asset.<type>?id=<localIdentifier(36文字)>&ext=<type>\n// type は以下の識別子\n// video : MOV\n// jpg : JPG\n// png : PNG\n\nlet asset:PHAsset = \"<共有したいAsset。カメラロールなどに保存してあること>\"\nlet identifier = asset.localIdentifier\nlet id = identifier.substringToIndex(identifier.startIndex.advancedBy(36))\nlet url = \"assets-library://asset/asset.MOV?id=\\(id)&ext=MOV\"\n```\n\n# info.plist に、[assets-library] を登録\n登録しないと、assets-library でコケます。\n\n``` info.plist\nLSApplicationQueriesSchemes\n item(?) : assets-library\n```\n\n# あとは普通にシェア\n\n``` some-code.swift(つづき)\n\nlet video = FBSDKShareVideo()\nlet content = FBSDKShareVideoContent()\n\nvideo.videoURL = NSURL(string: url) // 上で求めた asset URL\ncontent.video = video\n\n// dialog.mode を設定する必要があるかもしれないのでインスタンス化してますが、\n// ナシでも動きました。\nlet dialog = FBSDKShareDialog()\ndialog.delegate = nil\ndialog.shareContent = content\ndialog.fromViewController = self\ndialog.show()\n\n```\n\n以上です。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2016-10-21T23:19:30+09:00",
    "group": null,
    "id": "80b9cc542a88003ef958",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 2,
    "tags": [
      {
        "name": "FacebookSDK",
        "versions": []
      },
      {
        "name": "Swift",
        "versions": []
      },
      {
        "name": "iOS9",
        "versions": []
      }
    ],
    "title": "Facebook Share Dialog で画像やビデオをシェア(iOS9, swift2.3) [2016年10月]",
    "updated_at": "2016-10-22T10:47:45+09:00",
    "url": "https://qiita.com/kaku3/items/80b9cc542a88003ef958",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1762,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"xcode8-の-swiftバージョンアップ対応捗ってますか\" class=\"fragment\"></span><a href=\"#xcode8-%E3%81%AE-swift%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%A2%E3%83%83%E3%83%97%E5%AF%BE%E5%BF%9C%E6%8D%97%E3%81%A3%E3%81%A6%E3%81%BE%E3%81%99%E3%81%8B\"><i class=\"fa fa-link\"></i></a>XCode8 の Swiftバージョンアップ対応、捗ってますか？</h1>\n\n<p>Swift2 で書いていたのですが、XCodeのバージョン上げたらビルド通らなくなりまして。<br>\nConverter が搭載されていて、2.3 ないし、3 に変換できるのですが、今回は外部ライブラリのエラーを消せず2.3を選択したのですが、その時のメモを残しておきます。</p>\n\n<h1>\n<span id=\"ついでに外部ライブラリ管理を-pod-から-carthage-へ\" class=\"fragment\"></span><a href=\"#%E3%81%A4%E3%81%84%E3%81%A7%E3%81%AB%E5%A4%96%E9%83%A8%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E7%AE%A1%E7%90%86%E3%82%92-pod-%E3%81%8B%E3%82%89-carthage-%E3%81%B8\"><i class=\"fa fa-link\"></i></a>ついでに外部ライブラリ管理を Pod から Carthage へ</h1>\n\n<p>Swift で iOS 開発をはじめると、最初にググって優秀なライブラリを探して、Pod \"...\" pod update などとするところからはじめると思います。</p>\n\n<p>Pod は設定も簡単で初心者に易しいのですが、毎回ビルド対象になるため、自分では数行しか書いていないプロジェクトでも大量のファイルがビルドされ、毎回のビルド時間がかさんでしまいます。</p>\n\n<p>一方、iOS8 から登場した Carthage。<br>\n若干設定が増えますが、最初に一回ビルドして、プロジェクトにリンクするだけなので、毎回のビルド時間を大幅に短縮できるのが魅力的です。Android の jar を拾ってきてリンクする感覚に近いとのことでしたので、移行してみることにしました。</p>\n\n<h1>\n<span id=\"今までの資産があるから乗り換えるの面倒\" class=\"fragment\"></span><a href=\"#%E4%BB%8A%E3%81%BE%E3%81%A7%E3%81%AE%E8%B3%87%E7%94%A3%E3%81%8C%E3%81%82%E3%82%8B%E3%81%8B%E3%82%89%E4%B9%97%E3%82%8A%E6%8F%9B%E3%81%88%E3%82%8B%E3%81%AE%E9%9D%A2%E5%80%92\"><i class=\"fa fa-link\"></i></a>今までの資産があるから乗り換えるの面倒？</h1>\n\n<p>いいえ。Pod と Carthage 併用できるのでそんなに面倒じゃなかったです。<br>\nビルド時間が長い、Facebook や Realm あたりを Carthage にして、残りのライブラリは Pod のまま、というような構成にすることもできます。</p>\n\n<p>Carthage については以下の記事に大変分かりやすく載っていました。ありがとうございます。<br>\n[Carthage導入]<br>\n<a href=\"http://qiita.com/kobad/items/dddab651c91b3dee9fbf\" class=\"autolink\">http://qiita.com/kobad/items/dddab651c91b3dee9fbf</a></p>\n\n<h1>\n<span id=\"swift23用のビルド\" class=\"fragment\"></span><a href=\"#swift23%E7%94%A8%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89\"><i class=\"fa fa-link\"></i></a>Swift2.3　用のビルド</h1>\n\n<p>Swift3 が推奨ですが、外部ライブラリで 3 対応していないものもありますので、2.3　用にビルドしたいケースもあると思います。<br>\nPod / Carthage のポイントをそれぞれ以下に。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code># Podfile : ファイルの末尾に、2.3でビルドする設定\npost_install do |installer|\n  installer.pods_project.targets.each do |target|\n    target.build_configurations.each do |config|\n      config.build_settings['SWIFT_VERSION'] = '2.3'\n    end\n  end\nend\n</code></pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code># Carthage : ビルド時に 2.3 でビルドするように。また、ビルド済みのバイナリが 3用の場合もあるのでそれを使わないように\n&gt; TOOLCHAINS=com.apple.dt.toolchain.Swift_2_3 carthage update --no-use-binaries --platform iOS\n</code></pre></div></div>\n\n<p>以上です。</p>\n",
    "body": "# XCode8 の Swiftバージョンアップ対応、捗ってますか？\nSwift2 で書いていたのですが、XCodeのバージョン上げたらビルド通らなくなりまして。\nConverter が搭載されていて、2.3 ないし、3 に変換できるのですが、今回は外部ライブラリのエラーを消せず2.3を選択したのですが、その時のメモを残しておきます。\n\n# ついでに外部ライブラリ管理を Pod から Carthage へ\nSwift で iOS 開発をはじめると、最初にググって優秀なライブラリを探して、Pod \"...\" pod update などとするところからはじめると思います。\n\nPod は設定も簡単で初心者に易しいのですが、毎回ビルド対象になるため、自分では数行しか書いていないプロジェクトでも大量のファイルがビルドされ、毎回のビルド時間がかさんでしまいます。\n\n一方、iOS8 から登場した Carthage。\n若干設定が増えますが、最初に一回ビルドして、プロジェクトにリンクするだけなので、毎回のビルド時間を大幅に短縮できるのが魅力的です。Android の jar を拾ってきてリンクする感覚に近いとのことでしたので、移行してみることにしました。\n\n# 今までの資産があるから乗り換えるの面倒？\nいいえ。Pod と Carthage 併用できるのでそんなに面倒じゃなかったです。\nビルド時間が長い、Facebook や Realm あたりを Carthage にして、残りのライブラリは Pod のまま、というような構成にすることもできます。\n\nCarthage については以下の記事に大変分かりやすく載っていました。ありがとうございます。\n[Carthage導入]\nhttp://qiita.com/kobad/items/dddab651c91b3dee9fbf\n\n#Swift2.3　用のビルド\nSwift3 が推奨ですが、外部ライブラリで 3 対応していないものもありますので、2.3　用にビルドしたいケースもあると思います。\nPod / Carthage のポイントをそれぞれ以下に。\n\n``` \n# Podfile : ファイルの末尾に、2.3でビルドする設定\npost_install do |installer|\n  installer.pods_project.targets.each do |target|\n    target.build_configurations.each do |config|\n      config.build_settings['SWIFT_VERSION'] = '2.3'\n    end\n  end\nend\n```\n\n``` \n# Carthage : ビルド時に 2.3 でビルドするように。また、ビルド済みのバイナリが 3用の場合もあるのでそれを使わないように\n> TOOLCHAINS=com.apple.dt.toolchain.Swift_2_3 carthage update --no-use-binaries --platform iOS\n```\n\n以上です。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2016-10-04T13:34:48+09:00",
    "group": null,
    "id": "08faea8f035daed14a6c",
    "likes_count": 3,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 3,
    "tags": [
      {
        "name": "Carthage",
        "versions": []
      },
      {
        "name": "POD",
        "versions": []
      },
      {
        "name": "Xcode8",
        "versions": []
      },
      {
        "name": "Swift2.3",
        "versions": []
      }
    ],
    "title": "XCode8 で Swift2.3 対応、ついでに Pod から Carthage",
    "updated_at": "2016-10-04T15:35:35+09:00",
    "url": "https://qiita.com/kaku3/items/08faea8f035daed14a6c",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1135,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"背景\" class=\"fragment\"></span><a href=\"#%E8%83%8C%E6%99%AF\"><i class=\"fa fa-link\"></i></a>背景</h1>\n\n<p>cocosもopenCVも頻繁にバージョンアップするので「今」できることが分かりにくかったので、まとめをメモしておきます。</p>\n\n<h1>\n<span id=\"やりたいこと\" class=\"fragment\"></span><a href=\"#%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8\"><i class=\"fa fa-link\"></i></a>やりたいこと</h1>\n\n<p>マルチプラットフォーム(Android/iOS)対応で、カメラ画像とその他画像を表示する。</p>\n\n<h1>\n<span id=\"方針\" class=\"fragment\"></span><a href=\"#%E6%96%B9%E9%87%9D\"><i class=\"fa fa-link\"></i></a>方針</h1>\n\n<p>cocos-2dx には、Unity の WebCamTexture のようなクラスがないので、OpenCV(C++)でCameraPreviewの画像を拾ってきて、cocos(C++) でテクスチャ表示すれば簡単かと考えました。</p>\n\n<h1>\n<span id=\"問題\" class=\"fragment\"></span><a href=\"#%E5%95%8F%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>問題</h1>\n\n<p>1.Android 5.0 から新しいカメラAPIが出た。(Camera2)<br>\n2.OpenCV が 3.x になって Android の NativeCamera サポートをやめ、C++だけで完結しなくなった。(OpenCV 2.x 系も、Android 5.0以降は非対応？)</p>\n\n<h1>\n<span id=\"今回の実装android50以降のみ対応\" class=\"fragment\"></span><a href=\"#%E4%BB%8A%E5%9B%9E%E3%81%AE%E5%AE%9F%E8%A3%85android50%E4%BB%A5%E9%99%8D%E3%81%AE%E3%81%BF%E5%AF%BE%E5%BF%9C\"><i class=\"fa fa-link\"></i></a>今回の実装(Android5.0以降のみ対応)</h1>\n\n<ol>\n<li>Cocos2dxActivity 派生の AppActivity に OpenCV の CameraBridgeViewBase を実装（見えないところに）。</li>\n<li>onCameraFrame の内容を、jni 経由で、cpp 側に渡す。\n\n<ul>\n<li>inputFrame.rgba().getNativeObjAddr() を使う。</li>\n</ul>\n</li>\n<li>あとは他の記事を参考にテクスチャを更新。\n\n<ul>\n<li>cocos thread で動作させるのをお忘れなく。</li>\n</ul>\n</li>\n</ol>\n\n<div class=\"code-frame\" data-lang=\"cpp\"><div class=\"highlight\"><pre><code><span class=\"kt\">void</span> <span class=\"nf\">onUpdate</span><span class=\"p\">(</span><span class=\"n\">cv</span><span class=\"o\">::</span><span class=\"n\">Mat</span><span class=\"o\">&amp;</span> <span class=\"n\">matRgba</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"p\">...</span>\n  <span class=\"k\">auto</span> <span class=\"n\">scheduler</span> <span class=\"o\">=</span> <span class=\"n\">Director</span><span class=\"o\">::</span><span class=\"n\">getInstance</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">getScheduler</span><span class=\"p\">();</span>\n  <span class=\"n\">scheduler</span><span class=\"o\">-&gt;</span><span class=\"n\">performFunctionInCocosThread</span><span class=\"p\">([</span><span class=\"o\">&amp;</span><span class=\"p\">]()</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// ここでテクスチャを更新。</span>\n  <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>※iOS側は cv::VideoCapture を利用して C++ だけで実装できます。</p>\n\n<p>以上です。</p>\n",
    "body": "#背景\ncocosもopenCVも頻繁にバージョンアップするので「今」できることが分かりにくかったので、まとめをメモしておきます。\n\n#やりたいこと\nマルチプラットフォーム(Android/iOS)対応で、カメラ画像とその他画像を表示する。\n\n#方針\ncocos-2dx には、Unity の WebCamTexture のようなクラスがないので、OpenCV(C++)でCameraPreviewの画像を拾ってきて、cocos(C++) でテクスチャ表示すれば簡単かと考えました。\n\n#問題\n1.Android 5.0 から新しいカメラAPIが出た。(Camera2)\n2.OpenCV が 3.x になって Android の NativeCamera サポートをやめ、C++だけで完結しなくなった。(OpenCV 2.x 系も、Android 5.0以降は非対応？)\n\n#今回の実装(Android5.0以降のみ対応)\n1. Cocos2dxActivity 派生の AppActivity に OpenCV の CameraBridgeViewBase を実装（見えないところに）。\n2. onCameraFrame の内容を、jni 経由で、cpp 側に渡す。\n - inputFrame.rgba().getNativeObjAddr() を使う。\n3. あとは他の記事を参考にテクスチャを更新。\n - cocos thread で動作させるのをお忘れなく。\n\n```cpp:\nvoid onUpdate(cv::Mat& matRgba) {\n  ...\n  auto scheduler = Director::getInstance()->getScheduler();\n  scheduler->performFunctionInCocosThread([&]() {\n    // ここでテクスチャを更新。\n  });\n}\n```\n\n※iOS側は cv::VideoCapture を利用して C++ だけで実装できます。\n\n\n以上です。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2016-08-06T15:06:16+09:00",
    "group": null,
    "id": "fdedb133b6d86c0df406",
    "likes_count": 2,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 2,
    "tags": [
      {
        "name": "OpenCV",
        "versions": []
      },
      {
        "name": "cocos2d-x",
        "versions": []
      }
    ],
    "title": "cocos-2dx 3.x + OpenCV3.x で CameraTexture(2016/08版)",
    "updated_at": "2016-08-06T15:48:50+09:00",
    "url": "https://qiita.com/kaku3/items/fdedb133b6d86c0df406",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 1573,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  },
  {
    "rendered_body": "\n<h1>\n<span id=\"cocos-の-lib-の-build-をスキップ\" class=\"fragment\"></span><a href=\"#cocos-%E3%81%AE-lib-%E3%81%AE-build-%E3%82%92%E3%82%B9%E3%82%AD%E3%83%83%E3%83%97\"><i class=\"fa fa-link\"></i></a>cocos の lib の build をスキップ</h1>\n\n<p>Cocos Studio 付属の 3.10 には prebuilt の lib があったのですが、3.12 ではなくなってました。Visual Studio で、clean -&gt; build を行うと cocos の lib を全て再ビルドしてしまうので大変時間がかかります。</p>\n\n<p>ライブラリを改造しないのであれば、最初に一度だけビルドしてもうビルドしないと思いますのでその設定方法をメモ。</p>\n\n<h1>\n<span id=\"設定\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>設定</h1>\n\n<ol>\n<li>ソリューション(右クリック)→プロパティを選択し、プロパティダイアログを開く</li>\n<li>構成プロパティ：構成を選択</li>\n<li>全部のプロジェクトの「ビルド」にチェックが入っているので、アプリのプロジェクト以外のチェックを全部外す。</li>\n</ol>\n\n<p>これで、クリーンやリビルドしてもスキップされるようになります。<br>\n※最初の一回だけビルドをするのをお忘れなく。</p>\n\n<p>以上です。</p>\n",
    "body": "#cocos の lib の build をスキップ\nCocos Studio 付属の 3.10 には prebuilt の lib があったのですが、3.12 ではなくなってました。Visual Studio で、clean -> build を行うと cocos の lib を全て再ビルドしてしまうので大変時間がかかります。\n\nライブラリを改造しないのであれば、最初に一度だけビルドしてもうビルドしないと思いますのでその設定方法をメモ。\n\n#設定\n1. ソリューション(右クリック)→プロパティを選択し、プロパティダイアログを開く\n2. 構成プロパティ：構成を選択\n3. 全部のプロジェクトの「ビルド」にチェックが入っているので、アプリのプロジェクト以外のチェックを全部外す。\n\nこれで、クリーンやリビルドしてもスキップされるようになります。\n※最初の一回だけビルドをするのをお忘れなく。\n\n以上です。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2016-08-05T10:23:43+09:00",
    "group": null,
    "id": "f0f862f07584b4aad874",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      {
        "name": "cocos2dx",
        "versions": []
      }
    ],
    "title": "cocos-2dx 3.x : ビルド時間短縮(win32, 2016/08版)",
    "updated_at": "2016-08-05T10:24:50+09:00",
    "url": "https://qiita.com/kaku3/items/f0f862f07584b4aad874",
    "user": {
      "description": "ゲーム・マンガ・アニメとラーメンが大好きなITエンジニア",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 611,
      "github_login_name": "kaku3",
      "id": "kaku3",
      "items_count": 104,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 136165,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/136165/profile-images/1473719863",
      "team_only": false,
      "twitter_screen_name": "kaku3",
      "website_url": ""
    },
    "page_views_count": 947,
    "team_membership": null,
    "organization_url_name": null,
    "slide": false
  }
]